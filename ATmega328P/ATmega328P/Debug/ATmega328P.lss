
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  00002586  0000261a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002586  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800136  00800136  00002650  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002650  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002680  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  000026c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000063b6  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001329  00000000  00000000  00008c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001708  00000000  00000000  00009f97  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000738  00000000  00000000  0000b6a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000eda  00000000  00000000  0000bdd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b44  00000000  00000000  0000ccb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000f7f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 79 08 	jmp	0x10f2	; 0x10f2 <__ctors_end>
       4:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__vector_1>
       8:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
       c:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      10:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      14:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      18:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      1c:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__vector_7>
      20:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      24:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      28:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      2c:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__vector_11>
      30:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      34:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      38:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      3c:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      40:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      44:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      48:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      4c:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      50:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      54:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      58:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      5c:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      60:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>
      64:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 30       	cpi	r16, 0x00	; 0
      6a:	00 00       	nop
      6c:	10 00       	.word	0x0010	; ????
	...
      76:	00 00       	nop
      78:	00 78       	andi	r16, 0x80	; 128
      7a:	6c 28       	or	r6, r12
      7c:	3c 66       	ori	r19, 0x6C	; 108
      7e:	20 30       	cpi	r18, 0x00	; 0
      80:	18 30       	cpi	r17, 0x08	; 8
      82:	54 18       	sub	r5, r4
      84:	00 00       	nop
      86:	00 06       	cpc	r0, r16
      88:	00 78       	andi	r16, 0x80	; 128
      8a:	24 7c       	andi	r18, 0xC4	; 196
      8c:	60 0c       	add	r6, r0
      8e:	50 10       	cpse	r5, r0
      90:	30 18       	sub	r3, r0
      92:	38 18       	sub	r3, r8
      94:	00 00       	nop
      96:	00 0c       	add	r0, r0
      98:	00 78       	andi	r16, 0x80	; 128
      9a:	00 28       	or	r0, r0
      9c:	38 18       	sub	r3, r8
      9e:	34 00       	.word	0x0034	; ????
      a0:	30 18       	sub	r3, r0
      a2:	10 7e       	andi	r17, 0xE0	; 224
      a4:	00 7e       	andi	r16, 0xE0	; 224
      a6:	00 18       	sub	r0, r0
      a8:	00 30       	cpi	r16, 0x00	; 0
      aa:	00 7c       	andi	r16, 0xC0	; 192
      ac:	0c 30       	cpi	r16, 0x0C	; 12
      ae:	48 00       	.word	0x0048	; ????
      b0:	30 18       	sub	r3, r0
      b2:	38 18       	sub	r3, r8
      b4:	00 00       	nop
      b6:	00 30       	cpi	r16, 0x00	; 0
      b8:	00 00       	nop
      ba:	00 28       	or	r0, r0
      bc:	78 66       	ori	r23, 0x68	; 104
      be:	34 00       	.word	0x0034	; ????
      c0:	18 30       	cpi	r17, 0x08	; 8
      c2:	54 18       	sub	r5, r4
      c4:	00 00       	nop
      c6:	00 60       	ori	r16, 0x00	; 0
      c8:	00 30       	cpi	r16, 0x00	; 0
      ca:	00 00       	nop
      cc:	10 00       	.word	0x0010	; ????
      ce:	00 00       	nop
      d0:	00 00       	nop
      d2:	00 00       	nop
      d4:	30 00       	.word	0x0030	; ????
      d6:	30 00       	.word	0x0030	; ????
	...
      e4:	10 00       	.word	0x0010	; ????
      e6:	00 00       	nop
      e8:	38 18       	sub	r3, r8
      ea:	fc fc       	.word	0xfcfc	; ????
      ec:	06 fe       	sbrs	r0, 6
      ee:	7c fe       	.word	0xfe7c	; ????
      f0:	7c 7c       	andi	r23, 0xCC	; 204
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	00 7c       	andi	r16, 0xC0	; 192
      f8:	4c 38       	cpi	r20, 0x8C	; 140
      fa:	06 06       	cpc	r0, r22
      fc:	c6 c0       	rjmp	.+396    	; 0x28a <__trampolines_end+0x222>
      fe:	c0 06       	cpc	r12, r16
     100:	c6 c6       	rjmp	.+3468   	; 0xe8e <_ZL6charUp+0x186>
     102:	00 00       	nop
     104:	18 00       	.word	0x0018	; ????
     106:	30 c6       	rjmp	.+3168   	; 0xd68 <_ZL6charUp+0x60>
     108:	c6 18       	sub	r12, r6
     10a:	06 3c       	cpi	r16, 0xC6	; 198
     10c:	c6 fc       	sbrc	r12, 6
     10e:	fc 06       	cpc	r15, r28
     110:	7c c6       	rjmp	.+3320   	; 0xe0a <_ZL6charUp+0x102>
     112:	30 30       	cpi	r19, 0x00	; 0
     114:	30 7c       	andi	r19, 0xC0	; 192
     116:	18 06       	cpc	r1, r24
     118:	c6 18       	sub	r12, r6
     11a:	7c 06       	cpc	r7, r28
     11c:	c6 06       	cpc	r12, r22
     11e:	c6 0c       	add	r12, r6
     120:	c6 c6       	rjmp	.+3468   	; 0xeae <_ZL7charRun+0x16>
     122:	00 00       	nop
     124:	60 00       	.word	0x0060	; ????
     126:	0c 06       	cpc	r0, r28
     128:	c6 18       	sub	r12, r6
     12a:	c0 06       	cpc	r12, r16
     12c:	c6 06       	cpc	r12, r22
     12e:	c6 18       	sub	r12, r6
     130:	c6 7e       	andi	r28, 0xE6	; 230
     132:	00 00       	nop
     134:	30 7c       	andi	r19, 0xC0	; 192
     136:	18 3c       	cpi	r17, 0xC8	; 200
     138:	64 18       	sub	r6, r4
     13a:	c0 06       	cpc	r12, r16
     13c:	fe 06       	cpc	r15, r30
     13e:	c6 30       	cpi	r28, 0x06	; 6
     140:	c6 06       	cpc	r12, r22
     142:	30 30       	cpi	r19, 0x00	; 0
     144:	18 00       	.word	0x0018	; ????
     146:	30 00       	.word	0x0030	; ????
     148:	38 3c       	cpi	r19, 0xC8	; 200
     14a:	fe fc       	.word	0xfcfe	; ????
     14c:	06 fc       	sbrc	r0, 6
     14e:	7c 30       	cpi	r23, 0x0C	; 12
     150:	7c 7c       	andi	r23, 0xCC	; 204
     152:	00 10       	cpse	r0, r0
     154:	00 00       	nop
     156:	00 30       	cpi	r16, 0x00	; 0
	...
     168:	7c 7c       	andi	r23, 0xCC	; 204
     16a:	fc 7e       	andi	r31, 0xEC	; 236
     16c:	fc fe       	.word	0xfefc	; ????
     16e:	fe 7c       	andi	r31, 0xCE	; 206
     170:	c6 3c       	cpi	r28, 0xC6	; 198
     172:	1e c6       	rjmp	.+3132   	; 0xdb0 <_ZL6charUp+0xa8>
     174:	c0 c6       	rjmp	.+3456   	; 0xef6 <_ZL7charRun+0x5e>
     176:	c6 7c       	andi	r28, 0xC6	; 198
     178:	c6 c6       	rjmp	.+3468   	; 0xf06 <_ZL7charRun+0x6e>
     17a:	c6 c0       	rjmp	.+396    	; 0x308 <__trampolines_end+0x2a0>
     17c:	c6 c0       	rjmp	.+396    	; 0x30a <__trampolines_end+0x2a2>
     17e:	c0 c6       	rjmp	.+3456   	; 0xf00 <_ZL7charRun+0x68>
     180:	c6 18       	sub	r12, r6
     182:	06 c6       	rjmp	.+3084   	; 0xd90 <_ZL6charUp+0x88>
     184:	c0 ee       	ldi	r28, 0xE0	; 224
     186:	e6 c6       	rjmp	.+3532   	; 0xf54 <_ZL7charRun+0xbc>
     188:	c6 c6       	rjmp	.+3468   	; 0xf16 <_ZL7charRun+0x7e>
     18a:	c6 c0       	rjmp	.+396    	; 0x318 <__trampolines_end+0x2b0>
     18c:	c6 c0       	rjmp	.+396    	; 0x31a <__trampolines_end+0x2b2>
     18e:	c0 c0       	rjmp	.+384    	; 0x310 <__trampolines_end+0x2a8>
     190:	c6 18       	sub	r12, r6
     192:	06 cc       	rjmp	.-2036   	; 0xfffff9a0 <__eeprom_end+0xff7ef9a0>
     194:	c0 fe       	sbrs	r12, 0
     196:	f6 c6       	rjmp	.+3564   	; 0xf84 <_ZL7charRun+0xec>
     198:	d6 c6       	rjmp	.+3500   	; 0xf46 <_ZL7charRun+0xae>
     19a:	fc c0       	rjmp	.+504    	; 0x394 <_ZL9logoAtmel+0x2c>
     19c:	c6 f8       	bld	r12, 6
     19e:	fc de       	rcall	.-520    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     1a0:	fe 18       	sub	r15, r14
     1a2:	06 f8       	bld	r0, 6
     1a4:	c0 d6       	rcall	.+3456   	; 0xf26 <_ZL7charRun+0x8e>
     1a6:	de c6       	rjmp	.+3516   	; 0xf64 <_ZL7charRun+0xcc>
     1a8:	dc fe       	.word	0xfedc	; ????
     1aa:	c6 c0       	rjmp	.+396    	; 0x338 <__trampolines_end+0x2d0>
     1ac:	c6 c0       	rjmp	.+396    	; 0x33a <__trampolines_end+0x2d2>
     1ae:	c0 c6       	rjmp	.+3456   	; 0xf30 <_ZL7charRun+0x98>
     1b0:	c6 18       	sub	r12, r6
     1b2:	06 cc       	rjmp	.-2036   	; 0xfffff9c0 <__eeprom_end+0xff7ef9c0>
     1b4:	c0 c6       	rjmp	.+3456   	; 0xf36 <_ZL7charRun+0x9e>
     1b6:	ce c6       	rjmp	.+3484   	; 0xf54 <_ZL7charRun+0xbc>
     1b8:	c0 c6       	rjmp	.+3456   	; 0xf3a <_ZL7charRun+0xa2>
     1ba:	c6 c0       	rjmp	.+396    	; 0x348 <__trampolines_end+0x2e0>
     1bc:	c6 c0       	rjmp	.+396    	; 0x34a <__trampolines_end+0x2e2>
     1be:	c0 c6       	rjmp	.+3456   	; 0xf40 <_ZL7charRun+0xa8>
     1c0:	c6 18       	sub	r12, r6
     1c2:	c6 c6       	rjmp	.+3468   	; 0xf50 <_ZL7charRun+0xb8>
     1c4:	c0 c6       	rjmp	.+3456   	; 0xf46 <_ZL7charRun+0xae>
     1c6:	c6 c6       	rjmp	.+3468   	; 0xf54 <_ZL7charRun+0xbc>
     1c8:	7c c6       	rjmp	.+3320   	; 0xec2 <_ZL7charRun+0x2a>
     1ca:	fc 7e       	andi	r31, 0xEC	; 236
     1cc:	fc fe       	.word	0xfefc	; ????
     1ce:	c0 7e       	andi	r28, 0xE0	; 224
     1d0:	c6 3c       	cpi	r28, 0xC6	; 198
     1d2:	7c c6       	rjmp	.+3320   	; 0xecc <_ZL7charRun+0x34>
     1d4:	fe c6       	rjmp	.+3580   	; 0xfd2 <_ZL7charRun+0x13a>
     1d6:	c6 7c       	andi	r28, 0xC6	; 198
	...
     1e8:	fc 7c       	andi	r31, 0xCC	; 204
     1ea:	fc 7e       	andi	r31, 0xEC	; 236
     1ec:	7e c6       	rjmp	.+3324   	; 0xeea <_ZL7charRun+0x52>
     1ee:	c6 c6       	rjmp	.+3468   	; 0xf7c <_ZL7charRun+0xe4>
     1f0:	c6 66       	ori	r28, 0x66	; 102
     1f2:	fe 00       	.word	0x00fe	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	c6 c6       	rjmp	.+3468   	; 0xf86 <_ZL7charRun+0xee>
     1fa:	c6 c0       	rjmp	.+396    	; 0x388 <_ZL9logoAtmel+0x20>
     1fc:	18 c6       	rjmp	.+3120   	; 0xe2e <_ZL6charUp+0x126>
     1fe:	c6 c6       	rjmp	.+3468   	; 0xf8c <_ZL7charRun+0xf4>
     200:	c6 66       	ori	r28, 0x66	; 102
     202:	06 38       	cpi	r16, 0x86	; 134
     204:	60 38       	cpi	r22, 0x80	; 128
     206:	10 00       	.word	0x0010	; ????
     208:	c6 c6       	rjmp	.+3468   	; 0xf96 <_ZL7charRun+0xfe>
     20a:	c6 c0       	rjmp	.+396    	; 0x398 <_ZL9logoAtmel+0x30>
     20c:	18 c6       	rjmp	.+3120   	; 0xe3e <_ZL6charUp+0x136>
     20e:	c6 c6       	rjmp	.+3468   	; 0xf9c <_ZL7charRun+0x104>
     210:	6c 66       	ori	r22, 0x6C	; 108
     212:	0c 30       	cpi	r16, 0x0C	; 12
     214:	30 18       	sub	r3, r0
     216:	38 00       	.word	0x0038	; ????
     218:	c6 c6       	rjmp	.+3468   	; 0xfa6 <_ZL7charRun+0x10e>
     21a:	c6 7c       	andi	r28, 0xC6	; 198
     21c:	18 c6       	rjmp	.+3120   	; 0xe4e <_ZL6charUp+0x146>
     21e:	c6 d6       	rcall	.+3468   	; 0xfac <_ZL7charRun+0x114>
     220:	38 3c       	cpi	r19, 0xC8	; 200
     222:	38 30       	cpi	r19, 0x08	; 8
     224:	18 18       	sub	r1, r8
     226:	6c 00       	.word	0x006c	; ????
     228:	fc de       	rcall	.-520    	; 0x22 <__FUSE_REGION_LENGTH__+0x1f>
     22a:	fc 06       	cpc	r15, r28
     22c:	18 c6       	rjmp	.+3120   	; 0xe5e <_ZL6charUp+0x156>
     22e:	6c fe       	.word	0xfe6c	; ????
     230:	6c 18       	sub	r6, r12
     232:	60 30       	cpi	r22, 0x00	; 0
     234:	0c 18       	sub	r0, r12
     236:	44 00       	.word	0x0044	; ????
     238:	c0 cc       	rjmp	.-1664   	; 0xfffffbba <__eeprom_end+0xff7efbba>
     23a:	c6 06       	cpc	r12, r22
     23c:	18 c6       	rjmp	.+3120   	; 0xe6e <_ZL6charUp+0x166>
     23e:	38 ee       	ldi	r19, 0xE8	; 232
     240:	c6 18       	sub	r12, r6
     242:	c0 38       	cpi	r28, 0x80	; 128
     244:	06 38       	cpi	r16, 0x86	; 134
     246:	00 00       	nop
     248:	c0 76       	andi	r28, 0x60	; 96
     24a:	c6 fc       	sbrc	r12, 6
     24c:	18 7c       	andi	r17, 0xC8	; 200
     24e:	10 c6       	rjmp	.+3104   	; 0xe70 <_ZL6charUp+0x168>
     250:	c6 18       	sub	r12, r6
     252:	fe 00       	.word	0x00fe	; ????
     254:	00 00       	nop
     256:	00 fe       	sbrs	r0, 0
	...
     268:	00 00       	nop
     26a:	c0 00       	.word	0x00c0	; ????
     26c:	06 00       	.word	0x0006	; ????
     26e:	3e 00       	.word	0x003e	; ????
     270:	c0 18       	sub	r12, r0
     272:	0c c0       	rjmp	.+24     	; 0x28c <__trampolines_end+0x224>
     274:	38 00       	.word	0x0038	; ????
     276:	00 00       	nop
     278:	60 7c       	andi	r22, 0xC0	; 192
     27a:	fc 7e       	andi	r31, 0xEC	; 236
     27c:	7e 7c       	andi	r23, 0xCE	; 206
     27e:	60 7e       	andi	r22, 0xE0	; 224
     280:	c0 00       	.word	0x00c0	; ????
     282:	00 c6       	rjmp	.+3072   	; 0xe84 <_ZL6charUp+0x17c>
     284:	18 fc       	.word	0xfc18	; ????
     286:	fc 7c       	andi	r31, 0xCC	; 204
     288:	20 06       	cpc	r2, r16
     28a:	c6 c0       	rjmp	.+396    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     28c:	c6 c6       	rjmp	.+3468   	; 0x101a <_ZL7charRun+0x182>
     28e:	60 c6       	rjmp	.+3264   	; 0xf50 <_ZL7charRun+0xb8>
     290:	fc 38       	cpi	r31, 0x8C	; 140
     292:	1c cc       	rjmp	.-1992   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     294:	18 d6       	rcall	.+3120   	; 0xec6 <_ZL7charRun+0x2e>
     296:	c6 c6       	rjmp	.+3468   	; 0x1024 <_ZL7charRun+0x18c>
     298:	00 7e       	andi	r16, 0xE0	; 224
     29a:	c6 c0       	rjmp	.+396    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     29c:	c6 c6       	rjmp	.+3468   	; 0x102a <_ZL7charRun+0x192>
     29e:	fc c6       	rjmp	.+3576   	; 0x1098 <_ZL7charRun+0x200>
     2a0:	c6 18       	sub	r12, r6
     2a2:	0c f8       	.word	0xf80c	; ????
     2a4:	18 d6       	rcall	.+3120   	; 0xed6 <_ZL7charRun+0x3e>
     2a6:	c6 c6       	rjmp	.+3468   	; 0x1034 <_ZL7charRun+0x19c>
     2a8:	00 c6       	rjmp	.+3072   	; 0xeaa <_ZL7charRun+0x12>
     2aa:	c6 c0       	rjmp	.+396    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     2ac:	c6 fc       	sbrc	r12, 6
     2ae:	60 c6       	rjmp	.+3264   	; 0xf70 <_ZL7charRun+0xd8>
     2b0:	c6 18       	sub	r12, r6
     2b2:	0c cc       	rjmp	.-2024   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     2b4:	18 d6       	rcall	.+3120   	; 0xee6 <_ZL7charRun+0x4e>
     2b6:	c6 c6       	rjmp	.+3468   	; 0x1044 <_ZL7charRun+0x1ac>
     2b8:	00 c6       	rjmp	.+3072   	; 0xeba <_ZL7charRun+0x22>
     2ba:	c6 c0       	rjmp	.+396    	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     2bc:	c6 c0       	rjmp	.+396    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     2be:	60 7e       	andi	r22, 0xE0	; 224
     2c0:	c6 18       	sub	r12, r6
     2c2:	0c c6       	rjmp	.+3096   	; 0xedc <_ZL7charRun+0x44>
     2c4:	18 d6       	rcall	.+3120   	; 0xef6 <_ZL7charRun+0x5e>
     2c6:	c6 c6       	rjmp	.+3468   	; 0x1054 <_ZL7charRun+0x1bc>
     2c8:	00 7e       	andi	r16, 0xE0	; 224
     2ca:	fc 7e       	andi	r31, 0xEC	; 236
     2cc:	7e 7c       	andi	r23, 0xCE	; 206
     2ce:	60 06       	cpc	r6, r16
     2d0:	c6 18       	sub	r12, r6
     2d2:	0c c6       	rjmp	.+3096   	; 0xeec <_ZL7charRun+0x54>
     2d4:	18 d6       	rcall	.+3120   	; 0xf06 <_ZL7charRun+0x6e>
     2d6:	c6 7c       	andi	r28, 0xC6	; 198
     2d8:	00 00       	nop
     2da:	00 00       	nop
     2dc:	00 00       	nop
     2de:	00 7c       	andi	r16, 0xC0	; 192
     2e0:	00 00       	nop
     2e2:	78 00       	.word	0x0078	; ????
	...
     2ec:	18 00       	.word	0x0018	; ????
	...
     2f6:	00 00       	nop
     2f8:	fc 7e       	andi	r31, 0xEC	; 236
     2fa:	fc 7c       	andi	r31, 0xCC	; 204
     2fc:	18 c6       	rjmp	.+3120   	; 0xf2e <_ZL7charRun+0x96>
     2fe:	c6 d6       	rcall	.+3468   	; 0x108c <_ZL7charRun+0x1f4>
     300:	c6 c6       	rjmp	.+3468   	; 0x108e <_ZL7charRun+0x1f6>
     302:	fe 38       	cpi	r31, 0x8E	; 142
     304:	10 38       	cpi	r17, 0x80	; 128
     306:	00 00       	nop
     308:	c6 c6       	rjmp	.+3468   	; 0x1096 <_ZL7charRun+0x1fe>
     30a:	c6 c0       	rjmp	.+396    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     30c:	7e c6       	rjmp	.+3324   	; 0x100a <_ZL7charRun+0x172>
     30e:	c6 d6       	rcall	.+3468   	; 0x109c <_ZL7charRun+0x204>
     310:	6c c6       	rjmp	.+3288   	; 0xfea <_ZL7charRun+0x152>
     312:	0c 30       	cpi	r16, 0x0C	; 12
     314:	10 18       	sub	r1, r0
     316:	30 00       	.word	0x0030	; ????
     318:	c6 c6       	rjmp	.+3468   	; 0x10a6 <_ZL7charRun+0x20e>
     31a:	c0 7c       	andi	r28, 0xC0	; 192
     31c:	18 c6       	rjmp	.+3120   	; 0xf4e <_ZL7charRun+0xb6>
     31e:	c6 d6       	rcall	.+3468   	; 0x10ac <_ZL7charRun+0x214>
     320:	38 c6       	rjmp	.+3184   	; 0xf92 <_ZL7charRun+0xfa>
     322:	38 60       	ori	r19, 0x08	; 8
     324:	10 0c       	add	r1, r0
     326:	5a 00       	.word	0x005a	; ????
     328:	c6 c6       	rjmp	.+3468   	; 0x10b6 <_ZL7charRun+0x21e>
     32a:	c0 06       	cpc	r12, r16
     32c:	18 c6       	rjmp	.+3120   	; 0xf5e <_ZL7charRun+0xc6>
     32e:	6c d6       	rcall	.+3288   	; 0x1008 <_ZL7charRun+0x170>
     330:	6c c6       	rjmp	.+3288   	; 0x100a <_ZL7charRun+0x172>
     332:	60 30       	cpi	r22, 0x00	; 0
     334:	10 18       	sub	r1, r0
     336:	0c 00       	.word	0x000c	; ????
     338:	c6 c6       	rjmp	.+3468   	; 0x10c6 <_ZL7charRun+0x22e>
     33a:	c0 06       	cpc	r12, r16
     33c:	18 c6       	rjmp	.+3120   	; 0xf6e <_ZL7charRun+0xd6>
     33e:	38 d6       	rcall	.+3184   	; 0xfb0 <_ZL7charRun+0x118>
     340:	c6 7e       	andi	r28, 0xE6	; 230
     342:	c0 38       	cpi	r28, 0x80	; 128
     344:	10 38       	cpi	r17, 0x80	; 128
     346:	00 00       	nop
     348:	fc 7e       	andi	r31, 0xEC	; 236
     34a:	c0 7c       	andi	r28, 0xC0	; 192
     34c:	18 7e       	andi	r17, 0xE8	; 232
     34e:	10 7e       	andi	r17, 0xE0	; 224
     350:	c6 06       	cpc	r12, r22
     352:	fe 00       	.word	0x00fe	; ????
     354:	00 00       	nop
     356:	00 00       	nop
     358:	c0 06       	cpc	r12, r16
     35a:	00 00       	nop
     35c:	00 00       	nop
     35e:	00 00       	nop
     360:	00 7c       	andi	r16, 0xC0	; 192
     362:	00 00       	nop
     364:	00 00       	nop
	...

00000368 <_ZL9logoAtmel>:
     368:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     378:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     388:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
     398:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
     3a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3b8:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     3c8:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3d8:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
     3e8:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
     3f8:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
     408:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
     418:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     428:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
     438:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     448:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
     458:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
     468:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
     478:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
     488:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     498:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
     4a8:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
     4b8:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
     4c8:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
     4d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
     4e8:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
     4f8:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     508:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
     518:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
     528:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
     538:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
     548:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
     558:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
     568:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
     578:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
     588:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
     598:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
     5a8:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
     5b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5c8:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
     5d8:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
     5e8:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
     5f8:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
     608:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
     618:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
     628:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     638:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
     648:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
     658:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
     668:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
     678:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
     688:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
     698:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
     6a8:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
     6b8:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
     6c8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6d8:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
     6e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6f8:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
     708:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     718:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
     728:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     738:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     748:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
     758:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     768:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
     778:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
     788:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
     798:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
     7a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     7b8:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
     7c8:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
     7d8:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
     7e8:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
     7f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     808:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
     818:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
     828:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
     838:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
     848:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
     858:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
     868:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
     878:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
     888:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
     898:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
     8a8:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
     8b8:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
     8c8:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
     8d8:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
     8e8:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
     8f8:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
     908:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
     918:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
     928:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
     938:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
     948:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
     958:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
     968:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
     978:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
     988:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
     998:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
     9a8:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
     9b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
     9c8:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
     9d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
     9f8:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
     a08:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a18:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
     a28:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a38:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
     a48:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a58:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a68:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
     a78:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000a88 <_ZL8charDown>:
	...
     a90:	00 00 00 3c 00 00 00 00 ff c0 00 00 00 fa bc 00     ...<............
     aa0:	00 00 3a ab 00 00 00 3a aa c0 00 00 ea aa b0 00     ..:....:........
     ab0:	00 ea aa b0 00 03 aa af ac 00 03 aa bf ac 00 03     ................
     ac0:	6a bf dc 00 03 5a ff dc 00 03 57 cf 1c 00 03 d7     j....Z....W.....
     ad0:	cf 3c 00 0e a4 ff d7 00 3a a9 00 57 00 ea a9 50     .<......:..W...P
     ae0:	55 c0 ea a9 50 55 c0 da a9 80 55 c0 e6 a9 80 57     U...PU....U....W
     af0:	00 39 56 00 5c 00 0e a8 00 f0 00 03 f0 00 c0 00     .9V.\...........
     b00:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
     b10:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
     b20:	cc 00 00 00 00 30 00 00 00 00 00 00 00 00 03 c0     .....0..........
     b30:	00 00 00 0f fc 00 00 00 0f ab 00 00 00 03 aa c0     ................
     b40:	00 00 0e aa c0 00 00 3a aa b0 00 00 ea aa b0 00     .......:........
     b50:	03 aa aa ac 00 03 aa af ac 00 03 5a af ec 00 03     ...........Z....
     b60:	5a bf ec 00 00 d7 ff dc 00 00 37 cf 1c 00 00 d7     Z.........7.....
     b70:	cf 3c 00 0f a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
     b80:	55 c0 ea aa 50 57 00 da aa 60 5c 00 e5 55 80 5c     U...PW...`\..U.\
     b90:	00 3a aa 00 70 00 0f f0 00 c0 00 00 30 00 c0 00     .:..p.......0...
     ba0:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
     bb0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
     bc0:	cc 00 00 00 00 30 00 00 00 00 f0 00 00 00 03 fc     .....0..........
     bd0:	00 00 00 03 bc 00 00 00 0e ac 00 00 00 3a ab 00     .............:..
     be0:	00 00 ea aa c0 00 00 ea aa c0 00 03 aa aa c0 00     ................
     bf0:	03 aa ab b0 00 03 6a af b0 00 00 da af ac 00 00     ......j.........
     c00:	d6 ff 6c 00 00 d7 ff dc 00 00 37 cf 1c 00 0f d7     ..l.......7.....
     c10:	cf 3f c0 3a a4 ff d5 70 ea a9 00 55 70 ea a9 50     .?.:...p...Up..P
     c20:	55 70 da aa 50 55 c0 e6 aa 60 57 00 39 55 a0 7c     Up..PU...`W.9U.|
     c30:	00 0e aa 00 c0 00 03 f0 00 c0 00 00 30 00 c0 00     ............0...
     c40:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
     c50:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
     c60:	cc 00 00 00 00 30 00 00 00 03 c0 00 00 00 0f f0     .....0..........
     c70:	00 00 00 0f b0 00 00 00 0e b0 00 00 00 3a ac 00     .............:..
     c80:	00 00 ea ab 00 00 00 ea ab 00 00 00 ea aa c0 00     ................
     c90:	00 ea ae b0 00 00 ea af ac 00 00 ea bf ac 00 00     ................
     ca0:	da ff ac 00 00 da ff dc 00 03 57 cf 1c 00 03 d7     ..........W.....
     cb0:	cf 3c 00 0e a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
     cc0:	55 70 da aa 50 55 70 e6 aa 60 55 c0 39 6a 60 57     Up..PUp..`U.9j`W
     cd0:	00 0e 95 80 fc 00 03 ea 00 c0 00 00 30 00 c0 00     ............0...
     ce0:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
     cf0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
     d00:	cc 00 00 00 00 30 00 00                             .....0..

00000d08 <_ZL6charUp>:
     d08:	00 3f f0 00 00 ea af 00 03 ab fe c0 03 af ff b0     .?..............
     d18:	0e af 3c b0 0e af 3c f0 0e 7f ff f0 0d 7f ff f0     ..<...<.........
     d28:	0d 73 fc f0 0d 74 00 f0 3d b5 41 f0 f5 b9 01 f0     .s...t..=.A.....
     d38:	fe ba 02 f0 3e 9a 00 6c 0e aa 00 ac 0e aa 00 6c     ....>..l.......l
     d48:	0e aa 00 30 0e aa 00 30 0e aa 00 70 0d aa 10 70     ...0...0...p...p
     d58:	0e 68 11 70 03 94 3d c0 00 e8 33 00 00 3c f0 00     .h.p..=...3..<..
     d68:	00 03 00 00 00 0f fc 00 00 fa ab 00 03 ab fe c0     ................
     d78:	0e af ff b0 0e af 3c b0 0e bf 3c f0 0e 7f ff f0     ......<...<.....
     d88:	0d 7f ff f0 0d 73 fc f0 0d 74 00 f0 0d b5 40 f0     .....s...t....@.
     d98:	0d b5 01 f0 3d b9 02 f0 3e 9a 02 70 0e aa 00 b0     ....=...>..p....
     da8:	0e aa 00 ac 0e aa 00 2c 0e aa 00 2c 0e aa 00 5c     .......,...,...\
     db8:	0e aa 10 70 0d 68 31 70 0e 94 3d c0 03 e8 33 00     ...p.h1p..=...3.
     dc8:	00 3c f0 00 00 03 00 00 00 3f fc 00 00 ea ab 00     .<.......?......
     dd8:	03 ab fe c0 03 af ff b0 0e bf 3c f0 3a bf 3c f0     ..........<.:.<.
     de8:	3a 7f ff f0 3a 7f ff f0 0d 73 fc f0 0d 74 00 f0     :...:....s...t..
     df8:	0d 74 00 f0 0d b5 41 f0 0e b9 01 f0 0e ba 02 f0     .t....A.........
     e08:	0e 9a 00 b0 0e aa 00 b0 0e aa 00 30 0e aa 00 30     ...........0...0
     e18:	0d aa 00 70 0e 6a 20 5c 0e 68 11 5c 03 94 3f 70     ...p.j \.h.\..?p
     e28:	00 e8 30 c0 00 3c f0 00 00 03 00 00 00 3f f0 00     ..0..<.......?..
     e38:	00 ea af 00 03 ab fe c0 03 af ff b0 0e af 3c f0     ..............<.
     e48:	0e af 3c f0 3a 7f ff f0 3a 7f ff f0 3a 73 fc f0     ..<.:...:...:s..
     e58:	3a 74 00 f0 3d b5 00 f0 3e b5 41 f0 0e ba 02 f0     :t..=...>.A.....
     e68:	0e 9a 02 70 0e aa 00 b0 0e aa 00 b0 0e aa 00 30     ...p...........0
     e78:	0e aa 00 30 0e aa 00 70 0d aa 20 70 0e 68 11 70     ...0...p.. p.h.p
     e88:	03 98 3f 70 00 e4 30 c0 00 38 f0 00 00 0f 00 00     ..?p..0..8......

00000e98 <_ZL7charRun>:
     e98:	00 00 00 00 00 00 00 0f fc 00 00 f0 fa ab c0 03     ................
     ea8:	ff aa aa b0 03 ea aa aa ac 00 fa aa aa fc 00 0d     ................
     eb8:	6a af ff 00 0d 5d 5f ff 00 03 d7 ff 3c 00 00 35     j....]_.....<..5
     ec8:	57 3c 00 00 f5 57 fc 00 03 aa 57 f0 00 3e aa 60     W<...W....W..>.`
     ed8:	70 00 ea a9 80 70 03 aa a9 80 c0 0e aa 96 02 c0     p....p..........
     ee8:	0e 95 68 07 00 39 6a 80 03 00 0e b5 50 03 00 03     ..h..9j.....P...
     ef8:	cd 40 0c 00 00 00 00 ff c0 00 00 0f aa b0 00 00     .@..............
     f08:	3a aa ac 00 f3 ea aa fc 03 fe aa aa ff 03 ea aa     :...............
     f18:	ab ff 00 f5 aa 9f fc 00 0d 55 5f 3c 00 03 f7 5f     .........U_<..._
     f28:	3c 00 00 39 f7 f0 00 00 e9 54 70 00 03 aa 98 70     <..9.....Tp....p
     f38:	00 0e aa 60 c0 00 3a aa 60 c0 00 ea a9 80 c0 03     ...`..:.`.......
     f48:	aa a9 80 c0 0e aa 96 00 c0 39 55 68 c3 00 0e aa     .........9Uh....
     f58:	83 3c 00 03 fc 0c 00 00 00 00 0f ff f0 00 00 3a     .<.............:
     f68:	aa ac 00 00 ea aa ff 00 03 aa ab ff 00 3f aa ab     .............?..
     f78:	ff 00 fe aa af 3c 00 fa aa b7 3c 00 3d 55 d7 fc     .....<....<.=U..
     f88:	00 03 d5 d7 f0 00 03 a9 54 70 00 0e aa 60 b0 00     ........Tp...`..
     f98:	3a a9 80 b0 00 3a a6 02 b0 00 ea a6 02 c0 00 ea     :....:..........
     fa8:	98 00 c0 00 ea 98 00 c0 03 95 58 f0 c0 00 ea a3     ..........X.....
     fb8:	0c c0 00 3c 0c 03 00 00 03 30 00 00 00 00 ff ff     ...<.....0......
     fc8:	c0 00 03 aa aa b0 00 0e aa aa ac 00 3a aa aa ff     ............:...
     fd8:	00 ea aa af ff 03 e6 ab ff fc 03 fd 9f 57 3c 00     .............W<.
     fe8:	ff 57 57 3c 00 0f a5 57 fc 00 3a a9 53 f0 00 ea     .WW<...W..:.S...
     ff8:	a6 80 c0 03 aa 98 00 c0 03 aa 60 02 b0 0e a9 80     ..........`.....
    1008:	02 b0 0d a9 80 0a b0 0e 69 80 02 c0 03 95 80 03     ........i.......
    1018:	00 00 ea 00 00 c0 00 3f 01 70 c0 00 00 ff cc 30     .......?.p.....0
    1028:	00 03 ff fc 00 00 3e aa ab c0 03 ea aa aa b0 0f     ......>.........
    1038:	aa aa aa ac 0f f6 aa ab ff 03 cd af af ff 00 03     ................
    1048:	75 ff fc 00 00 d5 57 3c 00 00 d5 57 3c 00 03 e5     u.....W<...W<...
    1058:	57 fc 00 3e a9 63 f0 03 ea a6 80 c0 0e aa 98 00     W..>.c..........
    1068:	c0 3a aa 60 02 c0 36 a9 80 02 c0 39 a6 00 0a c0     .:.`..6....9....
    1078:	0e 56 40 0a c0 03 ab 50 03 00 00 fc c0 03 00 00     .V@....P........
    1088:	00 3a 83 00 00 00 00 00 00 00 00 0f fc 00 00 f0     .:..............
    1098:	fa ab c0 03 ff aa aa b0 03 ea aa aa ac 00 d6 aa     ................
    10a8:	ab fc 00 3d 6a bf ff 00 0d 5d 5f ff 00 03 d7 fc     ...=j....]_.....
    10b8:	fc 00 00 35 5c fc 00 00 f5 5f fc 00 03 a9 4f f0     ...5\...._....O.
    10c8:	00 3e a9 80 70 00 ea a6 00 70 03 aa a6 00 70 0e     .>..p....p....p.
    10d8:	aa 58 02 c0 0e 55 a0 0a c0 39 aa 00 03 00 0e b5     .X...U...9......
    10e8:	50 03 00 03 cd 4c 0c 00                             P....L..

000010f0 <__ctors_start>:
    10f0:	13 09       	sbc	r17, r3

000010f2 <__ctors_end>:
    10f2:	11 24       	eor	r1, r1
    10f4:	1f be       	out	0x3f, r1	; 63
    10f6:	cf ef       	ldi	r28, 0xFF	; 255
    10f8:	d8 e0       	ldi	r29, 0x08	; 8
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	cd bf       	out	0x3d, r28	; 61

000010fe <__do_copy_data>:
    10fe:	11 e0       	ldi	r17, 0x01	; 1
    1100:	a0 e0       	ldi	r26, 0x00	; 0
    1102:	b1 e0       	ldi	r27, 0x01	; 1
    1104:	e6 e8       	ldi	r30, 0x86	; 134
    1106:	f5 e2       	ldi	r31, 0x25	; 37
    1108:	02 c0       	rjmp	.+4      	; 0x110e <__do_copy_data+0x10>
    110a:	05 90       	lpm	r0, Z+
    110c:	0d 92       	st	X+, r0
    110e:	a6 33       	cpi	r26, 0x36	; 54
    1110:	b1 07       	cpc	r27, r17
    1112:	d9 f7       	brne	.-10     	; 0x110a <__do_copy_data+0xc>

00001114 <__do_clear_bss>:
    1114:	21 e0       	ldi	r18, 0x01	; 1
    1116:	a6 e3       	ldi	r26, 0x36	; 54
    1118:	b1 e0       	ldi	r27, 0x01	; 1
    111a:	01 c0       	rjmp	.+2      	; 0x111e <.do_clear_bss_start>

0000111c <.do_clear_bss_loop>:
    111c:	1d 92       	st	X+, r1

0000111e <.do_clear_bss_start>:
    111e:	aa 34       	cpi	r26, 0x4A	; 74
    1120:	b2 07       	cpc	r27, r18
    1122:	e1 f7       	brne	.-8      	; 0x111c <.do_clear_bss_loop>

00001124 <__do_global_ctors>:
    1124:	18 e0       	ldi	r17, 0x08	; 8
    1126:	c9 e7       	ldi	r28, 0x79	; 121
    1128:	d8 e0       	ldi	r29, 0x08	; 8
    112a:	04 c0       	rjmp	.+8      	; 0x1134 <__do_global_ctors+0x10>
    112c:	21 97       	sbiw	r28, 0x01	; 1
    112e:	fe 01       	movw	r30, r28
    1130:	0e 94 bb 12 	call	0x2576	; 0x2576 <__tablejump2__>
    1134:	c8 37       	cpi	r28, 0x78	; 120
    1136:	d1 07       	cpc	r29, r17
    1138:	c9 f7       	brne	.-14     	; 0x112c <__do_global_ctors+0x8>
    113a:	0e 94 a3 08 	call	0x1146	; 0x1146 <main>
    113e:	0c 94 c1 12 	jmp	0x2582	; 0x2582 <_exit>

00001142 <__bad_interrupt>:
    1142:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001146 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
    1146:	61 e0       	ldi	r22, 0x01	; 1
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	0e 94 ab 0d 	call	0x1b56	; 0x1b56 <_ZN3MCU7Setting9beginPortEab>
  beginPin(D, 6);
    114e:	66 e0       	ldi	r22, 0x06	; 6
    1150:	82 e0       	ldi	r24, 0x02	; 2
    1152:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <_ZN3MCU7Setting8beginPinEaa>

  beginINT(0, DOWN);
    1156:	61 e0       	ldi	r22, 0x01	; 1
    1158:	80 e0       	ldi	r24, 0x00	; 0
    115a:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <_ZN3MCU7Setting8beginINTEaa>
  //beginINT(1, DOWN);
  beginTimer(1, COMP);
    115e:	61 e0       	ldi	r22, 0x01	; 1
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
    1166:	61 e0       	ldi	r22, 0x01	; 1
    1168:	82 e0       	ldi	r24, 0x02	; 2
    116a:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
    116e:	61 e0       	ldi	r22, 0x01	; 1
    1170:	83 e0       	ldi	r24, 0x03	; 3
    1172:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <_ZN3MCU7Setting8beginPWMEab>
  beginSPI();
    1176:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <_ZN3MCU7Setting8beginSPIEv>
  sei();
    117a:	78 94       	sei

  TCCR0B = 0x00;
    117c:	15 bc       	out	0x25, r1	; 37

  game.title();
    117e:	86 e3       	ldi	r24, 0x36	; 54
    1180:	91 e0       	ldi	r25, 0x01	; 1
    1182:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
    1186:	86 e3       	ldi	r24, 0x36	; 54
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	0e 94 ad 0b 	call	0x175a	; 0x175a <_ZN4Game5startEv>
    118e:	fb cf       	rjmp	.-10     	; 0x1186 <main+0x40>

00001190 <__vector_1>:
---------------  MAIN END  ---------------
//========================================*/


ISR(INT0_vect)
{
    1190:	1f 92       	push	r1
    1192:	0f 92       	push	r0
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	0f 92       	push	r0
    1198:	11 24       	eor	r1, r1
    119a:	8f 93       	push	r24
  SW::interrupt0 = ON;
    119c:	81 e0       	ldi	r24, 0x01	; 1
    119e:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <_ZN2SW10interrupt0E>
}
    11a2:	8f 91       	pop	r24
    11a4:	0f 90       	pop	r0
    11a6:	0f be       	out	0x3f, r0	; 63
    11a8:	0f 90       	pop	r0
    11aa:	1f 90       	pop	r1
    11ac:	18 95       	reti

000011ae <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
    11ae:	1f 92       	push	r1
    11b0:	0f 92       	push	r0
    11b2:	0f b6       	in	r0, 0x3f	; 63
    11b4:	0f 92       	push	r0
    11b6:	11 24       	eor	r1, r1
    11b8:	8f 93       	push	r24
    11ba:	9f 93       	push	r25
  Frame::secondTime++;
    11bc:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <_ZN5Frame10secondTimeE>
    11c0:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <_ZN5Frame10secondTimeE+0x1>
    11c4:	01 96       	adiw	r24, 0x01	; 1
    11c6:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_ZN5Frame10secondTimeE+0x1>
    11ca:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_ZN5Frame10secondTimeE>
}
    11ce:	9f 91       	pop	r25
    11d0:	8f 91       	pop	r24
    11d2:	0f 90       	pop	r0
    11d4:	0f be       	out	0x3f, r0	; 63
    11d6:	0f 90       	pop	r0
    11d8:	1f 90       	pop	r1
    11da:	18 95       	reti

000011dc <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
    11dc:	1f 92       	push	r1
    11de:	0f 92       	push	r0
    11e0:	0f b6       	in	r0, 0x3f	; 63
    11e2:	0f 92       	push	r0
    11e4:	11 24       	eor	r1, r1
    11e6:	8f 93       	push	r24
    11e8:	9f 93       	push	r25
    11ea:	af 93       	push	r26
    11ec:	bf 93       	push	r27
  Frame::presentTime++;
    11ee:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <_ZN5Frame11presentTimeE>
    11f2:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    11f6:	a0 91 45 01 	lds	r26, 0x0145	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    11fa:	b0 91 46 01 	lds	r27, 0x0146	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
    11fe:	01 96       	adiw	r24, 0x01	; 1
    1200:	a1 1d       	adc	r26, r1
    1202:	b1 1d       	adc	r27, r1
    1204:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <_ZN5Frame11presentTimeE>
    1208:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    120c:	a0 93 45 01 	sts	0x0145, r26	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    1210:	b0 93 46 01 	sts	0x0146, r27	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
}
    1214:	bf 91       	pop	r27
    1216:	af 91       	pop	r26
    1218:	9f 91       	pop	r25
    121a:	8f 91       	pop	r24
    121c:	0f 90       	pop	r0
    121e:	0f be       	out	0x3f, r0	; 63
    1220:	0f 90       	pop	r0
    1222:	1f 90       	pop	r1
    1224:	18 95       	reti

00001226 <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    1226:	e6 e3       	ldi	r30, 0x36	; 54
    1228:	f1 e0       	ldi	r31, 0x01	; 1
    122a:	80 ef       	ldi	r24, 0xF0	; 240
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	91 83       	std	Z+1, r25	; 0x01
    1230:	80 83       	st	Z, r24
    1232:	80 e4       	ldi	r24, 0x40	; 64
    1234:	91 e0       	ldi	r25, 0x01	; 1
    1236:	93 83       	std	Z+3, r25	; 0x03
    1238:	82 83       	std	Z+2, r24	; 0x02
    123a:	08 95       	ret

0000123c <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    123c:	8f 92       	push	r8
    123e:	9f 92       	push	r9
    1240:	af 92       	push	r10
    1242:	bf 92       	push	r11
    1244:	cf 92       	push	r12
    1246:	df 92       	push	r13
    1248:	ef 92       	push	r14
    124a:	ff 92       	push	r15
    124c:	0f 93       	push	r16
    124e:	1f 93       	push	r17
    1250:	cf 93       	push	r28
    1252:	df 93       	push	r29
    1254:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
    1256:	82 2f       	mov	r24, r18
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
    125c:	9c 01       	movw	r18, r24
    125e:	12 f4       	brpl	.+4      	; 0x1264 <_ZN4Font11printLetterEiih+0x28>
    1260:	21 5f       	subi	r18, 0xF1	; 241
    1262:	3f 4f       	sbci	r19, 0xFF	; 255
    1264:	49 01       	movw	r8, r18
    1266:	95 94       	asr	r9
    1268:	87 94       	ror	r8
    126a:	95 94       	asr	r9
    126c:	87 94       	ror	r8
    126e:	95 94       	asr	r9
    1270:	87 94       	ror	r8
    1272:	95 94       	asr	r9
    1274:	87 94       	ror	r8
    1276:	96 94       	lsr	r9
    1278:	98 2c       	mov	r9, r8
    127a:	88 24       	eor	r8, r8
    127c:	97 94       	ror	r9
    127e:	87 94       	ror	r8
    1280:	8f 70       	andi	r24, 0x0F	; 15
    1282:	90 78       	andi	r25, 0x80	; 128
    1284:	99 23       	and	r25, r25
    1286:	24 f4       	brge	.+8      	; 0x1290 <_ZN4Font11printLetterEiih+0x54>
    1288:	01 97       	sbiw	r24, 0x01	; 1
    128a:	80 6f       	ori	r24, 0xF0	; 240
    128c:	9f 6f       	ori	r25, 0xFF	; 255
    128e:	01 96       	adiw	r24, 0x01	; 1
    1290:	88 0e       	add	r8, r24
    1292:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
    1294:	8a 01       	movw	r16, r20
    1296:	01 5f       	subi	r16, 0xF1	; 241
    1298:	1f 4f       	sbci	r17, 0xFF	; 255
    129a:	9b 01       	movw	r18, r22
    129c:	21 5f       	subi	r18, 0xF1	; 241
    129e:	3f 4f       	sbci	r19, 0xFF	; 255
    12a0:	ce 01       	movw	r24, r28
    12a2:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>
    12a6:	54 01       	movw	r10, r8
    12a8:	80 e8       	ldi	r24, 0x80	; 128
    12aa:	88 0e       	add	r8, r24
    12ac:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    12ae:	68 94       	set
    12b0:	cc 24       	eor	r12, r12
    12b2:	c1 f8       	bld	r12, 1
    12b4:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
    12b6:	ec 81       	ldd	r30, Y+4	; 0x04
    12b8:	fd 81       	ldd	r31, Y+5	; 0x05
    12ba:	ea 0d       	add	r30, r10
    12bc:	fb 1d       	adc	r31, r11
    12be:	14 91       	lpm	r17, Z
    12c0:	68 94       	set
    12c2:	ee 24       	eor	r14, r14
    12c4:	e3 f8       	bld	r14, 3
    12c6:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
    12c8:	11 23       	and	r17, r17
    12ca:	5c f4       	brge	.+22     	; 0x12e2 <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
    12cc:	68 85       	ldd	r22, Y+8	; 0x08
    12ce:	79 85       	ldd	r23, Y+9	; 0x09
    12d0:	ce 01       	movw	r24, r28
    12d2:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    12d6:	68 85       	ldd	r22, Y+8	; 0x08
    12d8:	79 85       	ldd	r23, Y+9	; 0x09
    12da:	ce 01       	movw	r24, r28
    12dc:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    12e0:	0a c0       	rjmp	.+20     	; 0x12f6 <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
    12e2:	6e 81       	ldd	r22, Y+6	; 0x06
    12e4:	7f 81       	ldd	r23, Y+7	; 0x07
    12e6:	ce 01       	movw	r24, r28
    12e8:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    12ec:	6e 81       	ldd	r22, Y+6	; 0x06
    12ee:	7f 81       	ldd	r23, Y+7	; 0x07
    12f0:	ce 01       	movw	r24, r28
    12f2:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
    12f6:	11 0f       	add	r17, r17
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	e8 1a       	sub	r14, r24
    12fc:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
    12fe:	21 f7       	brne	.-56     	; 0x12c8 <_ZN4Font11printLetterEiih+0x8c>
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	c8 1a       	sub	r12, r24
    1304:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    1306:	b9 f6       	brne	.-82     	; 0x12b6 <_ZN4Font11printLetterEiih+0x7a>
    1308:	80 e1       	ldi	r24, 0x10	; 16
    130a:	a8 0e       	add	r10, r24
    130c:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
    130e:	a8 14       	cp	r10, r8
    1310:	b9 04       	cpc	r11, r9
    1312:	69 f6       	brne	.-102    	; 0x12ae <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
    1314:	df 91       	pop	r29
    1316:	cf 91       	pop	r28
    1318:	1f 91       	pop	r17
    131a:	0f 91       	pop	r16
    131c:	ff 90       	pop	r15
    131e:	ef 90       	pop	r14
    1320:	df 90       	pop	r13
    1322:	cf 90       	pop	r12
    1324:	bf 90       	pop	r11
    1326:	af 90       	pop	r10
    1328:	9f 90       	pop	r9
    132a:	8f 90       	pop	r8
    132c:	08 95       	ret

0000132e <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
    132e:	cf 92       	push	r12
    1330:	df 92       	push	r13
    1332:	ef 92       	push	r14
    1334:	ff 92       	push	r15
    1336:	0f 93       	push	r16
    1338:	1f 93       	push	r17
    133a:	cf 93       	push	r28
    133c:	df 93       	push	r29
    133e:	7c 01       	movw	r14, r24
    1340:	eb 01       	movw	r28, r22
    1342:	6a 01       	movw	r12, r20
    1344:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
    1346:	20 81       	ld	r18, Z
    1348:	22 23       	and	r18, r18
    134a:	71 f0       	breq	.+28     	; 0x1368 <_ZN4Font5printEiiPKc+0x3a>
    134c:	8f 01       	movw	r16, r30
    134e:	0f 5f       	subi	r16, 0xFF	; 255
    1350:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
    1352:	a6 01       	movw	r20, r12
    1354:	be 01       	movw	r22, r28
    1356:	c7 01       	movw	r24, r14
    1358:	0e 94 1e 09 	call	0x123c	; 0x123c <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
    135c:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
    135e:	f8 01       	movw	r30, r16
    1360:	21 91       	ld	r18, Z+
    1362:	8f 01       	movw	r16, r30
    1364:	21 11       	cpse	r18, r1
    1366:	f5 cf       	rjmp	.-22     	; 0x1352 <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

}
    1368:	df 91       	pop	r29
    136a:	cf 91       	pop	r28
    136c:	1f 91       	pop	r17
    136e:	0f 91       	pop	r16
    1370:	ff 90       	pop	r15
    1372:	ef 90       	pop	r14
    1374:	df 90       	pop	r13
    1376:	cf 90       	pop	r12
    1378:	08 95       	ret

0000137a <_ZN4Font5printEiim>:
/*----------------------------------------//
              Print Intager
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{
    137a:	2f 92       	push	r2
    137c:	3f 92       	push	r3
    137e:	4f 92       	push	r4
    1380:	5f 92       	push	r5
    1382:	6f 92       	push	r6
    1384:	7f 92       	push	r7
    1386:	8f 92       	push	r8
    1388:	9f 92       	push	r9
    138a:	af 92       	push	r10
    138c:	bf 92       	push	r11
    138e:	cf 92       	push	r12
    1390:	df 92       	push	r13
    1392:	ef 92       	push	r14
    1394:	ff 92       	push	r15
    1396:	0f 93       	push	r16
    1398:	1f 93       	push	r17
    139a:	cf 93       	push	r28
    139c:	df 93       	push	r29
    139e:	cd b7       	in	r28, 0x3d	; 61
    13a0:	de b7       	in	r29, 0x3e	; 62
    13a2:	27 97       	sbiw	r28, 0x07	; 7
    13a4:	0f b6       	in	r0, 0x3f	; 63
    13a6:	f8 94       	cli
    13a8:	de bf       	out	0x3e, r29	; 62
    13aa:	0f be       	out	0x3f, r0	; 63
    13ac:	cd bf       	out	0x3d, r28	; 61
    13ae:	9a 83       	std	Y+2, r25	; 0x02
    13b0:	89 83       	std	Y+1, r24	; 0x01
    13b2:	b6 2e       	mov	r11, r22
    13b4:	a7 2e       	mov	r10, r23
    13b6:	5c 83       	std	Y+4, r21	; 0x04
    13b8:	4b 83       	std	Y+3, r20	; 0x03
    13ba:	68 01       	movw	r12, r16
    13bc:	79 01       	movw	r14, r18

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    13be:	0a 30       	cpi	r16, 0x0A	; 10
    13c0:	11 05       	cpc	r17, r1
    13c2:	21 05       	cpc	r18, r1
    13c4:	31 05       	cpc	r19, r1
    13c6:	88 f1       	brcs	.+98     	; 0x142a <_ZN4Font5printEiim+0xb0>
    13c8:	91 e0       	ldi	r25, 0x01	; 1
    13ca:	9d 83       	std	Y+5, r25	; 0x05
    13cc:	41 2c       	mov	r4, r1
    13ce:	51 2c       	mov	r5, r1
    13d0:	32 01       	movw	r6, r4
    13d2:	43 94       	inc	r4
    13d4:	09 c0       	rjmp	.+18     	; 0x13e8 <_ZN4Font5printEiim+0x6e>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    13d6:	9d 81       	ldd	r25, Y+5	; 0x05
    13d8:	89 2f       	mov	r24, r25
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	9f 83       	std	Y+7, r25	; 0x07
    13de:	8e 83       	std	Y+6, r24	; 0x06
    13e0:	18 16       	cp	r1, r24
    13e2:	19 06       	cpc	r1, r25
    13e4:	54 f1       	brlt	.+84     	; 0x143a <_ZN4Font5printEiim+0xc0>
    13e6:	57 c0       	rjmp	.+174    	; 0x1496 <_ZN4Font5printEiim+0x11c>
  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
  {
    digit++;
    13e8:	8d 81       	ldd	r24, Y+5	; 0x05
    13ea:	8f 5f       	subi	r24, 0xFF	; 255
    13ec:	8d 83       	std	Y+5, r24	; 0x05
    placeValue *= 10;
    13ee:	44 0c       	add	r4, r4
    13f0:	55 1c       	adc	r5, r5
    13f2:	66 1c       	adc	r6, r6
    13f4:	77 1c       	adc	r7, r7
    13f6:	d3 01       	movw	r26, r6
    13f8:	c2 01       	movw	r24, r4
    13fa:	88 0f       	add	r24, r24
    13fc:	99 1f       	adc	r25, r25
    13fe:	aa 1f       	adc	r26, r26
    1400:	bb 1f       	adc	r27, r27
    1402:	88 0f       	add	r24, r24
    1404:	99 1f       	adc	r25, r25
    1406:	aa 1f       	adc	r26, r26
    1408:	bb 1f       	adc	r27, r27
    140a:	48 0e       	add	r4, r24
    140c:	59 1e       	adc	r5, r25
    140e:	6a 1e       	adc	r6, r26
    1410:	7b 1e       	adc	r7, r27
{

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    1412:	c7 01       	movw	r24, r14
    1414:	b6 01       	movw	r22, r12
    1416:	a3 01       	movw	r20, r6
    1418:	92 01       	movw	r18, r4
    141a:	0e 94 99 12 	call	0x2532	; 0x2532 <__udivmodsi4>
    141e:	2a 30       	cpi	r18, 0x0A	; 10
    1420:	31 05       	cpc	r19, r1
    1422:	41 05       	cpc	r20, r1
    1424:	51 05       	cpc	r21, r1
    1426:	00 f7       	brcc	.-64     	; 0x13e8 <_ZN4Font5printEiim+0x6e>
    1428:	d6 cf       	rjmp	.-84     	; 0x13d6 <_ZN4Font5printEiim+0x5c>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	9f 83       	std	Y+7, r25	; 0x07
    1430:	8e 83       	std	Y+6, r24	; 0x06
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{

  uint32_t placeValue = 1;
    1432:	41 2c       	mov	r4, r1
    1434:	51 2c       	mov	r5, r1
    1436:	32 01       	movw	r6, r4
    1438:	43 94       	inc	r4
    143a:	0b 2d       	mov	r16, r11
    143c:	1a 2d       	mov	r17, r10
    143e:	a1 2c       	mov	r10, r1
    1440:	b1 2c       	mov	r11, r1
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
  {
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    1442:	c7 01       	movw	r24, r14
    1444:	b6 01       	movw	r22, r12
    1446:	a3 01       	movw	r20, r6
    1448:	92 01       	movw	r18, r4
    144a:	0e 94 99 12 	call	0x2532	; 0x2532 <__udivmodsi4>
    144e:	26 2e       	mov	r2, r22
    1450:	37 2e       	mov	r3, r23
    1452:	88 2e       	mov	r8, r24
    1454:	99 2e       	mov	r9, r25
    1456:	20 5d       	subi	r18, 0xD0	; 208
    1458:	4b 81       	ldd	r20, Y+3	; 0x03
    145a:	5c 81       	ldd	r21, Y+4	; 0x04
    145c:	b8 01       	movw	r22, r16
    145e:	89 81       	ldd	r24, Y+1	; 0x01
    1460:	9a 81       	ldd	r25, Y+2	; 0x02
    1462:	0e 94 1e 09 	call	0x123c	; 0x123c <_ZN4Font11printLetterEiih>
    intager %= placeValue;
    1466:	c2 2c       	mov	r12, r2
    1468:	d3 2c       	mov	r13, r3
    146a:	e8 2c       	mov	r14, r8
    146c:	f9 2c       	mov	r15, r9
    placeValue /= 10;
    146e:	c3 01       	movw	r24, r6
    1470:	b2 01       	movw	r22, r4
    1472:	2a e0       	ldi	r18, 0x0A	; 10
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	40 e0       	ldi	r20, 0x00	; 0
    1478:	50 e0       	ldi	r21, 0x00	; 0
    147a:	0e 94 99 12 	call	0x2532	; 0x2532 <__udivmodsi4>
    147e:	29 01       	movw	r4, r18
    1480:	3a 01       	movw	r6, r20
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    1482:	9f ef       	ldi	r25, 0xFF	; 255
    1484:	a9 1a       	sub	r10, r25
    1486:	b9 0a       	sbc	r11, r25
    1488:	00 5f       	subi	r16, 0xF0	; 240
    148a:	1f 4f       	sbci	r17, 0xFF	; 255
    148c:	8e 81       	ldd	r24, Y+6	; 0x06
    148e:	9f 81       	ldd	r25, Y+7	; 0x07
    1490:	a8 16       	cp	r10, r24
    1492:	b9 06       	cpc	r11, r25
    1494:	b4 f2       	brlt	.-84     	; 0x1442 <_ZN4Font5printEiim+0xc8>
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    intager %= placeValue;
    placeValue /= 10;
  }

    1496:	27 96       	adiw	r28, 0x07	; 7
    1498:	0f b6       	in	r0, 0x3f	; 63
    149a:	f8 94       	cli
    149c:	de bf       	out	0x3e, r29	; 62
    149e:	0f be       	out	0x3f, r0	; 63
    14a0:	cd bf       	out	0x3d, r28	; 61
    14a2:	df 91       	pop	r29
    14a4:	cf 91       	pop	r28
    14a6:	1f 91       	pop	r17
    14a8:	0f 91       	pop	r16
    14aa:	ff 90       	pop	r15
    14ac:	ef 90       	pop	r14
    14ae:	df 90       	pop	r13
    14b0:	cf 90       	pop	r12
    14b2:	bf 90       	pop	r11
    14b4:	af 90       	pop	r10
    14b6:	9f 90       	pop	r9
    14b8:	8f 90       	pop	r8
    14ba:	7f 90       	pop	r7
    14bc:	6f 90       	pop	r6
    14be:	5f 90       	pop	r5
    14c0:	4f 90       	pop	r4
    14c2:	3f 90       	pop	r3
    14c4:	2f 90       	pop	r2
    14c6:	08 95       	ret

000014c8 <_ZN5Frame6updateEv>:
/*----------------------------------------//
              Update Frame
//----------------------------------------*/

void Frame::update(void)
{
    14c8:	fc 01       	movw	r30, r24

  if (presentTime >= m_PastTick + 5)
    14ca:	40 91 43 01 	lds	r20, 0x0143	; 0x800143 <_ZN5Frame11presentTimeE>
    14ce:	50 91 44 01 	lds	r21, 0x0144	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    14d2:	60 91 45 01 	lds	r22, 0x0145	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    14d6:	70 91 46 01 	lds	r23, 0x0146	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
    14da:	80 81       	ld	r24, Z
    14dc:	91 81       	ldd	r25, Z+1	; 0x01
    14de:	a2 81       	ldd	r26, Z+2	; 0x02
    14e0:	b3 81       	ldd	r27, Z+3	; 0x03
    14e2:	05 96       	adiw	r24, 0x05	; 5
    14e4:	a1 1d       	adc	r26, r1
    14e6:	b1 1d       	adc	r27, r1
    14e8:	48 17       	cp	r20, r24
    14ea:	59 07       	cpc	r21, r25
    14ec:	6a 07       	cpc	r22, r26
    14ee:	7b 07       	cpc	r23, r27
    14f0:	70 f0       	brcs	.+28     	; 0x150e <_ZN5Frame6updateEv+0x46>
  {

    m_PastTick = presentTime;
    14f2:	40 83       	st	Z, r20
    14f4:	51 83       	std	Z+1, r21	; 0x01
    14f6:	62 83       	std	Z+2, r22	; 0x02
    14f8:	73 83       	std	Z+3, r23	; 0x03

    oneTick++;
    14fa:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <_ZN5Frame7oneTickE>
    14fe:	8f 5f       	subi	r24, 0xFF	; 255

    if (oneTick == 2)
    1500:	82 30       	cpi	r24, 0x02	; 2
    1502:	19 f0       	breq	.+6      	; 0x150a <_ZN5Frame6updateEv+0x42>
  if (presentTime >= m_PastTick + 5)
  {

    m_PastTick = presentTime;

    oneTick++;
    1504:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_ZN5Frame7oneTickE>
    1508:	02 c0       	rjmp	.+4      	; 0x150e <_ZN5Frame6updateEv+0x46>

    if (oneTick == 2)
    {
      oneTick = 0;
    150a:	10 92 42 01 	sts	0x0142, r1	; 0x800142 <_ZN5Frame7oneTickE>
    }

  }

  if (presentTime >= m_PastFrame + 100)
    150e:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <_ZN5Frame11presentTimeE>
    1512:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    1516:	a0 91 45 01 	lds	r26, 0x0145	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    151a:	b0 91 46 01 	lds	r27, 0x0146	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
    151e:	44 81       	ldd	r20, Z+4	; 0x04
    1520:	55 81       	ldd	r21, Z+5	; 0x05
    1522:	66 81       	ldd	r22, Z+6	; 0x06
    1524:	77 81       	ldd	r23, Z+7	; 0x07
    1526:	4c 59       	subi	r20, 0x9C	; 156
    1528:	5f 4f       	sbci	r21, 0xFF	; 255
    152a:	6f 4f       	sbci	r22, 0xFF	; 255
    152c:	7f 4f       	sbci	r23, 0xFF	; 255
    152e:	84 17       	cp	r24, r20
    1530:	95 07       	cpc	r25, r21
    1532:	a6 07       	cpc	r26, r22
    1534:	b7 07       	cpc	r27, r23
    1536:	b0 f0       	brcs	.+44     	; 0x1564 <_ZN5Frame6updateEv+0x9c>
  {

    m_PastFrame = presentTime;
    1538:	84 83       	std	Z+4, r24	; 0x04
    153a:	95 83       	std	Z+5, r25	; 0x05
    153c:	a6 83       	std	Z+6, r26	; 0x06
    153e:	b7 83       	std	Z+7, r27	; 0x07

    fourFrames++;
    1540:	30 91 41 01 	lds	r19, 0x0141	; 0x800141 <_ZN5Frame10fourFramesE>
    1544:	3f 5f       	subi	r19, 0xFF	; 255
    1546:	30 93 41 01 	sts	0x0141, r19	; 0x800141 <_ZN5Frame10fourFramesE>
    sixFrames++;
    154a:	20 91 40 01 	lds	r18, 0x0140	; 0x800140 <_ZN5Frame9sixFramesE>
    154e:	2f 5f       	subi	r18, 0xFF	; 255
    1550:	20 93 40 01 	sts	0x0140, r18	; 0x800140 <_ZN5Frame9sixFramesE>

    if (fourFrames == 4)
    1554:	34 30       	cpi	r19, 0x04	; 4
    1556:	11 f4       	brne	.+4      	; 0x155c <_ZN5Frame6updateEv+0x94>
    {
      fourFrames = 0;
    1558:	10 92 41 01 	sts	0x0141, r1	; 0x800141 <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
    155c:	26 30       	cpi	r18, 0x06	; 6
    155e:	11 f4       	brne	.+4      	; 0x1564 <_ZN5Frame6updateEv+0x9c>
    {
      sixFrames = 0;
    1560:	10 92 40 01 	sts	0x0140, r1	; 0x800140 <_ZN5Frame9sixFramesE>
    }

  }

  if (presentTime >= m_PastBeat + 125)
    1564:	40 85       	ldd	r20, Z+8	; 0x08
    1566:	51 85       	ldd	r21, Z+9	; 0x09
    1568:	62 85       	ldd	r22, Z+10	; 0x0a
    156a:	73 85       	ldd	r23, Z+11	; 0x0b
    156c:	43 58       	subi	r20, 0x83	; 131
    156e:	5f 4f       	sbci	r21, 0xFF	; 255
    1570:	6f 4f       	sbci	r22, 0xFF	; 255
    1572:	7f 4f       	sbci	r23, 0xFF	; 255
    1574:	84 17       	cp	r24, r20
    1576:	95 07       	cpc	r25, r21
    1578:	a6 07       	cpc	r26, r22
    157a:	b7 07       	cpc	r27, r23
    157c:	70 f0       	brcs	.+28     	; 0x159a <_ZN5Frame6updateEv+0xd2>
  {

    m_PastBeat = presentTime;
    157e:	80 87       	std	Z+8, r24	; 0x08
    1580:	91 87       	std	Z+9, r25	; 0x09
    1582:	a2 87       	std	Z+10, r26	; 0x0a
    1584:	b3 87       	std	Z+11, r27	; 0x0b

    sixteenBeats++;
    1586:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    158a:	8f 5f       	subi	r24, 0xFF	; 255

    if (sixteenBeats == 2)
    158c:	82 30       	cpi	r24, 0x02	; 2
    158e:	19 f0       	breq	.+6      	; 0x1596 <_ZN5Frame6updateEv+0xce>
  if (presentTime >= m_PastBeat + 125)
  {

    m_PastBeat = presentTime;

    sixteenBeats++;
    1590:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    1594:	08 95       	ret

    if (sixteenBeats == 2)
    {
      sixteenBeats = 0;
    1596:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    159a:	08 95       	ret

0000159c <_ZN5Frame4initEv>:
/*----------------------------------------//
                Reset Frame
//----------------------------------------*/

void Frame::init(void)
{
    159c:	fc 01       	movw	r30, r24
  m_PastTick = presentTime;
    159e:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <_ZN5Frame11presentTimeE>
    15a2:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    15a6:	a0 91 45 01 	lds	r26, 0x0145	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    15aa:	b0 91 46 01 	lds	r27, 0x0146	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
    15ae:	80 83       	st	Z, r24
    15b0:	91 83       	std	Z+1, r25	; 0x01
    15b2:	a2 83       	std	Z+2, r26	; 0x02
    15b4:	b3 83       	std	Z+3, r27	; 0x03
  m_PastFrame = presentTime;
    15b6:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <_ZN5Frame11presentTimeE>
    15ba:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <_ZN5Frame11presentTimeE+0x1>
    15be:	a0 91 45 01 	lds	r26, 0x0145	; 0x800145 <_ZN5Frame11presentTimeE+0x2>
    15c2:	b0 91 46 01 	lds	r27, 0x0146	; 0x800146 <_ZN5Frame11presentTimeE+0x3>
    15c6:	84 83       	std	Z+4, r24	; 0x04
    15c8:	95 83       	std	Z+5, r25	; 0x05
    15ca:	a6 83       	std	Z+6, r26	; 0x06
    15cc:	b7 83       	std	Z+7, r27	; 0x07
  m_PastBeat = presentTime;
    15ce:	80 87       	std	Z+8, r24	; 0x08
    15d0:	91 87       	std	Z+9, r25	; 0x09
    15d2:	a2 87       	std	Z+10, r26	; 0x0a
    15d4:	b3 87       	std	Z+11, r27	; 0x0b
    15d6:	08 95       	ret

000015d8 <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
    15d8:	8f 92       	push	r8
    15da:	9f 92       	push	r9
    15dc:	af 92       	push	r10
    15de:	bf 92       	push	r11
    15e0:	cf 92       	push	r12
    15e2:	df 92       	push	r13
    15e4:	ef 92       	push	r14
    15e6:	ff 92       	push	r15
    15e8:	0f 93       	push	r16
    15ea:	1f 93       	push	r17
    15ec:	cf 93       	push	r28
    15ee:	df 93       	push	r29
    15f0:	ec 01       	movw	r28, r24
  begin();
    15f2:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <_ZN3TFT5beginEv>
  setRotation(0);
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	ce 01       	movw	r24, r28
    15fa:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_ZN3TFT11setRotationEa>
  fillScreen(WHITE);
    15fe:	6f ef       	ldi	r22, 0xFF	; 255
    1600:	7f ef       	ldi	r23, 0xFF	; 255
    1602:	ce 01       	movw	r24, r28
    1604:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <_ZN3TFT10fillScreenEj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1608:	2f ef       	ldi	r18, 0xFF	; 255
    160a:	89 e6       	ldi	r24, 0x69	; 105
    160c:	98 e1       	ldi	r25, 0x18	; 24
    160e:	21 50       	subi	r18, 0x01	; 1
    1610:	80 40       	sbci	r24, 0x00	; 0
    1612:	90 40       	sbci	r25, 0x00	; 0
    1614:	e1 f7       	brne	.-8      	; 0x160e <_ZN4Game5titleEv+0x36>
    1616:	00 c0       	rjmp	.+0      	; 0x1618 <_ZN4Game5titleEv+0x40>
    1618:	00 00       	nop

  _delay_ms(500);
  drawBitmap(8, 70, 304, 96, logoAtmel, BLACK, RED, BLUE, WHITE);
    161a:	8f ef       	ldi	r24, 0xFF	; 255
    161c:	8f 93       	push	r24
    161e:	8f 93       	push	r24
    1620:	0f 2e       	mov	r0, r31
    1622:	ff e1       	ldi	r31, 0x1F	; 31
    1624:	8f 2e       	mov	r8, r31
    1626:	91 2c       	mov	r9, r1
    1628:	f0 2d       	mov	r31, r0
    162a:	0f 2e       	mov	r0, r31
    162c:	a1 2c       	mov	r10, r1
    162e:	f8 ef       	ldi	r31, 0xF8	; 248
    1630:	bf 2e       	mov	r11, r31
    1632:	f0 2d       	mov	r31, r0
    1634:	c1 2c       	mov	r12, r1
    1636:	d1 2c       	mov	r13, r1
    1638:	0f 2e       	mov	r0, r31
    163a:	f8 e6       	ldi	r31, 0x68	; 104
    163c:	ef 2e       	mov	r14, r31
    163e:	f3 e0       	ldi	r31, 0x03	; 3
    1640:	ff 2e       	mov	r15, r31
    1642:	f0 2d       	mov	r31, r0
    1644:	00 e6       	ldi	r16, 0x60	; 96
    1646:	10 e0       	ldi	r17, 0x00	; 0
    1648:	20 e3       	ldi	r18, 0x30	; 48
    164a:	31 e0       	ldi	r19, 0x01	; 1
    164c:	46 e4       	ldi	r20, 0x46	; 70
    164e:	50 e0       	ldi	r21, 0x00	; 0
    1650:	68 e0       	ldi	r22, 0x08	; 8
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	ce 01       	movw	r24, r28
    1656:	0e 94 1d 10 	call	0x203a	; 0x203a <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
    165a:	2f ef       	ldi	r18, 0xFF	; 255
    165c:	8b e7       	ldi	r24, 0x7B	; 123
    165e:	92 e9       	ldi	r25, 0x92	; 146
    1660:	21 50       	subi	r18, 0x01	; 1
    1662:	80 40       	sbci	r24, 0x00	; 0
    1664:	90 40       	sbci	r25, 0x00	; 0
    1666:	e1 f7       	brne	.-8      	; 0x1660 <_ZN4Game5titleEv+0x88>
    1668:	00 c0       	rjmp	.+0      	; 0x166a <_ZN4Game5titleEv+0x92>
    166a:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
    166c:	60 e0       	ldi	r22, 0x00	; 0
    166e:	70 e0       	ldi	r23, 0x00	; 0
    1670:	ce 01       	movw	r24, r28
    1672:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <_ZN3TFT10fillScreenEj>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
    1676:	88 e6       	ldi	r24, 0x68	; 104
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	9d 83       	std	Y+5, r25	; 0x05
    167c:	8c 83       	std	Y+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
    167e:	1f 82       	std	Y+7, r1	; 0x07
    1680:	1e 82       	std	Y+6, r1	; 0x06
    1682:	0f ef       	ldi	r16, 0xFF	; 255
    1684:	1f ef       	ldi	r17, 0xFF	; 255
    1686:	19 87       	std	Y+9, r17	; 0x09
    1688:	08 87       	std	Y+8, r16	; 0x08
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(30, 70, "Hello, World!");
    168a:	21 e0       	ldi	r18, 0x01	; 1
    168c:	31 e0       	ldi	r19, 0x01	; 1
    168e:	46 e4       	ldi	r20, 0x46	; 70
    1690:	50 e0       	ldi	r21, 0x00	; 0
    1692:	6e e1       	ldi	r22, 0x1E	; 30
    1694:	70 e0       	ldi	r23, 0x00	; 0
    1696:	ce 01       	movw	r24, r28
    1698:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN4Font5printEiiPKc>
    169c:	2f ef       	ldi	r18, 0xFF	; 255
    169e:	83 ed       	ldi	r24, 0xD3	; 211
    16a0:	90 e3       	ldi	r25, 0x30	; 48
    16a2:	21 50       	subi	r18, 0x01	; 1
    16a4:	80 40       	sbci	r24, 0x00	; 0
    16a6:	90 40       	sbci	r25, 0x00	; 0
    16a8:	e1 f7       	brne	.-8      	; 0x16a2 <_ZN4Game5titleEv+0xca>
    16aa:	00 c0       	rjmp	.+0      	; 0x16ac <_ZN4Game5titleEv+0xd4>
    16ac:	00 00       	nop
    16ae:	1f 82       	std	Y+7, r1	; 0x07
    16b0:	1e 82       	std	Y+6, r1	; 0x06
    16b2:	8f ef       	ldi	r24, 0xFF	; 255
    16b4:	97 e0       	ldi	r25, 0x07	; 7
    16b6:	99 87       	std	Y+9, r25	; 0x09
    16b8:	88 87       	std	Y+8, r24	; 0x08
  _delay_ms(1000);

  setColor(BLACK, CYAN);
  print(30, 120, "And Welcome to");
    16ba:	2f e0       	ldi	r18, 0x0F	; 15
    16bc:	31 e0       	ldi	r19, 0x01	; 1
    16be:	48 e7       	ldi	r20, 0x78	; 120
    16c0:	50 e0       	ldi	r21, 0x00	; 0
    16c2:	6e e1       	ldi	r22, 0x1E	; 30
    16c4:	70 e0       	ldi	r23, 0x00	; 0
    16c6:	ce 01       	movw	r24, r28
    16c8:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN4Font5printEiiPKc>
    16cc:	1f 82       	std	Y+7, r1	; 0x07
    16ce:	1e 82       	std	Y+6, r1	; 0x06
    16d0:	80 e0       	ldi	r24, 0x00	; 0
    16d2:	98 ef       	ldi	r25, 0xF8	; 248
    16d4:	99 87       	std	Y+9, r25	; 0x09
    16d6:	88 87       	std	Y+8, r24	; 0x08
  setColor(BLACK, RED);
  print(30, 136, "Atmega Game (^O^)");
    16d8:	2e e1       	ldi	r18, 0x1E	; 30
    16da:	31 e0       	ldi	r19, 0x01	; 1
    16dc:	48 e8       	ldi	r20, 0x88	; 136
    16de:	50 e0       	ldi	r21, 0x00	; 0
    16e0:	6e e1       	ldi	r22, 0x1E	; 30
    16e2:	70 e0       	ldi	r23, 0x00	; 0
    16e4:	ce 01       	movw	r24, r28
    16e6:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN4Font5printEiiPKc>
    16ea:	2f ef       	ldi	r18, 0xFF	; 255
    16ec:	83 e2       	ldi	r24, 0x23	; 35
    16ee:	94 ef       	ldi	r25, 0xF4	; 244
    16f0:	21 50       	subi	r18, 0x01	; 1
    16f2:	80 40       	sbci	r24, 0x00	; 0
    16f4:	90 40       	sbci	r25, 0x00	; 0
    16f6:	e1 f7       	brne	.-8      	; 0x16f0 <_ZN4Game5titleEv+0x118>
    16f8:	00 c0       	rjmp	.+0      	; 0x16fa <_ZN4Game5titleEv+0x122>
    16fa:	00 00       	nop
  _delay_ms(5000);

  fillScreen(BLACK);
    16fc:	60 e0       	ldi	r22, 0x00	; 0
    16fe:	70 e0       	ldi	r23, 0x00	; 0
    1700:	ce 01       	movw	r24, r28
    1702:	0e 94 9f 0f 	call	0x1f3e	; 0x1f3e <_ZN3TFT10fillScreenEj>
    1706:	1f 82       	std	Y+7, r1	; 0x07
    1708:	1e 82       	std	Y+6, r1	; 0x06
    170a:	19 87       	std	Y+9, r17	; 0x09
    170c:	08 87       	std	Y+8, r16	; 0x08
  setColor(BLACK, WHITE);
  print(16, 16, "Time:");
    170e:	20 e3       	ldi	r18, 0x30	; 48
    1710:	31 e0       	ldi	r19, 0x01	; 1
    1712:	40 e1       	ldi	r20, 0x10	; 16
    1714:	50 e0       	ldi	r21, 0x00	; 0
    1716:	60 e1       	ldi	r22, 0x10	; 16
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	ce 01       	movw	r24, r28
    171c:	0e 94 97 09 	call	0x132e	; 0x132e <_ZN4Font5printEiiPKc>
  fillRect(0, 180, 320, 60, WHITE);
    1720:	ee 24       	eor	r14, r14
    1722:	ea 94       	dec	r14
    1724:	fe 2c       	mov	r15, r14
    1726:	0c e3       	ldi	r16, 0x3C	; 60
    1728:	10 e0       	ldi	r17, 0x00	; 0
    172a:	20 e4       	ldi	r18, 0x40	; 64
    172c:	31 e0       	ldi	r19, 0x01	; 1
    172e:	44 eb       	ldi	r20, 0xB4	; 180
    1730:	50 e0       	ldi	r21, 0x00	; 0
    1732:	60 e0       	ldi	r22, 0x00	; 0
    1734:	70 e0       	ldi	r23, 0x00	; 0
    1736:	ce 01       	movw	r24, r28
    1738:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <_ZN3TFT8fillRectEiiiij>
}
    173c:	0f 90       	pop	r0
    173e:	0f 90       	pop	r0
    1740:	df 91       	pop	r29
    1742:	cf 91       	pop	r28
    1744:	1f 91       	pop	r17
    1746:	0f 91       	pop	r16
    1748:	ff 90       	pop	r15
    174a:	ef 90       	pop	r14
    174c:	df 90       	pop	r13
    174e:	cf 90       	pop	r12
    1750:	bf 90       	pop	r11
    1752:	af 90       	pop	r10
    1754:	9f 90       	pop	r9
    1756:	8f 90       	pop	r8
    1758:	08 95       	ret

0000175a <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
    175a:	cf 93       	push	r28
    175c:	df 93       	push	r29
    175e:	cd b7       	in	r28, 0x3d	; 61
    1760:	de b7       	in	r29, 0x3e	; 62
    1762:	66 97       	sbiw	r28, 0x16	; 22
    1764:	0f b6       	in	r0, 0x3f	; 63
    1766:	f8 94       	cli
    1768:	de bf       	out	0x3e, r29	; 62
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	cd bf       	out	0x3d, r28	; 61
    176e:	7c 01       	movw	r14, r24
    1770:	2f ef       	ldi	r18, 0xFF	; 255
    1772:	81 ee       	ldi	r24, 0xE1	; 225
    1774:	94 e0       	ldi	r25, 0x04	; 4
    1776:	21 50       	subi	r18, 0x01	; 1
    1778:	80 40       	sbci	r24, 0x00	; 0
    177a:	90 40       	sbci	r25, 0x00	; 0
    177c:	e1 f7       	brne	.-8      	; 0x1776 <_ZN4Game5startEv+0x1c>
    177e:	00 c0       	rjmp	.+0      	; 0x1780 <_ZN4Game5startEv+0x26>
    1780:	00 00       	nop
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    1782:	80 ef       	ldi	r24, 0xF0	; 240
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	9e 87       	std	Y+14, r25	; 0x0e
    1788:	8d 87       	std	Y+13, r24	; 0x0d
    178a:	80 e4       	ldi	r24, 0x40	; 64
    178c:	91 e0       	ldi	r25, 0x01	; 1
    178e:	98 8b       	std	Y+16, r25	; 0x10
    1790:	8f 87       	std	Y+15, r24	; 0x0f
  void running(void);
  void jumping(void);
  void dead(void);

public:
  Player() : TFT() { mIs_Up = false; mIs_Jump = false; mIs_Reset = false;  }
    1792:	1e 8a       	std	Y+22, r1	; 0x16
    1794:	1d 8a       	std	Y+21, r1	; 0x15
    1796:	1c 8a       	std	Y+20, r1	; 0x14
  _delay_ms(100);

  Frame frame;
  Player user;

  Frame::secondTime = 0;
    1798:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <_ZN5Frame10secondTimeE+0x1>
    179c:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <_ZN5Frame10secondTimeE>
  frame.init();
    17a0:	ce 01       	movw	r24, r28
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	0e 94 ce 0a 	call	0x159c	; 0x159c <_ZN5Frame4initEv>

  while (1)
  {
    frame.update();
    17a8:	ce 01       	movw	r24, r28
    17aa:	01 96       	adiw	r24, 0x01	; 1
    17ac:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <_ZN5Frame6updateEv>
    user.startPlayer();
    17b0:	ce 01       	movw	r24, r28
    17b2:	0d 96       	adiw	r24, 0x0d	; 13
    17b4:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <_ZN6Player11startPlayerEv>
    print(100, 16, Frame::secondTime);
    17b8:	00 91 47 01 	lds	r16, 0x0147	; 0x800147 <_ZN5Frame10secondTimeE>
    17bc:	10 91 48 01 	lds	r17, 0x0148	; 0x800148 <_ZN5Frame10secondTimeE+0x1>
    17c0:	20 e0       	ldi	r18, 0x00	; 0
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	40 e1       	ldi	r20, 0x10	; 16
    17c6:	50 e0       	ldi	r21, 0x00	; 0
    17c8:	64 e6       	ldi	r22, 0x64	; 100
    17ca:	70 e0       	ldi	r23, 0x00	; 0
    17cc:	c7 01       	movw	r24, r14
    17ce:	0e 94 bd 09 	call	0x137a	; 0x137a <_ZN4Font5printEiim>
    17d2:	ea cf       	rjmp	.-44     	; 0x17a8 <_ZN4Game5startEv+0x4e>

000017d4 <_ZN6Player7runningEv>:
/*----------------------------------------//
                Player Dead
//----------------------------------------*/

void Player::dead(void)
{
    17d4:	5f 92       	push	r5
    17d6:	6f 92       	push	r6
    17d8:	7f 92       	push	r7
    17da:	8f 92       	push	r8
    17dc:	9f 92       	push	r9
    17de:	af 92       	push	r10
    17e0:	bf 92       	push	r11
    17e2:	cf 92       	push	r12
    17e4:	df 92       	push	r13
    17e6:	ef 92       	push	r14
    17e8:	ff 92       	push	r15
    17ea:	0f 93       	push	r16
    17ec:	1f 93       	push	r17
    17ee:	cf 93       	push	r28
    17f0:	df 93       	push	r29
    17f2:	3c 01       	movw	r6, r24
    17f4:	c0 e0       	ldi	r28, 0x00	; 0
    17f6:	d0 e0       	ldi	r29, 0x00	; 0
    17f8:	dd 24       	eor	r13, r13
    17fa:	da 94       	dec	r13
    17fc:	0f 2e       	mov	r0, r31
    17fe:	f8 ef       	ldi	r31, 0xF8	; 248
    1800:	5f 2e       	mov	r5, r31
    1802:	f0 2d       	mov	r31, r0
    1804:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <_ZN5Frame9sixFramesE>
    1808:	08 2e       	mov	r0, r24
    180a:	00 0c       	add	r0, r0
    180c:	99 0b       	sbc	r25, r25
    180e:	8c 17       	cp	r24, r28
    1810:	9d 07       	cpc	r25, r29
    1812:	09 f5       	brne	.+66     	; 0x1856 <_ZN6Player7runningEv+0x82>
    1814:	df 92       	push	r13
    1816:	df 92       	push	r13
    1818:	5f 92       	push	r5
    181a:	1f 92       	push	r1
    181c:	0f 2e       	mov	r0, r31
    181e:	81 2c       	mov	r8, r1
    1820:	f8 e7       	ldi	r31, 0x78	; 120
    1822:	9f 2e       	mov	r9, r31
    1824:	f0 2d       	mov	r31, r0
    1826:	a1 2c       	mov	r10, r1
    1828:	b1 2c       	mov	r11, r1
    182a:	cc 2e       	mov	r12, r28
    182c:	0f 2e       	mov	r0, r31
    182e:	f8 e9       	ldi	r31, 0x98	; 152
    1830:	ef 2e       	mov	r14, r31
    1832:	fe e0       	ldi	r31, 0x0E	; 14
    1834:	ff 2e       	mov	r15, r31
    1836:	f0 2d       	mov	r31, r0
    1838:	08 e2       	ldi	r16, 0x28	; 40
    183a:	10 e0       	ldi	r17, 0x00	; 0
    183c:	28 e2       	ldi	r18, 0x28	; 40
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	4c e8       	ldi	r20, 0x8C	; 140
    1842:	50 e0       	ldi	r21, 0x00	; 0
    1844:	6c e3       	ldi	r22, 0x3C	; 60
    1846:	70 e0       	ldi	r23, 0x00	; 0
    1848:	c3 01       	movw	r24, r6
    184a:	0e 94 ef 10 	call	0x21de	; 0x21de <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>
    184e:	0f 90       	pop	r0
    1850:	0f 90       	pop	r0
    1852:	0f 90       	pop	r0
    1854:	0f 90       	pop	r0
    1856:	21 96       	adiw	r28, 0x01	; 1
    1858:	c6 30       	cpi	r28, 0x06	; 6
    185a:	d1 05       	cpc	r29, r1
    185c:	99 f6       	brne	.-90     	; 0x1804 <_ZN6Player7runningEv+0x30>
    185e:	df 91       	pop	r29
    1860:	cf 91       	pop	r28
    1862:	1f 91       	pop	r17
    1864:	0f 91       	pop	r16
    1866:	ff 90       	pop	r15
    1868:	ef 90       	pop	r14
    186a:	df 90       	pop	r13
    186c:	cf 90       	pop	r12
    186e:	bf 90       	pop	r11
    1870:	af 90       	pop	r10
    1872:	9f 90       	pop	r9
    1874:	8f 90       	pop	r8
    1876:	7f 90       	pop	r7
    1878:	6f 90       	pop	r6
    187a:	5f 90       	pop	r5
    187c:	08 95       	ret

0000187e <_ZN6Player7jumpingEv>:
    187e:	2f 92       	push	r2
    1880:	3f 92       	push	r3
    1882:	4f 92       	push	r4
    1884:	5f 92       	push	r5
    1886:	6f 92       	push	r6
    1888:	7f 92       	push	r7
    188a:	8f 92       	push	r8
    188c:	9f 92       	push	r9
    188e:	af 92       	push	r10
    1890:	bf 92       	push	r11
    1892:	cf 92       	push	r12
    1894:	df 92       	push	r13
    1896:	ef 92       	push	r14
    1898:	ff 92       	push	r15
    189a:	0f 93       	push	r16
    189c:	1f 93       	push	r17
    189e:	cf 93       	push	r28
    18a0:	df 93       	push	r29
    18a2:	3c 01       	movw	r6, r24
    18a4:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <_ZN5Frame7oneTickE>
    18a8:	81 30       	cpi	r24, 0x01	; 1
    18aa:	09 f0       	breq	.+2      	; 0x18ae <_ZN6Player7jumpingEv+0x30>
    18ac:	db c0       	rjmp	.+438    	; 0x1a64 <_ZN6Player7jumpingEv+0x1e6>
    18ae:	f3 01       	movw	r30, r6
    18b0:	86 81       	ldd	r24, Z+6	; 0x06
    18b2:	82 33       	cpi	r24, 0x32	; 50
    18b4:	5c f0       	brlt	.+22     	; 0x18cc <_ZN6Player7jumpingEv+0x4e>
    18b6:	95 81       	ldd	r25, Z+5	; 0x05
    18b8:	9f 5f       	subi	r25, 0xFF	; 255
    18ba:	95 83       	std	Z+5, r25	; 0x05
    18bc:	94 30       	cpi	r25, 0x04	; 4
    18be:	19 f0       	breq	.+6      	; 0x18c6 <_ZN6Player7jumpingEv+0x48>
    18c0:	86 50       	subi	r24, 0x06	; 6
    18c2:	86 83       	std	Z+6, r24	; 0x06
    18c4:	03 c0       	rjmp	.+6      	; 0x18cc <_ZN6Player7jumpingEv+0x4e>
    18c6:	f3 01       	movw	r30, r6
    18c8:	11 86       	std	Z+9, r1	; 0x09
    18ca:	08 c0       	rjmp	.+16     	; 0x18dc <_ZN6Player7jumpingEv+0x5e>
    18cc:	f3 01       	movw	r30, r6
    18ce:	81 85       	ldd	r24, Z+9	; 0x09
    18d0:	88 23       	and	r24, r24
    18d2:	21 f0       	breq	.+8      	; 0x18dc <_ZN6Player7jumpingEv+0x5e>
    18d4:	86 81       	ldd	r24, Z+6	; 0x06
    18d6:	8a 5f       	subi	r24, 0xFA	; 250
    18d8:	86 83       	std	Z+6, r24	; 0x06
    18da:	28 c0       	rjmp	.+80     	; 0x192c <_ZN6Player7jumpingEv+0xae>
    18dc:	f3 01       	movw	r30, r6
    18de:	86 81       	ldd	r24, Z+6	; 0x06
    18e0:	86 50       	subi	r24, 0x06	; 6
    18e2:	86 83       	std	Z+6, r24	; 0x06
    18e4:	18 16       	cp	r1, r24
    18e6:	9c f0       	brlt	.+38     	; 0x190e <_ZN6Player7jumpingEv+0x90>
    18e8:	e1 2c       	mov	r14, r1
    18ea:	f1 2c       	mov	r15, r1
    18ec:	09 e1       	ldi	r16, 0x19	; 25
    18ee:	10 e0       	ldi	r17, 0x00	; 0
    18f0:	28 e2       	ldi	r18, 0x28	; 40
    18f2:	30 e0       	ldi	r19, 0x00	; 0
    18f4:	43 e7       	ldi	r20, 0x73	; 115
    18f6:	50 e0       	ldi	r21, 0x00	; 0
    18f8:	6c e3       	ldi	r22, 0x3C	; 60
    18fa:	70 e0       	ldi	r23, 0x00	; 0
    18fc:	c3 01       	movw	r24, r6
    18fe:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <_ZN3TFT8fillRectEiiiij>
    1902:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <_ZN2SW10interrupt0E>
    1906:	f3 01       	movw	r30, r6
    1908:	10 86       	std	Z+8, r1	; 0x08
    190a:	17 82       	std	Z+7, r1	; 0x07
    190c:	b1 c0       	rjmp	.+354    	; 0x1a70 <_ZN6Player7jumpingEv+0x1f2>
    190e:	c0 e0       	ldi	r28, 0x00	; 0
    1910:	d0 e0       	ldi	r29, 0x00	; 0
    1912:	0f 2e       	mov	r0, r31
    1914:	fa e7       	ldi	r31, 0x7A	; 122
    1916:	4f 2e       	mov	r4, r31
    1918:	51 2c       	mov	r5, r1
    191a:	f0 2d       	mov	r31, r0
    191c:	dd 24       	eor	r13, r13
    191e:	da 94       	dec	r13
    1920:	0f 2e       	mov	r0, r31
    1922:	f2 e7       	ldi	r31, 0x72	; 114
    1924:	2f 2e       	mov	r2, r31
    1926:	31 2c       	mov	r3, r1
    1928:	f0 2d       	mov	r31, r0
    192a:	55 c0       	rjmp	.+170    	; 0x19d6 <_ZN6Player7jumpingEv+0x158>
    192c:	c0 e0       	ldi	r28, 0x00	; 0
    192e:	d0 e0       	ldi	r29, 0x00	; 0
    1930:	0f 2e       	mov	r0, r31
    1932:	fa e7       	ldi	r31, 0x7A	; 122
    1934:	4f 2e       	mov	r4, r31
    1936:	51 2c       	mov	r5, r1
    1938:	f0 2d       	mov	r31, r0
    193a:	dd 24       	eor	r13, r13
    193c:	da 94       	dec	r13
    193e:	0f 2e       	mov	r0, r31
    1940:	fc ea       	ldi	r31, 0xAC	; 172
    1942:	2f 2e       	mov	r2, r31
    1944:	31 2c       	mov	r3, r1
    1946:	f0 2d       	mov	r31, r0
    1948:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <_ZN5Frame10fourFramesE>
    194c:	08 2e       	mov	r0, r24
    194e:	00 0c       	add	r0, r0
    1950:	99 0b       	sbc	r25, r25
    1952:	8c 17       	cp	r24, r28
    1954:	9d 07       	cpc	r25, r29
    1956:	c9 f5       	brne	.+114    	; 0x19ca <_ZN6Player7jumpingEv+0x14c>
    1958:	f3 01       	movw	r30, r6
    195a:	86 81       	ldd	r24, Z+6	; 0x06
    195c:	a2 01       	movw	r20, r4
    195e:	48 1b       	sub	r20, r24
    1960:	51 09       	sbc	r21, r1
    1962:	87 fd       	sbrc	r24, 7
    1964:	53 95       	inc	r21
    1966:	df 92       	push	r13
    1968:	df 92       	push	r13
    196a:	f8 ef       	ldi	r31, 0xF8	; 248
    196c:	ff 93       	push	r31
    196e:	1f 92       	push	r1
    1970:	0f 2e       	mov	r0, r31
    1972:	81 2c       	mov	r8, r1
    1974:	f8 e7       	ldi	r31, 0x78	; 120
    1976:	9f 2e       	mov	r9, r31
    1978:	f0 2d       	mov	r31, r0
    197a:	a1 2c       	mov	r10, r1
    197c:	b1 2c       	mov	r11, r1
    197e:	cc 2e       	mov	r12, r28
    1980:	0f 2e       	mov	r0, r31
    1982:	f8 e0       	ldi	r31, 0x08	; 8
    1984:	ef 2e       	mov	r14, r31
    1986:	fd e0       	ldi	r31, 0x0D	; 13
    1988:	ff 2e       	mov	r15, r31
    198a:	f0 2d       	mov	r31, r0
    198c:	02 e3       	ldi	r16, 0x32	; 50
    198e:	10 e0       	ldi	r17, 0x00	; 0
    1990:	20 e2       	ldi	r18, 0x20	; 32
    1992:	30 e0       	ldi	r19, 0x00	; 0
    1994:	6c e3       	ldi	r22, 0x3C	; 60
    1996:	70 e0       	ldi	r23, 0x00	; 0
    1998:	c3 01       	movw	r24, r6
    199a:	0e 94 ef 10 	call	0x21de	; 0x21de <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>
    199e:	f3 01       	movw	r30, r6
    19a0:	86 81       	ldd	r24, Z+6	; 0x06
    19a2:	a1 01       	movw	r20, r2
    19a4:	48 1b       	sub	r20, r24
    19a6:	51 09       	sbc	r21, r1
    19a8:	87 fd       	sbrc	r24, 7
    19aa:	53 95       	inc	r21
    19ac:	e1 2c       	mov	r14, r1
    19ae:	f1 2c       	mov	r15, r1
    19b0:	08 e0       	ldi	r16, 0x08	; 8
    19b2:	10 e0       	ldi	r17, 0x00	; 0
    19b4:	20 e2       	ldi	r18, 0x20	; 32
    19b6:	30 e0       	ldi	r19, 0x00	; 0
    19b8:	6c e3       	ldi	r22, 0x3C	; 60
    19ba:	70 e0       	ldi	r23, 0x00	; 0
    19bc:	c3 01       	movw	r24, r6
    19be:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <_ZN3TFT8fillRectEiiiij>
    19c2:	0f 90       	pop	r0
    19c4:	0f 90       	pop	r0
    19c6:	0f 90       	pop	r0
    19c8:	0f 90       	pop	r0
    19ca:	21 96       	adiw	r28, 0x01	; 1
    19cc:	c4 30       	cpi	r28, 0x04	; 4
    19ce:	d1 05       	cpc	r29, r1
    19d0:	09 f0       	breq	.+2      	; 0x19d4 <_ZN6Player7jumpingEv+0x156>
    19d2:	ba cf       	rjmp	.-140    	; 0x1948 <_ZN6Player7jumpingEv+0xca>
    19d4:	4d c0       	rjmp	.+154    	; 0x1a70 <_ZN6Player7jumpingEv+0x1f2>
    19d6:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <_ZN5Frame10fourFramesE>
    19da:	08 2e       	mov	r0, r24
    19dc:	00 0c       	add	r0, r0
    19de:	99 0b       	sbc	r25, r25
    19e0:	8c 17       	cp	r24, r28
    19e2:	9d 07       	cpc	r25, r29
    19e4:	c9 f5       	brne	.+114    	; 0x1a58 <_ZN6Player7jumpingEv+0x1da>
    19e6:	f3 01       	movw	r30, r6
    19e8:	86 81       	ldd	r24, Z+6	; 0x06
    19ea:	a2 01       	movw	r20, r4
    19ec:	48 1b       	sub	r20, r24
    19ee:	51 09       	sbc	r21, r1
    19f0:	87 fd       	sbrc	r24, 7
    19f2:	53 95       	inc	r21
    19f4:	df 92       	push	r13
    19f6:	df 92       	push	r13
    19f8:	f8 ef       	ldi	r31, 0xF8	; 248
    19fa:	ff 93       	push	r31
    19fc:	1f 92       	push	r1
    19fe:	0f 2e       	mov	r0, r31
    1a00:	81 2c       	mov	r8, r1
    1a02:	f8 e7       	ldi	r31, 0x78	; 120
    1a04:	9f 2e       	mov	r9, r31
    1a06:	f0 2d       	mov	r31, r0
    1a08:	a1 2c       	mov	r10, r1
    1a0a:	b1 2c       	mov	r11, r1
    1a0c:	cc 2e       	mov	r12, r28
    1a0e:	0f 2e       	mov	r0, r31
    1a10:	f8 e8       	ldi	r31, 0x88	; 136
    1a12:	ef 2e       	mov	r14, r31
    1a14:	fa e0       	ldi	r31, 0x0A	; 10
    1a16:	ff 2e       	mov	r15, r31
    1a18:	f0 2d       	mov	r31, r0
    1a1a:	00 e4       	ldi	r16, 0x40	; 64
    1a1c:	10 e0       	ldi	r17, 0x00	; 0
    1a1e:	28 e2       	ldi	r18, 0x28	; 40
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	6c e3       	ldi	r22, 0x3C	; 60
    1a24:	70 e0       	ldi	r23, 0x00	; 0
    1a26:	c3 01       	movw	r24, r6
    1a28:	0e 94 c4 11 	call	0x2388	; 0x2388 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj>
    1a2c:	f3 01       	movw	r30, r6
    1a2e:	86 81       	ldd	r24, Z+6	; 0x06
    1a30:	a1 01       	movw	r20, r2
    1a32:	48 1b       	sub	r20, r24
    1a34:	51 09       	sbc	r21, r1
    1a36:	87 fd       	sbrc	r24, 7
    1a38:	53 95       	inc	r21
    1a3a:	e1 2c       	mov	r14, r1
    1a3c:	f1 2c       	mov	r15, r1
    1a3e:	08 e0       	ldi	r16, 0x08	; 8
    1a40:	10 e0       	ldi	r17, 0x00	; 0
    1a42:	28 e2       	ldi	r18, 0x28	; 40
    1a44:	30 e0       	ldi	r19, 0x00	; 0
    1a46:	6c e3       	ldi	r22, 0x3C	; 60
    1a48:	70 e0       	ldi	r23, 0x00	; 0
    1a4a:	c3 01       	movw	r24, r6
    1a4c:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <_ZN3TFT8fillRectEiiiij>
    1a50:	0f 90       	pop	r0
    1a52:	0f 90       	pop	r0
    1a54:	0f 90       	pop	r0
    1a56:	0f 90       	pop	r0
    1a58:	21 96       	adiw	r28, 0x01	; 1
    1a5a:	c4 30       	cpi	r28, 0x04	; 4
    1a5c:	d1 05       	cpc	r29, r1
    1a5e:	09 f0       	breq	.+2      	; 0x1a62 <_ZN6Player7jumpingEv+0x1e4>
    1a60:	ba cf       	rjmp	.-140    	; 0x19d6 <_ZN6Player7jumpingEv+0x158>
    1a62:	06 c0       	rjmp	.+12     	; 0x1a70 <_ZN6Player7jumpingEv+0x1f2>
    1a64:	f3 01       	movw	r30, r6
    1a66:	81 85       	ldd	r24, Z+9	; 0x09
    1a68:	88 23       	and	r24, r24
    1a6a:	09 f4       	brne	.+2      	; 0x1a6e <_ZN6Player7jumpingEv+0x1f0>
    1a6c:	50 cf       	rjmp	.-352    	; 0x190e <_ZN6Player7jumpingEv+0x90>
    1a6e:	5e cf       	rjmp	.-324    	; 0x192c <_ZN6Player7jumpingEv+0xae>
    1a70:	df 91       	pop	r29
    1a72:	cf 91       	pop	r28
    1a74:	1f 91       	pop	r17
    1a76:	0f 91       	pop	r16
    1a78:	ff 90       	pop	r15
    1a7a:	ef 90       	pop	r14
    1a7c:	df 90       	pop	r13
    1a7e:	cf 90       	pop	r12
    1a80:	bf 90       	pop	r11
    1a82:	af 90       	pop	r10
    1a84:	9f 90       	pop	r9
    1a86:	8f 90       	pop	r8
    1a88:	7f 90       	pop	r7
    1a8a:	6f 90       	pop	r6
    1a8c:	5f 90       	pop	r5
    1a8e:	4f 90       	pop	r4
    1a90:	3f 90       	pop	r3
    1a92:	2f 90       	pop	r2
    1a94:	08 95       	ret

00001a96 <_ZN6Player11startPlayerEv>:
/*----------------------------------------//
                Start Player
//----------------------------------------*/

void Player::startPlayer(void)
{
    1a96:	ef 92       	push	r14
    1a98:	ff 92       	push	r15
    1a9a:	0f 93       	push	r16
    1a9c:	1f 93       	push	r17
    1a9e:	cf 93       	push	r28
    1aa0:	df 93       	push	r29
    1aa2:	ec 01       	movw	r28, r24

  if (SW::interrupt0 == ON)
    1aa4:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <_ZN2SW10interrupt0E>
    1aa8:	88 23       	and	r24, r24
    1aaa:	b9 f0       	breq	.+46     	; 0x1ada <_ZN6Player11startPlayerEv+0x44>
  {
    if (mIs_Reset == false)
    1aac:	8f 81       	ldd	r24, Y+7	; 0x07
    1aae:	81 11       	cpse	r24, r1
    1ab0:	14 c0       	rjmp	.+40     	; 0x1ada <_ZN6Player11startPlayerEv+0x44>
    {
      fillRect(60, 140, 40, 40, BLACK);
    1ab2:	e1 2c       	mov	r14, r1
    1ab4:	f1 2c       	mov	r15, r1
    1ab6:	08 e2       	ldi	r16, 0x28	; 40
    1ab8:	10 e0       	ldi	r17, 0x00	; 0
    1aba:	28 e2       	ldi	r18, 0x28	; 40
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	4c e8       	ldi	r20, 0x8C	; 140
    1ac0:	50 e0       	ldi	r21, 0x00	; 0
    1ac2:	6c e3       	ldi	r22, 0x3C	; 60
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	ce 01       	movw	r24, r28
    1ac8:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <_ZN3TFT8fillRectEiiiij>
      m_JumpTemp = 0;
    1acc:	1d 82       	std	Y+5, r1	; 0x05
      m_JumpHeight = 0;
    1ace:	1e 82       	std	Y+6, r1	; 0x06
      mIs_Up = true;
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	89 87       	std	Y+9, r24	; 0x09
      mIs_Jump = true;
    1ad4:	88 87       	std	Y+8, r24	; 0x08
      mIs_Reset = true;
    1ad6:	8f 83       	std	Y+7, r24	; 0x07
    1ad8:	07 c0       	rjmp	.+14     	; 0x1ae8 <_ZN6Player11startPlayerEv+0x52>
    }
  }
  

  if (mIs_Jump == false)
    1ada:	88 85       	ldd	r24, Y+8	; 0x08
    1adc:	81 11       	cpse	r24, r1
    1ade:	04 c0       	rjmp	.+8      	; 0x1ae8 <_ZN6Player11startPlayerEv+0x52>
  {
    running();
    1ae0:	ce 01       	movw	r24, r28
    1ae2:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <_ZN6Player7runningEv>
    1ae6:	03 c0       	rjmp	.+6      	; 0x1aee <_ZN6Player11startPlayerEv+0x58>
  }
  
  else
  {
    jumping();
    1ae8:	ce 01       	movw	r24, r28
    1aea:	0e 94 3f 0c 	call	0x187e	; 0x187e <_ZN6Player7jumpingEv>
  }

    1aee:	df 91       	pop	r29
    1af0:	cf 91       	pop	r28
    1af2:	1f 91       	pop	r17
    1af4:	0f 91       	pop	r16
    1af6:	ff 90       	pop	r15
    1af8:	ef 90       	pop	r14
    1afa:	08 95       	ret

00001afc <_ZN3MCU7Setting8beginPinEaa>:
  }

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    1afc:	81 30       	cpi	r24, 0x01	; 1
    1afe:	89 f0       	breq	.+34     	; 0x1b22 <_ZN3MCU7Setting8beginPinEaa+0x26>
    1b00:	82 30       	cpi	r24, 0x02	; 2
    1b02:	e1 f0       	breq	.+56     	; 0x1b3c <_ZN3MCU7Setting8beginPinEaa+0x40>
    1b04:	81 11       	cpse	r24, r1
    1b06:	26 c0       	rjmp	.+76     	; 0x1b54 <_ZN3MCU7Setting8beginPinEaa+0x58>
    1b08:	24 b1       	in	r18, 0x04	; 4
    1b0a:	81 e0       	ldi	r24, 0x01	; 1
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	02 c0       	rjmp	.+4      	; 0x1b14 <_ZN3MCU7Setting8beginPinEaa+0x18>
    1b10:	88 0f       	add	r24, r24
    1b12:	99 1f       	adc	r25, r25
    1b14:	6a 95       	dec	r22
    1b16:	e2 f7       	brpl	.-8      	; 0x1b10 <_ZN3MCU7Setting8beginPinEaa+0x14>
    1b18:	82 2b       	or	r24, r18
    1b1a:	84 b9       	out	0x04, r24	; 4
    1b1c:	85 b1       	in	r24, 0x05	; 5
    1b1e:	85 b9       	out	0x05, r24	; 5
    1b20:	08 95       	ret
    1b22:	27 b1       	in	r18, 0x07	; 7
    1b24:	81 e0       	ldi	r24, 0x01	; 1
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	02 c0       	rjmp	.+4      	; 0x1b2e <_ZN3MCU7Setting8beginPinEaa+0x32>
    1b2a:	88 0f       	add	r24, r24
    1b2c:	99 1f       	adc	r25, r25
    1b2e:	6a 95       	dec	r22
    1b30:	e2 f7       	brpl	.-8      	; 0x1b2a <_ZN3MCU7Setting8beginPinEaa+0x2e>
    1b32:	82 2b       	or	r24, r18
    1b34:	87 b9       	out	0x07, r24	; 7
    1b36:	88 b1       	in	r24, 0x08	; 8
    1b38:	88 b9       	out	0x08, r24	; 8
    1b3a:	08 95       	ret
    1b3c:	2a b1       	in	r18, 0x0a	; 10
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	02 c0       	rjmp	.+4      	; 0x1b48 <_ZN3MCU7Setting8beginPinEaa+0x4c>
    1b44:	88 0f       	add	r24, r24
    1b46:	99 1f       	adc	r25, r25
    1b48:	6a 95       	dec	r22
    1b4a:	e2 f7       	brpl	.-8      	; 0x1b44 <_ZN3MCU7Setting8beginPinEaa+0x48>
    1b4c:	82 2b       	or	r24, r18
    1b4e:	8a b9       	out	0x0a, r24	; 10
    1b50:	8b b1       	in	r24, 0x0b	; 11
    1b52:	8b b9       	out	0x0b, r24	; 11
    1b54:	08 95       	ret

00001b56 <_ZN3MCU7Setting9beginPortEab>:
    1b56:	61 95       	neg	r22
    1b58:	81 30       	cpi	r24, 0x01	; 1
    1b5a:	39 f0       	breq	.+14     	; 0x1b6a <_ZN3MCU7Setting9beginPortEab+0x14>
    1b5c:	82 30       	cpi	r24, 0x02	; 2
    1b5e:	41 f0       	breq	.+16     	; 0x1b70 <_ZN3MCU7Setting9beginPortEab+0x1a>
    1b60:	81 11       	cpse	r24, r1
    1b62:	08 c0       	rjmp	.+16     	; 0x1b74 <_ZN3MCU7Setting9beginPortEab+0x1e>
    1b64:	64 b9       	out	0x04, r22	; 4
    1b66:	15 b8       	out	0x05, r1	; 5
    1b68:	08 95       	ret
    1b6a:	67 b9       	out	0x07, r22	; 7
    1b6c:	18 b8       	out	0x08, r1	; 8
    1b6e:	08 95       	ret
    1b70:	6a b9       	out	0x0a, r22	; 10
    1b72:	1b b8       	out	0x0b, r1	; 11
    1b74:	08 95       	ret

00001b76 <_ZN3MCU7Setting8beginINTEaa>:
    1b76:	9d b3       	in	r25, 0x1d	; 29
    1b78:	21 e0       	ldi	r18, 0x01	; 1
    1b7a:	30 e0       	ldi	r19, 0x00	; 0
    1b7c:	02 c0       	rjmp	.+4      	; 0x1b82 <_ZN3MCU7Setting8beginINTEaa+0xc>
    1b7e:	22 0f       	add	r18, r18
    1b80:	33 1f       	adc	r19, r19
    1b82:	8a 95       	dec	r24
    1b84:	e2 f7       	brpl	.-8      	; 0x1b7e <_ZN3MCU7Setting8beginINTEaa+0x8>
    1b86:	29 2b       	or	r18, r25
    1b88:	2d bb       	out	0x1d, r18	; 29
    1b8a:	61 30       	cpi	r22, 0x01	; 1
    1b8c:	39 f0       	breq	.+14     	; 0x1b9c <_ZN3MCU7Setting8beginINTEaa+0x26>
    1b8e:	62 30       	cpi	r22, 0x02	; 2
    1b90:	49 f0       	breq	.+18     	; 0x1ba4 <_ZN3MCU7Setting8beginINTEaa+0x2e>
    1b92:	61 11       	cpse	r22, r1
    1b94:	0a c0       	rjmp	.+20     	; 0x1baa <_ZN3MCU7Setting8beginINTEaa+0x34>
    1b96:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    1b9a:	08 95       	ret
    1b9c:	8a e0       	ldi	r24, 0x0A	; 10
    1b9e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    1ba2:	08 95       	ret
    1ba4:	8f e0       	ldi	r24, 0x0F	; 15
    1ba6:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    1baa:	08 95       	ret

00001bac <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    1bac:	81 30       	cpi	r24, 0x01	; 1
    1bae:	99 f1       	breq	.+102    	; 0x1c16 <_ZN3MCU7Setting10beginTimerEab+0x6a>
    1bb0:	82 30       	cpi	r24, 0x02	; 2
    1bb2:	b1 f0       	breq	.+44     	; 0x1be0 <_ZN3MCU7Setting10beginTimerEab+0x34>
    1bb4:	81 11       	cpse	r24, r1
    1bb6:	50 c0       	rjmp	.+160    	; 0x1c58 <_ZN3MCU7Setting10beginTimerEab+0xac>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    1bb8:	61 11       	cpse	r22, r1
    1bba:	08 c0       	rjmp	.+16     	; 0x1bcc <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    1bbc:	81 e0       	ldi	r24, 0x01	; 1
    1bbe:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    1bc2:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    1bc4:	85 e0       	ldi	r24, 0x05	; 5
    1bc6:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    1bc8:	16 bc       	out	0x26, r1	; 38
    1bca:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    1bcc:	82 e0       	ldi	r24, 0x02	; 2
    1bce:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    1bd2:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    1bd4:	85 e0       	ldi	r24, 0x05	; 5
    1bd6:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    1bd8:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    1bda:	8f ef       	ldi	r24, 0xFF	; 255
    1bdc:	87 bd       	out	0x27, r24	; 39
    1bde:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    1be0:	61 11       	cpse	r22, r1
    1be2:	0b c0       	rjmp	.+22     	; 0x1bfa <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    1be4:	81 e0       	ldi	r24, 0x01	; 1
    1be6:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    1bea:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    1bee:	84 e0       	ldi	r24, 0x04	; 4
    1bf0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    1bf4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1bf8:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    1bfa:	82 e0       	ldi	r24, 0x02	; 2
    1bfc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    1c00:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    1c04:	84 e0       	ldi	r24, 0x04	; 4
    1c06:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    1c0a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    1c0e:	89 ef       	ldi	r24, 0xF9	; 249
    1c10:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1c14:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    1c16:	61 11       	cpse	r22, r1
    1c18:	0d c0       	rjmp	.+26     	; 0x1c34 <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    1c1a:	81 e0       	ldi	r24, 0x01	; 1
    1c1c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, Normal Mode
    1c20:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x05;
    1c24:	85 e0       	ldi	r24, 0x05	; 5
    1c26:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    1c2a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1c2e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1c32:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    1c34:	82 e0       	ldi	r24, 0x02	; 2
    1c36:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, CTC Mode
    1c3a:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0D;
    1c3e:	8d e0       	ldi	r24, 0x0D	; 13
    1c40:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    1c44:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1c48:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    1c4c:	8d e3       	ldi	r24, 0x3D	; 61
    1c4e:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    1c52:	88 e0       	ldi	r24, 0x08	; 8
    1c54:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1c58:	08 95       	ret

00001c5a <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    1c5a:	85 30       	cpi	r24, 0x05	; 5
    1c5c:	09 f4       	brne	.+2      	; 0x1c60 <_ZN3MCU7Setting8beginPWMEab+0x6>
    1c5e:	5d c0       	rjmp	.+186    	; 0x1d1a <_ZN3MCU7Setting8beginPWMEab+0xc0>
    1c60:	2c f4       	brge	.+10     	; 0x1c6c <_ZN3MCU7Setting8beginPWMEab+0x12>
    1c62:	83 30       	cpi	r24, 0x03	; 3
    1c64:	51 f0       	breq	.+20     	; 0x1c7a <_ZN3MCU7Setting8beginPWMEab+0x20>
    1c66:	84 30       	cpi	r24, 0x04	; 4
    1c68:	c1 f0       	breq	.+48     	; 0x1c9a <_ZN3MCU7Setting8beginPWMEab+0x40>
    1c6a:	08 95       	ret
    1c6c:	87 30       	cpi	r24, 0x07	; 7
    1c6e:	29 f1       	breq	.+74     	; 0x1cba <_ZN3MCU7Setting8beginPWMEab+0x60>
    1c70:	0c f4       	brge	.+2      	; 0x1c74 <_ZN3MCU7Setting8beginPWMEab+0x1a>
    1c72:	6f c0       	rjmp	.+222    	; 0x1d52 <_ZN3MCU7Setting8beginPWMEab+0xf8>
    1c74:	88 30       	cpi	r24, 0x08	; 8
    1c76:	c9 f1       	breq	.+114    	; 0x1cea <_ZN3MCU7Setting8beginPWMEab+0x90>
    1c78:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    1c7a:	61 11       	cpse	r22, r1
    1c7c:	07 c0       	rjmp	.+14     	; 0x1c8c <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    1c7e:	84 b5       	in	r24, 0x24	; 36
    1c80:	81 64       	ori	r24, 0x41	; 65
    1c82:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    1c84:	8c e0       	ldi	r24, 0x0C	; 12
    1c86:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    1c88:	16 bc       	out	0x26, r1	; 38
    1c8a:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    1c8c:	84 b5       	in	r24, 0x24	; 36
    1c8e:	83 64       	ori	r24, 0x43	; 67
    1c90:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    1c92:	8c e0       	ldi	r24, 0x0C	; 12
    1c94:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    1c96:	16 bc       	out	0x26, r1	; 38
    1c98:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    1c9a:	61 11       	cpse	r22, r1
    1c9c:	07 c0       	rjmp	.+14     	; 0x1cac <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    1c9e:	84 b5       	in	r24, 0x24	; 36
    1ca0:	81 61       	ori	r24, 0x11	; 17
    1ca2:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    1ca4:	8c e0       	ldi	r24, 0x0C	; 12
    1ca6:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    1ca8:	16 bc       	out	0x26, r1	; 38
    1caa:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    1cac:	84 b5       	in	r24, 0x24	; 36
    1cae:	83 61       	ori	r24, 0x13	; 19
    1cb0:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    1cb2:	8c e0       	ldi	r24, 0x0C	; 12
    1cb4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    1cb6:	16 bc       	out	0x26, r1	; 38
    1cb8:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    1cba:	61 11       	cpse	r22, r1
    1cbc:	0b c0       	rjmp	.+22     	; 0x1cd4 <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    1cbe:	e0 eb       	ldi	r30, 0xB0	; 176
    1cc0:	f0 e0       	ldi	r31, 0x00	; 0
    1cc2:	80 81       	ld	r24, Z
    1cc4:	81 68       	ori	r24, 0x81	; 129
    1cc6:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    1cc8:	86 e0       	ldi	r24, 0x06	; 6
    1cca:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    1cce:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1cd2:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    1cd4:	e0 eb       	ldi	r30, 0xB0	; 176
    1cd6:	f0 e0       	ldi	r31, 0x00	; 0
    1cd8:	80 81       	ld	r24, Z
    1cda:	83 68       	ori	r24, 0x83	; 131
    1cdc:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    1cde:	86 e0       	ldi	r24, 0x06	; 6
    1ce0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    1ce4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1ce8:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    1cea:	61 11       	cpse	r22, r1
    1cec:	0b c0       	rjmp	.+22     	; 0x1d04 <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    1cee:	e0 eb       	ldi	r30, 0xB0	; 176
    1cf0:	f0 e0       	ldi	r31, 0x00	; 0
    1cf2:	80 81       	ld	r24, Z
    1cf4:	81 62       	ori	r24, 0x21	; 33
    1cf6:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    1cf8:	86 e0       	ldi	r24, 0x06	; 6
    1cfa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    1cfe:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1d02:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    1d04:	e0 eb       	ldi	r30, 0xB0	; 176
    1d06:	f0 e0       	ldi	r31, 0x00	; 0
    1d08:	80 81       	ld	r24, Z
    1d0a:	83 62       	ori	r24, 0x23	; 35
    1d0c:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    1d0e:	86 e0       	ldi	r24, 0x06	; 6
    1d10:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    1d14:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1d18:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    1d1a:	61 11       	cpse	r22, r1
    1d1c:	0d c0       	rjmp	.+26     	; 0x1d38 <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    1d1e:	e0 e8       	ldi	r30, 0x80	; 128
    1d20:	f0 e0       	ldi	r31, 0x00	; 0
    1d22:	80 81       	ld	r24, Z
    1d24:	83 68       	ori	r24, 0x83	; 131
    1d26:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    1d28:	84 e0       	ldi	r24, 0x04	; 4
    1d2a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1d2e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1d32:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1d36:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    1d38:	e0 e8       	ldi	r30, 0x80	; 128
    1d3a:	f0 e0       	ldi	r31, 0x00	; 0
    1d3c:	80 81       	ld	r24, Z
    1d3e:	83 68       	ori	r24, 0x83	; 131
    1d40:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    1d42:	8c e0       	ldi	r24, 0x0C	; 12
    1d44:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1d48:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1d4c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1d50:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    1d52:	61 11       	cpse	r22, r1
    1d54:	0d c0       	rjmp	.+26     	; 0x1d70 <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    1d56:	e0 e8       	ldi	r30, 0x80	; 128
    1d58:	f0 e0       	ldi	r31, 0x00	; 0
    1d5a:	80 81       	ld	r24, Z
    1d5c:	83 62       	ori	r24, 0x23	; 35
    1d5e:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    1d60:	84 e0       	ldi	r24, 0x04	; 4
    1d62:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1d66:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1d6a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1d6e:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    1d70:	e0 e8       	ldi	r30, 0x80	; 128
    1d72:	f0 e0       	ldi	r31, 0x00	; 0
    1d74:	80 81       	ld	r24, Z
    1d76:	83 62       	ori	r24, 0x23	; 35
    1d78:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    1d7a:	8c e0       	ldi	r24, 0x0C	; 12
    1d7c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1d80:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1d84:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1d88:	08 95       	ret

00001d8a <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    1d8a:	80 e5       	ldi	r24, 0x50	; 80
    1d8c:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    1d8e:	81 e0       	ldi	r24, 0x01	; 1
    1d90:	8d bd       	out	0x2d, r24	; 45
    1d92:	08 95       	ret

00001d94 <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    1d94:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    1d96:	0d b4       	in	r0, 0x2d	; 45
    1d98:	07 fe       	sbrs	r0, 7
    1d9a:	fd cf       	rjmp	.-6      	; 0x1d96 <_ZN3SPI7sendBitEh+0x2>
}
    1d9c:	08 95       	ret

00001d9e <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    1d9e:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    1da0:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    1da2:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    1da6:	28 9a       	sbi	0x05, 0	; 5
    1da8:	08 95       	ret

00001daa <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    1daa:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    1dac:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    1dae:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    1db2:	28 9a       	sbi	0x05, 0	; 5
    1db4:	08 95       	ret

00001db6 <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    1db6:	1f 93       	push	r17
    1db8:	cf 93       	push	r28
    1dba:	df 93       	push	r29
    1dbc:	ec 01       	movw	r28, r24
    1dbe:	16 2f       	mov	r17, r22
    1dc0:	67 2f       	mov	r22, r23
  RS_HIGH;
    1dc2:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    1dc4:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    1dc6:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    1dca:	61 2f       	mov	r22, r17
    1dcc:	ce 01       	movw	r24, r28
    1dce:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    1dd2:	28 9a       	sbi	0x05, 0	; 5
}
    1dd4:	df 91       	pop	r29
    1dd6:	cf 91       	pop	r28
    1dd8:	1f 91       	pop	r17
    1dda:	08 95       	ret

00001ddc <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    1ddc:	cf 93       	push	r28
    1dde:	df 93       	push	r29
    1de0:	ec 01       	movw	r28, r24
  CS_HIGH;
    1de2:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    1de4:	29 98       	cbi	0x05, 1	; 5
    1de6:	2f ef       	ldi	r18, 0xFF	; 255
    1de8:	89 ef       	ldi	r24, 0xF9	; 249
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	21 50       	subi	r18, 0x01	; 1
    1dee:	80 40       	sbci	r24, 0x00	; 0
    1df0:	90 40       	sbci	r25, 0x00	; 0
    1df2:	e1 f7       	brne	.-8      	; 0x1dec <_ZN3TFT5beginEv+0x10>
    1df4:	00 c0       	rjmp	.+0      	; 0x1df6 <_ZN3TFT5beginEv+0x1a>
    1df6:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    1df8:	29 9a       	sbi	0x05, 1	; 5
    1dfa:	2f ef       	ldi	r18, 0xFF	; 255
    1dfc:	89 e6       	ldi	r24, 0x69	; 105
    1dfe:	98 e1       	ldi	r25, 0x18	; 24
    1e00:	21 50       	subi	r18, 0x01	; 1
    1e02:	80 40       	sbci	r24, 0x00	; 0
    1e04:	90 40       	sbci	r25, 0x00	; 0
    1e06:	e1 f7       	brne	.-8      	; 0x1e00 <_ZN3TFT5beginEv+0x24>
    1e08:	00 c0       	rjmp	.+0      	; 0x1e0a <_ZN3TFT5beginEv+0x2e>
    1e0a:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    1e0c:	61 e0       	ldi	r22, 0x01	; 1
    1e0e:	ce 01       	movw	r24, r28
    1e10:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
    1e14:	2f ef       	ldi	r18, 0xFF	; 255
    1e16:	89 ef       	ldi	r24, 0xF9	; 249
    1e18:	90 e0       	ldi	r25, 0x00	; 0
    1e1a:	21 50       	subi	r18, 0x01	; 1
    1e1c:	80 40       	sbci	r24, 0x00	; 0
    1e1e:	90 40       	sbci	r25, 0x00	; 0
    1e20:	e1 f7       	brne	.-8      	; 0x1e1a <_ZN3TFT5beginEv+0x3e>
    1e22:	00 c0       	rjmp	.+0      	; 0x1e24 <_ZN3TFT5beginEv+0x48>
    1e24:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    1e26:	60 ec       	ldi	r22, 0xC0	; 192
    1e28:	ce 01       	movw	r24, r28
    1e2a:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    1e2e:	6b e2       	ldi	r22, 0x2B	; 43
    1e30:	ce 01       	movw	r24, r28
    1e32:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    1e36:	66 e3       	ldi	r22, 0x36	; 54
    1e38:	ce 01       	movw	r24, r28
    1e3a:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    1e3e:	68 e4       	ldi	r22, 0x48	; 72
    1e40:	ce 01       	movw	r24, r28
    1e42:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    1e46:	6a e3       	ldi	r22, 0x3A	; 58
    1e48:	ce 01       	movw	r24, r28
    1e4a:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    1e4e:	65 e5       	ldi	r22, 0x55	; 85
    1e50:	ce 01       	movw	r24, r28
    1e52:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    1e56:	60 e2       	ldi	r22, 0x20	; 32
    1e58:	ce 01       	movw	r24, r28
    1e5a:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    1e5e:	61 e1       	ldi	r22, 0x11	; 17
    1e60:	ce 01       	movw	r24, r28
    1e62:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
    1e66:	2f ef       	ldi	r18, 0xFF	; 255
    1e68:	8d ee       	ldi	r24, 0xED	; 237
    1e6a:	92 e0       	ldi	r25, 0x02	; 2
    1e6c:	21 50       	subi	r18, 0x01	; 1
    1e6e:	80 40       	sbci	r24, 0x00	; 0
    1e70:	90 40       	sbci	r25, 0x00	; 0
    1e72:	e1 f7       	brne	.-8      	; 0x1e6c <_ZN3TFT5beginEv+0x90>
    1e74:	00 c0       	rjmp	.+0      	; 0x1e76 <_ZN3TFT5beginEv+0x9a>
    1e76:	00 00       	nop
  _delay_ms(60);

  exportCommand(0x29);  // Display ON (29h)
    1e78:	69 e2       	ldi	r22, 0x29	; 41
    1e7a:	ce 01       	movw	r24, r28
    1e7c:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
}
    1e80:	df 91       	pop	r29
    1e82:	cf 91       	pop	r28
    1e84:	08 95       	ret

00001e86 <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    1e86:	1f 93       	push	r17
    1e88:	cf 93       	push	r28
    1e8a:	df 93       	push	r29
    1e8c:	ec 01       	movw	r28, r24
    1e8e:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    1e90:	66 e3       	ldi	r22, 0x36	; 54
    1e92:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>

  switch (rotation)
    1e96:	11 30       	cpi	r17, 0x01	; 1
    1e98:	89 f0       	breq	.+34     	; 0x1ebc <_ZN3TFT11setRotationEa+0x36>
    1e9a:	12 30       	cpi	r17, 0x02	; 2
    1e9c:	a1 f0       	breq	.+40     	; 0x1ec6 <_ZN3TFT11setRotationEa+0x40>
    1e9e:	11 11       	cpse	r17, r1
    1ea0:	16 c0       	rjmp	.+44     	; 0x1ece <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    1ea2:	68 e2       	ldi	r22, 0x28	; 40
    1ea4:	ce 01       	movw	r24, r28
    1ea6:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>
    temp = m_Width;
    1eaa:	88 81       	ld	r24, Y
    1eac:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    1eae:	2a 81       	ldd	r18, Y+2	; 0x02
    1eb0:	3b 81       	ldd	r19, Y+3	; 0x03
    1eb2:	39 83       	std	Y+1, r19	; 0x01
    1eb4:	28 83       	st	Y, r18
    m_Height = temp;
    1eb6:	9b 83       	std	Y+3, r25	; 0x03
    1eb8:	8a 83       	std	Y+2, r24	; 0x02
    break;
    1eba:	09 c0       	rjmp	.+18     	; 0x1ece <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    1ebc:	68 e4       	ldi	r22, 0x48	; 72
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>
    break;
    1ec4:	04 c0       	rjmp	.+8      	; 0x1ece <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    1ec6:	68 e8       	ldi	r22, 0x88	; 136
    1ec8:	ce 01       	movw	r24, r28
    1eca:	0e 94 d5 0e 	call	0x1daa	; 0x1daa <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    1ece:	df 91       	pop	r29
    1ed0:	cf 91       	pop	r28
    1ed2:	1f 91       	pop	r17
    1ed4:	08 95       	ret

00001ed6 <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    1ed6:	af 92       	push	r10
    1ed8:	bf 92       	push	r11
    1eda:	cf 92       	push	r12
    1edc:	df 92       	push	r13
    1ede:	ef 92       	push	r14
    1ee0:	ff 92       	push	r15
    1ee2:	0f 93       	push	r16
    1ee4:	1f 93       	push	r17
    1ee6:	cf 93       	push	r28
    1ee8:	df 93       	push	r29
    1eea:	ec 01       	movw	r28, r24
    1eec:	5b 01       	movw	r10, r22
    1eee:	7a 01       	movw	r14, r20
    1ef0:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    1ef2:	6a e2       	ldi	r22, 0x2A	; 42
    1ef4:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    1ef8:	b5 01       	movw	r22, r10
    1efa:	ce 01       	movw	r24, r28
    1efc:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    1f00:	b6 01       	movw	r22, r12
    1f02:	ce 01       	movw	r24, r28
    1f04:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    1f08:	6b e2       	ldi	r22, 0x2B	; 43
    1f0a:	ce 01       	movw	r24, r28
    1f0c:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    1f10:	b7 01       	movw	r22, r14
    1f12:	ce 01       	movw	r24, r28
    1f14:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    1f18:	b8 01       	movw	r22, r16
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    1f20:	6c e2       	ldi	r22, 0x2C	; 44
    1f22:	ce 01       	movw	r24, r28
    1f24:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN3SPI13exportCommandEh>
}
    1f28:	df 91       	pop	r29
    1f2a:	cf 91       	pop	r28
    1f2c:	1f 91       	pop	r17
    1f2e:	0f 91       	pop	r16
    1f30:	ff 90       	pop	r15
    1f32:	ef 90       	pop	r14
    1f34:	df 90       	pop	r13
    1f36:	cf 90       	pop	r12
    1f38:	bf 90       	pop	r11
    1f3a:	af 90       	pop	r10
    1f3c:	08 95       	ret

00001f3e <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
                Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    1f3e:	cf 92       	push	r12
    1f40:	df 92       	push	r13
    1f42:	ef 92       	push	r14
    1f44:	ff 92       	push	r15
    1f46:	0f 93       	push	r16
    1f48:	1f 93       	push	r17
    1f4a:	cf 93       	push	r28
    1f4c:	df 93       	push	r29
    1f4e:	7c 01       	movw	r14, r24
    1f50:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    1f52:	fc 01       	movw	r30, r24
    1f54:	02 81       	ldd	r16, Z+2	; 0x02
    1f56:	13 81       	ldd	r17, Z+3	; 0x03
    1f58:	01 50       	subi	r16, 0x01	; 1
    1f5a:	11 09       	sbc	r17, r1
    1f5c:	20 81       	ld	r18, Z
    1f5e:	31 81       	ldd	r19, Z+1	; 0x01
    1f60:	21 50       	subi	r18, 0x01	; 1
    1f62:	31 09       	sbc	r19, r1
    1f64:	40 e0       	ldi	r20, 0x00	; 0
    1f66:	50 e0       	ldi	r21, 0x00	; 0
    1f68:	60 e0       	ldi	r22, 0x00	; 0
    1f6a:	70 e0       	ldi	r23, 0x00	; 0
    1f6c:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    1f70:	f7 01       	movw	r30, r14
    1f72:	82 81       	ldd	r24, Z+2	; 0x02
    1f74:	93 81       	ldd	r25, Z+3	; 0x03
    1f76:	18 16       	cp	r1, r24
    1f78:	19 06       	cpc	r1, r25
    1f7a:	ec f4       	brge	.+58     	; 0x1fb6 <_ZN3TFT10fillScreenEj+0x78>
    1f7c:	00 e0       	ldi	r16, 0x00	; 0
    1f7e:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    1f80:	f7 01       	movw	r30, r14
    1f82:	80 81       	ld	r24, Z
    1f84:	91 81       	ldd	r25, Z+1	; 0x01
    1f86:	18 16       	cp	r1, r24
    1f88:	19 06       	cpc	r1, r25
    1f8a:	6c f4       	brge	.+26     	; 0x1fa6 <_ZN3TFT10fillScreenEj+0x68>
    1f8c:	c0 e0       	ldi	r28, 0x00	; 0
    1f8e:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    1f90:	b6 01       	movw	r22, r12
    1f92:	c7 01       	movw	r24, r14
    1f94:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    1f98:	21 96       	adiw	r28, 0x01	; 1
    1f9a:	f7 01       	movw	r30, r14
    1f9c:	80 81       	ld	r24, Z
    1f9e:	91 81       	ldd	r25, Z+1	; 0x01
    1fa0:	c8 17       	cp	r28, r24
    1fa2:	d9 07       	cpc	r29, r25
    1fa4:	ac f3       	brlt	.-22     	; 0x1f90 <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    1fa6:	0f 5f       	subi	r16, 0xFF	; 255
    1fa8:	1f 4f       	sbci	r17, 0xFF	; 255
    1faa:	f7 01       	movw	r30, r14
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	08 17       	cp	r16, r24
    1fb2:	19 07       	cpc	r17, r25
    1fb4:	2c f3       	brlt	.-54     	; 0x1f80 <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    1fb6:	df 91       	pop	r29
    1fb8:	cf 91       	pop	r28
    1fba:	1f 91       	pop	r17
    1fbc:	0f 91       	pop	r16
    1fbe:	ff 90       	pop	r15
    1fc0:	ef 90       	pop	r14
    1fc2:	df 90       	pop	r13
    1fc4:	cf 90       	pop	r12
    1fc6:	08 95       	ret

00001fc8 <_ZN3TFT8fillRectEiiiij>:
/*----------------------------------------//
                Fill Rect
//----------------------------------------*/

void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
    1fc8:	8f 92       	push	r8
    1fca:	9f 92       	push	r9
    1fcc:	af 92       	push	r10
    1fce:	bf 92       	push	r11
    1fd0:	cf 92       	push	r12
    1fd2:	df 92       	push	r13
    1fd4:	ef 92       	push	r14
    1fd6:	ff 92       	push	r15
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	cf 93       	push	r28
    1fde:	df 93       	push	r29
    1fe0:	6c 01       	movw	r12, r24
    1fe2:	49 01       	movw	r8, r18
    1fe4:	58 01       	movw	r10, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    1fe6:	8a 01       	movw	r16, r20
    1fe8:	0a 0d       	add	r16, r10
    1fea:	1b 1d       	adc	r17, r11
    1fec:	01 50       	subi	r16, 0x01	; 1
    1fee:	11 09       	sbc	r17, r1
    1ff0:	9b 01       	movw	r18, r22
    1ff2:	28 0d       	add	r18, r8
    1ff4:	39 1d       	adc	r19, r9
    1ff6:	21 50       	subi	r18, 0x01	; 1
    1ff8:	31 09       	sbc	r19, r1
    1ffa:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>

  for (int yPos=height; yPos>0; yPos--)
    1ffe:	1a 14       	cp	r1, r10
    2000:	1b 04       	cpc	r1, r11
    2002:	74 f4       	brge	.+28     	; 0x2020 <_ZN3TFT8fillRectEiiiij+0x58>
  {
    for (int xPos=width; xPos>0; xPos--)
    2004:	18 14       	cp	r1, r8
    2006:	19 04       	cpc	r1, r9
    2008:	3c f4       	brge	.+14     	; 0x2018 <_ZN3TFT8fillRectEiiiij+0x50>
    200a:	e4 01       	movw	r28, r8
    {
      exportLongData(colorValue);
    200c:	b7 01       	movw	r22, r14
    200e:	c6 01       	movw	r24, r12
    2010:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
  {
    for (int xPos=width; xPos>0; xPos--)
    2014:	21 97       	sbiw	r28, 0x01	; 1
    2016:	d1 f7       	brne	.-12     	; 0x200c <_ZN3TFT8fillRectEiiiij+0x44>
void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	a8 1a       	sub	r10, r24
    201c:	b1 08       	sbc	r11, r1
    201e:	91 f7       	brne	.-28     	; 0x2004 <_ZN3TFT8fillRectEiiiij+0x3c>
    {
      exportLongData(colorValue);
    }
  }

}
    2020:	df 91       	pop	r29
    2022:	cf 91       	pop	r28
    2024:	1f 91       	pop	r17
    2026:	0f 91       	pop	r16
    2028:	ff 90       	pop	r15
    202a:	ef 90       	pop	r14
    202c:	df 90       	pop	r13
    202e:	cf 90       	pop	r12
    2030:	bf 90       	pop	r11
    2032:	af 90       	pop	r10
    2034:	9f 90       	pop	r9
    2036:	8f 90       	pop	r8
    2038:	08 95       	ret

0000203a <_ZN3TFT10drawBitmapEiiiiPKhjjjj>:
            Draw Doubled Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    203a:	2f 92       	push	r2
    203c:	3f 92       	push	r3
    203e:	4f 92       	push	r4
    2040:	5f 92       	push	r5
    2042:	6f 92       	push	r6
    2044:	7f 92       	push	r7
    2046:	8f 92       	push	r8
    2048:	9f 92       	push	r9
    204a:	af 92       	push	r10
    204c:	bf 92       	push	r11
    204e:	cf 92       	push	r12
    2050:	df 92       	push	r13
    2052:	ef 92       	push	r14
    2054:	ff 92       	push	r15
    2056:	0f 93       	push	r16
    2058:	1f 93       	push	r17
    205a:	cf 93       	push	r28
    205c:	df 93       	push	r29
    205e:	cd b7       	in	r28, 0x3d	; 61
    2060:	de b7       	in	r29, 0x3e	; 62
    2062:	60 97       	sbiw	r28, 0x10	; 16
    2064:	0f b6       	in	r0, 0x3f	; 63
    2066:	f8 94       	cli
    2068:	de bf       	out	0x3e, r29	; 62
    206a:	0f be       	out	0x3f, r0	; 63
    206c:	cd bf       	out	0x3d, r28	; 61
    206e:	98 8b       	std	Y+16, r25	; 0x10
    2070:	8f 87       	std	Y+15, r24	; 0x0f
    2072:	29 01       	movw	r4, r18
    2074:	38 01       	movw	r6, r16
    2076:	da 82       	std	Y+2, r13	; 0x02
    2078:	c9 82       	std	Y+1, r12	; 0x01
    207a:	ba 86       	std	Y+10, r11	; 0x0a
    207c:	a9 86       	std	Y+9, r10	; 0x09
    207e:	9c 86       	std	Y+12, r9	; 0x0c
    2080:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    2082:	8a 01       	movw	r16, r20
    2084:	06 0d       	add	r16, r6
    2086:	17 1d       	adc	r17, r7
    2088:	01 50       	subi	r16, 0x01	; 1
    208a:	11 09       	sbc	r17, r1
    208c:	9b 01       	movw	r18, r22
    208e:	24 0d       	add	r18, r4
    2090:	35 1d       	adc	r19, r5
    2092:	21 50       	subi	r18, 0x01	; 1
    2094:	31 09       	sbc	r19, r1
    2096:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    209a:	c3 01       	movw	r24, r6
    209c:	99 23       	and	r25, r25
    209e:	0c f4       	brge	.+2      	; 0x20a2 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x68>
    20a0:	01 96       	adiw	r24, 0x01	; 1
    20a2:	9c 01       	movw	r18, r24
    20a4:	35 95       	asr	r19
    20a6:	27 95       	ror	r18
    20a8:	3e 87       	std	Y+14, r19	; 0x0e
    20aa:	2d 87       	std	Y+13, r18	; 0x0d
    20ac:	12 16       	cp	r1, r18
    20ae:	13 06       	cpc	r1, r19
    20b0:	0c f0       	brlt	.+2      	; 0x20b4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x7a>
    20b2:	7c c0       	rjmp	.+248    	; 0x21ac <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    20b4:	c2 01       	movw	r24, r4
    20b6:	99 23       	and	r25, r25
    20b8:	0c f4       	brge	.+2      	; 0x20bc <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x82>
    20ba:	07 96       	adiw	r24, 0x07	; 7
    20bc:	fc 01       	movw	r30, r24
    20be:	f5 95       	asr	r31
    20c0:	e7 95       	ror	r30
    20c2:	f5 95       	asr	r31
    20c4:	e7 95       	ror	r30
    20c6:	f5 95       	asr	r31
    20c8:	e7 95       	ror	r30
    20ca:	fe 83       	std	Y+6, r31	; 0x06
    20cc:	ed 83       	std	Y+5, r30	; 0x05
    20ce:	f8 87       	std	Y+8, r31	; 0x08
    20d0:	ef 83       	std	Y+7, r30	; 0x07
    20d2:	6e 2c       	mov	r6, r14
    20d4:	7f 2c       	mov	r7, r15
    20d6:	21 2c       	mov	r2, r1
    20d8:	31 2c       	mov	r3, r1
    20da:	68 94       	set
    20dc:	aa 24       	eor	r10, r10
    20de:	a1 f8       	bld	r10, 1
    20e0:	b1 2c       	mov	r11, r1
    20e2:	8f 80       	ldd	r8, Y+7	; 0x07
    20e4:	98 84       	ldd	r9, Y+8	; 0x08
    20e6:	86 0c       	add	r8, r6
    20e8:	97 1c       	adc	r9, r7
    20ea:	7c 82       	std	Y+4, r7	; 0x04
    20ec:	6b 82       	std	Y+3, r6	; 0x03
    20ee:	4f 84       	ldd	r4, Y+15	; 0x0f
    20f0:	58 88       	ldd	r5, Y+16	; 0x10
    20f2:	2d 81       	ldd	r18, Y+5	; 0x05
    20f4:	3e 81       	ldd	r19, Y+6	; 0x06
    20f6:	12 16       	cp	r1, r18
    20f8:	13 06       	cpc	r1, r19
    20fa:	0c f0       	brlt	.+2      	; 0x20fe <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc4>
    20fc:	43 c0       	rjmp	.+134    	; 0x2184 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    20fe:	eb 80       	ldd	r14, Y+3	; 0x03
    2100:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    2102:	f7 01       	movw	r30, r14
    2104:	c4 90       	lpm	r12, Z
    2106:	68 94       	set
    2108:	66 24       	eor	r6, r6
    210a:	62 f8       	bld	r6, 2
    210c:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    210e:	dc 2c       	mov	r13, r12
    2110:	d6 94       	lsr	r13
    2112:	d6 94       	lsr	r13
    2114:	d6 94       	lsr	r13
    2116:	d6 94       	lsr	r13
    2118:	d6 94       	lsr	r13
    211a:	d6 94       	lsr	r13
    211c:	02 e0       	ldi	r16, 0x02	; 2
    211e:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    2120:	d1 10       	cpse	r13, r1
    2122:	06 c0       	rjmp	.+12     	; 0x2130 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0Bit);
    2124:	69 81       	ldd	r22, Y+1	; 0x01
    2126:	7a 81       	ldd	r23, Y+2	; 0x02
    2128:	c2 01       	movw	r24, r4
    212a:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    212e:	1a c0       	rjmp	.+52     	; 0x2164 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    2130:	f1 e0       	ldi	r31, 0x01	; 1
    2132:	df 12       	cpse	r13, r31
    2134:	06 c0       	rjmp	.+12     	; 0x2142 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1Bit);
    2136:	69 85       	ldd	r22, Y+9	; 0x09
    2138:	7a 85       	ldd	r23, Y+10	; 0x0a
    213a:	c2 01       	movw	r24, r4
    213c:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    2140:	11 c0       	rjmp	.+34     	; 0x2164 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    2142:	22 e0       	ldi	r18, 0x02	; 2
    2144:	d2 12       	cpse	r13, r18
    2146:	06 c0       	rjmp	.+12     	; 0x2154 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2Bit);
    2148:	6b 85       	ldd	r22, Y+11	; 0x0b
    214a:	7c 85       	ldd	r23, Y+12	; 0x0c
    214c:	c2 01       	movw	r24, r4
    214e:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    2152:	08 c0       	rjmp	.+16     	; 0x2164 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    2154:	33 e0       	ldi	r19, 0x03	; 3
    2156:	d3 12       	cpse	r13, r19
    2158:	05 c0       	rjmp	.+10     	; 0x2164 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3Bit);
    215a:	6d a1       	ldd	r22, Y+37	; 0x25
    215c:	7e a1       	ldd	r23, Y+38	; 0x26
    215e:	c2 01       	movw	r24, r4
    2160:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    2164:	01 50       	subi	r16, 0x01	; 1
    2166:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    2168:	d9 f6       	brne	.-74     	; 0x2120 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xe6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    216a:	cc 0c       	add	r12, r12
    216c:	cc 0c       	add	r12, r12
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	68 1a       	sub	r6, r24
    2172:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    2174:	61 f6       	brne	.-104    	; 0x210e <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xd4>
    2176:	9f ef       	ldi	r25, 0xFF	; 255
    2178:	e9 1a       	sub	r14, r25
    217a:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    217c:	e8 14       	cp	r14, r8
    217e:	f9 04       	cpc	r15, r9
    2180:	09 f0       	breq	.+2      	; 0x2184 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    2182:	bf cf       	rjmp	.-130    	; 0x2102 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc8>
    2184:	e1 e0       	ldi	r30, 0x01	; 1
    2186:	ae 1a       	sub	r10, r30
    2188:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    218a:	09 f0       	breq	.+2      	; 0x218e <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x154>
    218c:	b2 cf       	rjmp	.-156    	; 0x20f2 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xb8>
    218e:	6b 80       	ldd	r6, Y+3	; 0x03
    2190:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    2192:	ff ef       	ldi	r31, 0xFF	; 255
    2194:	2f 1a       	sub	r2, r31
    2196:	3f 0a       	sbc	r3, r31
    2198:	2f 81       	ldd	r18, Y+7	; 0x07
    219a:	38 85       	ldd	r19, Y+8	; 0x08
    219c:	62 0e       	add	r6, r18
    219e:	73 1e       	adc	r7, r19
    21a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    21a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    21a4:	28 16       	cp	r2, r24
    21a6:	39 06       	cpc	r3, r25
    21a8:	09 f0       	breq	.+2      	; 0x21ac <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
    21aa:	97 cf       	rjmp	.-210    	; 0x20da <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    21ac:	60 96       	adiw	r28, 0x10	; 16
    21ae:	0f b6       	in	r0, 0x3f	; 63
    21b0:	f8 94       	cli
    21b2:	de bf       	out	0x3e, r29	; 62
    21b4:	0f be       	out	0x3f, r0	; 63
    21b6:	cd bf       	out	0x3d, r28	; 61
    21b8:	df 91       	pop	r29
    21ba:	cf 91       	pop	r28
    21bc:	1f 91       	pop	r17
    21be:	0f 91       	pop	r16
    21c0:	ff 90       	pop	r15
    21c2:	ef 90       	pop	r14
    21c4:	df 90       	pop	r13
    21c6:	cf 90       	pop	r12
    21c8:	bf 90       	pop	r11
    21ca:	af 90       	pop	r10
    21cc:	9f 90       	pop	r9
    21ce:	8f 90       	pop	r8
    21d0:	7f 90       	pop	r7
    21d2:	6f 90       	pop	r6
    21d4:	5f 90       	pop	r5
    21d6:	4f 90       	pop	r4
    21d8:	3f 90       	pop	r3
    21da:	2f 90       	pop	r2
    21dc:	08 95       	ret

000021de <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>:
            Draw 100bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[100], int8_t tileSelection,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    21de:	2f 92       	push	r2
    21e0:	3f 92       	push	r3
    21e2:	4f 92       	push	r4
    21e4:	5f 92       	push	r5
    21e6:	6f 92       	push	r6
    21e8:	7f 92       	push	r7
    21ea:	8f 92       	push	r8
    21ec:	9f 92       	push	r9
    21ee:	af 92       	push	r10
    21f0:	bf 92       	push	r11
    21f2:	cf 92       	push	r12
    21f4:	df 92       	push	r13
    21f6:	ef 92       	push	r14
    21f8:	ff 92       	push	r15
    21fa:	0f 93       	push	r16
    21fc:	1f 93       	push	r17
    21fe:	cf 93       	push	r28
    2200:	df 93       	push	r29
    2202:	cd b7       	in	r28, 0x3d	; 61
    2204:	de b7       	in	r29, 0x3e	; 62
    2206:	2e 97       	sbiw	r28, 0x0e	; 14
    2208:	0f b6       	in	r0, 0x3f	; 63
    220a:	f8 94       	cli
    220c:	de bf       	out	0x3e, r29	; 62
    220e:	0f be       	out	0x3f, r0	; 63
    2210:	cd bf       	out	0x3d, r28	; 61
    2212:	9e 87       	std	Y+14, r25	; 0x0e
    2214:	8d 87       	std	Y+13, r24	; 0x0d
    2216:	29 01       	movw	r4, r18
    2218:	38 01       	movw	r6, r16
    221a:	ba 82       	std	Y+2, r11	; 0x02
    221c:	a9 82       	std	Y+1, r10	; 0x01
    221e:	9a 86       	std	Y+10, r9	; 0x0a
    2220:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    2222:	8a 01       	movw	r16, r20
    2224:	06 0d       	add	r16, r6
    2226:	17 1d       	adc	r17, r7
    2228:	01 50       	subi	r16, 0x01	; 1
    222a:	11 09       	sbc	r17, r1
    222c:	9b 01       	movw	r18, r22
    222e:	24 0d       	add	r18, r4
    2230:	35 1d       	adc	r19, r5
    2232:	21 50       	subi	r18, 0x01	; 1
    2234:	31 09       	sbc	r19, r1
    2236:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    223a:	c3 01       	movw	r24, r6
    223c:	99 23       	and	r25, r25
    223e:	0c f4       	brge	.+2      	; 0x2242 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x64>
    2240:	01 96       	adiw	r24, 0x01	; 1
    2242:	9c 01       	movw	r18, r24
    2244:	35 95       	asr	r19
    2246:	27 95       	ror	r18
    2248:	3c 87       	std	Y+12, r19	; 0x0c
    224a:	2b 87       	std	Y+11, r18	; 0x0b
    224c:	12 16       	cp	r1, r18
    224e:	13 06       	cpc	r1, r19
    2250:	0c f0       	brlt	.+2      	; 0x2254 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x76>
    2252:	81 c0       	rjmp	.+258    	; 0x2356 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    2254:	c2 01       	movw	r24, r4
    2256:	99 23       	and	r25, r25
    2258:	0c f4       	brge	.+2      	; 0x225c <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x7e>
    225a:	07 96       	adiw	r24, 0x07	; 7
    225c:	fc 01       	movw	r30, r24
    225e:	f5 95       	asr	r31
    2260:	e7 95       	ror	r30
    2262:	f5 95       	asr	r31
    2264:	e7 95       	ror	r30
    2266:	f5 95       	asr	r31
    2268:	e7 95       	ror	r30
    226a:	fe 83       	std	Y+6, r31	; 0x06
    226c:	ed 83       	std	Y+5, r30	; 0x05
    226e:	f8 87       	std	Y+8, r31	; 0x08
    2270:	ef 83       	std	Y+7, r30	; 0x07
    2272:	37 01       	movw	r6, r14
    2274:	fc 2d       	mov	r31, r12
    2276:	24 e6       	ldi	r18, 0x64	; 100
    2278:	f2 02       	muls	r31, r18
    227a:	60 0c       	add	r6, r0
    227c:	71 1c       	adc	r7, r1
    227e:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    2280:	21 2c       	mov	r2, r1
    2282:	31 2c       	mov	r3, r1
    2284:	68 94       	set
    2286:	aa 24       	eor	r10, r10
    2288:	a1 f8       	bld	r10, 1
    228a:	b1 2c       	mov	r11, r1
    228c:	8f 80       	ldd	r8, Y+7	; 0x07
    228e:	98 84       	ldd	r9, Y+8	; 0x08
    2290:	86 0c       	add	r8, r6
    2292:	97 1c       	adc	r9, r7
    2294:	7c 82       	std	Y+4, r7	; 0x04
    2296:	6b 82       	std	Y+3, r6	; 0x03
    2298:	4d 84       	ldd	r4, Y+13	; 0x0d
    229a:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    229c:	8d 81       	ldd	r24, Y+5	; 0x05
    229e:	9e 81       	ldd	r25, Y+6	; 0x06
    22a0:	18 16       	cp	r1, r24
    22a2:	19 06       	cpc	r1, r25
    22a4:	0c f0       	brlt	.+2      	; 0x22a8 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xca>
    22a6:	43 c0       	rjmp	.+134    	; 0x232e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x150>
    22a8:	eb 80       	ldd	r14, Y+3	; 0x03
    22aa:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    22ac:	f7 01       	movw	r30, r14
    22ae:	c4 90       	lpm	r12, Z
    22b0:	68 94       	set
    22b2:	66 24       	eor	r6, r6
    22b4:	62 f8       	bld	r6, 2
    22b6:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    22b8:	dc 2c       	mov	r13, r12
    22ba:	d6 94       	lsr	r13
    22bc:	d6 94       	lsr	r13
    22be:	d6 94       	lsr	r13
    22c0:	d6 94       	lsr	r13
    22c2:	d6 94       	lsr	r13
    22c4:	d6 94       	lsr	r13
    22c6:	02 e0       	ldi	r16, 0x02	; 2
    22c8:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    22ca:	d1 10       	cpse	r13, r1
    22cc:	06 c0       	rjmp	.+12     	; 0x22da <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xfc>
            {
              exportLongData(color0Bit);
    22ce:	69 81       	ldd	r22, Y+1	; 0x01
    22d0:	7a 81       	ldd	r23, Y+2	; 0x02
    22d2:	c2 01       	movw	r24, r4
    22d4:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    22d8:	1a c0       	rjmp	.+52     	; 0x230e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    22da:	f1 e0       	ldi	r31, 0x01	; 1
    22dc:	df 12       	cpse	r13, r31
    22de:	06 c0       	rjmp	.+12     	; 0x22ec <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x10e>
            {
              exportLongData(color1Bit);
    22e0:	69 85       	ldd	r22, Y+9	; 0x09
    22e2:	7a 85       	ldd	r23, Y+10	; 0x0a
    22e4:	c2 01       	movw	r24, r4
    22e6:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    22ea:	11 c0       	rjmp	.+34     	; 0x230e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    22ec:	22 e0       	ldi	r18, 0x02	; 2
    22ee:	d2 12       	cpse	r13, r18
    22f0:	06 c0       	rjmp	.+12     	; 0x22fe <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x120>
            {
              exportLongData(color2Bit);
    22f2:	6b a1       	ldd	r22, Y+35	; 0x23
    22f4:	7c a1       	ldd	r23, Y+36	; 0x24
    22f6:	c2 01       	movw	r24, r4
    22f8:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    22fc:	08 c0       	rjmp	.+16     	; 0x230e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    22fe:	33 e0       	ldi	r19, 0x03	; 3
    2300:	d3 12       	cpse	r13, r19
    2302:	05 c0       	rjmp	.+10     	; 0x230e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            {
              exportLongData(color3Bit);
    2304:	6d a1       	ldd	r22, Y+37	; 0x25
    2306:	7e a1       	ldd	r23, Y+38	; 0x26
    2308:	c2 01       	movw	r24, r4
    230a:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    230e:	01 50       	subi	r16, 0x01	; 1
    2310:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    2312:	d9 f6       	brne	.-74     	; 0x22ca <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xec>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    2314:	cc 0c       	add	r12, r12
    2316:	cc 0c       	add	r12, r12
    2318:	81 e0       	ldi	r24, 0x01	; 1
    231a:	68 1a       	sub	r6, r24
    231c:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    231e:	61 f6       	brne	.-104    	; 0x22b8 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xda>
    2320:	9f ef       	ldi	r25, 0xFF	; 255
    2322:	e9 1a       	sub	r14, r25
    2324:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    2326:	8e 14       	cp	r8, r14
    2328:	9f 04       	cpc	r9, r15
    232a:	09 f0       	breq	.+2      	; 0x232e <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x150>
    232c:	bf cf       	rjmp	.-130    	; 0x22ac <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xce>
    232e:	e1 e0       	ldi	r30, 0x01	; 1
    2330:	ae 1a       	sub	r10, r30
    2332:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    2334:	09 f0       	breq	.+2      	; 0x2338 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x15a>
    2336:	b2 cf       	rjmp	.-156    	; 0x229c <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xbe>
    2338:	6b 80       	ldd	r6, Y+3	; 0x03
    233a:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    233c:	ff ef       	ldi	r31, 0xFF	; 255
    233e:	2f 1a       	sub	r2, r31
    2340:	3f 0a       	sbc	r3, r31
    2342:	2f 81       	ldd	r18, Y+7	; 0x07
    2344:	38 85       	ldd	r19, Y+8	; 0x08
    2346:	62 0e       	add	r6, r18
    2348:	73 1e       	adc	r7, r19
    234a:	8b 85       	ldd	r24, Y+11	; 0x0b
    234c:	9c 85       	ldd	r25, Y+12	; 0x0c
    234e:	28 16       	cp	r2, r24
    2350:	39 06       	cpc	r3, r25
    2352:	09 f0       	breq	.+2      	; 0x2356 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x178>
    2354:	97 cf       	rjmp	.-210    	; 0x2284 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xa6>

      }
    }
  }

}
    2356:	2e 96       	adiw	r28, 0x0e	; 14
    2358:	0f b6       	in	r0, 0x3f	; 63
    235a:	f8 94       	cli
    235c:	de bf       	out	0x3e, r29	; 62
    235e:	0f be       	out	0x3f, r0	; 63
    2360:	cd bf       	out	0x3d, r28	; 61
    2362:	df 91       	pop	r29
    2364:	cf 91       	pop	r28
    2366:	1f 91       	pop	r17
    2368:	0f 91       	pop	r16
    236a:	ff 90       	pop	r15
    236c:	ef 90       	pop	r14
    236e:	df 90       	pop	r13
    2370:	cf 90       	pop	r12
    2372:	bf 90       	pop	r11
    2374:	af 90       	pop	r10
    2376:	9f 90       	pop	r9
    2378:	8f 90       	pop	r8
    237a:	7f 90       	pop	r7
    237c:	6f 90       	pop	r6
    237e:	5f 90       	pop	r5
    2380:	4f 90       	pop	r4
    2382:	3f 90       	pop	r3
    2384:	2f 90       	pop	r2
    2386:	08 95       	ret

00002388 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj>:
            Draw 160bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap160(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[160], int8_t tileSelection,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    2388:	2f 92       	push	r2
    238a:	3f 92       	push	r3
    238c:	4f 92       	push	r4
    238e:	5f 92       	push	r5
    2390:	6f 92       	push	r6
    2392:	7f 92       	push	r7
    2394:	8f 92       	push	r8
    2396:	9f 92       	push	r9
    2398:	af 92       	push	r10
    239a:	bf 92       	push	r11
    239c:	cf 92       	push	r12
    239e:	df 92       	push	r13
    23a0:	ef 92       	push	r14
    23a2:	ff 92       	push	r15
    23a4:	0f 93       	push	r16
    23a6:	1f 93       	push	r17
    23a8:	cf 93       	push	r28
    23aa:	df 93       	push	r29
    23ac:	cd b7       	in	r28, 0x3d	; 61
    23ae:	de b7       	in	r29, 0x3e	; 62
    23b0:	2e 97       	sbiw	r28, 0x0e	; 14
    23b2:	0f b6       	in	r0, 0x3f	; 63
    23b4:	f8 94       	cli
    23b6:	de bf       	out	0x3e, r29	; 62
    23b8:	0f be       	out	0x3f, r0	; 63
    23ba:	cd bf       	out	0x3d, r28	; 61
    23bc:	9e 87       	std	Y+14, r25	; 0x0e
    23be:	8d 87       	std	Y+13, r24	; 0x0d
    23c0:	29 01       	movw	r4, r18
    23c2:	38 01       	movw	r6, r16
    23c4:	ba 82       	std	Y+2, r11	; 0x02
    23c6:	a9 82       	std	Y+1, r10	; 0x01
    23c8:	9a 86       	std	Y+10, r9	; 0x0a
    23ca:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    23cc:	8a 01       	movw	r16, r20
    23ce:	06 0d       	add	r16, r6
    23d0:	17 1d       	adc	r17, r7
    23d2:	01 50       	subi	r16, 0x01	; 1
    23d4:	11 09       	sbc	r17, r1
    23d6:	9b 01       	movw	r18, r22
    23d8:	24 0d       	add	r18, r4
    23da:	35 1d       	adc	r19, r5
    23dc:	21 50       	subi	r18, 0x01	; 1
    23de:	31 09       	sbc	r19, r1
    23e0:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    23e4:	c3 01       	movw	r24, r6
    23e6:	99 23       	and	r25, r25
    23e8:	0c f4       	brge	.+2      	; 0x23ec <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x64>
    23ea:	01 96       	adiw	r24, 0x01	; 1
    23ec:	9c 01       	movw	r18, r24
    23ee:	35 95       	asr	r19
    23f0:	27 95       	ror	r18
    23f2:	3c 87       	std	Y+12, r19	; 0x0c
    23f4:	2b 87       	std	Y+11, r18	; 0x0b
    23f6:	12 16       	cp	r1, r18
    23f8:	13 06       	cpc	r1, r19
    23fa:	0c f0       	brlt	.+2      	; 0x23fe <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x76>
    23fc:	81 c0       	rjmp	.+258    	; 0x2500 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    23fe:	c2 01       	movw	r24, r4
    2400:	99 23       	and	r25, r25
    2402:	0c f4       	brge	.+2      	; 0x2406 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x7e>
    2404:	07 96       	adiw	r24, 0x07	; 7
    2406:	fc 01       	movw	r30, r24
    2408:	f5 95       	asr	r31
    240a:	e7 95       	ror	r30
    240c:	f5 95       	asr	r31
    240e:	e7 95       	ror	r30
    2410:	f5 95       	asr	r31
    2412:	e7 95       	ror	r30
    2414:	fe 83       	std	Y+6, r31	; 0x06
    2416:	ed 83       	std	Y+5, r30	; 0x05
    2418:	f8 87       	std	Y+8, r31	; 0x08
    241a:	ef 83       	std	Y+7, r30	; 0x07
    241c:	37 01       	movw	r6, r14
    241e:	2c 2d       	mov	r18, r12
    2420:	30 ea       	ldi	r19, 0xA0	; 160
    2422:	23 03       	mulsu	r18, r19
    2424:	60 0c       	add	r6, r0
    2426:	71 1c       	adc	r7, r1
    2428:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    242a:	21 2c       	mov	r2, r1
    242c:	31 2c       	mov	r3, r1
    242e:	68 94       	set
    2430:	aa 24       	eor	r10, r10
    2432:	a1 f8       	bld	r10, 1
    2434:	b1 2c       	mov	r11, r1
    2436:	8f 80       	ldd	r8, Y+7	; 0x07
    2438:	98 84       	ldd	r9, Y+8	; 0x08
    243a:	86 0c       	add	r8, r6
    243c:	97 1c       	adc	r9, r7
    243e:	7c 82       	std	Y+4, r7	; 0x04
    2440:	6b 82       	std	Y+3, r6	; 0x03
    2442:	4d 84       	ldd	r4, Y+13	; 0x0d
    2444:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    2446:	8d 81       	ldd	r24, Y+5	; 0x05
    2448:	9e 81       	ldd	r25, Y+6	; 0x06
    244a:	18 16       	cp	r1, r24
    244c:	19 06       	cpc	r1, r25
    244e:	0c f0       	brlt	.+2      	; 0x2452 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xca>
    2450:	43 c0       	rjmp	.+134    	; 0x24d8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x150>
    2452:	eb 80       	ldd	r14, Y+3	; 0x03
    2454:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    2456:	f7 01       	movw	r30, r14
    2458:	c4 90       	lpm	r12, Z
    245a:	68 94       	set
    245c:	66 24       	eor	r6, r6
    245e:	62 f8       	bld	r6, 2
    2460:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    2462:	dc 2c       	mov	r13, r12
    2464:	d6 94       	lsr	r13
    2466:	d6 94       	lsr	r13
    2468:	d6 94       	lsr	r13
    246a:	d6 94       	lsr	r13
    246c:	d6 94       	lsr	r13
    246e:	d6 94       	lsr	r13
    2470:	02 e0       	ldi	r16, 0x02	; 2
    2472:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    2474:	d1 10       	cpse	r13, r1
    2476:	06 c0       	rjmp	.+12     	; 0x2484 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xfc>
            {
              exportLongData(color0Bit);
    2478:	69 81       	ldd	r22, Y+1	; 0x01
    247a:	7a 81       	ldd	r23, Y+2	; 0x02
    247c:	c2 01       	movw	r24, r4
    247e:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    2482:	1a c0       	rjmp	.+52     	; 0x24b8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    2484:	f1 e0       	ldi	r31, 0x01	; 1
    2486:	df 12       	cpse	r13, r31
    2488:	06 c0       	rjmp	.+12     	; 0x2496 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x10e>
            {
              exportLongData(color1Bit);
    248a:	69 85       	ldd	r22, Y+9	; 0x09
    248c:	7a 85       	ldd	r23, Y+10	; 0x0a
    248e:	c2 01       	movw	r24, r4
    2490:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    2494:	11 c0       	rjmp	.+34     	; 0x24b8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    2496:	22 e0       	ldi	r18, 0x02	; 2
    2498:	d2 12       	cpse	r13, r18
    249a:	06 c0       	rjmp	.+12     	; 0x24a8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x120>
            {
              exportLongData(color2Bit);
    249c:	6b a1       	ldd	r22, Y+35	; 0x23
    249e:	7c a1       	ldd	r23, Y+36	; 0x24
    24a0:	c2 01       	movw	r24, r4
    24a2:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    24a6:	08 c0       	rjmp	.+16     	; 0x24b8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    24a8:	33 e0       	ldi	r19, 0x03	; 3
    24aa:	d3 12       	cpse	r13, r19
    24ac:	05 c0       	rjmp	.+10     	; 0x24b8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            {
              exportLongData(color3Bit);
    24ae:	6d a1       	ldd	r22, Y+37	; 0x25
    24b0:	7e a1       	ldd	r23, Y+38	; 0x26
    24b2:	c2 01       	movw	r24, r4
    24b4:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <_ZN3SPI14exportLongDataEj>
    24b8:	01 50       	subi	r16, 0x01	; 1
    24ba:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    24bc:	d9 f6       	brne	.-74     	; 0x2474 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xec>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    24be:	cc 0c       	add	r12, r12
    24c0:	cc 0c       	add	r12, r12
    24c2:	81 e0       	ldi	r24, 0x01	; 1
    24c4:	68 1a       	sub	r6, r24
    24c6:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    24c8:	61 f6       	brne	.-104    	; 0x2462 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xda>
    24ca:	9f ef       	ldi	r25, 0xFF	; 255
    24cc:	e9 1a       	sub	r14, r25
    24ce:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    24d0:	8e 14       	cp	r8, r14
    24d2:	9f 04       	cpc	r9, r15
    24d4:	09 f0       	breq	.+2      	; 0x24d8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x150>
    24d6:	bf cf       	rjmp	.-130    	; 0x2456 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xce>
    24d8:	e1 e0       	ldi	r30, 0x01	; 1
    24da:	ae 1a       	sub	r10, r30
    24dc:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    24de:	09 f0       	breq	.+2      	; 0x24e2 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x15a>
    24e0:	b2 cf       	rjmp	.-156    	; 0x2446 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xbe>
    24e2:	6b 80       	ldd	r6, Y+3	; 0x03
    24e4:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    24e6:	ff ef       	ldi	r31, 0xFF	; 255
    24e8:	2f 1a       	sub	r2, r31
    24ea:	3f 0a       	sbc	r3, r31
    24ec:	2f 81       	ldd	r18, Y+7	; 0x07
    24ee:	38 85       	ldd	r19, Y+8	; 0x08
    24f0:	62 0e       	add	r6, r18
    24f2:	73 1e       	adc	r7, r19
    24f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    24f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    24f8:	28 16       	cp	r2, r24
    24fa:	39 06       	cpc	r3, r25
    24fc:	09 f0       	breq	.+2      	; 0x2500 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x178>
    24fe:	97 cf       	rjmp	.-210    	; 0x242e <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xa6>

      }
    }
  }

    2500:	2e 96       	adiw	r28, 0x0e	; 14
    2502:	0f b6       	in	r0, 0x3f	; 63
    2504:	f8 94       	cli
    2506:	de bf       	out	0x3e, r29	; 62
    2508:	0f be       	out	0x3f, r0	; 63
    250a:	cd bf       	out	0x3d, r28	; 61
    250c:	df 91       	pop	r29
    250e:	cf 91       	pop	r28
    2510:	1f 91       	pop	r17
    2512:	0f 91       	pop	r16
    2514:	ff 90       	pop	r15
    2516:	ef 90       	pop	r14
    2518:	df 90       	pop	r13
    251a:	cf 90       	pop	r12
    251c:	bf 90       	pop	r11
    251e:	af 90       	pop	r10
    2520:	9f 90       	pop	r9
    2522:	8f 90       	pop	r8
    2524:	7f 90       	pop	r7
    2526:	6f 90       	pop	r6
    2528:	5f 90       	pop	r5
    252a:	4f 90       	pop	r4
    252c:	3f 90       	pop	r3
    252e:	2f 90       	pop	r2
    2530:	08 95       	ret

00002532 <__udivmodsi4>:
    2532:	a1 e2       	ldi	r26, 0x21	; 33
    2534:	1a 2e       	mov	r1, r26
    2536:	aa 1b       	sub	r26, r26
    2538:	bb 1b       	sub	r27, r27
    253a:	fd 01       	movw	r30, r26
    253c:	0d c0       	rjmp	.+26     	; 0x2558 <__udivmodsi4_ep>

0000253e <__udivmodsi4_loop>:
    253e:	aa 1f       	adc	r26, r26
    2540:	bb 1f       	adc	r27, r27
    2542:	ee 1f       	adc	r30, r30
    2544:	ff 1f       	adc	r31, r31
    2546:	a2 17       	cp	r26, r18
    2548:	b3 07       	cpc	r27, r19
    254a:	e4 07       	cpc	r30, r20
    254c:	f5 07       	cpc	r31, r21
    254e:	20 f0       	brcs	.+8      	; 0x2558 <__udivmodsi4_ep>
    2550:	a2 1b       	sub	r26, r18
    2552:	b3 0b       	sbc	r27, r19
    2554:	e4 0b       	sbc	r30, r20
    2556:	f5 0b       	sbc	r31, r21

00002558 <__udivmodsi4_ep>:
    2558:	66 1f       	adc	r22, r22
    255a:	77 1f       	adc	r23, r23
    255c:	88 1f       	adc	r24, r24
    255e:	99 1f       	adc	r25, r25
    2560:	1a 94       	dec	r1
    2562:	69 f7       	brne	.-38     	; 0x253e <__udivmodsi4_loop>
    2564:	60 95       	com	r22
    2566:	70 95       	com	r23
    2568:	80 95       	com	r24
    256a:	90 95       	com	r25
    256c:	9b 01       	movw	r18, r22
    256e:	ac 01       	movw	r20, r24
    2570:	bd 01       	movw	r22, r26
    2572:	cf 01       	movw	r24, r30
    2574:	08 95       	ret

00002576 <__tablejump2__>:
    2576:	ee 0f       	add	r30, r30
    2578:	ff 1f       	adc	r31, r31
    257a:	05 90       	lpm	r0, Z+
    257c:	f4 91       	lpm	r31, Z
    257e:	e0 2d       	mov	r30, r0
    2580:	09 94       	ijmp

00002582 <_exit>:
    2582:	f8 94       	cli

00002584 <__stop_program>:
    2584:	ff cf       	rjmp	.-2      	; 0x2584 <__stop_program>
