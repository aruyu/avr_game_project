
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000564  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000025e  00800100  00800100  00000564  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000564  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d73  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd2  00000000  00000000  00002437  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b43  00000000  00000000  00003009  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  00003b4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000848  00000000  00000000  00003db4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fd4  00000000  00000000  000045fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000055d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
   c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  24:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  34:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  48:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  4c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
  64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_start>:
  68:	ec 00       	.word	0x00ec	; ????

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_clear_bss>:
  76:	23 e0       	ldi	r18, 0x03	; 3
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 35       	cpi	r26, 0x5E	; 94
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>

00000086 <__do_global_ctors>:
  86:	10 e0       	ldi	r17, 0x00	; 0
  88:	c5 e3       	ldi	r28, 0x35	; 53
  8a:	d0 e0       	ldi	r29, 0x00	; 0
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_global_ctors+0x10>
  8e:	21 97       	sbiw	r28, 0x01	; 1
  90:	fe 01       	movw	r30, r28
  92:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__tablejump2__>
  96:	c4 33       	cpi	r28, 0x34	; 52
  98:	d1 07       	cpc	r29, r17
  9a:	c9 f7       	brne	.-14     	; 0x8e <__do_global_ctors+0x8>
  9c:	0e 94 54 00 	call	0xa8	; 0xa8 <main>
  a0:	0c 94 76 02 	jmp	0x4ec	; 0x4ec <_exit>

000000a4 <__bad_interrupt>:
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
  a8:	61 e0       	ldi	r22, 0x01	; 1
  aa:	80 e0       	ldi	r24, 0x00	; 0
  ac:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_ZN3MCU7Setting9beginPortEab>

  tft.begin();
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	91 e0       	ldi	r25, 0x01	; 1
  b4:	0e 94 2f 01 	call	0x25e	; 0x25e <_ZN3TFT5beginEv>
  tft.setRotation(1);
  b8:	61 e0       	ldi	r22, 0x01	; 1
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	0e 94 84 01 	call	0x308	; 0x308 <_ZN3TFT11setRotationEa>
  tft.fillScreen(BLACK);
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	91 e0       	ldi	r25, 0x01	; 1
  ca:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>

  tft.drawRect(70, 0, 88, 31, RED);
  ce:	0f 2e       	mov	r0, r31
  d0:	e1 2c       	mov	r14, r1
  d2:	f8 ef       	ldi	r31, 0xF8	; 248
  d4:	ff 2e       	mov	r15, r31
  d6:	f0 2d       	mov	r31, r0
  d8:	0f e1       	ldi	r16, 0x1F	; 31
  da:	10 e0       	ldi	r17, 0x00	; 0
  dc:	28 e5       	ldi	r18, 0x58	; 88
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	40 e0       	ldi	r20, 0x00	; 0
  e2:	50 e0       	ldi	r21, 0x00	; 0
  e4:	66 e4       	ldi	r22, 0x46	; 70
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	0e 94 3b 02 	call	0x476	; 0x476 <_ZN3TFT8drawRectEiiiij>
  tft.drawRect(70, 70, 45, 31, GREEN);
  f0:	0f 2e       	mov	r0, r31
  f2:	f0 ee       	ldi	r31, 0xE0	; 224
  f4:	ef 2e       	mov	r14, r31
  f6:	f7 e0       	ldi	r31, 0x07	; 7
  f8:	ff 2e       	mov	r15, r31
  fa:	f0 2d       	mov	r31, r0
  fc:	2d e2       	ldi	r18, 0x2D	; 45
  fe:	30 e0       	ldi	r19, 0x00	; 0
 100:	46 e4       	ldi	r20, 0x46	; 70
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	66 e4       	ldi	r22, 0x46	; 70
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	0e 94 3b 02 	call	0x476	; 0x476 <_ZN3TFT8drawRectEiiiij>
  tft.drawRect(70, 140, 71, 31, BLUE);
 110:	0f 2e       	mov	r0, r31
 112:	ff e1       	ldi	r31, 0x1F	; 31
 114:	ef 2e       	mov	r14, r31
 116:	f1 2c       	mov	r15, r1
 118:	f0 2d       	mov	r31, r0
 11a:	27 e4       	ldi	r18, 0x47	; 71
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	4c e8       	ldi	r20, 0x8C	; 140
 120:	50 e0       	ldi	r21, 0x00	; 0
 122:	66 e4       	ldi	r22, 0x46	; 70
 124:	70 e0       	ldi	r23, 0x00	; 0
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	0e 94 3b 02 	call	0x476	; 0x476 <_ZN3TFT8drawRectEiiiij>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12e:	2f ef       	ldi	r18, 0xFF	; 255
 130:	83 e2       	ldi	r24, 0x23	; 35
 132:	94 ef       	ldi	r25, 0xF4	; 244
 134:	21 50       	subi	r18, 0x01	; 1
 136:	80 40       	sbci	r24, 0x00	; 0
 138:	90 40       	sbci	r25, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x8c>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0x96>
 13e:	00 00       	nop
  _delay_ms(5000);

  while (1)
  {
    tft.fillScreen(RED);
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	78 ef       	ldi	r23, 0xF8	; 248
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>
 14c:	2f ef       	ldi	r18, 0xFF	; 255
 14e:	89 e6       	ldi	r24, 0x69	; 105
 150:	98 e1       	ldi	r25, 0x18	; 24
 152:	21 50       	subi	r18, 0x01	; 1
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <main+0xaa>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0xb4>
 15c:	00 00       	nop
    _delay_ms(500);

    tft.fillScreen(ORANGE);
 15e:	60 e2       	ldi	r22, 0x20	; 32
 160:	7d ef       	ldi	r23, 0xFD	; 253
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>
 16a:	2f ef       	ldi	r18, 0xFF	; 255
 16c:	89 e6       	ldi	r24, 0x69	; 105
 16e:	98 e1       	ldi	r25, 0x18	; 24
 170:	21 50       	subi	r18, 0x01	; 1
 172:	80 40       	sbci	r24, 0x00	; 0
 174:	90 40       	sbci	r25, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <main+0xc8>
 178:	00 c0       	rjmp	.+0      	; 0x17a <main+0xd2>
 17a:	00 00       	nop
    _delay_ms(500);

    tft.fillScreen(YELLOW);
 17c:	60 ee       	ldi	r22, 0xE0	; 224
 17e:	7f ef       	ldi	r23, 0xFF	; 255
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>
 188:	2f ef       	ldi	r18, 0xFF	; 255
 18a:	89 e6       	ldi	r24, 0x69	; 105
 18c:	98 e1       	ldi	r25, 0x18	; 24
 18e:	21 50       	subi	r18, 0x01	; 1
 190:	80 40       	sbci	r24, 0x00	; 0
 192:	90 40       	sbci	r25, 0x00	; 0
 194:	e1 f7       	brne	.-8      	; 0x18e <main+0xe6>
 196:	00 c0       	rjmp	.+0      	; 0x198 <main+0xf0>
 198:	00 00       	nop
    _delay_ms(500);

    tft.fillScreen(GREEN);
 19a:	60 ee       	ldi	r22, 0xE0	; 224
 19c:	77 e0       	ldi	r23, 0x07	; 7
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	89 e6       	ldi	r24, 0x69	; 105
 1aa:	98 e1       	ldi	r25, 0x18	; 24
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	80 40       	sbci	r24, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x104>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x10e>
 1b6:	00 00       	nop
    _delay_ms(500);

    tft.fillScreen(BLUE);
 1b8:	6f e1       	ldi	r22, 0x1F	; 31
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_ZN3TFT10fillScreenEj>
 1c4:	2f ef       	ldi	r18, 0xFF	; 255
 1c6:	89 e6       	ldi	r24, 0x69	; 105
 1c8:	98 e1       	ldi	r25, 0x18	; 24
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <main+0x122>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <main+0x12c>
 1d4:	00 00       	nop
 1d6:	b4 cf       	rjmp	.-152    	; 0x140 <main+0x98>

000001d8 <_GLOBAL__sub_I_tft>:

class SPI
{

public:
  SPI() { SPCR = (1 << SPE) | (1 << MSTR); SPSR = (1 << SPI2X); };
 1d8:	80 e5       	ldi	r24, 0x50	; 80
 1da:	8c bd       	out	0x2c, r24	; 44
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	8d bd       	out	0x2d, r24	; 45
  int16_t m_Height;
  int16_t m_Temp;
  const int16_t *m_Cache[15][20];

public:
  TFT(int16_t TFTWidth, int16_t TFTHeight) : SPI() { m_Width = TFTWidth; m_Height = TFTHeight; };
 1e0:	e0 e0       	ldi	r30, 0x00	; 0
 1e2:	f1 e0       	ldi	r31, 0x01	; 1
 1e4:	80 ef       	ldi	r24, 0xF0	; 240
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	91 83       	std	Z+1, r25	; 0x01
 1ea:	80 83       	st	Z, r24
 1ec:	80 e4       	ldi	r24, 0x40	; 64
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	93 83       	std	Z+3, r25	; 0x03
 1f2:	82 83       	std	Z+2, r24	; 0x02
 1f4:	08 95       	ret

000001f6 <_ZN3MCU7Setting9beginPortEab>:

  uint8_t ddrValue;
  uint8_t portValue;

  // INPUT or OUTPUT
  if (isOutput == true)
 1f6:	61 95       	neg	r22
  else
  {
    ddrValue = 0x00;
  }

  switch (port)
 1f8:	81 30       	cpi	r24, 0x01	; 1
 1fa:	39 f0       	breq	.+14     	; 0x20a <_ZN3MCU7Setting9beginPortEab+0x14>
 1fc:	82 30       	cpi	r24, 0x02	; 2
 1fe:	41 f0       	breq	.+16     	; 0x210 <_ZN3MCU7Setting9beginPortEab+0x1a>
 200:	81 11       	cpse	r24, r1
 202:	08 c0       	rjmp	.+16     	; 0x214 <_ZN3MCU7Setting9beginPortEab+0x1e>
  {
    // PORTB
  case B:
    DDRB = ddrValue;
 204:	64 b9       	out	0x04, r22	; 4
    PORTB = portValue;
 206:	15 b8       	out	0x05, r1	; 5
    break;
 208:	08 95       	ret

    // PORTC
  case C:
    DDRC = ddrValue;
 20a:	67 b9       	out	0x07, r22	; 7
    PORTC = portValue;
 20c:	18 b8       	out	0x08, r1	; 8
    break;
 20e:	08 95       	ret

    // PORTD
  case D:
    DDRD = ddrValue;
 210:	6a b9       	out	0x0a, r22	; 10
    PORTD = portValue;
 212:	1b b8       	out	0x0b, r1	; 11
 214:	08 95       	ret

00000216 <_ZN3SPI7sendBitEh>:

void TFT::drawPixel(int16_t xPos, int16_t yPos, uint16_t colorValue)
{
  setAddress(xPos, yPos, xPos, yPos);
  exportLongData(colorValue);
}
 216:	6e bd       	out	0x2e, r22	; 46
 218:	0d b4       	in	r0, 0x2d	; 45
 21a:	07 fe       	sbrs	r0, 7
 21c:	fd cf       	rjmp	.-6      	; 0x218 <_ZN3SPI7sendBitEh+0x2>
 21e:	08 95       	ret

00000220 <_ZN3SPI13exportCommandEh>:
 220:	2a 98       	cbi	0x05, 2	; 5
 222:	28 98       	cbi	0x05, 0	; 5
 224:	0e 94 0b 01 	call	0x216	; 0x216 <_ZN3SPI7sendBitEh>
 228:	28 9a       	sbi	0x05, 0	; 5
 22a:	08 95       	ret

0000022c <_ZN3SPI10exportDataEh>:
 22c:	2a 9a       	sbi	0x05, 2	; 5
 22e:	28 98       	cbi	0x05, 0	; 5
 230:	0e 94 0b 01 	call	0x216	; 0x216 <_ZN3SPI7sendBitEh>
 234:	28 9a       	sbi	0x05, 0	; 5
 236:	08 95       	ret

00000238 <_ZN3SPI14exportLongDataEj>:
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	ec 01       	movw	r28, r24
 240:	16 2f       	mov	r17, r22
 242:	67 2f       	mov	r22, r23
 244:	2a 9a       	sbi	0x05, 2	; 5
 246:	28 98       	cbi	0x05, 0	; 5
 248:	0e 94 0b 01 	call	0x216	; 0x216 <_ZN3SPI7sendBitEh>
 24c:	61 2f       	mov	r22, r17
 24e:	ce 01       	movw	r24, r28
 250:	0e 94 0b 01 	call	0x216	; 0x216 <_ZN3SPI7sendBitEh>
 254:	28 9a       	sbi	0x05, 0	; 5
 256:	df 91       	pop	r29
 258:	cf 91       	pop	r28
 25a:	1f 91       	pop	r17
 25c:	08 95       	ret

0000025e <_ZN3TFT5beginEv>:
 25e:	cf 93       	push	r28
 260:	df 93       	push	r29
 262:	ec 01       	movw	r28, r24
 264:	28 9a       	sbi	0x05, 0	; 5
 266:	29 98       	cbi	0x05, 1	; 5
 268:	2f ef       	ldi	r18, 0xFF	; 255
 26a:	89 ef       	ldi	r24, 0xF9	; 249
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	21 50       	subi	r18, 0x01	; 1
 270:	80 40       	sbci	r24, 0x00	; 0
 272:	90 40       	sbci	r25, 0x00	; 0
 274:	e1 f7       	brne	.-8      	; 0x26e <_ZN3TFT5beginEv+0x10>
 276:	00 c0       	rjmp	.+0      	; 0x278 <_ZN3TFT5beginEv+0x1a>
 278:	00 00       	nop
 27a:	29 9a       	sbi	0x05, 1	; 5
 27c:	2f ef       	ldi	r18, 0xFF	; 255
 27e:	89 e6       	ldi	r24, 0x69	; 105
 280:	98 e1       	ldi	r25, 0x18	; 24
 282:	21 50       	subi	r18, 0x01	; 1
 284:	80 40       	sbci	r24, 0x00	; 0
 286:	90 40       	sbci	r25, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <_ZN3TFT5beginEv+0x24>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <_ZN3TFT5beginEv+0x2e>
 28c:	00 00       	nop
 28e:	61 e0       	ldi	r22, 0x01	; 1
 290:	ce 01       	movw	r24, r28
 292:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 296:	2f ef       	ldi	r18, 0xFF	; 255
 298:	89 ef       	ldi	r24, 0xF9	; 249
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	21 50       	subi	r18, 0x01	; 1
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	90 40       	sbci	r25, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <_ZN3TFT5beginEv+0x3e>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <_ZN3TFT5beginEv+0x48>
 2a6:	00 00       	nop
 2a8:	60 ec       	ldi	r22, 0xC0	; 192
 2aa:	ce 01       	movw	r24, r28
 2ac:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 2b0:	6b e2       	ldi	r22, 0x2B	; 43
 2b2:	ce 01       	movw	r24, r28
 2b4:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 2b8:	66 e3       	ldi	r22, 0x36	; 54
 2ba:	ce 01       	movw	r24, r28
 2bc:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 2c0:	68 e4       	ldi	r22, 0x48	; 72
 2c2:	ce 01       	movw	r24, r28
 2c4:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 2c8:	6a e3       	ldi	r22, 0x3A	; 58
 2ca:	ce 01       	movw	r24, r28
 2cc:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 2d0:	65 e5       	ldi	r22, 0x55	; 85
 2d2:	ce 01       	movw	r24, r28
 2d4:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 2d8:	60 e2       	ldi	r22, 0x20	; 32
 2da:	ce 01       	movw	r24, r28
 2dc:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 2e0:	61 e1       	ldi	r22, 0x11	; 17
 2e2:	ce 01       	movw	r24, r28
 2e4:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 2e8:	2f ef       	ldi	r18, 0xFF	; 255
 2ea:	89 ef       	ldi	r24, 0xF9	; 249
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <_ZN3TFT5beginEv+0x90>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <_ZN3TFT5beginEv+0x9a>
 2f8:	00 00       	nop
 2fa:	69 e2       	ldi	r22, 0x29	; 41
 2fc:	ce 01       	movw	r24, r28
 2fe:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	08 95       	ret

00000308 <_ZN3TFT11setRotationEa>:
 308:	1f 93       	push	r17
 30a:	cf 93       	push	r28
 30c:	df 93       	push	r29
 30e:	ec 01       	movw	r28, r24
 310:	16 2f       	mov	r17, r22
 312:	66 e3       	ldi	r22, 0x36	; 54
 314:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 318:	11 30       	cpi	r17, 0x01	; 1
 31a:	c1 f0       	breq	.+48     	; 0x34c <_ZN3TFT11setRotationEa+0x44>
 31c:	1c f4       	brge	.+6      	; 0x324 <_ZN3TFT11setRotationEa+0x1c>
 31e:	11 23       	and	r17, r17
 320:	31 f0       	breq	.+12     	; 0x32e <_ZN3TFT11setRotationEa+0x26>
 322:	2c c0       	rjmp	.+88     	; 0x37c <_ZN3TFT11setRotationEa+0x74>
 324:	12 30       	cpi	r17, 0x02	; 2
 326:	b9 f0       	breq	.+46     	; 0x356 <_ZN3TFT11setRotationEa+0x4e>
 328:	13 30       	cpi	r17, 0x03	; 3
 32a:	d1 f0       	breq	.+52     	; 0x360 <_ZN3TFT11setRotationEa+0x58>
 32c:	27 c0       	rjmp	.+78     	; 0x37c <_ZN3TFT11setRotationEa+0x74>
 32e:	68 e2       	ldi	r22, 0x28	; 40
 330:	ce 01       	movw	r24, r28
 332:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 336:	88 81       	ld	r24, Y
 338:	99 81       	ldd	r25, Y+1	; 0x01
 33a:	9d 83       	std	Y+5, r25	; 0x05
 33c:	8c 83       	std	Y+4, r24	; 0x04
 33e:	2a 81       	ldd	r18, Y+2	; 0x02
 340:	3b 81       	ldd	r19, Y+3	; 0x03
 342:	39 83       	std	Y+1, r19	; 0x01
 344:	28 83       	st	Y, r18
 346:	9b 83       	std	Y+3, r25	; 0x03
 348:	8a 83       	std	Y+2, r24	; 0x02
 34a:	18 c0       	rjmp	.+48     	; 0x37c <_ZN3TFT11setRotationEa+0x74>
 34c:	68 e4       	ldi	r22, 0x48	; 72
 34e:	ce 01       	movw	r24, r28
 350:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 354:	13 c0       	rjmp	.+38     	; 0x37c <_ZN3TFT11setRotationEa+0x74>
 356:	68 e8       	ldi	r22, 0x88	; 136
 358:	ce 01       	movw	r24, r28
 35a:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 35e:	0e c0       	rjmp	.+28     	; 0x37c <_ZN3TFT11setRotationEa+0x74>
 360:	68 ee       	ldi	r22, 0xE8	; 232
 362:	ce 01       	movw	r24, r28
 364:	0e 94 16 01 	call	0x22c	; 0x22c <_ZN3SPI10exportDataEh>
 368:	88 81       	ld	r24, Y
 36a:	99 81       	ldd	r25, Y+1	; 0x01
 36c:	9d 83       	std	Y+5, r25	; 0x05
 36e:	8c 83       	std	Y+4, r24	; 0x04
 370:	2a 81       	ldd	r18, Y+2	; 0x02
 372:	3b 81       	ldd	r19, Y+3	; 0x03
 374:	39 83       	std	Y+1, r19	; 0x01
 376:	28 83       	st	Y, r18
 378:	9b 83       	std	Y+3, r25	; 0x03
 37a:	8a 83       	std	Y+2, r24	; 0x02
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	1f 91       	pop	r17
 382:	08 95       	ret

00000384 <_ZN3TFT10setAddressEiiii>:
 384:	af 92       	push	r10
 386:	bf 92       	push	r11
 388:	cf 92       	push	r12
 38a:	df 92       	push	r13
 38c:	ef 92       	push	r14
 38e:	ff 92       	push	r15
 390:	0f 93       	push	r16
 392:	1f 93       	push	r17
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	ec 01       	movw	r28, r24
 39a:	5b 01       	movw	r10, r22
 39c:	7a 01       	movw	r14, r20
 39e:	69 01       	movw	r12, r18
 3a0:	6a e2       	ldi	r22, 0x2A	; 42
 3a2:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 3a6:	b5 01       	movw	r22, r10
 3a8:	ce 01       	movw	r24, r28
 3aa:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>
 3ae:	b6 01       	movw	r22, r12
 3b0:	ce 01       	movw	r24, r28
 3b2:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>
 3b6:	6b e2       	ldi	r22, 0x2B	; 43
 3b8:	ce 01       	movw	r24, r28
 3ba:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 3be:	b7 01       	movw	r22, r14
 3c0:	ce 01       	movw	r24, r28
 3c2:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>
 3c6:	b8 01       	movw	r22, r16
 3c8:	ce 01       	movw	r24, r28
 3ca:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>
 3ce:	6c e2       	ldi	r22, 0x2C	; 44
 3d0:	ce 01       	movw	r24, r28
 3d2:	0e 94 10 01 	call	0x220	; 0x220 <_ZN3SPI13exportCommandEh>
 3d6:	df 91       	pop	r29
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	ff 90       	pop	r15
 3e0:	ef 90       	pop	r14
 3e2:	df 90       	pop	r13
 3e4:	cf 90       	pop	r12
 3e6:	bf 90       	pop	r11
 3e8:	af 90       	pop	r10
 3ea:	08 95       	ret

000003ec <_ZN3TFT10fillScreenEj>:
 3ec:	cf 92       	push	r12
 3ee:	df 92       	push	r13
 3f0:	ef 92       	push	r14
 3f2:	ff 92       	push	r15
 3f4:	0f 93       	push	r16
 3f6:	1f 93       	push	r17
 3f8:	cf 93       	push	r28
 3fa:	df 93       	push	r29
 3fc:	7c 01       	movw	r14, r24
 3fe:	6b 01       	movw	r12, r22
 400:	fc 01       	movw	r30, r24
 402:	02 81       	ldd	r16, Z+2	; 0x02
 404:	13 81       	ldd	r17, Z+3	; 0x03
 406:	01 50       	subi	r16, 0x01	; 1
 408:	11 09       	sbc	r17, r1
 40a:	20 81       	ld	r18, Z
 40c:	31 81       	ldd	r19, Z+1	; 0x01
 40e:	21 50       	subi	r18, 0x01	; 1
 410:	31 09       	sbc	r19, r1
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	0e 94 c2 01 	call	0x384	; 0x384 <_ZN3TFT10setAddressEiiii>
 41e:	f7 01       	movw	r30, r14
 420:	82 81       	ldd	r24, Z+2	; 0x02
 422:	93 81       	ldd	r25, Z+3	; 0x03
 424:	18 16       	cp	r1, r24
 426:	19 06       	cpc	r1, r25
 428:	ec f4       	brge	.+58     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 42a:	00 e0       	ldi	r16, 0x00	; 0
 42c:	10 e0       	ldi	r17, 0x00	; 0
 42e:	f7 01       	movw	r30, r14
 430:	80 81       	ld	r24, Z
 432:	91 81       	ldd	r25, Z+1	; 0x01
 434:	18 16       	cp	r1, r24
 436:	19 06       	cpc	r1, r25
 438:	6c f4       	brge	.+26     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 43a:	c0 e0       	ldi	r28, 0x00	; 0
 43c:	d0 e0       	ldi	r29, 0x00	; 0
 43e:	b6 01       	movw	r22, r12
 440:	c7 01       	movw	r24, r14
 442:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>
 446:	21 96       	adiw	r28, 0x01	; 1
 448:	f7 01       	movw	r30, r14
 44a:	80 81       	ld	r24, Z
 44c:	91 81       	ldd	r25, Z+1	; 0x01
 44e:	c8 17       	cp	r28, r24
 450:	d9 07       	cpc	r29, r25
 452:	ac f3       	brlt	.-22     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 454:	0f 5f       	subi	r16, 0xFF	; 255
 456:	1f 4f       	sbci	r17, 0xFF	; 255
 458:	f7 01       	movw	r30, r14
 45a:	82 81       	ldd	r24, Z+2	; 0x02
 45c:	93 81       	ldd	r25, Z+3	; 0x03
 45e:	08 17       	cp	r16, r24
 460:	19 07       	cpc	r17, r25
 462:	2c f3       	brlt	.-54     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	ff 90       	pop	r15
 46e:	ef 90       	pop	r14
 470:	df 90       	pop	r13
 472:	cf 90       	pop	r12
 474:	08 95       	ret

00000476 <_ZN3TFT8drawRectEiiiij>:
/*----------------------------------------//
              Draw Rect
//----------------------------------------*/

void TFT::drawRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
 476:	af 92       	push	r10
 478:	bf 92       	push	r11
 47a:	cf 92       	push	r12
 47c:	df 92       	push	r13
 47e:	ef 92       	push	r14
 480:	ff 92       	push	r15
 482:	0f 93       	push	r16
 484:	1f 93       	push	r17
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	6c 01       	movw	r12, r24
 48c:	59 01       	movw	r10, r18
 48e:	e8 01       	movw	r28, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
 490:	8a 01       	movw	r16, r20
 492:	0c 0f       	add	r16, r28
 494:	1d 1f       	adc	r17, r29
 496:	01 50       	subi	r16, 0x01	; 1
 498:	11 09       	sbc	r17, r1
 49a:	9b 01       	movw	r18, r22
 49c:	2a 0d       	add	r18, r10
 49e:	3b 1d       	adc	r19, r11
 4a0:	21 50       	subi	r18, 0x01	; 1
 4a2:	31 09       	sbc	r19, r1
 4a4:	0e 94 c2 01 	call	0x384	; 0x384 <_ZN3TFT10setAddressEiiii>

  for (yPos = height; yPos > 0; yPos--)
 4a8:	1c 16       	cp	r1, r28
 4aa:	1d 06       	cpc	r1, r29
 4ac:	74 f4       	brge	.+28     	; 0x4ca <_ZN3TFT8drawRectEiiiij+0x54>
 4ae:	8e 01       	movw	r16, r28
  {
    for (xPos = width; xPos > 0; xPos--)
 4b0:	1a 14       	cp	r1, r10
 4b2:	1b 04       	cpc	r1, r11
 4b4:	3c f4       	brge	.+14     	; 0x4c4 <_ZN3TFT8drawRectEiiiij+0x4e>
 4b6:	e5 01       	movw	r28, r10
    {
      exportLongData(colorValue);
 4b8:	b7 01       	movw	r22, r14
 4ba:	c6 01       	movw	r24, r12
 4bc:	0e 94 1c 01 	call	0x238	; 0x238 <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (yPos = height; yPos > 0; yPos--)
  {
    for (xPos = width; xPos > 0; xPos--)
 4c0:	21 97       	sbiw	r28, 0x01	; 1
 4c2:	d1 f7       	brne	.-12     	; 0x4b8 <_ZN3TFT8drawRectEiiiij+0x42>
void TFT::drawRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (yPos = height; yPos > 0; yPos--)
 4c4:	01 50       	subi	r16, 0x01	; 1
 4c6:	11 09       	sbc	r17, r1
 4c8:	99 f7       	brne	.-26     	; 0x4b0 <_ZN3TFT8drawRectEiiiij+0x3a>
    {
      exportLongData(colorValue);
    }
  }

 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	1f 91       	pop	r17
 4d0:	0f 91       	pop	r16
 4d2:	ff 90       	pop	r15
 4d4:	ef 90       	pop	r14
 4d6:	df 90       	pop	r13
 4d8:	cf 90       	pop	r12
 4da:	bf 90       	pop	r11
 4dc:	af 90       	pop	r10
 4de:	08 95       	ret

000004e0 <__tablejump2__>:
 4e0:	ee 0f       	add	r30, r30
 4e2:	ff 1f       	adc	r31, r31
 4e4:	05 90       	lpm	r0, Z+
 4e6:	f4 91       	lpm	r31, Z
 4e8:	e0 2d       	mov	r30, r0
 4ea:	09 94       	ijmp

000004ec <_exit>:
 4ec:	f8 94       	cli

000004ee <__stop_program>:
 4ee:	ff cf       	rjmp	.-2      	; 0x4ee <__stop_program>
