
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f6  00800100  000060a2  00006136  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000060a2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005e  008001f6  008001f6  0000622c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000622c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000625c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b0  00000000  00000000  000062a0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000efc7  00000000  00000000  00006650  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000018d0  00000000  00000000  00015617  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003361  00000000  00000000  00016ee7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000da0  00000000  00000000  0001a248  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000169a  00000000  00000000  0001afe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005cf4  00000000  00000000  0001c682  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d8  00000000  00000000  00022376  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 26 10 	jmp	0x204c	; 0x204c <__ctors_end>
       4:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__vector_1>
       8:	0c 94 03 11 	jmp	0x2206	; 0x2206 <__vector_2>
       c:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      10:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      14:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      18:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      1c:	0c 94 cf 10 	jmp	0x219e	; 0x219e <__vector_7>
      20:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      24:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      28:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      2c:	0c 94 80 10 	jmp	0x2100	; 0x2100 <__vector_11>
      30:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      34:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      38:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      3c:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      40:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      44:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      48:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      4c:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      50:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      54:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      58:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      5c:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      60:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      64:	0c 94 4e 10 	jmp	0x209c	; 0x209c <__bad_interrupt>
      68:	32 11       	cpse	r19, r2
      6a:	35 11       	cpse	r19, r5
      6c:	38 11       	cpse	r19, r8
      6e:	3b 11       	cpse	r19, r11
      70:	3e 11       	cpse	r19, r14
      72:	41 11       	cpse	r20, r1
      74:	44 11       	cpse	r20, r4
      76:	54 11       	cpse	r21, r4
      78:	59 11       	cpse	r21, r9
      7a:	5b 11       	cpse	r21, r11
      7c:	60 11       	cpse	r22, r0
      7e:	62 11       	cpse	r22, r2
      80:	67 11       	cpse	r22, r7
      82:	69 11       	cpse	r22, r9
      84:	6b 11       	cpse	r22, r11
      86:	6d 11       	cpse	r22, r13
      88:	72 11       	cpse	r23, r2
      8a:	74 11       	cpse	r23, r4
      8c:	79 11       	cpse	r23, r9
      8e:	7b 11       	cpse	r23, r11
      90:	80 11       	cpse	r24, r0
      92:	82 11       	cpse	r24, r2
      94:	84 11       	cpse	r24, r4
      96:	86 11       	cpse	r24, r6
      98:	97 11       	cpse	r25, r7
      9a:	9c 11       	cpse	r25, r12
      9c:	9e 11       	cpse	r25, r14
      9e:	a3 11       	cpse	r26, r3
      a0:	a8 11       	cpse	r26, r8
      a2:	aa 11       	cpse	r26, r10
      a4:	af 11       	cpse	r26, r15
      a6:	b1 11       	cpse	r27, r1
      a8:	b6 11       	cpse	r27, r6
      aa:	bb 11       	cpse	r27, r11
      ac:	bd 11       	cpse	r27, r13
      ae:	c6 11       	cpse	r28, r6
      b0:	c6 11       	cpse	r28, r6
      b2:	c6 11       	cpse	r28, r6
      b4:	c2 11       	cpse	r28, r2
      b6:	c4 11       	cpse	r28, r4

000000b8 <__trampolines_end>:
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 00       	nop
      be:	00 0f       	add	r16, r16
      c0:	ff 00       	.word	0x00ff	; ????
      c2:	00 00       	nop
      c4:	fa aa       	std	Y+50, r15	; 0x32
      c6:	c0 00       	.word	0x00c0	; ????
      c8:	03 aa       	std	Z+51, r0	; 0x33
      ca:	aa b0       	in	r10, 0x0a	; 10
      cc:	00 0e       	add	r0, r16
      ce:	aa ff       	.word	0xffaa	; ????
      d0:	ac 00       	.word	0x00ac	; ????
      d2:	0e ab       	std	Y+54, r16	; 0x36
      d4:	ff ec       	ldi	r31, 0xCF	; 207
      d6:	00 35       	cpi	r16, 0x50	; 80
      d8:	af ff       	.word	0xffaf	; ????
      da:	fc 00       	.word	0x00fc	; ????
      dc:	35 5f       	subi	r19, 0xF5	; 245
      de:	cf 3c       	cpi	r28, 0xCF	; 207
      e0:	00 35       	cpi	r16, 0x50	; 80
      e2:	5f cf       	rjmp	.-322    	; 0xffffffa2 <__eeprom_end+0xff7effa2>
      e4:	3c 00       	.word	0x003c	; ????
      e6:	f5 5f       	subi	r31, 0xF5	; 245
      e8:	ff fc       	.word	0xfcff	; ????
      ea:	00 ff       	sbrs	r16, 0
      ec:	5c ff       	.word	0xff5c	; ????
      ee:	3c 00       	.word	0x003c	; ????
      f0:	3f ed       	ldi	r19, 0xDF	; 223
      f2:	00 3c       	cpi	r16, 0xC0	; 192
      f4:	00 03       	mulsu	r16, r16
      f6:	ad 50       	subi	r26, 0x0D	; 13
      f8:	7c 00       	.word	0x007c	; ????
      fa:	03 ae       	std	Z+59, r0	; 0x3b
      fc:	50 7c       	andi	r21, 0xC0	; 192
      fe:	00 0e       	add	r0, r16
     100:	a6 60       	ori	r26, 0x06	; 6
     102:	9c 00       	.word	0x009c	; ????
     104:	0e aa       	std	Y+54, r0	; 0x36
     106:	60 ac       	ldd	r6, Z+56	; 0x38
     108:	00 0e       	add	r0, r16
     10a:	aa 60       	ori	r26, 0x0A	; 10
     10c:	ac 00       	.word	0x00ac	; ????
     10e:	fa a5       	ldd	r31, Y+42	; 0x2a
     110:	80 2c       	mov	r8, r0
     112:	03 55       	subi	r16, 0x53	; 83
     114:	5a 00       	.word	0x005a	; ????
     116:	2b 0e       	add	r2, r27
     118:	aa a0       	ldd	r10, Y+34	; 0x22
     11a:	00 0b       	sbc	r16, r16

0000011c <_ZL7bigStar>:
     11c:	20 20 d8 20 20                                        .  

00000121 <_ZL10smallStar1>:
     121:	c0 c0 00 00 00                                      .....

00000126 <_ZL10smallStar0>:
     126:	40 e0 40 00 00                                      @.@..

0000012b <_ZL8moonTile>:
     12b:	07 00 1c 00 38 00 78 00 70 00 f0 00 f0 00 f0 00     ....8.x.p.......
     13b:	f8 01 f8 01 fc 03 7f 0e 7f fe 3f fc 1f f8 07 e0     ..........?.....

0000014b <_ZL10creditMenu>:
	...
     15b:	00 10 87 f0 1f e3 c8 f5 1e a1 08 07 91 fc 7a 9f     ..............z.
     16b:	90 20 7e 80 10 04 80 48 85 10 a7 e8 08 50 20 0a     . ~....H.....P .
     17b:	80 10 20 00 80 10 04 80 48 ed 10 a0 08 07 90 50     .. .....H......P
     18b:	7b 89 10 50 3c 80 10 1f e3 c8 85 10 a3 cc 00 11     {..P<...........
     19b:	8c 12 89 70 88 42 cf f8 03 02 08 f5 10 e4 28 1f     ...p.B........(.
     1ab:	d0 00 22 89 13 06 42 80 80 3f f2 08 00 10 a3 c8     .."...B..?......
     1bb:	02 13 fe 40 09 10 00 3c 87 f0 00 43 e8 7f 1e a0     ...@...<...C....
     1cb:	00 06 f0 20 1f 9f d0 00 00 80 10 0f c0 08 01 00     ... ............
     1db:	a3 f8 04 10 20 10 80 13 fe 20 00 10 08 00 08 01     .... .... ......
     1eb:	00 a0 08 04 00 20 10 80 10 00 3f 80 10 0f c0 08     ..... ....?.....
     1fb:	01 00 a0 08 07 f0 20 1f 80 10 00 00 00 00 00 00     ...... .........
	...
     29f:	1e 43 f0 fe 08 4f d0 00 7c 84 50 3f 40 7f 01 02     .C...O..|.P?@...
     2af:	04 21 40 10 02 3f 40 50 04 04 84 50 21 40 01 02     .!@..?@P...P!@..
     2bf:	82 04 21 43 f0 12 00 40 50 1c 04 84 70 21 40 01     ..!C...@P...p!@.
     2cf:	04 42 04 21 42 00 10 1e 60 50 04 08 8a 50 3f 40     .B.!B...`P...P?@
     2df:	01 18 32 04 1e 43 f1 ff 21 42 5c 04 10 91 50 00     ..2..C..!B\...P.
     2ef:	40 25 00 03 f4 00 41 20 00 1e 42 50 04 20 80 00     @%....A ..BP. ..
     2ff:	02 00 25 1f f0 00 00 41 20 7c 00 02 10 04 40 83     ..%....A |....@.
     30f:	e0 1f c0 24 01 01 fc 3f 4f fc 82 1f cf d0 04 00     ...$...?O.......
     31f:	84 10 02 00 ff 81 01 04 00 40 00 82 00 40 10 04     .........@...@..
     32f:	00 84 10 05 00 00 01 01 04 00 00 00 7c 00 40 10     ............|.@.
     33f:	00 00 83 e0 18 c0 00 01 01 fc                       ..........

00000349 <_ZL9titleMenu>:
     349:	00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00     . ..............
	...
     375:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     39d:	40 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00     @...............
	...
     3b5:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 01     ................
     3c5:	50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     P...............
     3d5:	00 00 00 00 00 00 40 00 00 00 00 00 00 00 01 00     ......@.........
	...
     3ed:	40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     @...............
	...
     419:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     431:	00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     44d:	00 01 00 00 00 00 00 00 00 00 00 00 00 05 00 00     ................
	...
     475:	00 06 40 00 00 00 00 00 00 00 00 00 00 00 00 00     ..@.............
	...
     495:	00 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00     ................
	...
     4ad:	00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00     .. .............
     4bd:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     4e5:	00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     4f5:	00 00 00 00 00 02 00 00 00 00 00 00 00 04 00 00     ................
	...
     50d:	00 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     545:	10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     555:	00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00     ................
	...
     56d:	10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     57d:	00 00 00 00 00 06 40 00 00 00 00 00 00 00 00 00     ......@.........
     58d:	00 00 00 00 00 00 00 01 65 00 00 00 00 00 00 00     ........e.......
	...
     5a9:	00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     5b9:	00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00     ................
     5c9:	00 00 00 00 00 0f ff ff f0 0f ff ff ff 0f ff ff     ................
     5d9:	f0 00 00 3f c0 03 fc 03 ff ff c0 03 ff ff c0 3f     ...?...........?
     5e9:	ff ff c0 00 00 00 00 00 00 00 00 00 00 0f ff ff     ................
     5f9:	f0 0f ff ff ff 0f ff ff f0 00 00 3f c0 03 fc 03     ...........?....
     609:	ff ff c0 03 ff ff c0 3f ff ff c0 00 10 00 00 00     .......?........
     619:	00 00 00 00 00 0f f0 00 ff 0f f0 00 00 0f f0 00     ................
     629:	ff 00 50 3f c0 03 fc 3f c0 03 fc 3f c0 07 fc 3f     ..P?...?...?...?
     639:	c0 03 fc 00 64 00 00 00 00 00 00 00 00 0f f0 00     ....d...........
     649:	ff 0f f0 00 00 0f f0 00 ff 00 50 3f c0 03 fc 3f     ..........P?...?
     659:	c0 03 fc 3f c0 17 fc 3f c0 03 fc 00 10 00 00 00     ...?...?........
     669:	00 00 00 80 00 0f f0 00 ff 0f f0 00 00 0f f0 00     ................
     679:	ff 00 00 3f c2 03 fc 3f c0 03 fc 3f c0 07 fc 3f     ...?...?...?...?
     689:	c0 03 fc 00 00 00 00 00 00 00 00 00 00 0f f0 00     ................
     699:	ff 0f f0 00 00 0f f0 00 ff 00 00 3f c0 03 fc 3f     ...........?...?
     6a9:	c0 03 fc 3f c0 03 fc 3f c0 03 fc 00 00 00 00 00     ...?...?........
     6b9:	00 00 00 00 80 0f f0 00 ff 0f ff ff 00 0f f0 00     ................
     6c9:	ff 00 00 3f ff ff fc 3f c0 03 fc 3f c0 03 fc 3f     ...?...?...?...?
     6d9:	c0 03 fc 00 00 00 00 00 00 00 00 00 00 0f f0 00     ................
     6e9:	ff 0f ff ff 00 0f f8 00 ff 00 00 3f ff ff fc 3f     ...........?...?
     6f9:	c0 03 fc 7f c0 03 fc 3f c0 03 fc 00 00 00 00 00     .......?........
     709:	00 00 00 00 00 0f ff ff f0 0f f0 00 00 0f f0 00     ................
     719:	ff 00 00 3f c0 03 fc 3f c0 03 fc 3f c0 03 fc 3f     ...?...?...?...?
     729:	c0 03 fc 00 00 00 00 00 00 00 00 00 00 0f ff ff     ................
     739:	f0 0f f0 00 00 0f f0 00 ff 00 00 3f c0 03 fc 3f     ...........?...?
     749:	c0 03 fc 3f c0 03 fc 3f c0 03 fc 00 00 00 00 00     ...?...?........
     759:	00 00 00 00 00 0f f0 00 ff 0f f0 00 00 0f f0 00     ................
     769:	ff 00 00 3f c0 03 fc 3f c0 03 fc 3f c0 03 fc 3f     ...?...?...?...?
     779:	c4 03 fc 00 00 00 00 00 00 00 00 00 00 0f f0 10     ................
     789:	ff 0f f0 00 00 0f f0 00 ff 00 40 3f c0 03 fc 3f     ..........@?...?
     799:	c0 03 fc 3f c0 03 fc 3f c0 03 fc 00 00 00 00 00     ...?...?........
     7a9:	00 00 00 00 00 0f f0 00 ff 0f ff ff ff 0f ff ff     ................
     7b9:	f0 00 10 3f c0 03 fc 13 ff ff c0 03 ff ff c0 3f     ...?...........?
     7c9:	ff ff c0 00 00 00 00 00 00 00 00 00 00 0f f0 00     ................
     7d9:	ff 0f ff ff ff 0f ff ff f0 00 00 3f c0 03 fc 07     ...........?....
     7e9:	ff ff c0 03 ff ff c0 3f ff ff c0 00 00 00 00 10     .......?........
     7f9:	00 00 00 55 50 00 00 00 00 00 40 00 00 04 00 00     ...UP.....@.....
     809:	40 00 01 00 00 00 00 01 00 00 10 00 01 00 00 00     @...............
	...
     821:	00 00 05 55 55 00 05 50 00 00 10 00 00 01 00 00     ...UU..P........
     831:	00 00 00 40 00 40 00 00 40 00 04 00 00 40 00 00     ...@.@..@....@..
	...
     849:	00 00 15 55 55 40 55 55 00 00 04 04 00 00 40 00     ...UU@UU......@.
     859:	00 00 00 10 00 10 01 00 10 10 01 10 00 00 00 00     ................
	...
     871:	00 00 55 55 55 51 55 55 40 00 01 01 00 00 00 00     ..UUUQUU@.......
     881:	00 00 00 04 04 04 00 00 04 04 00 44 00 04 00 00     ...........D....
	...
     899:	00 00 55 55 55 55 55 55 40 00 00 40 40 40 00 00     ..UUUUUU@..@@@..
     8a9:	00 00 00 01 01 11 00 10 01 01 00 11 00 01 00 00     ................
     8b9:	10 00 00 00 00 00 00 00 00 01 55 55 55 55 55 55     ..........UUUUUU
     8c9:	50 00 00 10 10 3f fc 00 00 04 04 00 40 4f 40 04     P....?......@O@.
     8d9:	00 40 00 04 40 00 44 00 04 00 00 00 00 00 00 00     .@..@.D.........
     8e9:	00 01 55 55 55 55 55 55 50 00 00 44 04 3c 0f 7e     ..UUUUUUP..D.<.~
     8f9:	af 3f fd 3f fc 11 1f ff 03 ff d0 01 11 10 11 00     .?.?............
     909:	01 10 00 00 00 00 00 00 50 01 55 55 55 55 55 55     ........P.UUUUUU
     919:	50 15 40 11 11 3d 0f 3e af bc 4f 7c 4f 3f 4f 07     P.@..=.>..O|O?O.
     929:	cf 47 c4 04 44 44 04 40 40 40 00 00 00 00 00 00     .G..DD.@@@......
     939:	54 01 55 55 55 55 55 55 51 55 54 44 44 7c 4f be     T.UUUUUUQUTDD|O.
     949:	af bc 0f 3c 1f 1f 1f 03 df 13 c1 01 11 11 01 10     ...<............
     959:	10 00 00 00 00 00 00 00 55 14 55 55 55 55 55 55     ........U.UUUUUU
     969:	45 55 55 11 11 3f fe be af be 0f 7c 0f 4f 4f 47     EUU..?.....|.OOG
     979:	cf 07 c4 44 44 44 44 44 44 40 00 00 00 00 00 00     ...DDDDDD@......
     989:	55 55 55 55 55 55 55 55 55 55 55 14 44 7e af be     UUUUUUUUUUU.D~..
     999:	af be 9f 3d 1f 1f 1f 13 d3 ff d1 11 11 11 11 11     ...=............
     9a9:	11 00 00 00 00 00 00 00 55 55 55 55 55 55 55 55     ........UUUUUUUU
     9b9:	5a a9 55 55 51 3e af af ff be 8f 7c 4f 4f 5f 47     Z.UUQ>.....|OO_G
     9c9:	c4 57 c4 44 44 44 44 44 44 40 00 00 00 00 00 00     .W.DDDDDD@......
     9d9:	55 55 55 55 55 55 55 55 aa aa 95 55 54 55 aa aa     UUUUUUUU...UTU..
     9e9:	aa aa a1 15 11 11 15 51 17 ff 11 11 11 11 11 11     .......Q........
     9f9:	11 10 00 00 00 00 00 00 55 40 55 55 55 55 55 56     ........U@UUUUUV
     a09:	aa aa a5 55 55 55 5a aa aa aa a4 45 44 54 45 54     ...UUUZ....EDTET
     a19:	45 45 44 44 44 44 44 44 6a aa 00 00 00 00 00 00     EEDDDDDDj.......
     a29:	55 00 05 55 55 55 55 56 aa aa a5 55 55 55 56 95     U..UUUUV...UUUV.
     a39:	6a aa a5 11 51 15 11 55 11 51 51 11 11 11 11 12     j...Q..U.QQ.....
     a49:	aa aa a0 00 00 00 00 00 54 00 01 55 55 55 55 5a     ........T..UUUUZ
     a59:	aa aa a9 55 55 55 56 55 5a aa a5 44 54 45 44 55     ...UUUVUZ..DTEDU
     a69:	44 54 54 54 44 44 44 4a aa a8 00 00 00 00 00 00     DTTTDDDJ........
     a79:	50 00 00 54 05 55 55 5a aa aa a9 a9 55 55 55 55     P..T.UUZ....UUUU
     a89:	56 aa 95 51 55 11 55 55 55 15 55 15 55 11 11 1a     V..QU.UUU.U.U...
     a99:	aa a0 00 00 00 00 00 00 40 00 00 40 00 55 55 5a     ........@..@.UUZ
     aa9:	aa aa aa aa 55 aa 55 55 56 aa aa 94 55 44 55 55     ....U.UUV...UDUU
     ab9:	54 45 55 55 15 44 44 6a aa a0 00 00 00 00 00 00     TEUU.DDj........
     ac9:	50 00 00 00 00 55 55 5a aa aa aa aa 9a aa a5 55     P....UUZ.......U
     ad9:	56 55 aa a9 15 55 15 55 55 51 55 55 55 51 11 2a     VU...U.UUQUUUQ.*
     ae9:	a4 00 00 00 00 00 00 00 55 00 00 00 00 15 55 5a     ........U.....UZ
     af9:	55 aa aa aa aa aa a9 55 55 55 6a aa 55 55 45 55     U......UUUj.UUEU
     b09:	55 54 55 55 6a 94 44 6a 90 00 00 00 00 02 aa a8     UTUUj.Dj........
     b19:	55 40 00 05 54 15 55 55 55 5a a9 56 aa aa aa 55     U@..T.UUUZ.V...U
     b29:	55 55 5a aa 51 55 55 55 55 55 15 56 aa a9 1a 95     UUZ.QUUUUU.V....
     b39:	50 00 00 00 00 2a aa aa 55 50 00 55 55 55 55 55     P....*..UP.UUUUU
     b49:	55 56 95 55 6a aa aa 55 55 55 56 aa 94 55 54 55     UV.Uj..UUUV..UTU
     b59:	55 55 55 5a aa aa 69 55 40 00 00 00 00 aa aa aa     UUUZ..iU@.......
     b69:	55 54 01 55 55 55 55 55 55 56 55 55 5a aa aa 95     UT.UUUUUUVUUZ...
     b79:	55 55 55 aa 95 15 55 15 55 55 51 5a aa aa a9 55     UUU...U.UUQZ...U
     b89:	40 00 00 00 00 aa aa aa 55 55 05 55 55 55 50 00     @.......UU.UUUP.
     b99:	15 55 55 55 56 aa aa 95 55 aa 95 aa 95 55 55 55     .UUUV...U....UUU
     ba9:	95 55 54 6a aa aa a5 55 40 00 00 0a a8 aa aa aa     .UTj...U@.......
     bb9:	55 55 00 15 55 55 00 00 01 55 55 55 56 55 aa 95     UU..UU...UUUVU..
     bc9:	5a aa a9 aa 95 55 55 55 65 55 55 2a aa aa a5 55     Z....UUUeUU*...U
     bd9:	40 00 00 aa aa aa aa aa 55 55 40 01 55 54 00 00     @.......UU@.UT..
     be9:	00 55 55 55 55 55 6a 95 6a aa aa aa 55 55 55 55     .UUUUUj.j...UUUU
     bf9:	59 95 aa 6a aa aa a5 55 50 00 02 aa aa aa aa aa     Y..j...UP.......
     c09:	55 55 41 54 55 54 00 00 00 15 01 55 55 55 6a 55     UUATUT.....UUUjU
     c19:	6a aa aa aa a5 55 56 55 56 6a aa aa aa aa a5 55     j....UVUVj.....U
     c29:	50 00 02 aa aa aa aa aa 55 55 45 55 55 50 00 00     P.......UUEUUP..
     c39:	00 10 00 55 55 55 5a a5 6a aa aa aa a5 55 55 95     ...UUUZ.j....UU.
     c49:	56 aa aa aa aa aa a5 55 54 00 0a aa aa aa aa aa     V......UT.......
     c59:	55 55 55 55 00 50 00 00 00 00 15 55 55 55 aa aa     UUUU.P.....UUU..
     c69:	6a aa aa aa aa a9 55 55 aa aa aa aa aa aa a9 55     j.....UU.......U
     c79:	40 01 5a aa aa aa aa aa 55 55 55 50 00 00 00 00     @.Z.....UUUP....
     c89:	00 01 55 55 55 56 aa aa 9a aa 00 0a aa aa 95 59     ..UUUV.........Y
     c99:	5a aa aa aa aa aa aa 55 00 15 5a aa aa aa aa aa     Z......U..Z.....
     ca9:	55 55 55 40 00 00 00 01 54 05 55 55 55 55 6a aa     UUU@....T.UUUUj.
     cb9:	aa 80 00 00 2a aa a5 56 55 66 6a aa aa aa aa 54     ....*..VUfj....T
     cc9:	00 55 5a aa aa aa aa aa 55 50 05 00 00 00 00 05     .UZ.....UP......
     cd9:	55 45 55 55 55 55 55 aa aa 00 00 00 02 aa a9 55     UEUUUUU........U
     ce9:	95 99 99 99 99 aa a9 55 50 55 5a aa aa aa a5 56     .......UPUZ....V
     cf9:	55 40 01 00 00 00 00 00 05 55 55 55 55 55 55 5a     U@.......UUUUUUZ
     d09:	a8 00 00 00 00 aa a9 59 65 66 66 66 6a aa a5 55     .......Yefffj..U
     d19:	54 55 5a aa aa aa 95 55 55 00 00 00 00 00 00 00     TUZ....UU.......
     d29:	00 55 55 55 55 55 55 56 a8 00 00 00 00 2a 55 55     .UUUUUUV.....*UU
     d39:	99 99 aa a9 aa aa 95 55 55 55 56 aa aa aa 55 55     .......UUUV...UU
     d49:	05 00 00 00 00 00 00 00 00 14 05 55 55 55 55 55     ...........UUUUU
     d59:	a0 00 00 00 00 25 55 55 56 66 aa aa aa aa 95 55     .....%UUVf.....U
     d69:	55 55 55 aa aa aa 55 55 00 00 00 00 00 00 00 00     UUU...UU........
     d79:	00 00 00 55 55 55 55 00 20 00 00 00 00 05 55 55     ...UUUU. .....UU
     d89:	55 9a aa aa aa aa 55 55 55 55 aa aa aa aa 55 55     U.....UUUU....UU
	...
     da1:	00 00 00 55 55 55 50 00 00 00 00 00 00 05 55 55     ...UUUP.......UU
     db1:	55 5a aa aa aa aa 55 55 55 5a aa aa aa aa 55 55     UZ....UUUZ....UU
	...
     dc9:	00 00 00 15 55 55 50 00 00 00 00 00 00 05 55 55     ....UUP.......UU
     dd9:	55 56 aa aa aa aa 55 55 55 6a aa aa aa aa 55 55     UV....UUUj....UU
	...
     df1:	00 55 40 15 55 55 54 00 00 00 00 00 00 00 15 55     .U@.UUT........U
     e01:	55 56 aa ff fa aa 55 55 55 aa aa aa aa aa 95 55     UV....UUU......U
	...
     e19:	05 55 54 15 55 55 55 00 00 00 00 00 40 00 01 55     .UT.UUU.....@..U
     e29:	55 55 af ff ff aa 55 55 55 aa aa aa aa aa 55 55     UU....UUU.....UU
     e39:	00 00 00 00 00 00 01 54 15 55 55 15 55 55 55 00     .......T.UU.UUU.
     e49:	00 00 00 05 00 00 00 15 55 55 bf ff ff ea 95 55     ........UU.....U
     e59:	56 aa aa aa aa 95 55 55 ff c0 00 00 00 00 15 55     V.....UU.......U
     e69:	55 55 55 55 55 55 55 40 00 00 55 14 00 00 00 15     UUUUUUU@..U.....
     e79:	55 55 ff ff ff fa 95 56 aa aa aa aa a9 55 55 55     UU.....V.....UUU
     e89:	ff c0 3f fc 03 c0 55 55 55 55 57 d5 55 55 55 40     ..?...UUUUW.UUU@
     e99:	00 05 55 54 00 00 00 05 55 55 ff ff ff fa a5 6a     ..UT....UU.....j
     ea9:	aa aa aa aa a5 55 55 55 ff c0 f0 00 03 c0 7f f5     .....UUU........
     eb9:	ff f0 03 d5 55 01 55 05 50 15 55 50 00 00 00 05     ....U.U.P.UP....
     ec9:	55 55 ff ff ff fe bf aa aa aa a5 5a 95 55 55 55     UU.........Z.UUU
     ed9:	ff c0 f0 00 3f fd 55 7d f5 3c 3f fd 50 00 15 15     ....?.U}.<?.P...
     ee9:	54 55 55 50 00 00 00 04 01 54 ff ff ff fe ff aa     TUUP.....T......
     ef9:	aa aa 55 56 95 55 55 55 ff c0 3f f0 03 c1 7f fd     ..UV.UUU..?.....
     f09:	f4 00 03 c0 40 00 00 55 54 55 50 10 00 00 00 00     ....@..UTUP.....
     f19:	00 57 ff ff ff ff ff aa aa a9 55 55 55 55 55 55     .W........UUUUUU
     f29:	ff c0 00 3c 03 c1 f0 3d f4 00 03 c0 00 00 00 15     ...<...=........
     f39:	55 55 00 00 00 00 00 00 00 55 55 3f ff ff ff aa     UU.......UU?....
     f49:	aa aa a5 55 55 55 55 55 ff c0 00 3c 03 c0 f0 3c     ...UUUUU...<...<
     f59:	f0 00 03 c0 00 00 55 45 55 55 00 00 00 00 00 00     ......UEUU......
     f69:	55 15 55 53 ff ff ff ea aa aa a9 55 55 55 55 aa     U.US.......UUUU.
     f79:	ff c0 ff f0 03 c0 3f fc f0 00 03 c0 00 05 55 55     ......?.......UU
     f89:	55 54 55 50 00 00 00 00 05 55 55 54 ff ff fa aa     UTUP.....UUT....
     f99:	aa aa aa 55 55 55 6a aa ff c0 00 00 00 00 00 00     ...UUUj.........
     fa9:	00 00 00 00 00 15 55 55 55 55 55 55 00 00 00 00     ......UUUUUU....
     fb9:	01 50 05 55 3f ff ea aa aa aa aa 55 55 56 aa aa     .P.U?......UUV..
	...
     fd5:	00 15 55 55 55 55 55 55 40 00 00 00 01 00 00 55     ..UUUUUU@......U
     fe5:	7f ff ea aa aa aa aa 55 55 56 aa aa 00 00 55 00     .......UUV....U.
	...
     ffd:	15 15 55 55 55 55 55 55 50 00 00 00 00 00 00 55     ..UUUUUUP......U
    100d:	4c 55 6a aa aa aa a9 55 55 5a aa aa 00 55 55 50     LUj....UUZ...UUP
	...
    1025:	00 55 55 55 55 55 55 55 50 00 00 00 00 00 00 15     .UUUUUUUP.......
    1035:	55 55 55 6a aa aa aa a5 55 5a aa aa ff d5 55 54     UUUj....UZ....UT
	...
    104d:	00 05 55 55 55 55 55 55 54 00 00 00 00 00 00 10     ..UUUUUUT.......
    105d:	05 55 55 55 5a aa aa aa 55 5a aa aa ff c0 3f fd     .UUUZ...UZ....?.
    106d:	00 55 40 00 00 00 15 40 00 01 55 55 55 55 55 55     .U@....@..UUUUUU
    107d:	54 05 40 00 00 00 00 00 00 01 55 55 aa aa a9 55     T.@.......UU...U
    108d:	55 5a aa aa ff c0 f0 00 7f fd 7f f0 ff f1 7f f4     UZ..............
    109d:	00 01 55 55 55 55 55 55 54 55 54 00 00 00 00 00     ..UUUUUUTUT.....
    10ad:	00 2a aa aa aa aa 55 55 55 aa aa aa ff c0 f0 00     .*....UUU.......
    10bd:	f0 15 f5 3c f0 3d f5 7d 00 00 55 55 55 55 55 55     ...<.=.}..UUUUUU
    10cd:	55 55 55 00 00 55 6a aa aa aa aa aa aa a9 55 55     UUU..Uj.......UU
    10dd:	5a aa aa aa ff c0 3f f0 f0 00 f5 3d f0 05 f5 7d     Z.....?....=...}
    10ed:	40 00 40 15 55 55 55 55 55 55 55 55 55 55 5a a5     @.@.UUUUUUUUUUZ.
    10fd:	56 aa aa aa aa a5 55 55 6a aa aa aa ff c0 00 3c     V.....UUj......<
    110d:	f0 00 f5 7d f5 15 ff f5 45 40 00 05 55 55 55 55     ...}....E@..UUUU
    111d:	55 55 55 55 55 55 5a 55 55 6a aa aa aa a5 55 55     UUUUUUZUUj....UU
    112d:	a5 55 a9 55 ff c0 00 3c f0 00 f0 3d f5 15 f5 55     .U.U...<...=...U
    113d:	55 54 00 01 55 55 55 55 55 55 55 55 55 55 59 55     UT..UUUUUUUUUUYU
    114d:	55 5a aa aa aa 95 55 55 95 55 65 55 ff c0 ff f0     UZ....UU.UeU....
    115d:	3f fc 3f f0 f5 55 7f f5 55 55 05 51 55 55 55 55     ?.?..U..UU.QUUUU
    116d:	55 55 55 55 55 55 55 55 55 56 aa aa aa 95 55 55     UUUUUUUUUV....UU
    117d:	55 55 55 55 ff c0 00 00 00 00 00 00 00 15 50 00     UUUU..........P.
    118d:	01 55 15 54 55 55 55 55 55 55 55 55 55 55 55 55     .U.TUUUUUUUUUUUU
    119d:	55 55 56 aa aa 95 55 55 55 55 55 55 00 00 00 00     UUV...UUUUUU....
	...
    11b5:	00 01 55 55 55 55 55 55 55 55 55 55 55 55 55 55     ..UUUUUUUUUUUUUU
    11c5:	55 55 55 6a a5 55 55 55 55 55 55 55 00 00 00 00     UUUj.UUUUUUU....
	...
    11dd:	00 00 05 55 55 55 55 55 54 01 55 55 55 55 55 55     ...UUUUUT.UUUUUU
    11ed:	55 55 55 5a 55 55 55 55 55 55 55 55 00 00 00 00     UUUZUUUUUUUU....
	...
    1205:	00 00 00 05 55 55 55 55 00 00 00 15 55 50 15 55     ....UUUU....UP.U
    1215:	55 55 55 59 55 55 55 55 55 55 55 55 ff c0 00 00     UUUYUUUUUUUU....
	...
    1231:	01 55 55 00 00 00 00 00 05 40 01 55 55 55 55 55     .UU......@.UUUUU
    1241:	55 55 55 55 55 55 55 55 ff d5 7f fd 55 55 55 55     UUUUUUUU....UUUU
    1251:	55 7d 57 d5 57 d5 55 55 55 55 55 55 56 aa aa aa     U}W.W.UUUUUUV...
    1261:	aa aa aa aa aa aa aa aa a5 55 55 55 55 55 55 55     .........UUUUUUU
    1271:	ff d5 f5 55 ff f5 7f f5 7f fd 55 55 57 d5 55 55     ...U......UUW.UU
    1281:	55 55 55 55 55 5a 55 6a aa aa ab fa aa aa aa a5     UUUUUZUj........
    1291:	55 55 55 55 55 55 55 55 ff d5 f5 55 f5 7d f5 7d     UUUUUUUU...U.}.}
    12a1:	f5 7d 5f d5 7f fd 55 55 55 55 55 5a aa aa aa aa     .}_...UUUUUZ....
    12b1:	aa ab ff fe aa aa aa aa aa aa a9 55 55 55 55 55     ...........UUUUU
    12c1:	ff d5 f5 55 f5 55 f5 7d f5 7d 57 d5 57 d5 55 aa     ...U.U.}.}W.W.U.
    12d1:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    12e1:	aa aa 95 55 55 55 55 55 ff d5 f5 55 f5 55 ff f5     ...UUUUU...U.U..
    12f1:	f5 7d 57 d5 57 d5 55 55 56 aa aa aa aa aa aa aa     .}W.W.UUV.......
    1301:	aa ab ff aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    1311:	ff d5 f5 55 f5 55 f5 55 f5 7d 57 d5 57 d5 55 55     ...U.U.U.}W.W.UU
    1321:	55 56 aa aa aa aa aa ab ff ff ff ff ea aa aa aa     UV..............
    1331:	aa aa aa aa aa a9 55 55 ff d5 7f fd f5 55 7f f5     ......UU.....U..
    1341:	7f fd 57 d5 5b e5 56 aa aa aa aa aa aa aa aa aa     ..W.[.V.........
    1351:	aa ff ff fe aa aa aa aa aa aa aa aa a9 55 55 55     .............UUU
    1361:	ff d5 55 55 55 55 55 55 55 5a aa aa aa aa aa aa     ..UUUUUUUZ......
    1371:	aa aa aa aa aa aa aa aa ff ff ff ff ff ab fa aa     ................
    1381:	aa aa aa aa aa aa aa aa 55 55 55 55 55 55 55 55     ........UUUUUUUU
    1391:	55 55 56 aa aa aa aa aa aa aa aa aa aa aa aa aa     UUV.............
    13a1:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    13b1:	55 55 55 55 55 55 aa aa 95 55 aa aa aa aa aa aa     UUUUUU...U......
    13c1:	aa aa aa aa aa aa bf ff ff ff ff fa aa aa aa aa     ................
    13d1:	aa aa aa aa aa aa aa aa 55 55 55 56 aa aa aa aa     ........UUUV....
    13e1:	aa aa aa aa aa aa aa aa aa aa aa af eb ff ff ff     ................
    13f1:	ff ff ff ff ff ea aa aa aa aa aa aa aa aa aa aa     ................
    1401:	aa aa 55 55 56 aa aa aa aa aa aa aa aa aa aa aa     ..UUV...........
    1411:	aa aa aa aa aa ab ff ff ff ea aa aa aa aa aa aa     ................
    1421:	aa aa aa aa aa aa aa aa aa aa a9 55 55 56 95 56     ...........UUV.V
    1431:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa bf     ................
    1441:	ff ff fa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    1451:	a5 59 55 55 5a aa aa aa aa aa aa aa aa aa aa aa     .YUUZ...........
    1461:	aa aa aa aa aa aa aa aa bf ff ff ff fe aa aa aa     ................
    1471:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    1481:	aa aa aa aa aa aa aa aa aa aa aa bf ff ff ff ff     ................
    1491:	ff ff ff fe aa aa aa aa aa aa aa aa aa aa aa aa     ................
    14a1:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    14b1:	ff ff ff ff ff ff ff ff ff ff fe aa aa bf ff ff     ................
    14c1:	ff af aa aa aa aa aa aa                             ........

000014c9 <_ZL10logoBitmap>:
    14c9:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    14d9:	ff ff ff ff c0 3f ff ff ff ff ff ff ff ff ff ff     .....?..........
    14e9:	ff ff ff ff ff ff ff ff ff fc 3f c3 ff ff ff ff     ..........?.....
    14f9:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff f3     ................
    1509:	c0 fc ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1519:	ff ff ff ff ff f3 cf 3c ff ff ff ff ff ff ff ff     .......<........
    1529:	ff ff ff ff ff ff ff ff ff ff ff f3 c0 fc ea bf     ................
    1539:	ff ff ff fa af ff ff ff ff ff ff ff fc 00 03 fc     ................
    1549:	03 f3 cf 3c ea bf ff ff ff fa af ff ff ff ff ff     ...<............
    1559:	ff ff fc 00 03 fc 03 f3 cf 3c ea bf ff ff ff fa     .........<......
    1569:	af ff ff ff ff ff ff ff c0 3f ff fc 03 fc 3f c3     .........?....?.
    1579:	ea bf ff ff ff fa af ff ff ff ff ff ff ff c0 3f     ...............?
    1589:	ff fc 03 ff c0 3f ea bf ff ff ff fa af fc 00 3f     .....?.........?
    1599:	fc 00 03 ff c0 3f ff c0 00 3f ff ff ea bf ff ff     .....?...?......
    15a9:	ff fa af fc 00 3f fc 00 03 ff c0 3f ff c0 00 3f     .....?.....?...?
    15b9:	ff ff ea bf ff ff ff fa af c3 ff ff c0 3f c0 3c     .............?.<
    15c9:	00 00 3f fc 03 ff ff ff ea bf ff ff ff fa af c3     ..?.............
    15d9:	ff ff c0 3f c0 3c 00 00 3f fc 03 ff ff ff ea bf     ...?.<..?.......
    15e9:	ff fa bf fa af fc 00 3f c0 3f c0 3f c0 3f ff fc     .......?.?.?.?..
    15f9:	03 ff ff ff ea bf ff fa bf fa af fc 00 3f c0 3f     .............?.?
    1609:	c0 3f c0 3f ff fc 03 ff ff ff ea bf ff fa bf fa     .?.?............
    1619:	af ff fc 03 c0 3f c0 3f c0 3f ff fc 03 ff ff ff     .....?.?.?......
    1629:	ea aa aa ff ea aa af ff fc 03 c0 3f c0 3f c0 3f     ...........?.?.?
    1639:	ff fc 03 ff ff ff ea aa aa ff ea aa ff c0 00 3f     ...............?
    1649:	fc 00 03 ff c0 3f ff fc 03 ff ff ff ea aa aa ff     .....?..........
    1659:	ea aa ff c0 00 3f fc 00 03 ff c0 3f ff fc 03 ff     .....?.....?....
    1669:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1679:	ff ff ff ff ff ff ff ff                             ........

00001681 <_ZL10groundTile>:
    1681:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1691:	ff ff ff ff ff ff ff ff aa aa aa aa aa aa aa aa     ................
    16a1:	ff ff ff ff ff ff ff ff aa aa aa aa aa aa aa aa     ................
    16b1:	aa aa aa aa aa aa aa aa ff ff ff ff ff ff ff ff     ................
    16c1:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    16d1:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    16e1:	66 66 66 66 66 66 66 66 99 99 99 99 99 99 99 99     ffffffff........
    16f1:	66 66 66 66 66 66 66 66 99 99 99 99 99 99 99 99     ffffffff........
    1701:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
    1711:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
    1721:	44 44 44 44 44 44 44 44 11 11 11 11 11 11 11 11     DDDDDDDD........
    1731:	44 44 44 44 44 44 44 44 11 11 11 11 11 11 11 11     DDDDDDDD........

00001741 <_ZL9fontASCII>:
    1741:	00 30 00 00 10 00 00 00 00 00 00 00 00 00 00 00     .0..............
    1751:	00 78 6c 28 3c 66 20 30 18 30 54 18 00 00 00 06     .xl(<f 0.0T.....
    1761:	00 78 24 7c 60 0c 50 10 30 18 38 18 00 00 00 0c     .x$|`.P.0.8.....
    1771:	00 78 00 28 38 18 34 00 30 18 10 7e 00 7e 00 18     .x.(8.4.0..~.~..
    1781:	00 30 00 7c 0c 30 48 00 30 18 38 18 00 00 00 30     .0.|.0H.0.8....0
    1791:	00 00 00 28 78 66 34 00 18 30 54 18 00 00 00 60     ...(xf4..0T....`
    17a1:	00 30 00 00 10 00 00 00 00 00 00 00 30 00 30 00     .0..........0.0.
	...
    17bd:	10 00 00 00 38 18 fc fc 06 fe 7c fe 7c 7c 00 00     ....8.....|.||..
    17cd:	00 00 00 7c 4c 38 06 06 c6 c0 c0 06 c6 c6 00 00     ...|L8..........
    17dd:	18 00 30 c6 c6 18 06 3c c6 fc fc 06 7c c6 30 30     ..0....<....|.00
    17ed:	30 7c 18 06 c6 18 7c 06 c6 06 c6 0c c6 c6 00 00     0|....|.........
    17fd:	60 00 0c 06 c6 18 c0 06 c6 06 c6 18 c6 7e 00 00     `............~..
    180d:	30 7c 18 3c 64 18 c0 06 fe 06 c6 30 c6 06 30 30     0|.<d......0..00
    181d:	18 00 30 00 38 3c fe fc 06 fc 7c 30 7c 7c 00 10     ..0.8<....|0||..
    182d:	00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 00     ...0............
    183d:	00 00 00 00 7c 7c fc 7e fc fe fe 7c c6 3c 1e c6     ....||.~...|.<..
    184d:	c0 c6 c6 7c c6 c6 c6 c0 c6 c0 c0 c6 c6 18 06 c6     ...|............
    185d:	c0 ee e6 c6 c6 c6 c6 c0 c6 c0 c0 c0 c6 18 06 cc     ................
    186d:	c0 fe f6 c6 d6 c6 fc c0 c6 f8 fc de fe 18 06 f8     ................
    187d:	c0 d6 de c6 dc fe c6 c0 c6 c0 c0 c6 c6 18 06 cc     ................
    188d:	c0 c6 ce c6 c0 c6 c6 c0 c6 c0 c0 c6 c6 18 c6 c6     ................
    189d:	c0 c6 c6 c6 7c c6 fc 7e fc fe c0 7e c6 3c 7c c6     ....|..~...~.<|.
    18ad:	fe c6 c6 7c 00 00 00 00 00 00 00 00 00 00 00 00     ...|............
    18bd:	00 00 00 00 fc 7c fc 7e 7e c6 c6 c6 c6 66 fe 00     .....|.~~....f..
    18cd:	00 00 00 00 c6 c6 c6 c0 18 c6 c6 c6 c6 66 06 38     .............f.8
    18dd:	60 38 10 00 c6 c6 c6 c0 18 c6 c6 c6 6c 66 0c 30     `8..........lf.0
    18ed:	30 18 38 00 c6 c6 c6 7c 18 c6 c6 d6 38 3c 38 30     0.8....|....8<80
    18fd:	18 18 6c 00 fc de fc 06 18 c6 6c fe 6c 18 60 30     ..l.......l.l.`0
    190d:	0c 18 44 00 c0 cc c6 06 18 c6 38 ee c6 18 c0 38     ..D.......8....8
    191d:	06 38 00 00 c0 76 c6 fc 18 7c 10 c6 c6 18 fe 00     .8...v...|......
    192d:	00 00 00 fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
    193d:	00 00 00 00 00 00 c0 00 06 00 3e 00 c0 18 0c c0     ..........>.....
    194d:	38 00 00 00 60 7c fc 7e 7e 7c 60 7e c0 00 00 c6     8...`|.~~|`~....
    195d:	18 fc fc 7c 20 06 c6 c0 c6 c6 60 c6 fc 38 1c cc     ...| .....`..8..
    196d:	18 d6 c6 c6 00 7e c6 c0 c6 c6 fc c6 c6 18 0c f8     .....~..........
    197d:	18 d6 c6 c6 00 c6 c6 c0 c6 fc 60 c6 c6 18 0c cc     ..........`.....
    198d:	18 d6 c6 c6 00 c6 c6 c0 c6 c0 60 7e c6 18 0c c6     ..........`~....
    199d:	18 d6 c6 c6 00 7e fc 7e 7e 7c 60 06 c6 18 0c c6     .....~.~~|`.....
    19ad:	18 d6 c6 7c 00 00 00 00 00 00 00 7c 00 00 78 00     ...|.......|..x.
	...
    19c5:	18 00 00 00 00 00 00 00 00 00 00 00 fc 7e fc 7c     .............~.|
    19d5:	18 c6 c6 d6 c6 c6 fe 38 10 38 00 00 c6 c6 c6 c0     .......8.8......
    19e5:	7e c6 c6 d6 6c c6 0c 30 10 18 30 00 c6 c6 c0 7c     ~...l..0..0....|
    19f5:	18 c6 c6 d6 38 c6 38 60 10 0c 5a 00 c6 c6 c0 06     ....8.8`..Z.....
    1a05:	18 c6 6c d6 6c c6 60 30 10 18 0c 00 c6 c6 c0 06     ..l.l.`0........
    1a15:	18 c6 38 d6 c6 7e c0 38 10 38 00 00 fc 7e c0 7c     ..8..~.8.8...~.|
    1a25:	18 7e 10 7e c6 06 fe 00 00 00 00 00 c0 06 00 00     .~.~............
    1a35:	00 00 00 00 00 7c 00 00 00 00 00 00                 .....|......

00001a41 <_ZL11presentTile>:
    1a41:	a0 0a a8 2a 15 54 fe 7f 3e 7c 2a 68 3e 7c 3e 7c     ...*.T..>|*h>|>|

00001a51 <_ZL8fireTile>:
    1a51:	01 00 01 00 05 10 16 54 5a a5 5b e5 5b e5 16 94     .......TZ.[.[...

00001a61 <_ZL8bombTile>:
    1a61:	00 fb 0f 6b 35 1c d9 47 d5 5c d5 5c 35 70 0f c0     ...k5..G.\.\5p..

00001a71 <_ZL8ballTile>:
    1a71:	0e b0 3f fc be be fa af b0 5e 68 69 1a a4 0a a0     ..?......^hi....

00001a81 <_ZL6charUp>:
    1a81:	00 3f f0 00 00 ea af 00 03 ab fe c0 03 af ff b0     .?..............
    1a91:	0e af 3c b0 0e af 3c f0 0e 7f ff f0 0d 7f ff f0     ..<...<.........
    1aa1:	0d 73 fc f0 0d 74 00 f0 3d b5 41 f0 f5 b9 01 f0     .s...t..=.A.....
    1ab1:	fe ba 02 f0 3e 9a 00 6c 0e aa 00 ac 0e aa 00 6c     ....>..l.......l
    1ac1:	0e aa 00 30 0e aa 00 30 0e aa 00 70 0d aa 10 70     ...0...0...p...p
    1ad1:	0e 68 11 70 03 94 3d c0 00 e8 33 00 00 3c f0 00     .h.p..=...3..<..
    1ae1:	00 03 00 00 00 0f fc 00 00 fa ab 00 03 ab fe c0     ................
    1af1:	0e af ff b0 0e af 3c b0 0e bf 3c f0 0e 7f ff f0     ......<...<.....
    1b01:	0d 7f ff f0 0d 73 fc f0 0d 74 00 f0 0d b5 40 f0     .....s...t....@.
    1b11:	0d b5 01 f0 3d b9 02 f0 3e 9a 02 70 0e aa 00 b0     ....=...>..p....
    1b21:	0e aa 00 ac 0e aa 00 2c 0e aa 00 2c 0e aa 00 5c     .......,...,...\
    1b31:	0e aa 10 70 0d 68 31 70 0e 94 3d c0 03 e8 33 00     ...p.h1p..=...3.
    1b41:	00 3c f0 00 00 03 00 00 00 3f fc 00 00 ea ab 00     .<.......?......
    1b51:	03 ab fe c0 03 af ff b0 0e bf 3c f0 3a bf 3c f0     ..........<.:.<.
    1b61:	3a 7f ff f0 3a 7f ff f0 0d 73 fc f0 0d 74 00 f0     :...:....s...t..
    1b71:	0d 74 00 f0 0d b5 41 f0 0e b9 01 f0 0e ba 02 f0     .t....A.........
    1b81:	0e 9a 00 b0 0e aa 00 b0 0e aa 00 30 0e aa 00 30     ...........0...0
    1b91:	0d aa 00 70 0e 6a 20 5c 0e 68 11 5c 03 94 3f 70     ...p.j \.h.\..?p
    1ba1:	00 e8 30 c0 00 3c f0 00 00 03 00 00 00 3f f0 00     ..0..<.......?..
    1bb1:	00 ea af 00 03 ab fe c0 03 af ff b0 0e af 3c f0     ..............<.
    1bc1:	0e af 3c f0 3a 7f ff f0 3a 7f ff f0 3a 73 fc f0     ..<.:...:...:s..
    1bd1:	3a 74 00 f0 3d b5 00 f0 3e b5 41 f0 0e ba 02 f0     :t..=...>.A.....
    1be1:	0e 9a 02 70 0e aa 00 b0 0e aa 00 b0 0e aa 00 30     ...p...........0
    1bf1:	0e aa 00 30 0e aa 00 70 0d aa 20 70 0e 68 11 70     ...0...p.. p.h.p
    1c01:	03 98 3f 70 00 e4 30 c0 00 38 f0 00 00 0f 00 00     ..?p..0..8......

00001c11 <_ZL7charRun>:
    1c11:	00 00 00 00 00 00 00 0f fc 00 00 f0 fa ab c0 03     ................
    1c21:	ff aa aa b0 03 ea aa aa ac 00 fa aa aa fc 00 0d     ................
    1c31:	6a af ff 00 0d 5d 5f ff 00 03 d7 ff 3c 00 00 35     j....]_.....<..5
    1c41:	57 3c 00 00 f5 57 fc 00 03 aa 57 f0 00 3e aa 60     W<...W....W..>.`
    1c51:	70 00 ea a9 80 70 03 aa a9 80 c0 0e aa 96 02 c0     p....p..........
    1c61:	0e 95 68 07 00 39 6a 80 03 00 0e b5 50 03 00 03     ..h..9j.....P...
    1c71:	cd 40 0c 00 00 00 00 ff c0 00 00 0f aa b0 00 00     .@..............
    1c81:	3a aa ac 00 f3 ea aa fc 03 fe aa aa ff 03 ea aa     :...............
    1c91:	ab ff 00 f5 aa 9f fc 00 0d 55 5f 3c 00 03 f7 5f     .........U_<..._
    1ca1:	3c 00 00 39 f7 f0 00 00 e9 54 70 00 03 aa 98 70     <..9.....Tp....p
    1cb1:	00 0e aa 60 c0 00 3a aa 60 c0 00 ea a9 80 c0 03     ...`..:.`.......
    1cc1:	aa a9 80 c0 0e aa 96 00 c0 39 55 68 c3 00 0e aa     .........9Uh....
    1cd1:	83 3c 00 03 fc 0c 00 00 00 00 0f ff f0 00 00 3a     .<.............:
    1ce1:	aa ac 00 00 ea aa ff 00 03 aa ab ff 00 3f aa ab     .............?..
    1cf1:	ff 00 fe aa af 3c 00 fa aa b7 3c 00 3d 55 d7 fc     .....<....<.=U..
    1d01:	00 03 d5 d7 f0 00 03 a9 54 70 00 0e aa 60 b0 00     ........Tp...`..
    1d11:	3a a9 80 b0 00 3a a6 02 b0 00 ea a6 02 c0 00 ea     :....:..........
    1d21:	98 00 c0 00 ea 98 00 c0 03 95 58 f0 c0 00 ea a3     ..........X.....
    1d31:	0c c0 00 3c 0c 03 00 00 03 30 00 00 00 00 ff ff     ...<.....0......
    1d41:	c0 00 03 aa aa b0 00 0e aa aa ac 00 3a aa aa ff     ............:...
    1d51:	00 ea aa af ff 03 e6 ab ff fc 03 fd 9f 57 3c 00     .............W<.
    1d61:	ff 57 57 3c 00 0f a5 57 fc 00 3a a9 53 f0 00 ea     .WW<...W..:.S...
    1d71:	a6 80 c0 03 aa 98 00 c0 03 aa 60 02 b0 0e a9 80     ..........`.....
    1d81:	02 b0 0d a9 80 0a b0 0e 69 80 02 c0 03 95 80 03     ........i.......
    1d91:	00 00 ea 00 00 c0 00 3f 01 70 c0 00 00 ff cc 30     .......?.p.....0
    1da1:	00 03 ff fc 00 00 3e aa ab c0 03 ea aa aa b0 0f     ......>.........
    1db1:	aa aa aa ac 0f f6 aa ab ff 03 cd af af ff 00 03     ................
    1dc1:	75 ff fc 00 00 d5 57 3c 00 00 d5 57 3c 00 03 e5     u.....W<...W<...
    1dd1:	57 fc 00 3e a9 63 f0 03 ea a6 80 c0 0e aa 98 00     W..>.c..........
    1de1:	c0 3a aa 60 02 c0 36 a9 80 02 c0 39 a6 00 0a c0     .:.`..6....9....
    1df1:	0e 56 40 0a c0 03 ab 50 03 00 00 fc c0 03 00 00     .V@....P........
    1e01:	00 3a 83 00 00 00 00 00 00 00 00 0f fc 00 00 f0     .:..............
    1e11:	fa ab c0 03 ff aa aa b0 03 ea aa aa ac 00 d6 aa     ................
    1e21:	ab fc 00 3d 6a bf ff 00 0d 5d 5f ff 00 03 d7 fc     ...=j....]_.....
    1e31:	fc 00 00 35 5c fc 00 00 f5 5f fc 00 03 a9 4f f0     ...5\...._....O.
    1e41:	00 3e a9 80 70 00 ea a6 00 70 03 aa a6 00 70 0e     .>..p....p....p.
    1e51:	aa 58 02 c0 0e 55 a0 0a c0 39 aa 00 03 00 0e b5     .X...U...9......
    1e61:	50 03 00 03 cd 4c 0c 00                             P....L..

00001e69 <_ZL8charDown>:
    1e69:	00 00 00 00 00 3c 00 00 00 ff c0 00 00 fa bc 00     .....<..........
    1e79:	00 3a ab 00 00 3a aa c0 00 ea aa b0 00 ea aa b0     .:...:..........
    1e89:	03 aa af ac 03 aa bf ac 03 6a bf dc 03 5a ff dc     .........j...Z..
    1e99:	03 57 cf 1c 03 d7 cf 3c 0e a4 ff d7 3a a9 00 57     .W.....<....:..W
    1ea9:	ea a9 50 55 ea a9 50 55 da a9 80 55 e6 a9 80 57     ..PU..PU...U...W
    1eb9:	39 56 00 5c 0e a8 00 f0 03 f0 00 c0 00 0c 00 c0     9V.\............
    1ec9:	00 03 c0 c0 00 00 c3 00 00 00 c3 00 00 00 cc 00     ................
    1ed9:	00 00 cc 00 00 00 30 00 00 00 00 00 00 03 c0 00     ......0.........
    1ee9:	00 0f ff 00 00 0f ab c0 00 03 aa c0 00 3e aa b0     .............>..
    1ef9:	00 fa aa b0 03 ea aa ac 03 aa af ac 03 5a af ec     .............Z..
    1f09:	03 5a bf ec 00 d7 ff dc 00 37 cf 1c 00 d7 cf 3c     .Z.......7.....<
    1f19:	0f a4 ff d7 3a a9 00 55 ea a9 50 55 ea aa 50 57     ....:..U..PU..PW
    1f29:	da aa 60 5c e5 55 80 5c 3a aa 00 70 0f f0 00 c0     ..`\.U.\:..p....
    1f39:	00 30 00 c0 00 0c 00 c0 00 03 c0 c0 00 00 c3 00     .0..............
    1f49:	00 00 c3 00 00 00 cf 00 00 00 cc 00 00 00 30 00     ..............0.
    1f59:	00 00 f0 00 00 03 fc 00 00 0f bc 00 00 3e ab 00     .............>..
    1f69:	00 fa aa c0 00 ea aa c0 03 ea aa c0 03 aa ab b0     ................
    1f79:	03 6a af b0 00 da af ac 00 d6 ff 6c 00 d7 ff dc     .j.........l....
    1f89:	00 37 cf 1c 0f d7 cf 3f 3a a4 ff d5 ea a9 00 55     .7.....?:......U
    1f99:	ea a9 50 55 da aa 50 55 e6 aa 60 57 39 55 a0 7c     ..PU..PU..`W9U.|
    1fa9:	0e aa 00 c0 03 f0 00 c0 00 30 00 c0 00 0c 00 c0     .........0......
    1fb9:	00 03 c0 c0 00 00 c3 00 00 00 c3 00 00 00 cc 00     ................
    1fc9:	00 00 cc 00 00 00 30 00 00 03 c0 00 00 0f f0 00     ......0.........
    1fd9:	00 0f b0 00 00 3e ac 00 00 fa ab 00 00 ea ab 00     .....>..........
    1fe9:	00 ea aa c0 00 ea ae b0 00 ea af ac 00 ea bf ac     ................
    1ff9:	00 da ff ac 00 da ff dc 03 57 cf 1c 03 d7 cf 3c     .........W.....<
    2009:	0e a4 ff d7 3a a9 00 55 ea a9 50 55 da aa 50 55     ....:..U..PU..PU
    2019:	e6 aa 60 55 39 6a 60 57 0e 95 80 fc 03 ea 00 c0     ..`U9j`W........
    2029:	00 30 00 c0 00 0c 00 c0 00 03 c0 c0 00 00 c3 00     .0..............
    2039:	00 00 c3 00 00 00 cc 00 00 00 cc 00 00 00 30 00     ..............0.
	...

0000204a <__ctors_start>:
    204a:	12 11       	cpse	r17, r2

0000204c <__ctors_end>:
    204c:	11 24       	eor	r1, r1
    204e:	1f be       	out	0x3f, r1	; 63
    2050:	cf ef       	ldi	r28, 0xFF	; 255
    2052:	d8 e0       	ldi	r29, 0x08	; 8
    2054:	de bf       	out	0x3e, r29	; 62
    2056:	cd bf       	out	0x3d, r28	; 61

00002058 <__do_copy_data>:
    2058:	11 e0       	ldi	r17, 0x01	; 1
    205a:	a0 e0       	ldi	r26, 0x00	; 0
    205c:	b1 e0       	ldi	r27, 0x01	; 1
    205e:	e2 ea       	ldi	r30, 0xA2	; 162
    2060:	f0 e6       	ldi	r31, 0x60	; 96
    2062:	02 c0       	rjmp	.+4      	; 0x2068 <__do_copy_data+0x10>
    2064:	05 90       	lpm	r0, Z+
    2066:	0d 92       	st	X+, r0
    2068:	a6 3f       	cpi	r26, 0xF6	; 246
    206a:	b1 07       	cpc	r27, r17
    206c:	d9 f7       	brne	.-10     	; 0x2064 <__do_copy_data+0xc>

0000206e <__do_clear_bss>:
    206e:	22 e0       	ldi	r18, 0x02	; 2
    2070:	a6 ef       	ldi	r26, 0xF6	; 246
    2072:	b1 e0       	ldi	r27, 0x01	; 1
    2074:	01 c0       	rjmp	.+2      	; 0x2078 <.do_clear_bss_start>

00002076 <.do_clear_bss_loop>:
    2076:	1d 92       	st	X+, r1

00002078 <.do_clear_bss_start>:
    2078:	a4 35       	cpi	r26, 0x54	; 84
    207a:	b2 07       	cpc	r27, r18
    207c:	e1 f7       	brne	.-8      	; 0x2076 <.do_clear_bss_loop>

0000207e <__do_global_ctors>:
    207e:	10 e1       	ldi	r17, 0x10	; 16
    2080:	c6 e2       	ldi	r28, 0x26	; 38
    2082:	d0 e1       	ldi	r29, 0x10	; 16
    2084:	04 c0       	rjmp	.+8      	; 0x208e <__do_global_ctors+0x10>
    2086:	21 97       	sbiw	r28, 0x01	; 1
    2088:	fe 01       	movw	r30, r28
    208a:	0e 94 f9 2f 	call	0x5ff2	; 0x5ff2 <__tablejump2__>
    208e:	c5 32       	cpi	r28, 0x25	; 37
    2090:	d1 07       	cpc	r29, r17
    2092:	c9 f7       	brne	.-14     	; 0x2086 <__do_global_ctors+0x8>
    2094:	0e 94 50 10 	call	0x20a0	; 0x20a0 <main>
    2098:	0c 94 4f 30 	jmp	0x609e	; 0x609e <_exit>

0000209c <__bad_interrupt>:
    209c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000020a0 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
    20a0:	61 e0       	ldi	r22, 0x01	; 1
    20a2:	80 e0       	ldi	r24, 0x00	; 0
    20a4:	0e 94 1e 2a 	call	0x543c	; 0x543c <_ZN3MCU7Setting9beginPortEab>
  beginPort(C, IN);
    20a8:	60 e0       	ldi	r22, 0x00	; 0
    20aa:	81 e0       	ldi	r24, 0x01	; 1
    20ac:	0e 94 1e 2a 	call	0x543c	; 0x543c <_ZN3MCU7Setting9beginPortEab>
  beginPin(D, 6);
    20b0:	66 e0       	ldi	r22, 0x06	; 6
    20b2:	82 e0       	ldi	r24, 0x02	; 2
    20b4:	0e 94 f1 29 	call	0x53e2	; 0x53e2 <_ZN3MCU7Setting8beginPinEaa>

  beginINT(0, DOWN);
    20b8:	61 e0       	ldi	r22, 0x01	; 1
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN3MCU7Setting8beginINTEaa>
  beginINT(1, DOWN);
    20c0:	61 e0       	ldi	r22, 0x01	; 1
    20c2:	81 e0       	ldi	r24, 0x01	; 1
    20c4:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN3MCU7Setting8beginINTEaa>
  beginTimer(1, COMP);
    20c8:	61 e0       	ldi	r22, 0x01	; 1
    20ca:	81 e0       	ldi	r24, 0x01	; 1
    20cc:	0e 94 49 2a 	call	0x5492	; 0x5492 <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
    20d0:	61 e0       	ldi	r22, 0x01	; 1
    20d2:	82 e0       	ldi	r24, 0x02	; 2
    20d4:	0e 94 49 2a 	call	0x5492	; 0x5492 <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
    20d8:	61 e0       	ldi	r22, 0x01	; 1
    20da:	83 e0       	ldi	r24, 0x03	; 3
    20dc:	0e 94 9f 2a 	call	0x553e	; 0x553e <_ZN3MCU7Setting8beginPWMEab>

  beginSPI();
    20e0:	0e 94 37 2b 	call	0x566e	; 0x566e <_ZN3MCU7Setting8beginSPIEv>
  sei();
    20e4:	78 94       	sei

  while (1)
  {
    game.title();
    20e6:	86 ef       	ldi	r24, 0xF6	; 246
    20e8:	91 e0       	ldi	r25, 0x01	; 1
    20ea:	0e 94 ba 24 	call	0x4974	; 0x4974 <_ZN4Game5titleEv>
    game.start();
    20ee:	86 ef       	ldi	r24, 0xF6	; 246
    20f0:	91 e0       	ldi	r25, 0x01	; 1
    20f2:	0e 94 19 20 	call	0x4032	; 0x4032 <_ZN4Game5startEv>
    game.end();
    20f6:	86 ef       	ldi	r24, 0xF6	; 246
    20f8:	91 e0       	ldi	r25, 0x01	; 1
    20fa:	0e 94 00 21 	call	0x4200	; 0x4200 <_ZN4Game3endEv>
    20fe:	f3 cf       	rjmp	.-26     	; 0x20e6 <main+0x46>

00002100 <__vector_11>:
---------------  MAIN END  ---------------
//========================================*/


ISR(TIMER1_COMPA_vect)
{
    2100:	1f 92       	push	r1
    2102:	0f 92       	push	r0
    2104:	0f b6       	in	r0, 0x3f	; 63
    2106:	0f 92       	push	r0
    2108:	11 24       	eor	r1, r1
    210a:	2f 93       	push	r18
    210c:	3f 93       	push	r19
    210e:	4f 93       	push	r20
    2110:	5f 93       	push	r21
    2112:	6f 93       	push	r22
    2114:	7f 93       	push	r23
    2116:	8f 93       	push	r24
    2118:	9f 93       	push	r25
    211a:	af 93       	push	r26
    211c:	bf 93       	push	r27
    211e:	ef 93       	push	r30
    2120:	ff 93       	push	r31
  SW::update();
    2122:	0e 94 3c 2b 	call	0x5678	; 0x5678 <_ZN2SW6updateEv>

  if (SW::result != SW_OFF)
    2126:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <_ZN2SW6resultE>
    212a:	88 23       	and	r24, r24
    212c:	39 f1       	breq	.+78     	; 0x217c <__vector_11+0x7c>
  {
    switch (SW::result)
    212e:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <_ZN2SW6resultE>
    2132:	84 30       	cpi	r24, 0x04	; 4
    2134:	c1 f0       	breq	.+48     	; 0x2166 <__vector_11+0x66>
    2136:	28 f4       	brcc	.+10     	; 0x2142 <__vector_11+0x42>
    2138:	81 30       	cpi	r24, 0x01	; 1
    213a:	89 f0       	breq	.+34     	; 0x215e <__vector_11+0x5e>
    213c:	82 30       	cpi	r24, 0x02	; 2
    213e:	59 f0       	breq	.+22     	; 0x2156 <__vector_11+0x56>
    2140:	1d c0       	rjmp	.+58     	; 0x217c <__vector_11+0x7c>
    2142:	80 31       	cpi	r24, 0x10	; 16
    2144:	a1 f0       	breq	.+40     	; 0x216e <__vector_11+0x6e>
    2146:	80 32       	cpi	r24, 0x20	; 32
    2148:	b1 f0       	breq	.+44     	; 0x2176 <__vector_11+0x76>
    214a:	88 30       	cpi	r24, 0x08	; 8
    214c:	b9 f4       	brne	.+46     	; 0x217c <__vector_11+0x7c>
    {
    case SW_UP:
      SW::up = ON;
    214e:	81 e0       	ldi	r24, 0x01	; 1
    2150:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <_ZN2SW2upE>
      break;
    2154:	13 c0       	rjmp	.+38     	; 0x217c <__vector_11+0x7c>
    
    case SW_DOWN:
      SW::down = ON;
    2156:	81 e0       	ldi	r24, 0x01	; 1
    2158:	80 93 4d 02 	sts	0x024D, r24	; 0x80024d <_ZN2SW4downE>
      break;
    215c:	0f c0       	rjmp	.+30     	; 0x217c <__vector_11+0x7c>
    
    case SW_LEFT:
      SW::left = ON;
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <_ZN2SW4leftE>
      break;
    2164:	0b c0       	rjmp	.+22     	; 0x217c <__vector_11+0x7c>
    
    case SW_RIGHT:
      SW::right = ON;
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	80 93 4b 02 	sts	0x024B, r24	; 0x80024b <_ZN2SW5rightE>
      break;
    216c:	07 c0       	rjmp	.+14     	; 0x217c <__vector_11+0x7c>
    
    case SW_START:
      SW::start = ON;
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <_ZN2SW5startE>
      break;
    2174:	03 c0       	rjmp	.+6      	; 0x217c <__vector_11+0x7c>
    
    case SW_SELECT:
      SW::select = ON;
    2176:	81 e0       	ldi	r24, 0x01	; 1
    2178:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <_ZN2SW6selectE>

    default:
      break;
    }
  }
}
    217c:	ff 91       	pop	r31
    217e:	ef 91       	pop	r30
    2180:	bf 91       	pop	r27
    2182:	af 91       	pop	r26
    2184:	9f 91       	pop	r25
    2186:	8f 91       	pop	r24
    2188:	7f 91       	pop	r23
    218a:	6f 91       	pop	r22
    218c:	5f 91       	pop	r21
    218e:	4f 91       	pop	r20
    2190:	3f 91       	pop	r19
    2192:	2f 91       	pop	r18
    2194:	0f 90       	pop	r0
    2196:	0f be       	out	0x3f, r0	; 63
    2198:	0f 90       	pop	r0
    219a:	1f 90       	pop	r1
    219c:	18 95       	reti

0000219e <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
    219e:	1f 92       	push	r1
    21a0:	0f 92       	push	r0
    21a2:	0f b6       	in	r0, 0x3f	; 63
    21a4:	0f 92       	push	r0
    21a6:	11 24       	eor	r1, r1
    21a8:	8f 93       	push	r24
    21aa:	9f 93       	push	r25
    21ac:	af 93       	push	r26
    21ae:	bf 93       	push	r27
  Frame::presentTime++;
    21b0:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <_ZN5Frame11presentTimeE>
    21b4:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    21b8:	a0 91 45 02 	lds	r26, 0x0245	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    21bc:	b0 91 46 02 	lds	r27, 0x0246	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
    21c0:	01 96       	adiw	r24, 0x01	; 1
    21c2:	a1 1d       	adc	r26, r1
    21c4:	b1 1d       	adc	r27, r1
    21c6:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <_ZN5Frame11presentTimeE>
    21ca:	90 93 44 02 	sts	0x0244, r25	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    21ce:	a0 93 45 02 	sts	0x0245, r26	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    21d2:	b0 93 46 02 	sts	0x0246, r27	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
}
    21d6:	bf 91       	pop	r27
    21d8:	af 91       	pop	r26
    21da:	9f 91       	pop	r25
    21dc:	8f 91       	pop	r24
    21de:	0f 90       	pop	r0
    21e0:	0f be       	out	0x3f, r0	; 63
    21e2:	0f 90       	pop	r0
    21e4:	1f 90       	pop	r1
    21e6:	18 95       	reti

000021e8 <__vector_1>:

ISR(INT0_vect)
{
    21e8:	1f 92       	push	r1
    21ea:	0f 92       	push	r0
    21ec:	0f b6       	in	r0, 0x3f	; 63
    21ee:	0f 92       	push	r0
    21f0:	11 24       	eor	r1, r1
    21f2:	8f 93       	push	r24
  SW::interrupt0 = ON;
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <_ZN2SW10interrupt0E>
}
    21fa:	8f 91       	pop	r24
    21fc:	0f 90       	pop	r0
    21fe:	0f be       	out	0x3f, r0	; 63
    2200:	0f 90       	pop	r0
    2202:	1f 90       	pop	r1
    2204:	18 95       	reti

00002206 <__vector_2>:

ISR(INT1_vect)
{
    2206:	1f 92       	push	r1
    2208:	0f 92       	push	r0
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	0f 92       	push	r0
    220e:	11 24       	eor	r1, r1
    2210:	8f 93       	push	r24
  SW::interrupt1 = ON;
    2212:	81 e0       	ldi	r24, 0x01	; 1
    2214:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <_ZN2SW10interrupt1E>
    2218:	8f 91       	pop	r24
    221a:	0f 90       	pop	r0
    221c:	0f be       	out	0x3f, r0	; 63
    221e:	0f 90       	pop	r0
    2220:	1f 90       	pop	r1
    2222:	18 95       	reti

00002224 <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    2224:	e6 ef       	ldi	r30, 0xF6	; 246
    2226:	f1 e0       	ldi	r31, 0x01	; 1
    2228:	80 ef       	ldi	r24, 0xF0	; 240
    222a:	90 e0       	ldi	r25, 0x00	; 0
    222c:	91 83       	std	Z+1, r25	; 0x01
    222e:	80 83       	st	Z, r24
    2230:	80 e4       	ldi	r24, 0x40	; 64
    2232:	91 e0       	ldi	r25, 0x01	; 1
    2234:	93 83       	std	Z+3, r25	; 0x03
    2236:	82 83       	std	Z+2, r24	; 0x02

  void resetScore(void);
  void readScore(void);

public:
  Game() : Font() { m_IsHardmode = false; }
    2238:	11 8a       	std	Z+17, r1	; 0x11
    223a:	08 95       	ret

0000223c <_ZN5Audio8setSoundEb>:
                Set Sound
//----------------------------------------*/

void Audio::setSound(bool isON)
{
  if (isON == true)
    223c:	66 23       	and	r22, r22
    223e:	19 f0       	breq	.+6      	; 0x2246 <_ZN5Audio8setSoundEb+0xa>
  {
    TCCR0B = 0x0C;
    2240:	8c e0       	ldi	r24, 0x0C	; 12
    2242:	85 bd       	out	0x25, r24	; 37
    2244:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2246:	15 bc       	out	0x25, r1	; 37
    2248:	08 95       	ret

0000224a <_ZN5Audio13setTonicSolFaEa>:
//----------------------------------------*/

void Audio::setTonicSolFa(int8_t tonicSolFa)
{

  switch (tonicSolFa)
    224a:	86 2f       	mov	r24, r22
    224c:	66 0f       	add	r22, r22
    224e:	99 0b       	sbc	r25, r25
    2250:	aa 0b       	sbc	r26, r26
    2252:	bb 0b       	sbc	r27, r27
    2254:	87 30       	cpi	r24, 0x07	; 7
    2256:	91 05       	cpc	r25, r1
    2258:	c8 f4       	brcc	.+50     	; 0x228c <_ZN5Audio13setTonicSolFaEa+0x42>
    225a:	fc 01       	movw	r30, r24
    225c:	ec 5c       	subi	r30, 0xCC	; 204
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	0c 94 f9 2f 	jmp	0x5ff2	; 0x5ff2 <__tablejump2__>
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    2264:	8c e3       	ldi	r24, 0x3C	; 60
    2266:	87 bd       	out	0x27, r24	; 39
    2268:	08 95       	ret
    226a:	85 e3       	ldi	r24, 0x35	; 53
    226c:	87 bd       	out	0x27, r24	; 39
    226e:	08 95       	ret
    2270:	8f e2       	ldi	r24, 0x2F	; 47
    2272:	87 bd       	out	0x27, r24	; 39
    2274:	08 95       	ret
    2276:	8d e2       	ldi	r24, 0x2D	; 45
    2278:	87 bd       	out	0x27, r24	; 39
    227a:	08 95       	ret
    227c:	88 e2       	ldi	r24, 0x28	; 40
    227e:	87 bd       	out	0x27, r24	; 39
    2280:	08 95       	ret
    2282:	84 e2       	ldi	r24, 0x24	; 36
    2284:	87 bd       	out	0x27, r24	; 39
    2286:	08 95       	ret
    2288:	8f e1       	ldi	r24, 0x1F	; 31
    228a:	87 bd       	out	0x27, r24	; 39
    228c:	08 95       	ret

0000228e <_ZN5Music10titleMusicEv>:
//----------------------------------------*/

void Music::titleMusic(void)
{

  switch (m_SixteenBeat)
    228e:	dc 01       	movw	r26, r24
    2290:	11 96       	adiw	r26, 0x01	; 1
    2292:	ec 91       	ld	r30, X
    2294:	4e 2f       	mov	r20, r30
    2296:	50 e0       	ldi	r21, 0x00	; 0
    2298:	41 31       	cpi	r20, 0x11	; 17
    229a:	51 05       	cpc	r21, r1
    229c:	c8 f5       	brcc	.+114    	; 0x2310 <_ZN5Music10titleMusicEv+0x82>
    229e:	fa 01       	movw	r30, r20
    22a0:	e5 5c       	subi	r30, 0xC5	; 197
    22a2:	ff 4f       	sbci	r31, 0xFF	; 255
    22a4:	0c 94 f9 2f 	jmp	0x5ff2	; 0x5ff2 <__tablejump2__>
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22a8:	8f e2       	ldi	r24, 0x2F	; 47
    22aa:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22ac:	8c e0       	ldi	r24, 0x0C	; 12
    22ae:	85 bd       	out	0x25, r24	; 37
    22b0:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    22b2:	15 bc       	out	0x25, r1	; 37
    22b4:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22b6:	8f e2       	ldi	r24, 0x2F	; 47
    22b8:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22ba:	8c e0       	ldi	r24, 0x0C	; 12
    22bc:	85 bd       	out	0x25, r24	; 37
    22be:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    22c0:	15 bc       	out	0x25, r1	; 37
    22c2:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22c4:	8f e1       	ldi	r24, 0x1F	; 31
    22c6:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22c8:	8c e0       	ldi	r24, 0x0C	; 12
    22ca:	85 bd       	out	0x25, r24	; 37
    22cc:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    22ce:	15 bc       	out	0x25, r1	; 37
    22d0:	08 95       	ret
    22d2:	15 bc       	out	0x25, r1	; 37
    22d4:	08 95       	ret
    22d6:	15 bc       	out	0x25, r1	; 37
    22d8:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22da:	8f e2       	ldi	r24, 0x2F	; 47
    22dc:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22de:	8c e0       	ldi	r24, 0x0C	; 12
    22e0:	85 bd       	out	0x25, r24	; 37
    22e2:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    22e4:	15 bc       	out	0x25, r1	; 37
    22e6:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22e8:	8f e2       	ldi	r24, 0x2F	; 47
    22ea:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22ec:	8c e0       	ldi	r24, 0x0C	; 12
    22ee:	85 bd       	out	0x25, r24	; 37
    22f0:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    22f2:	15 bc       	out	0x25, r1	; 37
    22f4:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    22f6:	8c e3       	ldi	r24, 0x3C	; 60
    22f8:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    22fa:	8c e0       	ldi	r24, 0x0C	; 12
    22fc:	85 bd       	out	0x25, r24	; 37
    22fe:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2300:	15 bc       	out	0x25, r1	; 37
    2302:	08 95       	ret
    2304:	15 bc       	out	0x25, r1	; 37
    2306:	08 95       	ret
    2308:	15 bc       	out	0x25, r1	; 37
    230a:	08 95       	ret
  case 15:
    setSound(OFF);
    break;
  
  case 16:
    m_SixteenBeat = 0;
    230c:	fc 01       	movw	r30, r24
    230e:	11 82       	std	Z+1, r1	; 0x01
    2310:	08 95       	ret

00002312 <_ZN5Music13startingMusicEv>:
//----------------------------------------*/

void Music::startingMusic(void)
{

  switch (m_SixteenBeat)
    2312:	dc 01       	movw	r26, r24
    2314:	11 96       	adiw	r26, 0x01	; 1
    2316:	ec 91       	ld	r30, X
    2318:	4e 2f       	mov	r20, r30
    231a:	50 e0       	ldi	r21, 0x00	; 0
    231c:	fa 01       	movw	r30, r20
    231e:	32 97       	sbiw	r30, 0x02	; 2
    2320:	e0 31       	cpi	r30, 0x10	; 16
    2322:	f1 05       	cpc	r31, r1
    2324:	98 f5       	brcc	.+102    	; 0x238c <_ZN5Music13startingMusicEv+0x7a>
    2326:	e4 5b       	subi	r30, 0xB4	; 180
    2328:	ff 4f       	sbci	r31, 0xFF	; 255
    232a:	0c 94 f9 2f 	jmp	0x5ff2	; 0x5ff2 <__tablejump2__>
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    232e:	8f e2       	ldi	r24, 0x2F	; 47
    2330:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    2332:	8c e0       	ldi	r24, 0x0C	; 12
    2334:	85 bd       	out	0x25, r24	; 37
    2336:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2338:	15 bc       	out	0x25, r1	; 37
    233a:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    233c:	8f e2       	ldi	r24, 0x2F	; 47
    233e:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    2340:	8c e0       	ldi	r24, 0x0C	; 12
    2342:	85 bd       	out	0x25, r24	; 37
    2344:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    2346:	85 e3       	ldi	r24, 0x35	; 53
    2348:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    234a:	8c e0       	ldi	r24, 0x0C	; 12
    234c:	85 bd       	out	0x25, r24	; 37
    234e:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2350:	15 bc       	out	0x25, r1	; 37
    2352:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    2354:	8d e2       	ldi	r24, 0x2D	; 45
    2356:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    2358:	8c e0       	ldi	r24, 0x0C	; 12
    235a:	85 bd       	out	0x25, r24	; 37
    235c:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    235e:	15 bc       	out	0x25, r1	; 37
    2360:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    2362:	8d e2       	ldi	r24, 0x2D	; 45
    2364:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    2366:	8c e0       	ldi	r24, 0x0C	; 12
    2368:	85 bd       	out	0x25, r24	; 37
    236a:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    236c:	8f e2       	ldi	r24, 0x2F	; 47
    236e:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    2370:	8c e0       	ldi	r24, 0x0C	; 12
    2372:	85 bd       	out	0x25, r24	; 37
    2374:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2376:	15 bc       	out	0x25, r1	; 37
    2378:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    237a:	88 e2       	ldi	r24, 0x28	; 40
    237c:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    237e:	8c e0       	ldi	r24, 0x0C	; 12
    2380:	85 bd       	out	0x25, r24	; 37
    2382:	08 95       	ret
  }
  
  else
  {
    TCCR0B = 0x00;
    2384:	15 bc       	out	0x25, r1	; 37
    2386:	08 95       	ret
  case 16:
    setSound(OFF);
    break;
  
  case 17:
    isPlay = false;
    2388:	fc 01       	movw	r30, r24
    238a:	12 82       	std	Z+2, r1	; 0x02
    238c:	08 95       	ret

0000238e <_ZN5Music12jumpingMusicEv>:
//----------------------------------------*/

void Music::jumpingMusic(void)
{

  switch (m_SixteenBeat)
    238e:	fc 01       	movw	r30, r24
    2390:	81 81       	ldd	r24, Z+1	; 0x01
    2392:	82 30       	cpi	r24, 0x02	; 2
    2394:	71 f0       	breq	.+28     	; 0x23b2 <_ZN5Music12jumpingMusicEv+0x24>
    2396:	18 f4       	brcc	.+6      	; 0x239e <_ZN5Music12jumpingMusicEv+0x10>
    2398:	81 30       	cpi	r24, 0x01	; 1
    239a:	31 f0       	breq	.+12     	; 0x23a8 <_ZN5Music12jumpingMusicEv+0x1a>
    239c:	08 95       	ret
    239e:	83 30       	cpi	r24, 0x03	; 3
    23a0:	59 f0       	breq	.+22     	; 0x23b8 <_ZN5Music12jumpingMusicEv+0x2a>
    23a2:	84 30       	cpi	r24, 0x04	; 4
    23a4:	61 f0       	breq	.+24     	; 0x23be <_ZN5Music12jumpingMusicEv+0x30>
    23a6:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    23a8:	8f e2       	ldi	r24, 0x2F	; 47
    23aa:	87 bd       	out	0x27, r24	; 39

void Audio::setSound(bool isON)
{
  if (isON == true)
  {
    TCCR0B = 0x0C;
    23ac:	8c e0       	ldi	r24, 0x0C	; 12
    23ae:	85 bd       	out	0x25, r24	; 37
    23b0:	08 95       	ret
                Export OCR
//----------------------------------------*/

void Audio::exportOCR(uint16_t OCRValue)
{
  OCR0A = OCRValue;
    23b2:	8d e2       	ldi	r24, 0x2D	; 45
    23b4:	87 bd       	out	0x27, r24	; 39
    23b6:	08 95       	ret
    23b8:	88 e2       	ldi	r24, 0x28	; 40
    23ba:	87 bd       	out	0x27, r24	; 39
    23bc:	08 95       	ret
    TCCR0B = 0x0C;
  }
  
  else
  {
    TCCR0B = 0x00;
    23be:	15 bc       	out	0x25, r1	; 37
    23c0:	08 95       	ret

000023c2 <_ZN5Music5startEv>:
/*----------------------------------------//
                Start Music
//----------------------------------------*/

void Music::start(void)
{
    23c2:	0f 93       	push	r16
    23c4:	1f 93       	push	r17

  if (isPlay == true)
    23c6:	fc 01       	movw	r30, r24
    23c8:	22 81       	ldd	r18, Z+2	; 0x02
    23ca:	22 23       	and	r18, r18
    23cc:	c1 f1       	breq	.+112    	; 0x243e <_ZN5Music5startEv+0x7c>
  {
    if (Frame::presentTime >= Frame::pastBeat + 125)
    23ce:	00 91 43 02 	lds	r16, 0x0243	; 0x800243 <_ZN5Frame11presentTimeE>
    23d2:	10 91 44 02 	lds	r17, 0x0244	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    23d6:	20 91 45 02 	lds	r18, 0x0245	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    23da:	30 91 46 02 	lds	r19, 0x0246	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
    23de:	40 91 33 02 	lds	r20, 0x0233	; 0x800233 <_ZN5Frame8pastBeatE>
    23e2:	50 91 34 02 	lds	r21, 0x0234	; 0x800234 <_ZN5Frame8pastBeatE+0x1>
    23e6:	60 91 35 02 	lds	r22, 0x0235	; 0x800235 <_ZN5Frame8pastBeatE+0x2>
    23ea:	70 91 36 02 	lds	r23, 0x0236	; 0x800236 <_ZN5Frame8pastBeatE+0x3>
    23ee:	43 58       	subi	r20, 0x83	; 131
    23f0:	5f 4f       	sbci	r21, 0xFF	; 255
    23f2:	6f 4f       	sbci	r22, 0xFF	; 255
    23f4:	7f 4f       	sbci	r23, 0xFF	; 255
    23f6:	04 17       	cp	r16, r20
    23f8:	15 07       	cpc	r17, r21
    23fa:	26 07       	cpc	r18, r22
    23fc:	37 07       	cpc	r19, r23
    23fe:	58 f0       	brcs	.+22     	; 0x2416 <_ZN5Music5startEv+0x54>
    {
      Frame::pastBeat = Frame::presentTime;
    2400:	00 93 33 02 	sts	0x0233, r16	; 0x800233 <_ZN5Frame8pastBeatE>
    2404:	10 93 34 02 	sts	0x0234, r17	; 0x800234 <_ZN5Frame8pastBeatE+0x1>
    2408:	20 93 35 02 	sts	0x0235, r18	; 0x800235 <_ZN5Frame8pastBeatE+0x2>
    240c:	30 93 36 02 	sts	0x0236, r19	; 0x800236 <_ZN5Frame8pastBeatE+0x3>
      m_SixteenBeat++;
    2410:	21 81       	ldd	r18, Z+1	; 0x01
    2412:	2f 5f       	subi	r18, 0xFF	; 255
    2414:	21 83       	std	Z+1, r18	; 0x01
    2416:	fc 01       	movw	r30, r24
    }

    switch (m_MusicMode)
    2418:	90 81       	ld	r25, Z
    241a:	91 30       	cpi	r25, 0x01	; 1
    241c:	41 f0       	breq	.+16     	; 0x242e <_ZN5Music5startEv+0x6c>
    241e:	92 30       	cpi	r25, 0x02	; 2
    2420:	51 f0       	breq	.+20     	; 0x2436 <_ZN5Music5startEv+0x74>
    2422:	91 11       	cpse	r25, r1
    2424:	0e c0       	rjmp	.+28     	; 0x2442 <_ZN5Music5startEv+0x80>
    {
    case TITLE:
      titleMusic();
    2426:	cf 01       	movw	r24, r30
    2428:	0e 94 47 11 	call	0x228e	; 0x228e <_ZN5Music10titleMusicEv>
      break;
    242c:	0a c0       	rjmp	.+20     	; 0x2442 <_ZN5Music5startEv+0x80>
      
    case START:
      startingMusic();
    242e:	cf 01       	movw	r24, r30
    2430:	0e 94 89 11 	call	0x2312	; 0x2312 <_ZN5Music13startingMusicEv>
      break;
    2434:	06 c0       	rjmp	.+12     	; 0x2442 <_ZN5Music5startEv+0x80>

    case JUMP:
      jumpingMusic();
    2436:	cf 01       	movw	r24, r30
    2438:	0e 94 c7 11 	call	0x238e	; 0x238e <_ZN5Music12jumpingMusicEv>
      break;
    243c:	02 c0       	rjmp	.+4      	; 0x2442 <_ZN5Music5startEv+0x80>
    
  }

  else
  {
    m_SixteenBeat = 0;
    243e:	fc 01       	movw	r30, r24
    2440:	11 82       	std	Z+1, r1	; 0x01
  }

    2442:	1f 91       	pop	r17
    2444:	0f 91       	pop	r16
    2446:	08 95       	ret

00002448 <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    2448:	8f 92       	push	r8
    244a:	9f 92       	push	r9
    244c:	af 92       	push	r10
    244e:	bf 92       	push	r11
    2450:	cf 92       	push	r12
    2452:	df 92       	push	r13
    2454:	ef 92       	push	r14
    2456:	ff 92       	push	r15
    2458:	0f 93       	push	r16
    245a:	1f 93       	push	r17
    245c:	cf 93       	push	r28
    245e:	df 93       	push	r29
    2460:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
    2462:	82 2f       	mov	r24, r18
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
    2468:	9c 01       	movw	r18, r24
    246a:	12 f4       	brpl	.+4      	; 0x2470 <_ZN4Font11printLetterEiih+0x28>
    246c:	21 5f       	subi	r18, 0xF1	; 241
    246e:	3f 4f       	sbci	r19, 0xFF	; 255
    2470:	49 01       	movw	r8, r18
    2472:	95 94       	asr	r9
    2474:	87 94       	ror	r8
    2476:	95 94       	asr	r9
    2478:	87 94       	ror	r8
    247a:	95 94       	asr	r9
    247c:	87 94       	ror	r8
    247e:	95 94       	asr	r9
    2480:	87 94       	ror	r8
    2482:	96 94       	lsr	r9
    2484:	98 2c       	mov	r9, r8
    2486:	88 24       	eor	r8, r8
    2488:	97 94       	ror	r9
    248a:	87 94       	ror	r8
    248c:	8f 70       	andi	r24, 0x0F	; 15
    248e:	90 78       	andi	r25, 0x80	; 128
    2490:	99 23       	and	r25, r25
    2492:	24 f4       	brge	.+8      	; 0x249c <_ZN4Font11printLetterEiih+0x54>
    2494:	01 97       	sbiw	r24, 0x01	; 1
    2496:	80 6f       	ori	r24, 0xF0	; 240
    2498:	9f 6f       	ori	r25, 0xFF	; 255
    249a:	01 96       	adiw	r24, 0x01	; 1
    249c:	88 0e       	add	r8, r24
    249e:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
    24a0:	8a 01       	movw	r16, r20
    24a2:	01 5f       	subi	r16, 0xF1	; 241
    24a4:	1f 4f       	sbci	r17, 0xFF	; 255
    24a6:	9b 01       	movw	r18, r22
    24a8:	21 5f       	subi	r18, 0xF1	; 241
    24aa:	3f 4f       	sbci	r19, 0xFF	; 255
    24ac:	ce 01       	movw	r24, r28
    24ae:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>
    24b2:	54 01       	movw	r10, r8
    24b4:	80 e8       	ldi	r24, 0x80	; 128
    24b6:	88 0e       	add	r8, r24
    24b8:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    24ba:	68 94       	set
    24bc:	cc 24       	eor	r12, r12
    24be:	c1 f8       	bld	r12, 1
    24c0:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
    24c2:	ec 81       	ldd	r30, Y+4	; 0x04
    24c4:	fd 81       	ldd	r31, Y+5	; 0x05
    24c6:	ea 0d       	add	r30, r10
    24c8:	fb 1d       	adc	r31, r11
    24ca:	14 91       	lpm	r17, Z
    24cc:	68 94       	set
    24ce:	ee 24       	eor	r14, r14
    24d0:	e3 f8       	bld	r14, 3
    24d2:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
    24d4:	11 23       	and	r17, r17
    24d6:	5c f4       	brge	.+22     	; 0x24ee <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
    24d8:	68 85       	ldd	r22, Y+8	; 0x08
    24da:	79 85       	ldd	r23, Y+9	; 0x09
    24dc:	ce 01       	movw	r24, r28
    24de:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    24e2:	68 85       	ldd	r22, Y+8	; 0x08
    24e4:	79 85       	ldd	r23, Y+9	; 0x09
    24e6:	ce 01       	movw	r24, r28
    24e8:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    24ec:	0a c0       	rjmp	.+20     	; 0x2502 <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
    24ee:	6e 81       	ldd	r22, Y+6	; 0x06
    24f0:	7f 81       	ldd	r23, Y+7	; 0x07
    24f2:	ce 01       	movw	r24, r28
    24f4:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    24f8:	6e 81       	ldd	r22, Y+6	; 0x06
    24fa:	7f 81       	ldd	r23, Y+7	; 0x07
    24fc:	ce 01       	movw	r24, r28
    24fe:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
    2502:	11 0f       	add	r17, r17
    2504:	81 e0       	ldi	r24, 0x01	; 1
    2506:	e8 1a       	sub	r14, r24
    2508:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
    250a:	21 f7       	brne	.-56     	; 0x24d4 <_ZN4Font11printLetterEiih+0x8c>
    250c:	81 e0       	ldi	r24, 0x01	; 1
    250e:	c8 1a       	sub	r12, r24
    2510:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    2512:	b9 f6       	brne	.-82     	; 0x24c2 <_ZN4Font11printLetterEiih+0x7a>
    2514:	80 e1       	ldi	r24, 0x10	; 16
    2516:	a8 0e       	add	r10, r24
    2518:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
    251a:	a8 14       	cp	r10, r8
    251c:	b9 04       	cpc	r11, r9
    251e:	69 f6       	brne	.-102    	; 0x24ba <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
    2520:	df 91       	pop	r29
    2522:	cf 91       	pop	r28
    2524:	1f 91       	pop	r17
    2526:	0f 91       	pop	r16
    2528:	ff 90       	pop	r15
    252a:	ef 90       	pop	r14
    252c:	df 90       	pop	r13
    252e:	cf 90       	pop	r12
    2530:	bf 90       	pop	r11
    2532:	af 90       	pop	r10
    2534:	9f 90       	pop	r9
    2536:	8f 90       	pop	r8
    2538:	08 95       	ret

0000253a <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
    253a:	cf 92       	push	r12
    253c:	df 92       	push	r13
    253e:	ef 92       	push	r14
    2540:	ff 92       	push	r15
    2542:	0f 93       	push	r16
    2544:	1f 93       	push	r17
    2546:	cf 93       	push	r28
    2548:	df 93       	push	r29
    254a:	7c 01       	movw	r14, r24
    254c:	eb 01       	movw	r28, r22
    254e:	6a 01       	movw	r12, r20
    2550:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
    2552:	20 81       	ld	r18, Z
    2554:	22 23       	and	r18, r18
    2556:	71 f0       	breq	.+28     	; 0x2574 <_ZN4Font5printEiiPKc+0x3a>
    2558:	8f 01       	movw	r16, r30
    255a:	0f 5f       	subi	r16, 0xFF	; 255
    255c:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
    255e:	a6 01       	movw	r20, r12
    2560:	be 01       	movw	r22, r28
    2562:	c7 01       	movw	r24, r14
    2564:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
    2568:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
    256a:	f8 01       	movw	r30, r16
    256c:	21 91       	ld	r18, Z+
    256e:	8f 01       	movw	r16, r30
    2570:	21 11       	cpse	r18, r1
    2572:	f5 cf       	rjmp	.-22     	; 0x255e <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

}
    2574:	df 91       	pop	r29
    2576:	cf 91       	pop	r28
    2578:	1f 91       	pop	r17
    257a:	0f 91       	pop	r16
    257c:	ff 90       	pop	r15
    257e:	ef 90       	pop	r14
    2580:	df 90       	pop	r13
    2582:	cf 90       	pop	r12
    2584:	08 95       	ret

00002586 <_ZN4Font5printEiim>:
/*----------------------------------------//
              Print Intager
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{
    2586:	2f 92       	push	r2
    2588:	3f 92       	push	r3
    258a:	4f 92       	push	r4
    258c:	5f 92       	push	r5
    258e:	6f 92       	push	r6
    2590:	7f 92       	push	r7
    2592:	8f 92       	push	r8
    2594:	9f 92       	push	r9
    2596:	af 92       	push	r10
    2598:	bf 92       	push	r11
    259a:	cf 92       	push	r12
    259c:	df 92       	push	r13
    259e:	ef 92       	push	r14
    25a0:	ff 92       	push	r15
    25a2:	0f 93       	push	r16
    25a4:	1f 93       	push	r17
    25a6:	cf 93       	push	r28
    25a8:	df 93       	push	r29
    25aa:	cd b7       	in	r28, 0x3d	; 61
    25ac:	de b7       	in	r29, 0x3e	; 62
    25ae:	27 97       	sbiw	r28, 0x07	; 7
    25b0:	0f b6       	in	r0, 0x3f	; 63
    25b2:	f8 94       	cli
    25b4:	de bf       	out	0x3e, r29	; 62
    25b6:	0f be       	out	0x3f, r0	; 63
    25b8:	cd bf       	out	0x3d, r28	; 61
    25ba:	9a 83       	std	Y+2, r25	; 0x02
    25bc:	89 83       	std	Y+1, r24	; 0x01
    25be:	b6 2e       	mov	r11, r22
    25c0:	a7 2e       	mov	r10, r23
    25c2:	5c 83       	std	Y+4, r21	; 0x04
    25c4:	4b 83       	std	Y+3, r20	; 0x03
    25c6:	68 01       	movw	r12, r16
    25c8:	79 01       	movw	r14, r18

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    25ca:	0a 30       	cpi	r16, 0x0A	; 10
    25cc:	11 05       	cpc	r17, r1
    25ce:	21 05       	cpc	r18, r1
    25d0:	31 05       	cpc	r19, r1
    25d2:	88 f1       	brcs	.+98     	; 0x2636 <_ZN4Font5printEiim+0xb0>
    25d4:	91 e0       	ldi	r25, 0x01	; 1
    25d6:	9d 83       	std	Y+5, r25	; 0x05
    25d8:	41 2c       	mov	r4, r1
    25da:	51 2c       	mov	r5, r1
    25dc:	32 01       	movw	r6, r4
    25de:	43 94       	inc	r4
    25e0:	09 c0       	rjmp	.+18     	; 0x25f4 <_ZN4Font5printEiim+0x6e>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    25e2:	9d 81       	ldd	r25, Y+5	; 0x05
    25e4:	89 2f       	mov	r24, r25
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	9f 83       	std	Y+7, r25	; 0x07
    25ea:	8e 83       	std	Y+6, r24	; 0x06
    25ec:	18 16       	cp	r1, r24
    25ee:	19 06       	cpc	r1, r25
    25f0:	54 f1       	brlt	.+84     	; 0x2646 <_ZN4Font5printEiim+0xc0>
    25f2:	57 c0       	rjmp	.+174    	; 0x26a2 <_ZN4Font5printEiim+0x11c>
  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
  {
    digit++;
    25f4:	8d 81       	ldd	r24, Y+5	; 0x05
    25f6:	8f 5f       	subi	r24, 0xFF	; 255
    25f8:	8d 83       	std	Y+5, r24	; 0x05
    placeValue *= 10;
    25fa:	44 0c       	add	r4, r4
    25fc:	55 1c       	adc	r5, r5
    25fe:	66 1c       	adc	r6, r6
    2600:	77 1c       	adc	r7, r7
    2602:	d3 01       	movw	r26, r6
    2604:	c2 01       	movw	r24, r4
    2606:	88 0f       	add	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	aa 1f       	adc	r26, r26
    260c:	bb 1f       	adc	r27, r27
    260e:	88 0f       	add	r24, r24
    2610:	99 1f       	adc	r25, r25
    2612:	aa 1f       	adc	r26, r26
    2614:	bb 1f       	adc	r27, r27
    2616:	48 0e       	add	r4, r24
    2618:	59 1e       	adc	r5, r25
    261a:	6a 1e       	adc	r6, r26
    261c:	7b 1e       	adc	r7, r27
{

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    261e:	c7 01       	movw	r24, r14
    2620:	b6 01       	movw	r22, r12
    2622:	a3 01       	movw	r20, r6
    2624:	92 01       	movw	r18, r4
    2626:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <__udivmodsi4>
    262a:	2a 30       	cpi	r18, 0x0A	; 10
    262c:	31 05       	cpc	r19, r1
    262e:	41 05       	cpc	r20, r1
    2630:	51 05       	cpc	r21, r1
    2632:	00 f7       	brcc	.-64     	; 0x25f4 <_ZN4Font5printEiim+0x6e>
    2634:	d6 cf       	rjmp	.-84     	; 0x25e2 <_ZN4Font5printEiim+0x5c>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    2636:	81 e0       	ldi	r24, 0x01	; 1
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	9f 83       	std	Y+7, r25	; 0x07
    263c:	8e 83       	std	Y+6, r24	; 0x06
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{

  uint32_t placeValue = 1;
    263e:	41 2c       	mov	r4, r1
    2640:	51 2c       	mov	r5, r1
    2642:	32 01       	movw	r6, r4
    2644:	43 94       	inc	r4
    2646:	0b 2d       	mov	r16, r11
    2648:	1a 2d       	mov	r17, r10
    264a:	a1 2c       	mov	r10, r1
    264c:	b1 2c       	mov	r11, r1
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
  {
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    264e:	c7 01       	movw	r24, r14
    2650:	b6 01       	movw	r22, r12
    2652:	a3 01       	movw	r20, r6
    2654:	92 01       	movw	r18, r4
    2656:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <__udivmodsi4>
    265a:	26 2e       	mov	r2, r22
    265c:	37 2e       	mov	r3, r23
    265e:	88 2e       	mov	r8, r24
    2660:	99 2e       	mov	r9, r25
    2662:	20 5d       	subi	r18, 0xD0	; 208
    2664:	4b 81       	ldd	r20, Y+3	; 0x03
    2666:	5c 81       	ldd	r21, Y+4	; 0x04
    2668:	b8 01       	movw	r22, r16
    266a:	89 81       	ldd	r24, Y+1	; 0x01
    266c:	9a 81       	ldd	r25, Y+2	; 0x02
    266e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
    intager %= placeValue;
    2672:	c2 2c       	mov	r12, r2
    2674:	d3 2c       	mov	r13, r3
    2676:	e8 2c       	mov	r14, r8
    2678:	f9 2c       	mov	r15, r9
    placeValue /= 10;
    267a:	c3 01       	movw	r24, r6
    267c:	b2 01       	movw	r22, r4
    267e:	2a e0       	ldi	r18, 0x0A	; 10
    2680:	30 e0       	ldi	r19, 0x00	; 0
    2682:	40 e0       	ldi	r20, 0x00	; 0
    2684:	50 e0       	ldi	r21, 0x00	; 0
    2686:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <__udivmodsi4>
    268a:	29 01       	movw	r4, r18
    268c:	3a 01       	movw	r6, r20
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    268e:	9f ef       	ldi	r25, 0xFF	; 255
    2690:	a9 1a       	sub	r10, r25
    2692:	b9 0a       	sbc	r11, r25
    2694:	00 5f       	subi	r16, 0xF0	; 240
    2696:	1f 4f       	sbci	r17, 0xFF	; 255
    2698:	8e 81       	ldd	r24, Y+6	; 0x06
    269a:	9f 81       	ldd	r25, Y+7	; 0x07
    269c:	a8 16       	cp	r10, r24
    269e:	b9 06       	cpc	r11, r25
    26a0:	b4 f2       	brlt	.-84     	; 0x264e <_ZN4Font5printEiim+0xc8>
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    intager %= placeValue;
    placeValue /= 10;
  }

    26a2:	27 96       	adiw	r28, 0x07	; 7
    26a4:	0f b6       	in	r0, 0x3f	; 63
    26a6:	f8 94       	cli
    26a8:	de bf       	out	0x3e, r29	; 62
    26aa:	0f be       	out	0x3f, r0	; 63
    26ac:	cd bf       	out	0x3d, r28	; 61
    26ae:	df 91       	pop	r29
    26b0:	cf 91       	pop	r28
    26b2:	1f 91       	pop	r17
    26b4:	0f 91       	pop	r16
    26b6:	ff 90       	pop	r15
    26b8:	ef 90       	pop	r14
    26ba:	df 90       	pop	r13
    26bc:	cf 90       	pop	r12
    26be:	bf 90       	pop	r11
    26c0:	af 90       	pop	r10
    26c2:	9f 90       	pop	r9
    26c4:	8f 90       	pop	r8
    26c6:	7f 90       	pop	r7
    26c8:	6f 90       	pop	r6
    26ca:	5f 90       	pop	r5
    26cc:	4f 90       	pop	r4
    26ce:	3f 90       	pop	r3
    26d0:	2f 90       	pop	r2
    26d2:	08 95       	ret

000026d4 <_ZN5Frame6updateEv>:
//----------------------------------------*/

void Frame::update(void)
{

  if (presentTime >= pastTick + 5)
    26d4:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <_ZN5Frame11presentTimeE>
    26d8:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    26dc:	a0 91 45 02 	lds	r26, 0x0245	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    26e0:	b0 91 46 02 	lds	r27, 0x0246	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
    26e4:	40 91 3f 02 	lds	r20, 0x023F	; 0x80023f <_ZN5Frame8pastTickE>
    26e8:	50 91 40 02 	lds	r21, 0x0240	; 0x800240 <_ZN5Frame8pastTickE+0x1>
    26ec:	60 91 41 02 	lds	r22, 0x0241	; 0x800241 <_ZN5Frame8pastTickE+0x2>
    26f0:	70 91 42 02 	lds	r23, 0x0242	; 0x800242 <_ZN5Frame8pastTickE+0x3>
    26f4:	4b 5f       	subi	r20, 0xFB	; 251
    26f6:	5f 4f       	sbci	r21, 0xFF	; 255
    26f8:	6f 4f       	sbci	r22, 0xFF	; 255
    26fa:	7f 4f       	sbci	r23, 0xFF	; 255
    26fc:	84 17       	cp	r24, r20
    26fe:	95 07       	cpc	r25, r21
    2700:	a6 07       	cpc	r26, r22
    2702:	b7 07       	cpc	r27, r23
    2704:	90 f0       	brcs	.+36     	; 0x272a <_ZN5Frame6updateEv+0x56>
  {

    pastTick = presentTime;
    2706:	80 93 3f 02 	sts	0x023F, r24	; 0x80023f <_ZN5Frame8pastTickE>
    270a:	90 93 40 02 	sts	0x0240, r25	; 0x800240 <_ZN5Frame8pastTickE+0x1>
    270e:	a0 93 41 02 	sts	0x0241, r26	; 0x800241 <_ZN5Frame8pastTickE+0x2>
    2712:	b0 93 42 02 	sts	0x0242, r27	; 0x800242 <_ZN5Frame8pastTickE+0x3>
    oneTick++;
    2716:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    271a:	2f 5f       	subi	r18, 0xFF	; 255

    if (oneTick == 3)
    271c:	23 30       	cpi	r18, 0x03	; 3
    271e:	19 f0       	breq	.+6      	; 0x2726 <_ZN5Frame6updateEv+0x52>

  if (presentTime >= pastTick + 5)
  {

    pastTick = presentTime;
    oneTick++;
    2720:	20 93 32 02 	sts	0x0232, r18	; 0x800232 <_ZN5Frame7oneTickE>
    2724:	02 c0       	rjmp	.+4      	; 0x272a <_ZN5Frame6updateEv+0x56>

    if (oneTick == 3)
    {
      oneTick = 0;
    2726:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <_ZN5Frame7oneTickE>
    }

  }

  if (presentTime >= pastFrame + 100)
    272a:	40 91 3b 02 	lds	r20, 0x023B	; 0x80023b <_ZN5Frame9pastFrameE>
    272e:	50 91 3c 02 	lds	r21, 0x023C	; 0x80023c <_ZN5Frame9pastFrameE+0x1>
    2732:	60 91 3d 02 	lds	r22, 0x023D	; 0x80023d <_ZN5Frame9pastFrameE+0x2>
    2736:	70 91 3e 02 	lds	r23, 0x023E	; 0x80023e <_ZN5Frame9pastFrameE+0x3>
    273a:	4c 59       	subi	r20, 0x9C	; 156
    273c:	5f 4f       	sbci	r21, 0xFF	; 255
    273e:	6f 4f       	sbci	r22, 0xFF	; 255
    2740:	7f 4f       	sbci	r23, 0xFF	; 255
    2742:	84 17       	cp	r24, r20
    2744:	95 07       	cpc	r25, r21
    2746:	a6 07       	cpc	r26, r22
    2748:	b7 07       	cpc	r27, r23
    274a:	18 f1       	brcs	.+70     	; 0x2792 <_ZN5Frame6updateEv+0xbe>
  {

    pastFrame = presentTime;
    274c:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <_ZN5Frame9pastFrameE>
    2750:	90 93 3c 02 	sts	0x023C, r25	; 0x80023c <_ZN5Frame9pastFrameE+0x1>
    2754:	a0 93 3d 02 	sts	0x023D, r26	; 0x80023d <_ZN5Frame9pastFrameE+0x2>
    2758:	b0 93 3e 02 	sts	0x023E, r27	; 0x80023e <_ZN5Frame9pastFrameE+0x3>

    secondFrame++;
    275c:	40 91 31 02 	lds	r20, 0x0231	; 0x800231 <_ZN5Frame11secondFrameE>
    2760:	4f 5f       	subi	r20, 0xFF	; 255
    2762:	40 93 31 02 	sts	0x0231, r20	; 0x800231 <_ZN5Frame11secondFrameE>
    fourFrames++;
    2766:	30 91 30 02 	lds	r19, 0x0230	; 0x800230 <_ZN5Frame10fourFramesE>
    276a:	3f 5f       	subi	r19, 0xFF	; 255
    276c:	30 93 30 02 	sts	0x0230, r19	; 0x800230 <_ZN5Frame10fourFramesE>
    sixFrames++;
    2770:	20 91 2f 02 	lds	r18, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    2774:	2f 5f       	subi	r18, 0xFF	; 255
    2776:	20 93 2f 02 	sts	0x022F, r18	; 0x80022f <_ZN5Frame9sixFramesE>

    if (secondFrame == 10)
    277a:	4a 30       	cpi	r20, 0x0A	; 10
    277c:	11 f4       	brne	.+4      	; 0x2782 <_ZN5Frame6updateEv+0xae>
    {
      secondFrame = 0;
    277e:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <_ZN5Frame11secondFrameE>
    }

    if (fourFrames == 4)
    2782:	34 30       	cpi	r19, 0x04	; 4
    2784:	11 f4       	brne	.+4      	; 0x278a <_ZN5Frame6updateEv+0xb6>
    {
      fourFrames = 0;
    2786:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
    278a:	26 30       	cpi	r18, 0x06	; 6
    278c:	11 f4       	brne	.+4      	; 0x2792 <_ZN5Frame6updateEv+0xbe>
    {
      sixFrames = 0;
    278e:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <_ZN5Frame9sixFramesE>
    }

  }

  if (presentTime >= pastScore + 125)
    2792:	40 91 37 02 	lds	r20, 0x0237	; 0x800237 <_ZN5Frame9pastScoreE>
    2796:	50 91 38 02 	lds	r21, 0x0238	; 0x800238 <_ZN5Frame9pastScoreE+0x1>
    279a:	60 91 39 02 	lds	r22, 0x0239	; 0x800239 <_ZN5Frame9pastScoreE+0x2>
    279e:	70 91 3a 02 	lds	r23, 0x023A	; 0x80023a <_ZN5Frame9pastScoreE+0x3>
    27a2:	43 58       	subi	r20, 0x83	; 131
    27a4:	5f 4f       	sbci	r21, 0xFF	; 255
    27a6:	6f 4f       	sbci	r22, 0xFF	; 255
    27a8:	7f 4f       	sbci	r23, 0xFF	; 255
    27aa:	84 17       	cp	r24, r20
    27ac:	95 07       	cpc	r25, r21
    27ae:	a6 07       	cpc	r26, r22
    27b0:	b7 07       	cpc	r27, r23
    27b2:	88 f0       	brcs	.+34     	; 0x27d6 <_ZN5Frame6updateEv+0x102>
  {
    pastScore = presentTime;
    27b4:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <_ZN5Frame9pastScoreE>
    27b8:	90 93 38 02 	sts	0x0238, r25	; 0x800238 <_ZN5Frame9pastScoreE+0x1>
    27bc:	a0 93 39 02 	sts	0x0239, r26	; 0x800239 <_ZN5Frame9pastScoreE+0x2>
    27c0:	b0 93 3a 02 	sts	0x023A, r27	; 0x80023a <_ZN5Frame9pastScoreE+0x3>
    scoreTime++;
    27c4:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <_ZN5Frame9scoreTimeE>
    27c8:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    27cc:	01 96       	adiw	r24, 0x01	; 1
    27ce:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    27d2:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <_ZN5Frame9scoreTimeE>
    27d6:	08 95       	ret

000027d8 <_ZN5Frame4initEv>:
              Initialize Frame
//----------------------------------------*/

void Frame::init(void)
{
  pastTick = presentTime;
    27d8:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <_ZN5Frame11presentTimeE>
    27dc:	90 91 44 02 	lds	r25, 0x0244	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    27e0:	a0 91 45 02 	lds	r26, 0x0245	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    27e4:	b0 91 46 02 	lds	r27, 0x0246	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
    27e8:	80 93 3f 02 	sts	0x023F, r24	; 0x80023f <_ZN5Frame8pastTickE>
    27ec:	90 93 40 02 	sts	0x0240, r25	; 0x800240 <_ZN5Frame8pastTickE+0x1>
    27f0:	a0 93 41 02 	sts	0x0241, r26	; 0x800241 <_ZN5Frame8pastTickE+0x2>
    27f4:	b0 93 42 02 	sts	0x0242, r27	; 0x800242 <_ZN5Frame8pastTickE+0x3>
  pastFrame = presentTime;
    27f8:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <_ZN5Frame9pastFrameE>
    27fc:	90 93 3c 02 	sts	0x023C, r25	; 0x80023c <_ZN5Frame9pastFrameE+0x1>
    2800:	a0 93 3d 02 	sts	0x023D, r26	; 0x80023d <_ZN5Frame9pastFrameE+0x2>
    2804:	b0 93 3e 02 	sts	0x023E, r27	; 0x80023e <_ZN5Frame9pastFrameE+0x3>
  pastScore = presentTime;
    2808:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <_ZN5Frame9pastScoreE>
    280c:	90 93 38 02 	sts	0x0238, r25	; 0x800238 <_ZN5Frame9pastScoreE+0x1>
    2810:	a0 93 39 02 	sts	0x0239, r26	; 0x800239 <_ZN5Frame9pastScoreE+0x2>
    2814:	b0 93 3a 02 	sts	0x023A, r27	; 0x80023a <_ZN5Frame9pastScoreE+0x3>
  pastBeat = presentTime;
    2818:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <_ZN5Frame8pastBeatE>
    281c:	90 93 34 02 	sts	0x0234, r25	; 0x800234 <_ZN5Frame8pastBeatE+0x1>
    2820:	a0 93 35 02 	sts	0x0235, r26	; 0x800235 <_ZN5Frame8pastBeatE+0x2>
    2824:	b0 93 36 02 	sts	0x0236, r27	; 0x800236 <_ZN5Frame8pastBeatE+0x3>
    2828:	08 95       	ret

0000282a <_ZN4Game10nomalTitleEv>:
/*----------------------------------------//
                Title Screen
//----------------------------------------*/

void Game::nomalTitle(void)
{
    282a:	ef 92       	push	r14
    282c:	ff 92       	push	r15
    282e:	0f 93       	push	r16
    2830:	1f 93       	push	r17
    2832:	cf 93       	push	r28
    2834:	df 93       	push	r29
    2836:	ec 01       	movw	r28, r24

  if (SW::up == ON)
    2838:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <_ZN2SW2upE>
    283c:	88 23       	and	r24, r24
    283e:	09 f4       	brne	.+2      	; 0x2842 <_ZN4Game10nomalTitleEv+0x18>
    2840:	73 c0       	rjmp	.+230    	; 0x2928 <_ZN4Game10nomalTitleEv+0xfe>
  {
    m_Cursor -= 1;
    2842:	8a 85       	ldd	r24, Y+10	; 0x0a
    2844:	81 50       	subi	r24, 0x01	; 1
    2846:	8a 87       	std	Y+10, r24	; 0x0a

    if (m_Cursor < 0)
    2848:	88 23       	and	r24, r24
    284a:	14 f4       	brge	.+4      	; 0x2850 <_ZN4Game10nomalTitleEv+0x26>
    {
      m_Cursor = 0;
    284c:	1a 86       	std	Y+10, r1	; 0x0a
    284e:	07 c0       	rjmp	.+14     	; 0x285e <_ZN4Game10nomalTitleEv+0x34>
    }

    switch (m_Cursor)
    2850:	81 30       	cpi	r24, 0x01	; 1
    2852:	f9 f0       	breq	.+62     	; 0x2892 <_ZN4Game10nomalTitleEv+0x68>
    2854:	20 f0       	brcs	.+8      	; 0x285e <_ZN4Game10nomalTitleEv+0x34>
    2856:	82 30       	cpi	r24, 0x02	; 2
    2858:	09 f4       	brne	.+2      	; 0x285c <_ZN4Game10nomalTitleEv+0x32>
    285a:	41 c0       	rjmp	.+130    	; 0x28de <_ZN4Game10nomalTitleEv+0xb4>
    285c:	59 c0       	rjmp	.+178    	; 0x2910 <_ZN4Game10nomalTitleEv+0xe6>
    {
    case 0:
      clear(2, 160, 6, 14, BLACK);
    285e:	e1 2c       	mov	r14, r1
    2860:	f1 2c       	mov	r15, r1
    2862:	0e e0       	ldi	r16, 0x0E	; 14
    2864:	10 e0       	ldi	r17, 0x00	; 0
    2866:	26 e0       	ldi	r18, 0x06	; 6
    2868:	30 e0       	ldi	r19, 0x00	; 0
    286a:	40 ea       	ldi	r20, 0xA0	; 160
    286c:	50 e0       	ldi	r21, 0x00	; 0
    286e:	62 e0       	ldi	r22, 0x02	; 2
    2870:	70 e0       	ldi	r23, 0x00	; 0
    2872:	ce 01       	movw	r24, r28
    2874:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 184, 6, 14, WHITE);
    2878:	ee 24       	eor	r14, r14
    287a:	ea 94       	dec	r14
    287c:	fe 2c       	mov	r15, r14
    287e:	26 e0       	ldi	r18, 0x06	; 6
    2880:	30 e0       	ldi	r19, 0x00	; 0
    2882:	48 eb       	ldi	r20, 0xB8	; 184
    2884:	50 e0       	ldi	r21, 0x00	; 0
    2886:	62 e0       	ldi	r22, 0x02	; 2
    2888:	70 e0       	ldi	r23, 0x00	; 0
    288a:	ce 01       	movw	r24, r28
    288c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

      break;
    2890:	3f c0       	rjmp	.+126    	; 0x2910 <_ZN4Game10nomalTitleEv+0xe6>

    case 1:
      clear(2, 160, 6, 14, WHITE);
    2892:	ee 24       	eor	r14, r14
    2894:	ea 94       	dec	r14
    2896:	fe 2c       	mov	r15, r14
    2898:	0e e0       	ldi	r16, 0x0E	; 14
    289a:	10 e0       	ldi	r17, 0x00	; 0
    289c:	26 e0       	ldi	r18, 0x06	; 6
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	40 ea       	ldi	r20, 0xA0	; 160
    28a2:	50 e0       	ldi	r21, 0x00	; 0
    28a4:	62 e0       	ldi	r22, 0x02	; 2
    28a6:	70 e0       	ldi	r23, 0x00	; 0
    28a8:	ce 01       	movw	r24, r28
    28aa:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 184, 6, 14, BLACK);
    28ae:	e1 2c       	mov	r14, r1
    28b0:	f1 2c       	mov	r15, r1
    28b2:	26 e0       	ldi	r18, 0x06	; 6
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	48 eb       	ldi	r20, 0xB8	; 184
    28b8:	50 e0       	ldi	r21, 0x00	; 0
    28ba:	62 e0       	ldi	r22, 0x02	; 2
    28bc:	70 e0       	ldi	r23, 0x00	; 0
    28be:	ce 01       	movw	r24, r28
    28c0:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 208, 6, 14, WHITE);
    28c4:	ee 24       	eor	r14, r14
    28c6:	ea 94       	dec	r14
    28c8:	fe 2c       	mov	r15, r14
    28ca:	26 e0       	ldi	r18, 0x06	; 6
    28cc:	30 e0       	ldi	r19, 0x00	; 0
    28ce:	40 ed       	ldi	r20, 0xD0	; 208
    28d0:	50 e0       	ldi	r21, 0x00	; 0
    28d2:	62 e0       	ldi	r22, 0x02	; 2
    28d4:	70 e0       	ldi	r23, 0x00	; 0
    28d6:	ce 01       	movw	r24, r28
    28d8:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

      break;
    28dc:	19 c0       	rjmp	.+50     	; 0x2910 <_ZN4Game10nomalTitleEv+0xe6>

    case 2:
      clear(2, 184, 6, 14, WHITE);
    28de:	ee 24       	eor	r14, r14
    28e0:	ea 94       	dec	r14
    28e2:	fe 2c       	mov	r15, r14
    28e4:	0e e0       	ldi	r16, 0x0E	; 14
    28e6:	10 e0       	ldi	r17, 0x00	; 0
    28e8:	26 e0       	ldi	r18, 0x06	; 6
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	48 eb       	ldi	r20, 0xB8	; 184
    28ee:	50 e0       	ldi	r21, 0x00	; 0
    28f0:	62 e0       	ldi	r22, 0x02	; 2
    28f2:	70 e0       	ldi	r23, 0x00	; 0
    28f4:	ce 01       	movw	r24, r28
    28f6:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 208, 6, 14, BLACK);
    28fa:	e1 2c       	mov	r14, r1
    28fc:	f1 2c       	mov	r15, r1
    28fe:	26 e0       	ldi	r18, 0x06	; 6
    2900:	30 e0       	ldi	r19, 0x00	; 0
    2902:	40 ed       	ldi	r20, 0xD0	; 208
    2904:	50 e0       	ldi	r21, 0x00	; 0
    2906:	62 e0       	ldi	r22, 0x02	; 2
    2908:	70 e0       	ldi	r23, 0x00	; 0
    290a:	ce 01       	movw	r24, r28
    290c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    2910:	2f ef       	ldi	r18, 0xFF	; 255
    2912:	81 ee       	ldi	r24, 0xE1	; 225
    2914:	94 e0       	ldi	r25, 0x04	; 4
    2916:	21 50       	subi	r18, 0x01	; 1
    2918:	80 40       	sbci	r24, 0x00	; 0
    291a:	90 40       	sbci	r25, 0x00	; 0
    291c:	e1 f7       	brne	.-8      	; 0x2916 <_ZN4Game10nomalTitleEv+0xec>
    291e:	00 c0       	rjmp	.+0      	; 0x2920 <_ZN4Game10nomalTitleEv+0xf6>
    2920:	00 00       	nop
    default:
      break;
    }

    _delay_ms(100);
    SW::up = OFF;
    2922:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <_ZN2SW2upE>
    2926:	78 c0       	rjmp	.+240    	; 0x2a18 <_ZN4Game10nomalTitleEv+0x1ee>
  }

  else if (SW::down == ON)
    2928:	80 91 4d 02 	lds	r24, 0x024D	; 0x80024d <_ZN2SW4downE>
    292c:	88 23       	and	r24, r24
    292e:	09 f4       	brne	.+2      	; 0x2932 <_ZN4Game10nomalTitleEv+0x108>
    2930:	73 c0       	rjmp	.+230    	; 0x2a18 <_ZN4Game10nomalTitleEv+0x1ee>
  {
    m_Cursor += 1;
    2932:	8a 85       	ldd	r24, Y+10	; 0x0a
    2934:	8f 5f       	subi	r24, 0xFF	; 255
    2936:	8a 87       	std	Y+10, r24	; 0x0a

    if (m_Cursor > 2)
    2938:	83 30       	cpi	r24, 0x03	; 3
    293a:	1c f0       	brlt	.+6      	; 0x2942 <_ZN4Game10nomalTitleEv+0x118>
    {
      m_Cursor = 2;
    293c:	82 e0       	ldi	r24, 0x02	; 2
    293e:	8a 87       	std	Y+10, r24	; 0x0a
    2940:	47 c0       	rjmp	.+142    	; 0x29d0 <_ZN4Game10nomalTitleEv+0x1a6>
    }

    switch (m_Cursor)
    2942:	81 30       	cpi	r24, 0x01	; 1
    2944:	f9 f0       	breq	.+62     	; 0x2984 <_ZN4Game10nomalTitleEv+0x15a>
    2946:	20 f0       	brcs	.+8      	; 0x2950 <_ZN4Game10nomalTitleEv+0x126>
    2948:	82 30       	cpi	r24, 0x02	; 2
    294a:	09 f0       	breq	.+2      	; 0x294e <_ZN4Game10nomalTitleEv+0x124>
    294c:	5a c0       	rjmp	.+180    	; 0x2a02 <_ZN4Game10nomalTitleEv+0x1d8>
    294e:	40 c0       	rjmp	.+128    	; 0x29d0 <_ZN4Game10nomalTitleEv+0x1a6>
    {
    case 0:
      clear(2, 160, 6, 14, BLACK);
    2950:	e1 2c       	mov	r14, r1
    2952:	f1 2c       	mov	r15, r1
    2954:	0e e0       	ldi	r16, 0x0E	; 14
    2956:	10 e0       	ldi	r17, 0x00	; 0
    2958:	26 e0       	ldi	r18, 0x06	; 6
    295a:	30 e0       	ldi	r19, 0x00	; 0
    295c:	40 ea       	ldi	r20, 0xA0	; 160
    295e:	50 e0       	ldi	r21, 0x00	; 0
    2960:	62 e0       	ldi	r22, 0x02	; 2
    2962:	70 e0       	ldi	r23, 0x00	; 0
    2964:	ce 01       	movw	r24, r28
    2966:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 184, 6, 14, WHITE);
    296a:	ee 24       	eor	r14, r14
    296c:	ea 94       	dec	r14
    296e:	fe 2c       	mov	r15, r14
    2970:	26 e0       	ldi	r18, 0x06	; 6
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	48 eb       	ldi	r20, 0xB8	; 184
    2976:	50 e0       	ldi	r21, 0x00	; 0
    2978:	62 e0       	ldi	r22, 0x02	; 2
    297a:	70 e0       	ldi	r23, 0x00	; 0
    297c:	ce 01       	movw	r24, r28
    297e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

      break;
    2982:	3f c0       	rjmp	.+126    	; 0x2a02 <_ZN4Game10nomalTitleEv+0x1d8>

    case 1:
      clear(2, 160, 6, 14, WHITE);
    2984:	ee 24       	eor	r14, r14
    2986:	ea 94       	dec	r14
    2988:	fe 2c       	mov	r15, r14
    298a:	0e e0       	ldi	r16, 0x0E	; 14
    298c:	10 e0       	ldi	r17, 0x00	; 0
    298e:	26 e0       	ldi	r18, 0x06	; 6
    2990:	30 e0       	ldi	r19, 0x00	; 0
    2992:	40 ea       	ldi	r20, 0xA0	; 160
    2994:	50 e0       	ldi	r21, 0x00	; 0
    2996:	62 e0       	ldi	r22, 0x02	; 2
    2998:	70 e0       	ldi	r23, 0x00	; 0
    299a:	ce 01       	movw	r24, r28
    299c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 184, 6, 14, BLACK);
    29a0:	e1 2c       	mov	r14, r1
    29a2:	f1 2c       	mov	r15, r1
    29a4:	26 e0       	ldi	r18, 0x06	; 6
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	48 eb       	ldi	r20, 0xB8	; 184
    29aa:	50 e0       	ldi	r21, 0x00	; 0
    29ac:	62 e0       	ldi	r22, 0x02	; 2
    29ae:	70 e0       	ldi	r23, 0x00	; 0
    29b0:	ce 01       	movw	r24, r28
    29b2:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 208, 6, 14, WHITE);
    29b6:	ee 24       	eor	r14, r14
    29b8:	ea 94       	dec	r14
    29ba:	fe 2c       	mov	r15, r14
    29bc:	26 e0       	ldi	r18, 0x06	; 6
    29be:	30 e0       	ldi	r19, 0x00	; 0
    29c0:	40 ed       	ldi	r20, 0xD0	; 208
    29c2:	50 e0       	ldi	r21, 0x00	; 0
    29c4:	62 e0       	ldi	r22, 0x02	; 2
    29c6:	70 e0       	ldi	r23, 0x00	; 0
    29c8:	ce 01       	movw	r24, r28
    29ca:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

      break;
    29ce:	19 c0       	rjmp	.+50     	; 0x2a02 <_ZN4Game10nomalTitleEv+0x1d8>

    case 2:
      clear(2, 184, 6, 14, WHITE);
    29d0:	ee 24       	eor	r14, r14
    29d2:	ea 94       	dec	r14
    29d4:	fe 2c       	mov	r15, r14
    29d6:	0e e0       	ldi	r16, 0x0E	; 14
    29d8:	10 e0       	ldi	r17, 0x00	; 0
    29da:	26 e0       	ldi	r18, 0x06	; 6
    29dc:	30 e0       	ldi	r19, 0x00	; 0
    29de:	48 eb       	ldi	r20, 0xB8	; 184
    29e0:	50 e0       	ldi	r21, 0x00	; 0
    29e2:	62 e0       	ldi	r22, 0x02	; 2
    29e4:	70 e0       	ldi	r23, 0x00	; 0
    29e6:	ce 01       	movw	r24, r28
    29e8:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      clear(2, 208, 6, 14, BLACK);
    29ec:	e1 2c       	mov	r14, r1
    29ee:	f1 2c       	mov	r15, r1
    29f0:	26 e0       	ldi	r18, 0x06	; 6
    29f2:	30 e0       	ldi	r19, 0x00	; 0
    29f4:	40 ed       	ldi	r20, 0xD0	; 208
    29f6:	50 e0       	ldi	r21, 0x00	; 0
    29f8:	62 e0       	ldi	r22, 0x02	; 2
    29fa:	70 e0       	ldi	r23, 0x00	; 0
    29fc:	ce 01       	movw	r24, r28
    29fe:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    2a02:	2f ef       	ldi	r18, 0xFF	; 255
    2a04:	81 ee       	ldi	r24, 0xE1	; 225
    2a06:	94 e0       	ldi	r25, 0x04	; 4
    2a08:	21 50       	subi	r18, 0x01	; 1
    2a0a:	80 40       	sbci	r24, 0x00	; 0
    2a0c:	90 40       	sbci	r25, 0x00	; 0
    2a0e:	e1 f7       	brne	.-8      	; 0x2a08 <_ZN4Game10nomalTitleEv+0x1de>
    2a10:	00 c0       	rjmp	.+0      	; 0x2a12 <_ZN4Game10nomalTitleEv+0x1e8>
    2a12:	00 00       	nop
    default:
      break;
    }

    _delay_ms(100);
    SW::down = OFF;
    2a14:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <_ZN2SW4downE>
  }

}
    2a18:	df 91       	pop	r29
    2a1a:	cf 91       	pop	r28
    2a1c:	1f 91       	pop	r17
    2a1e:	0f 91       	pop	r16
    2a20:	ff 90       	pop	r15
    2a22:	ef 90       	pop	r14
    2a24:	08 95       	ret

00002a26 <_ZN4Game10scoreTitleEv>:
/*----------------------------------------//
                Score Title
//----------------------------------------*/

void Game::scoreTitle(void)
{
    2a26:	8f 92       	push	r8
    2a28:	9f 92       	push	r9
    2a2a:	af 92       	push	r10
    2a2c:	bf 92       	push	r11
    2a2e:	cf 92       	push	r12
    2a30:	df 92       	push	r13
    2a32:	ef 92       	push	r14
    2a34:	ff 92       	push	r15
    2a36:	0f 93       	push	r16
    2a38:	1f 93       	push	r17
    2a3a:	cf 93       	push	r28
    2a3c:	df 93       	push	r29
    2a3e:	ec 01       	movw	r28, r24

  print(120, 30, "Score");
    2a40:	26 ee       	ldi	r18, 0xE6	; 230
    2a42:	31 e0       	ldi	r19, 0x01	; 1
    2a44:	4e e1       	ldi	r20, 0x1E	; 30
    2a46:	50 e0       	ldi	r21, 0x00	; 0
    2a48:	68 e7       	ldi	r22, 0x78	; 120
    2a4a:	70 e0       	ldi	r23, 0x00	; 0
    2a4c:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

  print(70, 65, "1");
    2a50:	27 e3       	ldi	r18, 0x37	; 55
    2a52:	31 e0       	ldi	r19, 0x01	; 1
    2a54:	41 e4       	ldi	r20, 0x41	; 65
    2a56:	50 e0       	ldi	r21, 0x00	; 0
    2a58:	66 e4       	ldi	r22, 0x46	; 70
    2a5a:	70 e0       	ldi	r23, 0x00	; 0
    2a5c:	ce 01       	movw	r24, r28
    2a5e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  printLetter(102, 65, firstName1st);
    2a62:	2e 89       	ldd	r18, Y+22	; 0x16
    2a64:	41 e4       	ldi	r20, 0x41	; 65
    2a66:	50 e0       	ldi	r21, 0x00	; 0
    2a68:	66 e6       	ldi	r22, 0x66	; 102
    2a6a:	70 e0       	ldi	r23, 0x00	; 0
    2a6c:	ce 01       	movw	r24, r28
    2a6e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(118, 65, firstName2nd);
    2a72:	2f 89       	ldd	r18, Y+23	; 0x17
    2a74:	41 e4       	ldi	r20, 0x41	; 65
    2a76:	50 e0       	ldi	r21, 0x00	; 0
    2a78:	66 e7       	ldi	r22, 0x76	; 118
    2a7a:	70 e0       	ldi	r23, 0x00	; 0
    2a7c:	ce 01       	movw	r24, r28
    2a7e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(134, 65, firstName3rd);
    2a82:	28 8d       	ldd	r18, Y+24	; 0x18
    2a84:	41 e4       	ldi	r20, 0x41	; 65
    2a86:	50 e0       	ldi	r21, 0x00	; 0
    2a88:	66 e8       	ldi	r22, 0x86	; 134
    2a8a:	70 e0       	ldi	r23, 0x00	; 0
    2a8c:	ce 01       	movw	r24, r28
    2a8e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  print(166, 65, firstScore);
    2a92:	0a 8d       	ldd	r16, Y+26	; 0x1a
    2a94:	1b 8d       	ldd	r17, Y+27	; 0x1b
    2a96:	20 e0       	ldi	r18, 0x00	; 0
    2a98:	30 e0       	ldi	r19, 0x00	; 0
    2a9a:	41 e4       	ldi	r20, 0x41	; 65
    2a9c:	50 e0       	ldi	r21, 0x00	; 0
    2a9e:	66 ea       	ldi	r22, 0xA6	; 166
    2aa0:	70 e0       	ldi	r23, 0x00	; 0
    2aa2:	ce 01       	movw	r24, r28
    2aa4:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>

  print(70, 95, "2");
    2aa8:	20 e0       	ldi	r18, 0x00	; 0
    2aaa:	31 e0       	ldi	r19, 0x01	; 1
    2aac:	4f e5       	ldi	r20, 0x5F	; 95
    2aae:	50 e0       	ldi	r21, 0x00	; 0
    2ab0:	66 e4       	ldi	r22, 0x46	; 70
    2ab2:	70 e0       	ldi	r23, 0x00	; 0
    2ab4:	ce 01       	movw	r24, r28
    2ab6:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  printLetter(102, 95, secondName1st);
    2aba:	2c 8d       	ldd	r18, Y+28	; 0x1c
    2abc:	4f e5       	ldi	r20, 0x5F	; 95
    2abe:	50 e0       	ldi	r21, 0x00	; 0
    2ac0:	66 e6       	ldi	r22, 0x66	; 102
    2ac2:	70 e0       	ldi	r23, 0x00	; 0
    2ac4:	ce 01       	movw	r24, r28
    2ac6:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(118, 95, secondName2nd);
    2aca:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2acc:	4f e5       	ldi	r20, 0x5F	; 95
    2ace:	50 e0       	ldi	r21, 0x00	; 0
    2ad0:	66 e7       	ldi	r22, 0x76	; 118
    2ad2:	70 e0       	ldi	r23, 0x00	; 0
    2ad4:	ce 01       	movw	r24, r28
    2ad6:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(134, 95, secondName3rd);
    2ada:	2e 8d       	ldd	r18, Y+30	; 0x1e
    2adc:	4f e5       	ldi	r20, 0x5F	; 95
    2ade:	50 e0       	ldi	r21, 0x00	; 0
    2ae0:	66 e8       	ldi	r22, 0x86	; 134
    2ae2:	70 e0       	ldi	r23, 0x00	; 0
    2ae4:	ce 01       	movw	r24, r28
    2ae6:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  print(166, 95, secondScore);
    2aea:	08 a1       	ldd	r16, Y+32	; 0x20
    2aec:	19 a1       	ldd	r17, Y+33	; 0x21
    2aee:	20 e0       	ldi	r18, 0x00	; 0
    2af0:	30 e0       	ldi	r19, 0x00	; 0
    2af2:	4f e5       	ldi	r20, 0x5F	; 95
    2af4:	50 e0       	ldi	r21, 0x00	; 0
    2af6:	66 ea       	ldi	r22, 0xA6	; 166
    2af8:	70 e0       	ldi	r23, 0x00	; 0
    2afa:	ce 01       	movw	r24, r28
    2afc:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>

  print(70, 125, "3");
    2b00:	22 e0       	ldi	r18, 0x02	; 2
    2b02:	31 e0       	ldi	r19, 0x01	; 1
    2b04:	4d e7       	ldi	r20, 0x7D	; 125
    2b06:	50 e0       	ldi	r21, 0x00	; 0
    2b08:	66 e4       	ldi	r22, 0x46	; 70
    2b0a:	70 e0       	ldi	r23, 0x00	; 0
    2b0c:	ce 01       	movw	r24, r28
    2b0e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  printLetter(102, 125, thirdName1st);
    2b12:	2a a1       	ldd	r18, Y+34	; 0x22
    2b14:	4d e7       	ldi	r20, 0x7D	; 125
    2b16:	50 e0       	ldi	r21, 0x00	; 0
    2b18:	66 e6       	ldi	r22, 0x66	; 102
    2b1a:	70 e0       	ldi	r23, 0x00	; 0
    2b1c:	ce 01       	movw	r24, r28
    2b1e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(118, 125, thirdName2nd);
    2b22:	2b a1       	ldd	r18, Y+35	; 0x23
    2b24:	4d e7       	ldi	r20, 0x7D	; 125
    2b26:	50 e0       	ldi	r21, 0x00	; 0
    2b28:	66 e7       	ldi	r22, 0x76	; 118
    2b2a:	70 e0       	ldi	r23, 0x00	; 0
    2b2c:	ce 01       	movw	r24, r28
    2b2e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(134, 125, thirdName3rd);
    2b32:	2c a1       	ldd	r18, Y+36	; 0x24
    2b34:	4d e7       	ldi	r20, 0x7D	; 125
    2b36:	50 e0       	ldi	r21, 0x00	; 0
    2b38:	66 e8       	ldi	r22, 0x86	; 134
    2b3a:	70 e0       	ldi	r23, 0x00	; 0
    2b3c:	ce 01       	movw	r24, r28
    2b3e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  print(166, 125, thirdScore);
    2b42:	0e a1       	ldd	r16, Y+38	; 0x26
    2b44:	1f a1       	ldd	r17, Y+39	; 0x27
    2b46:	20 e0       	ldi	r18, 0x00	; 0
    2b48:	30 e0       	ldi	r19, 0x00	; 0
    2b4a:	4d e7       	ldi	r20, 0x7D	; 125
    2b4c:	50 e0       	ldi	r21, 0x00	; 0
    2b4e:	66 ea       	ldi	r22, 0xA6	; 166
    2b50:	70 e0       	ldi	r23, 0x00	; 0
    2b52:	ce 01       	movw	r24, r28
    2b54:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>

  print(70, 155, "4");
    2b58:	24 e0       	ldi	r18, 0x04	; 4
    2b5a:	31 e0       	ldi	r19, 0x01	; 1
    2b5c:	4b e9       	ldi	r20, 0x9B	; 155
    2b5e:	50 e0       	ldi	r21, 0x00	; 0
    2b60:	66 e4       	ldi	r22, 0x46	; 70
    2b62:	70 e0       	ldi	r23, 0x00	; 0
    2b64:	ce 01       	movw	r24, r28
    2b66:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  printLetter(102, 155, fourthName1st);
    2b6a:	28 a5       	ldd	r18, Y+40	; 0x28
    2b6c:	4b e9       	ldi	r20, 0x9B	; 155
    2b6e:	50 e0       	ldi	r21, 0x00	; 0
    2b70:	66 e6       	ldi	r22, 0x66	; 102
    2b72:	70 e0       	ldi	r23, 0x00	; 0
    2b74:	ce 01       	movw	r24, r28
    2b76:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(118, 155, fourthName2nd);
    2b7a:	29 a5       	ldd	r18, Y+41	; 0x29
    2b7c:	4b e9       	ldi	r20, 0x9B	; 155
    2b7e:	50 e0       	ldi	r21, 0x00	; 0
    2b80:	66 e7       	ldi	r22, 0x76	; 118
    2b82:	70 e0       	ldi	r23, 0x00	; 0
    2b84:	ce 01       	movw	r24, r28
    2b86:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(134, 155, fourthName3rd);
    2b8a:	2a a5       	ldd	r18, Y+42	; 0x2a
    2b8c:	4b e9       	ldi	r20, 0x9B	; 155
    2b8e:	50 e0       	ldi	r21, 0x00	; 0
    2b90:	66 e8       	ldi	r22, 0x86	; 134
    2b92:	70 e0       	ldi	r23, 0x00	; 0
    2b94:	ce 01       	movw	r24, r28
    2b96:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  print(166, 155, fourthScore);
    2b9a:	0c a5       	ldd	r16, Y+44	; 0x2c
    2b9c:	1d a5       	ldd	r17, Y+45	; 0x2d
    2b9e:	20 e0       	ldi	r18, 0x00	; 0
    2ba0:	30 e0       	ldi	r19, 0x00	; 0
    2ba2:	4b e9       	ldi	r20, 0x9B	; 155
    2ba4:	50 e0       	ldi	r21, 0x00	; 0
    2ba6:	66 ea       	ldi	r22, 0xA6	; 166
    2ba8:	70 e0       	ldi	r23, 0x00	; 0
    2baa:	ce 01       	movw	r24, r28
    2bac:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>

  print(70, 185, "5");
    2bb0:	26 e0       	ldi	r18, 0x06	; 6
    2bb2:	31 e0       	ldi	r19, 0x01	; 1
    2bb4:	49 eb       	ldi	r20, 0xB9	; 185
    2bb6:	50 e0       	ldi	r21, 0x00	; 0
    2bb8:	66 e4       	ldi	r22, 0x46	; 70
    2bba:	70 e0       	ldi	r23, 0x00	; 0
    2bbc:	ce 01       	movw	r24, r28
    2bbe:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  printLetter(102, 185, fifthName1st);
    2bc2:	2e a5       	ldd	r18, Y+46	; 0x2e
    2bc4:	49 eb       	ldi	r20, 0xB9	; 185
    2bc6:	50 e0       	ldi	r21, 0x00	; 0
    2bc8:	66 e6       	ldi	r22, 0x66	; 102
    2bca:	70 e0       	ldi	r23, 0x00	; 0
    2bcc:	ce 01       	movw	r24, r28
    2bce:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(118, 185, fifthName2nd);
    2bd2:	2f a5       	ldd	r18, Y+47	; 0x2f
    2bd4:	49 eb       	ldi	r20, 0xB9	; 185
    2bd6:	50 e0       	ldi	r21, 0x00	; 0
    2bd8:	66 e7       	ldi	r22, 0x76	; 118
    2bda:	70 e0       	ldi	r23, 0x00	; 0
    2bdc:	ce 01       	movw	r24, r28
    2bde:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  printLetter(134, 185, fifthName3rd);
    2be2:	28 a9       	ldd	r18, Y+48	; 0x30
    2be4:	49 eb       	ldi	r20, 0xB9	; 185
    2be6:	50 e0       	ldi	r21, 0x00	; 0
    2be8:	66 e8       	ldi	r22, 0x86	; 134
    2bea:	70 e0       	ldi	r23, 0x00	; 0
    2bec:	ce 01       	movw	r24, r28
    2bee:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
  print(166, 185, fifthScore);
    2bf2:	0a a9       	ldd	r16, Y+50	; 0x32
    2bf4:	1b a9       	ldd	r17, Y+51	; 0x33
    2bf6:	20 e0       	ldi	r18, 0x00	; 0
    2bf8:	30 e0       	ldi	r19, 0x00	; 0
    2bfa:	49 eb       	ldi	r20, 0xB9	; 185
    2bfc:	50 e0       	ldi	r21, 0x00	; 0
    2bfe:	66 ea       	ldi	r22, 0xA6	; 166
    2c00:	70 e0       	ldi	r23, 0x00	; 0
    2c02:	ce 01       	movw	r24, r28
    2c04:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
    2c08:	2f ef       	ldi	r18, 0xFF	; 255
    2c0a:	81 ee       	ldi	r24, 0xE1	; 225
    2c0c:	94 e0       	ldi	r25, 0x04	; 4
    2c0e:	21 50       	subi	r18, 0x01	; 1
    2c10:	80 40       	sbci	r24, 0x00	; 0
    2c12:	90 40       	sbci	r25, 0x00	; 0
    2c14:	e1 f7       	brne	.-8      	; 0x2c0e <_ZN4Game10scoreTitleEv+0x1e8>
    2c16:	00 c0       	rjmp	.+0      	; 0x2c18 <_ZN4Game10scoreTitleEv+0x1f2>
    2c18:	00 00       	nop

  _delay_ms(100);

  if (SW::interrupt1 == ON)
    2c1a:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    2c1e:	88 23       	and	r24, r24
    2c20:	51 f1       	breq	.+84     	; 0x2c76 <_ZN4Game10scoreTitleEv+0x250>
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
  void setColor(uint16_t color0, uint16_t color1) { m_Background = color0; m_Colored = color1; }
    2c22:	1f 82       	std	Y+7, r1	; 0x07
    2c24:	1e 82       	std	Y+6, r1	; 0x06
    2c26:	8f ef       	ldi	r24, 0xFF	; 255
    2c28:	9f ef       	ldi	r25, 0xFF	; 255
    2c2a:	99 87       	std	Y+9, r25	; 0x09
    2c2c:	88 87       	std	Y+8, r24	; 0x08
  {
    setColor(BLACK, WHITE);
    draw(0, 16, 320, 224, titleMenu, BLACK, MAROON, RED, WHITE);
    2c2e:	8f 93       	push	r24
    2c30:	8f 93       	push	r24
    2c32:	0f 2e       	mov	r0, r31
    2c34:	81 2c       	mov	r8, r1
    2c36:	f8 ef       	ldi	r31, 0xF8	; 248
    2c38:	9f 2e       	mov	r9, r31
    2c3a:	f0 2d       	mov	r31, r0
    2c3c:	0f 2e       	mov	r0, r31
    2c3e:	a1 2c       	mov	r10, r1
    2c40:	f8 e7       	ldi	r31, 0x78	; 120
    2c42:	bf 2e       	mov	r11, r31
    2c44:	f0 2d       	mov	r31, r0
    2c46:	c1 2c       	mov	r12, r1
    2c48:	d1 2c       	mov	r13, r1
    2c4a:	0f 2e       	mov	r0, r31
    2c4c:	f9 e4       	ldi	r31, 0x49	; 73
    2c4e:	ef 2e       	mov	r14, r31
    2c50:	f3 e0       	ldi	r31, 0x03	; 3
    2c52:	ff 2e       	mov	r15, r31
    2c54:	f0 2d       	mov	r31, r0
    2c56:	00 ee       	ldi	r16, 0xE0	; 224
    2c58:	10 e0       	ldi	r17, 0x00	; 0
    2c5a:	20 e4       	ldi	r18, 0x40	; 64
    2c5c:	31 e0       	ldi	r19, 0x01	; 1
    2c5e:	40 e1       	ldi	r20, 0x10	; 16
    2c60:	50 e0       	ldi	r21, 0x00	; 0
    2c62:	60 e0       	ldi	r22, 0x00	; 0
    2c64:	70 e0       	ldi	r23, 0x00	; 0
    2c66:	ce 01       	movw	r24, r28
    2c68:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    SW::init();
    2c6c:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
    m_IsScore = false;
    2c70:	1f 86       	std	Y+15, r1	; 0x0f
    2c72:	0f 90       	pop	r0
    2c74:	0f 90       	pop	r0
  }

}
    2c76:	df 91       	pop	r29
    2c78:	cf 91       	pop	r28
    2c7a:	1f 91       	pop	r17
    2c7c:	0f 91       	pop	r16
    2c7e:	ff 90       	pop	r15
    2c80:	ef 90       	pop	r14
    2c82:	df 90       	pop	r13
    2c84:	cf 90       	pop	r12
    2c86:	bf 90       	pop	r11
    2c88:	af 90       	pop	r10
    2c8a:	9f 90       	pop	r9
    2c8c:	8f 90       	pop	r8
    2c8e:	08 95       	ret

00002c90 <_ZN4Game11creditTitleEv>:
/*----------------------------------------//
                Credit Title
//----------------------------------------*/

void Game::creditTitle(void)
{
    2c90:	8f 92       	push	r8
    2c92:	9f 92       	push	r9
    2c94:	af 92       	push	r10
    2c96:	bf 92       	push	r11
    2c98:	cf 92       	push	r12
    2c9a:	df 92       	push	r13
    2c9c:	ef 92       	push	r14
    2c9e:	ff 92       	push	r15
    2ca0:	0f 93       	push	r16
    2ca2:	1f 93       	push	r17
    2ca4:	cf 93       	push	r28
    2ca6:	df 93       	push	r29
    2ca8:	ec 01       	movw	r28, r24

  if (SW::select == OFF)
    2caa:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <_ZN2SW6selectE>
    2cae:	81 11       	cpse	r24, r1
    2cb0:	ae c0       	rjmp	.+348    	; 0x2e0e <_ZN4Game11creditTitleEv+0x17e>
    2cb2:	1f 82       	std	Y+7, r1	; 0x07
    2cb4:	1e 82       	std	Y+6, r1	; 0x06
    2cb6:	80 ee       	ldi	r24, 0xE0	; 224
    2cb8:	9f ef       	ldi	r25, 0xFF	; 255
    2cba:	99 87       	std	Y+9, r25	; 0x09
    2cbc:	88 87       	std	Y+8, r24	; 0x08
  {
    setColor(BLACK, YELLOW);
    print(30, 16, "Game Designed &");
    2cbe:	28 e0       	ldi	r18, 0x08	; 8
    2cc0:	31 e0       	ldi	r19, 0x01	; 1
    2cc2:	40 e1       	ldi	r20, 0x10	; 16
    2cc4:	50 e0       	ldi	r21, 0x00	; 0
    2cc6:	6e e1       	ldi	r22, 0x1E	; 30
    2cc8:	70 e0       	ldi	r23, 0x00	; 0
    2cca:	ce 01       	movw	r24, r28
    2ccc:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(16, 36, "Programmed By");
    2cd0:	28 e1       	ldi	r18, 0x18	; 24
    2cd2:	31 e0       	ldi	r19, 0x01	; 1
    2cd4:	44 e2       	ldi	r20, 0x24	; 36
    2cd6:	50 e0       	ldi	r21, 0x00	; 0
    2cd8:	60 e1       	ldi	r22, 0x10	; 16
    2cda:	70 e0       	ldi	r23, 0x00	; 0
    2cdc:	ce 01       	movw	r24, r28
    2cde:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2ce2:	1f 82       	std	Y+7, r1	; 0x07
    2ce4:	1e 82       	std	Y+6, r1	; 0x06
    2ce6:	0f ef       	ldi	r16, 0xFF	; 255
    2ce8:	1f ef       	ldi	r17, 0xFF	; 255
    2cea:	19 87       	std	Y+9, r17	; 0x09
    2cec:	08 87       	std	Y+8, r16	; 0x08

    setColor(BLACK, WHITE);
    print(240, 36, "CLJ");
    2cee:	26 e2       	ldi	r18, 0x26	; 38
    2cf0:	31 e0       	ldi	r19, 0x01	; 1
    2cf2:	44 e2       	ldi	r20, 0x24	; 36
    2cf4:	50 e0       	ldi	r21, 0x00	; 0
    2cf6:	60 ef       	ldi	r22, 0xF0	; 240
    2cf8:	70 e0       	ldi	r23, 0x00	; 0
    2cfa:	ce 01       	movw	r24, r28
    2cfc:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2d00:	1f 82       	std	Y+7, r1	; 0x07
    2d02:	1e 82       	std	Y+6, r1	; 0x06
    2d04:	8f ee       	ldi	r24, 0xEF	; 239
    2d06:	9b e7       	ldi	r25, 0x7B	; 123
    2d08:	99 87       	std	Y+9, r25	; 0x09
    2d0a:	88 87       	std	Y+8, r24	; 0x08

    setColor(BLACK, GRAY);
    print(30, 56, "Github:");
    2d0c:	2a e2       	ldi	r18, 0x2A	; 42
    2d0e:	31 e0       	ldi	r19, 0x01	; 1
    2d10:	48 e3       	ldi	r20, 0x38	; 56
    2d12:	50 e0       	ldi	r21, 0x00	; 0
    2d14:	6e e1       	ldi	r22, 0x1E	; 30
    2d16:	70 e0       	ldi	r23, 0x00	; 0
    2d18:	ce 01       	movw	r24, r28
    2d1a:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2d1e:	1f 82       	std	Y+7, r1	; 0x07
    2d20:	1e 82       	std	Y+6, r1	; 0x06
    2d22:	19 87       	std	Y+9, r17	; 0x09
    2d24:	08 87       	std	Y+8, r16	; 0x08

    setColor(BLACK, WHITE);
    print(158, 56, "vine91");
    2d26:	22 e3       	ldi	r18, 0x32	; 50
    2d28:	31 e0       	ldi	r19, 0x01	; 1
    2d2a:	48 e3       	ldi	r20, 0x38	; 56
    2d2c:	50 e0       	ldi	r21, 0x00	; 0
    2d2e:	6e e9       	ldi	r22, 0x9E	; 158
    2d30:	70 e0       	ldi	r23, 0x00	; 0
    2d32:	ce 01       	movw	r24, r28
    2d34:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2d38:	1f 82       	std	Y+7, r1	; 0x07
    2d3a:	1e 82       	std	Y+6, r1	; 0x06
    2d3c:	80 e0       	ldi	r24, 0x00	; 0
    2d3e:	98 ef       	ldi	r25, 0xF8	; 248
    2d40:	99 87       	std	Y+9, r25	; 0x09
    2d42:	88 87       	std	Y+8, r24	; 0x08

    setColor(BLACK, RED);
    print(40, 88, "Special Thanks");
    2d44:	29 e3       	ldi	r18, 0x39	; 57
    2d46:	31 e0       	ldi	r19, 0x01	; 1
    2d48:	48 e5       	ldi	r20, 0x58	; 88
    2d4a:	50 e0       	ldi	r21, 0x00	; 0
    2d4c:	68 e2       	ldi	r22, 0x28	; 40
    2d4e:	70 e0       	ldi	r23, 0x00	; 0
    2d50:	ce 01       	movw	r24, r28
    2d52:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2d56:	1f 82       	std	Y+7, r1	; 0x07
    2d58:	1e 82       	std	Y+6, r1	; 0x06
    2d5a:	19 87       	std	Y+9, r17	; 0x09
    2d5c:	08 87       	std	Y+8, r16	; 0x08

    setColor(BLACK, WHITE);
    print(0, 110, "The");
    2d5e:	28 e4       	ldi	r18, 0x48	; 72
    2d60:	31 e0       	ldi	r19, 0x01	; 1
    2d62:	4e e6       	ldi	r20, 0x6E	; 110
    2d64:	50 e0       	ldi	r21, 0x00	; 0
    2d66:	60 e0       	ldi	r22, 0x00	; 0
    2d68:	70 e0       	ldi	r23, 0x00	; 0
    2d6a:	ce 01       	movw	r24, r28
    2d6c:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(58, 110, "1st");
    2d70:	2c e4       	ldi	r18, 0x4C	; 76
    2d72:	31 e0       	ldi	r19, 0x01	; 1
    2d74:	4e e6       	ldi	r20, 0x6E	; 110
    2d76:	50 e0       	ldi	r21, 0x00	; 0
    2d78:	6a e3       	ldi	r22, 0x3A	; 58
    2d7a:	70 e0       	ldi	r23, 0x00	; 0
    2d7c:	ce 01       	movw	r24, r28
    2d7e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(116, 110, "Generation");
    2d82:	20 e5       	ldi	r18, 0x50	; 80
    2d84:	31 e0       	ldi	r19, 0x01	; 1
    2d86:	4e e6       	ldi	r20, 0x6E	; 110
    2d88:	50 e0       	ldi	r21, 0x00	; 0
    2d8a:	64 e7       	ldi	r22, 0x74	; 116
    2d8c:	70 e0       	ldi	r23, 0x00	; 0
    2d8e:	ce 01       	movw	r24, r28
    2d90:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(286, 110, "Of");
    2d94:	2b e5       	ldi	r18, 0x5B	; 91
    2d96:	31 e0       	ldi	r19, 0x01	; 1
    2d98:	4e e6       	ldi	r20, 0x6E	; 110
    2d9a:	50 e0       	ldi	r21, 0x00	; 0
    2d9c:	6e e1       	ldi	r22, 0x1E	; 30
    2d9e:	71 e0       	ldi	r23, 0x01	; 1
    2da0:	ce 01       	movw	r24, r28
    2da2:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(8, 130, "Medical Engineering");
    2da6:	2e e5       	ldi	r18, 0x5E	; 94
    2da8:	31 e0       	ldi	r19, 0x01	; 1
    2daa:	42 e8       	ldi	r20, 0x82	; 130
    2dac:	50 e0       	ldi	r21, 0x00	; 0
    2dae:	68 e0       	ldi	r22, 0x08	; 8
    2db0:	70 e0       	ldi	r23, 0x00	; 0
    2db2:	ce 01       	movw	r24, r28
    2db4:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(60, 150, "Students And");
    2db8:	22 e7       	ldi	r18, 0x72	; 114
    2dba:	31 e0       	ldi	r19, 0x01	; 1
    2dbc:	46 e9       	ldi	r20, 0x96	; 150
    2dbe:	50 e0       	ldi	r21, 0x00	; 0
    2dc0:	6c e3       	ldi	r22, 0x3C	; 60
    2dc2:	70 e0       	ldi	r23, 0x00	; 0
    2dc4:	ce 01       	movw	r24, r28
    2dc6:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(50, 170, "Professors in");
    2dca:	2f e7       	ldi	r18, 0x7F	; 127
    2dcc:	31 e0       	ldi	r19, 0x01	; 1
    2dce:	4a ea       	ldi	r20, 0xAA	; 170
    2dd0:	50 e0       	ldi	r21, 0x00	; 0
    2dd2:	62 e3       	ldi	r22, 0x32	; 50
    2dd4:	70 e0       	ldi	r23, 0x00	; 0
    2dd6:	ce 01       	movw	r24, r28
    2dd8:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2ddc:	1f 82       	std	Y+7, r1	; 0x07
    2dde:	1e 82       	std	Y+6, r1	; 0x06
    2de0:	8f e1       	ldi	r24, 0x1F	; 31
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	99 87       	std	Y+9, r25	; 0x09
    2de6:	88 87       	std	Y+8, r24	; 0x08

    setColor(BLACK, BLUE);
    print(5, 202, "Korea");
    2de8:	2d e8       	ldi	r18, 0x8D	; 141
    2dea:	31 e0       	ldi	r19, 0x01	; 1
    2dec:	4a ec       	ldi	r20, 0xCA	; 202
    2dee:	50 e0       	ldi	r21, 0x00	; 0
    2df0:	65 e0       	ldi	r22, 0x05	; 5
    2df2:	70 e0       	ldi	r23, 0x00	; 0
    2df4:	ce 01       	movw	r24, r28
    2df6:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    print(95, 202, "Polytechnics..");
    2dfa:	23 e9       	ldi	r18, 0x93	; 147
    2dfc:	31 e0       	ldi	r19, 0x01	; 1
    2dfe:	4a ec       	ldi	r20, 0xCA	; 202
    2e00:	50 e0       	ldi	r21, 0x00	; 0
    2e02:	6f e5       	ldi	r22, 0x5F	; 95
    2e04:	70 e0       	ldi	r23, 0x00	; 0
    2e06:	ce 01       	movw	r24, r28
    2e08:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    2e0c:	40 c0       	rjmp	.+128    	; 0x2e8e <_ZN4Game11creditTitleEv+0x1fe>
  }
      
  else
  {
    clear(0, 110, 320, 20, BLACK);
    2e0e:	e1 2c       	mov	r14, r1
    2e10:	f1 2c       	mov	r15, r1
    2e12:	04 e1       	ldi	r16, 0x14	; 20
    2e14:	10 e0       	ldi	r17, 0x00	; 0
    2e16:	20 e4       	ldi	r18, 0x40	; 64
    2e18:	31 e0       	ldi	r19, 0x01	; 1
    2e1a:	4e e6       	ldi	r20, 0x6E	; 110
    2e1c:	50 e0       	ldi	r21, 0x00	; 0
    2e1e:	60 e0       	ldi	r22, 0x00	; 0
    2e20:	70 e0       	ldi	r23, 0x00	; 0
    2e22:	ce 01       	movw	r24, r28
    2e24:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    clear(0, 130, 24, 20, BLACK);
    2e28:	28 e1       	ldi	r18, 0x18	; 24
    2e2a:	30 e0       	ldi	r19, 0x00	; 0
    2e2c:	42 e8       	ldi	r20, 0x82	; 130
    2e2e:	50 e0       	ldi	r21, 0x00	; 0
    2e30:	60 e0       	ldi	r22, 0x00	; 0
    2e32:	70 e0       	ldi	r23, 0x00	; 0
    2e34:	ce 01       	movw	r24, r28
    2e36:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    clear(296, 130, 24, 20, BLACK);
    2e3a:	28 e1       	ldi	r18, 0x18	; 24
    2e3c:	30 e0       	ldi	r19, 0x00	; 0
    2e3e:	42 e8       	ldi	r20, 0x82	; 130
    2e40:	50 e0       	ldi	r21, 0x00	; 0
    2e42:	68 e2       	ldi	r22, 0x28	; 40
    2e44:	71 e0       	ldi	r23, 0x01	; 1
    2e46:	ce 01       	movw	r24, r28
    2e48:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    clear(0, 190, 320, 30, BLACK);
    2e4c:	0e e1       	ldi	r16, 0x1E	; 30
    2e4e:	10 e0       	ldi	r17, 0x00	; 0
    2e50:	20 e4       	ldi	r18, 0x40	; 64
    2e52:	31 e0       	ldi	r19, 0x01	; 1
    2e54:	4e eb       	ldi	r20, 0xBE	; 190
    2e56:	50 e0       	ldi	r21, 0x00	; 0
    2e58:	60 e0       	ldi	r22, 0x00	; 0
    2e5a:	70 e0       	ldi	r23, 0x00	; 0
    2e5c:	ce 01       	movw	r24, r28
    2e5e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

    draw(24, 130, 272, 60, creditMenu, BLACK, WHITE);
    2e62:	aa 24       	eor	r10, r10
    2e64:	aa 94       	dec	r10
    2e66:	ba 2c       	mov	r11, r10
    2e68:	c1 2c       	mov	r12, r1
    2e6a:	d1 2c       	mov	r13, r1
    2e6c:	0f 2e       	mov	r0, r31
    2e6e:	fb e4       	ldi	r31, 0x4B	; 75
    2e70:	ef 2e       	mov	r14, r31
    2e72:	f1 e0       	ldi	r31, 0x01	; 1
    2e74:	ff 2e       	mov	r15, r31
    2e76:	f0 2d       	mov	r31, r0
    2e78:	0c e3       	ldi	r16, 0x3C	; 60
    2e7a:	10 e0       	ldi	r17, 0x00	; 0
    2e7c:	20 e1       	ldi	r18, 0x10	; 16
    2e7e:	31 e0       	ldi	r19, 0x01	; 1
    2e80:	42 e8       	ldi	r20, 0x82	; 130
    2e82:	50 e0       	ldi	r21, 0x00	; 0
    2e84:	68 e1       	ldi	r22, 0x18	; 24
    2e86:	70 e0       	ldi	r23, 0x00	; 0
    2e88:	ce 01       	movw	r24, r28
    2e8a:	0e 94 b1 2c 	call	0x5962	; 0x5962 <_ZN3TFT4drawEiiiiPKhjj>
    2e8e:	2f ef       	ldi	r18, 0xFF	; 255
    2e90:	81 ee       	ldi	r24, 0xE1	; 225
    2e92:	94 e0       	ldi	r25, 0x04	; 4
    2e94:	21 50       	subi	r18, 0x01	; 1
    2e96:	80 40       	sbci	r24, 0x00	; 0
    2e98:	90 40       	sbci	r25, 0x00	; 0
    2e9a:	e1 f7       	brne	.-8      	; 0x2e94 <_ZN4Game11creditTitleEv+0x204>
    2e9c:	00 c0       	rjmp	.+0      	; 0x2e9e <_ZN4Game11creditTitleEv+0x20e>
    2e9e:	00 00       	nop
  }

  _delay_ms(100);

  if (SW::interrupt1 == ON)
    2ea0:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    2ea4:	88 23       	and	r24, r24
    2ea6:	51 f1       	breq	.+84     	; 0x2efc <_ZN4Game11creditTitleEv+0x26c>
    2ea8:	1f 82       	std	Y+7, r1	; 0x07
    2eaa:	1e 82       	std	Y+6, r1	; 0x06
    2eac:	8f ef       	ldi	r24, 0xFF	; 255
    2eae:	9f ef       	ldi	r25, 0xFF	; 255
    2eb0:	99 87       	std	Y+9, r25	; 0x09
    2eb2:	88 87       	std	Y+8, r24	; 0x08
  {
    setColor(BLACK, WHITE);
    draw(0, 16, 320, 224, titleMenu, BLACK, MAROON, RED, WHITE);
    2eb4:	8f 93       	push	r24
    2eb6:	8f 93       	push	r24
    2eb8:	0f 2e       	mov	r0, r31
    2eba:	81 2c       	mov	r8, r1
    2ebc:	f8 ef       	ldi	r31, 0xF8	; 248
    2ebe:	9f 2e       	mov	r9, r31
    2ec0:	f0 2d       	mov	r31, r0
    2ec2:	0f 2e       	mov	r0, r31
    2ec4:	a1 2c       	mov	r10, r1
    2ec6:	f8 e7       	ldi	r31, 0x78	; 120
    2ec8:	bf 2e       	mov	r11, r31
    2eca:	f0 2d       	mov	r31, r0
    2ecc:	c1 2c       	mov	r12, r1
    2ece:	d1 2c       	mov	r13, r1
    2ed0:	0f 2e       	mov	r0, r31
    2ed2:	f9 e4       	ldi	r31, 0x49	; 73
    2ed4:	ef 2e       	mov	r14, r31
    2ed6:	f3 e0       	ldi	r31, 0x03	; 3
    2ed8:	ff 2e       	mov	r15, r31
    2eda:	f0 2d       	mov	r31, r0
    2edc:	00 ee       	ldi	r16, 0xE0	; 224
    2ede:	10 e0       	ldi	r17, 0x00	; 0
    2ee0:	20 e4       	ldi	r18, 0x40	; 64
    2ee2:	31 e0       	ldi	r19, 0x01	; 1
    2ee4:	40 e1       	ldi	r20, 0x10	; 16
    2ee6:	50 e0       	ldi	r21, 0x00	; 0
    2ee8:	60 e0       	ldi	r22, 0x00	; 0
    2eea:	70 e0       	ldi	r23, 0x00	; 0
    2eec:	ce 01       	movw	r24, r28
    2eee:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    SW::init();
    2ef2:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
    m_IsCredit = false;
    2ef6:	18 8a       	std	Y+16, r1	; 0x10
    2ef8:	0f 90       	pop	r0
    2efa:	0f 90       	pop	r0
  }

}
    2efc:	df 91       	pop	r29
    2efe:	cf 91       	pop	r28
    2f00:	1f 91       	pop	r17
    2f02:	0f 91       	pop	r16
    2f04:	ff 90       	pop	r15
    2f06:	ef 90       	pop	r14
    2f08:	df 90       	pop	r13
    2f0a:	cf 90       	pop	r12
    2f0c:	bf 90       	pop	r11
    2f0e:	af 90       	pop	r10
    2f10:	9f 90       	pop	r9
    2f12:	8f 90       	pop	r8
    2f14:	08 95       	ret

00002f16 <_ZN4Game9titleLoopEv>:
/*----------------------------------------//
              Game Title Loop
//----------------------------------------*/

void Game::titleLoop(void)
{
    2f16:	bf 92       	push	r11
    2f18:	cf 92       	push	r12
    2f1a:	df 92       	push	r13
    2f1c:	ef 92       	push	r14
    2f1e:	ff 92       	push	r15
    2f20:	0f 93       	push	r16
    2f22:	1f 93       	push	r17
    2f24:	cf 93       	push	r28
    2f26:	df 93       	push	r29
    2f28:	00 d0       	rcall	.+0      	; 0x2f2a <_ZN4Game9titleLoopEv+0x14>
    2f2a:	1f 92       	push	r1
    2f2c:	cd b7       	in	r28, 0x3d	; 61
    2f2e:	de b7       	in	r29, 0x3e	; 62
    2f30:	6c 01       	movw	r12, r24
  void startingMusic(void);
  void jumpingMusic(void);

public:
  Music(int8_t mode) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = false; }
  Music(int8_t mode, bool start) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = true; }
    2f32:	19 82       	std	Y+1, r1	; 0x01
    2f34:	1a 82       	std	Y+2, r1	; 0x02
    2f36:	81 e0       	ldi	r24, 0x01	; 1
    2f38:	8b 83       	std	Y+3, r24	; 0x03
        if (SW::interrupt1 == ON)
        {
          clear(55, 20, 210, 200, BLACK);
          SW::init();
          title.pause();
          m_IsScore = true;
    2f3a:	bb 24       	eor	r11, r11
    2f3c:	b3 94       	inc	r11
  Music title(TITLE, ON);

  while (1)
  {

    Frame::update();
    2f3e:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <_ZN5Frame6updateEv>

    if (m_IsScore == false && m_IsCredit == false)
    2f42:	f6 01       	movw	r30, r12
    2f44:	87 85       	ldd	r24, Z+15	; 0x0f
    2f46:	81 11       	cpse	r24, r1
    2f48:	af c0       	rjmp	.+350    	; 0x30a8 <_ZN4Game9titleLoopEv+0x192>
    2f4a:	80 89       	ldd	r24, Z+16	; 0x10
    2f4c:	81 11       	cpse	r24, r1
    2f4e:	b4 c0       	rjmp	.+360    	; 0x30b8 <_ZN4Game9titleLoopEv+0x1a2>
    {
      title.start();
    2f50:	ce 01       	movw	r24, r28
    2f52:	01 96       	adiw	r24, 0x01	; 1
    2f54:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN5Music5startEv>
      nomalTitle();
    2f58:	c6 01       	movw	r24, r12
    2f5a:	0e 94 15 14 	call	0x282a	; 0x282a <_ZN4Game10nomalTitleEv>

      switch (m_Cursor)
    2f5e:	f6 01       	movw	r30, r12
    2f60:	82 85       	ldd	r24, Z+10	; 0x0a
    2f62:	81 30       	cpi	r24, 0x01	; 1
    2f64:	69 f1       	breq	.+90     	; 0x2fc0 <_ZN4Game9titleLoopEv+0xaa>
    2f66:	82 30       	cpi	r24, 0x02	; 2
    2f68:	09 f4       	brne	.+2      	; 0x2f6c <_ZN4Game9titleLoopEv+0x56>
    2f6a:	68 c0       	rjmp	.+208    	; 0x303c <_ZN4Game9titleLoopEv+0x126>
    2f6c:	81 11       	cpse	r24, r1
    2f6e:	e7 cf       	rjmp	.-50     	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
      {
      case 0:
        if (Frame::sixFrames == 0)
    2f70:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    2f74:	81 11       	cpse	r24, r1
    2f76:	0e c0       	rjmp	.+28     	; 0x2f94 <_ZN4Game9titleLoopEv+0x7e>
        {
          clear(2, 160, 6, 14, BLACK);
    2f78:	e1 2c       	mov	r14, r1
    2f7a:	f1 2c       	mov	r15, r1
    2f7c:	0e e0       	ldi	r16, 0x0E	; 14
    2f7e:	10 e0       	ldi	r17, 0x00	; 0
    2f80:	26 e0       	ldi	r18, 0x06	; 6
    2f82:	30 e0       	ldi	r19, 0x00	; 0
    2f84:	40 ea       	ldi	r20, 0xA0	; 160
    2f86:	50 e0       	ldi	r21, 0x00	; 0
    2f88:	62 e0       	ldi	r22, 0x02	; 2
    2f8a:	70 e0       	ldi	r23, 0x00	; 0
    2f8c:	c6 01       	movw	r24, r12
    2f8e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    2f92:	10 c0       	rjmp	.+32     	; 0x2fb4 <_ZN4Game9titleLoopEv+0x9e>
        }

        else if (Frame::sixFrames == 4)
    2f94:	84 30       	cpi	r24, 0x04	; 4
    2f96:	71 f4       	brne	.+28     	; 0x2fb4 <_ZN4Game9titleLoopEv+0x9e>
        {
          clear(2, 160, 6, 14, WHITE);
    2f98:	ee 24       	eor	r14, r14
    2f9a:	ea 94       	dec	r14
    2f9c:	fe 2c       	mov	r15, r14
    2f9e:	0e e0       	ldi	r16, 0x0E	; 14
    2fa0:	10 e0       	ldi	r17, 0x00	; 0
    2fa2:	26 e0       	ldi	r18, 0x06	; 6
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	40 ea       	ldi	r20, 0xA0	; 160
    2fa8:	50 e0       	ldi	r21, 0x00	; 0
    2faa:	62 e0       	ldi	r22, 0x02	; 2
    2fac:	70 e0       	ldi	r23, 0x00	; 0
    2fae:	c6 01       	movw	r24, r12
    2fb0:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        }

        if (SW::interrupt1 == ON)
    2fb4:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    2fb8:	88 23       	and	r24, r24
    2fba:	09 f4       	brne	.+2      	; 0x2fbe <_ZN4Game9titleLoopEv+0xa8>
    2fbc:	c0 cf       	rjmp	.-128    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
    2fbe:	80 c0       	rjmp	.+256    	; 0x30c0 <_ZN4Game9titleLoopEv+0x1aa>
        }

        break;

      case 1:
        if (Frame::sixFrames == 0)
    2fc0:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    2fc4:	81 11       	cpse	r24, r1
    2fc6:	0e c0       	rjmp	.+28     	; 0x2fe4 <_ZN4Game9titleLoopEv+0xce>
        {
          clear(2, 184, 6, 14, BLACK);
    2fc8:	e1 2c       	mov	r14, r1
    2fca:	f1 2c       	mov	r15, r1
    2fcc:	0e e0       	ldi	r16, 0x0E	; 14
    2fce:	10 e0       	ldi	r17, 0x00	; 0
    2fd0:	26 e0       	ldi	r18, 0x06	; 6
    2fd2:	30 e0       	ldi	r19, 0x00	; 0
    2fd4:	48 eb       	ldi	r20, 0xB8	; 184
    2fd6:	50 e0       	ldi	r21, 0x00	; 0
    2fd8:	62 e0       	ldi	r22, 0x02	; 2
    2fda:	70 e0       	ldi	r23, 0x00	; 0
    2fdc:	c6 01       	movw	r24, r12
    2fde:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    2fe2:	10 c0       	rjmp	.+32     	; 0x3004 <_ZN4Game9titleLoopEv+0xee>
        }

        else if (Frame::sixFrames == 4)
    2fe4:	84 30       	cpi	r24, 0x04	; 4
    2fe6:	71 f4       	brne	.+28     	; 0x3004 <_ZN4Game9titleLoopEv+0xee>
        {
          clear(2, 184, 6, 14, WHITE);
    2fe8:	ee 24       	eor	r14, r14
    2fea:	ea 94       	dec	r14
    2fec:	fe 2c       	mov	r15, r14
    2fee:	0e e0       	ldi	r16, 0x0E	; 14
    2ff0:	10 e0       	ldi	r17, 0x00	; 0
    2ff2:	26 e0       	ldi	r18, 0x06	; 6
    2ff4:	30 e0       	ldi	r19, 0x00	; 0
    2ff6:	48 eb       	ldi	r20, 0xB8	; 184
    2ff8:	50 e0       	ldi	r21, 0x00	; 0
    2ffa:	62 e0       	ldi	r22, 0x02	; 2
    2ffc:	70 e0       	ldi	r23, 0x00	; 0
    2ffe:	c6 01       	movw	r24, r12
    3000:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        }

        if (SW::interrupt1 == ON)
    3004:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    3008:	88 23       	and	r24, r24
    300a:	09 f4       	brne	.+2      	; 0x300e <_ZN4Game9titleLoopEv+0xf8>
    300c:	98 cf       	rjmp	.-208    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
        {
          clear(55, 20, 210, 200, BLACK);
    300e:	e1 2c       	mov	r14, r1
    3010:	f1 2c       	mov	r15, r1
    3012:	08 ec       	ldi	r16, 0xC8	; 200
    3014:	10 e0       	ldi	r17, 0x00	; 0
    3016:	22 ed       	ldi	r18, 0xD2	; 210
    3018:	30 e0       	ldi	r19, 0x00	; 0
    301a:	44 e1       	ldi	r20, 0x14	; 20
    301c:	50 e0       	ldi	r21, 0x00	; 0
    301e:	67 e3       	ldi	r22, 0x37	; 55
    3020:	70 e0       	ldi	r23, 0x00	; 0
    3022:	c6 01       	movw	r24, r12
    3024:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          SW::init();
    3028:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
  ~Music() { setSound(OFF); }

  void start(void);
  void pause(void) { setSound(OFF); }
    302c:	60 e0       	ldi	r22, 0x00	; 0
    302e:	ce 01       	movw	r24, r28
    3030:	01 96       	adiw	r24, 0x01	; 1
    3032:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
          title.pause();
          m_IsScore = true;
    3036:	f6 01       	movw	r30, r12
    3038:	b7 86       	std	Z+15, r11	; 0x0f
    303a:	81 cf       	rjmp	.-254    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
        }

        break;

      case 2:
        if (Frame::sixFrames == 0)
    303c:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    3040:	81 11       	cpse	r24, r1
    3042:	0e c0       	rjmp	.+28     	; 0x3060 <_ZN4Game9titleLoopEv+0x14a>
        {
          clear(2, 208, 6, 14, BLACK);
    3044:	e1 2c       	mov	r14, r1
    3046:	f1 2c       	mov	r15, r1
    3048:	0e e0       	ldi	r16, 0x0E	; 14
    304a:	10 e0       	ldi	r17, 0x00	; 0
    304c:	26 e0       	ldi	r18, 0x06	; 6
    304e:	30 e0       	ldi	r19, 0x00	; 0
    3050:	40 ed       	ldi	r20, 0xD0	; 208
    3052:	50 e0       	ldi	r21, 0x00	; 0
    3054:	62 e0       	ldi	r22, 0x02	; 2
    3056:	70 e0       	ldi	r23, 0x00	; 0
    3058:	c6 01       	movw	r24, r12
    305a:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    305e:	10 c0       	rjmp	.+32     	; 0x3080 <_ZN4Game9titleLoopEv+0x16a>
        }

        else if (Frame::sixFrames == 4)
    3060:	84 30       	cpi	r24, 0x04	; 4
    3062:	71 f4       	brne	.+28     	; 0x3080 <_ZN4Game9titleLoopEv+0x16a>
        {
          clear(2, 208, 6, 14, WHITE);
    3064:	ee 24       	eor	r14, r14
    3066:	ea 94       	dec	r14
    3068:	fe 2c       	mov	r15, r14
    306a:	0e e0       	ldi	r16, 0x0E	; 14
    306c:	10 e0       	ldi	r17, 0x00	; 0
    306e:	26 e0       	ldi	r18, 0x06	; 6
    3070:	30 e0       	ldi	r19, 0x00	; 0
    3072:	40 ed       	ldi	r20, 0xD0	; 208
    3074:	50 e0       	ldi	r21, 0x00	; 0
    3076:	62 e0       	ldi	r22, 0x02	; 2
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	c6 01       	movw	r24, r12
    307c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        }

        if (SW::interrupt1 == ON)
    3080:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    3084:	88 23       	and	r24, r24
    3086:	09 f4       	brne	.+2      	; 0x308a <_ZN4Game9titleLoopEv+0x174>
    3088:	5a cf       	rjmp	.-332    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
        {
          fillScreen(BLACK);
    308a:	60 e0       	ldi	r22, 0x00	; 0
    308c:	70 e0       	ldi	r23, 0x00	; 0
    308e:	c6 01       	movw	r24, r12
    3090:	0e 94 33 2c 	call	0x5866	; 0x5866 <_ZN3TFT10fillScreenEj>
          SW::init();
    3094:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
    3098:	60 e0       	ldi	r22, 0x00	; 0
    309a:	ce 01       	movw	r24, r28
    309c:	01 96       	adiw	r24, 0x01	; 1
    309e:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
          title.pause();
          m_IsCredit = true;
    30a2:	f6 01       	movw	r30, r12
    30a4:	b0 8a       	std	Z+16, r11	; 0x10
    30a6:	4b cf       	rjmp	.-362    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
      default:
        break;
      }
    }

    else if (m_IsScore == true && m_IsCredit == false)
    30a8:	f6 01       	movw	r30, r12
    30aa:	80 89       	ldd	r24, Z+16	; 0x10
    30ac:	81 11       	cpse	r24, r1
    30ae:	47 cf       	rjmp	.-370    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
    {
      scoreTitle();
    30b0:	c6 01       	movw	r24, r12
    30b2:	0e 94 13 15 	call	0x2a26	; 0x2a26 <_ZN4Game10scoreTitleEv>
    30b6:	43 cf       	rjmp	.-378    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
    }

    else if (m_IsScore == false && m_IsCredit == true)
    {
      creditTitle();
    30b8:	c6 01       	movw	r24, r12
    30ba:	0e 94 48 16 	call	0x2c90	; 0x2c90 <_ZN4Game11creditTitleEv>
    30be:	3f cf       	rjmp	.-386    	; 0x2f3e <_ZN4Game9titleLoopEv+0x28>
  void jumpingMusic(void);

public:
  Music(int8_t mode) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = false; }
  Music(int8_t mode, bool start) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = true; }
  ~Music() { setSound(OFF); }
    30c0:	60 e0       	ldi	r22, 0x00	; 0
    30c2:	ce 01       	movw	r24, r28
    30c4:	01 96       	adiw	r24, 0x01	; 1
    30c6:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    }

  }

}
    30ca:	0f 90       	pop	r0
    30cc:	0f 90       	pop	r0
    30ce:	0f 90       	pop	r0
    30d0:	df 91       	pop	r29
    30d2:	cf 91       	pop	r28
    30d4:	1f 91       	pop	r17
    30d6:	0f 91       	pop	r16
    30d8:	ff 90       	pop	r15
    30da:	ef 90       	pop	r14
    30dc:	df 90       	pop	r13
    30de:	cf 90       	pop	r12
    30e0:	bf 90       	pop	r11
    30e2:	08 95       	ret

000030e4 <_ZN4Game9startLoopEv>:
/*----------------------------------------//
              Game Start Loop
//----------------------------------------*/

void Game::startLoop(void)
{
    30e4:	6f 92       	push	r6
    30e6:	7f 92       	push	r7
    30e8:	8f 92       	push	r8
    30ea:	9f 92       	push	r9
    30ec:	af 92       	push	r10
    30ee:	bf 92       	push	r11
    30f0:	cf 92       	push	r12
    30f2:	df 92       	push	r13
    30f4:	ef 92       	push	r14
    30f6:	ff 92       	push	r15
    30f8:	0f 93       	push	r16
    30fa:	1f 93       	push	r17
    30fc:	cf 93       	push	r28
    30fe:	df 93       	push	r29
    3100:	cd b7       	in	r28, 0x3d	; 61
    3102:	de b7       	in	r29, 0x3e	; 62
    3104:	cf 5a       	subi	r28, 0xAF	; 175
    3106:	d1 09       	sbc	r29, r1
    3108:	0f b6       	in	r0, 0x3f	; 63
    310a:	f8 94       	cli
    310c:	de bf       	out	0x3e, r29	; 62
    310e:	0f be       	out	0x3f, r0	; 63
    3110:	cd bf       	out	0x3d, r28	; 61
    3112:	4c 01       	movw	r8, r24
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    3114:	0f 2e       	mov	r0, r31
    3116:	f0 ef       	ldi	r31, 0xF0	; 240
    3118:	af 2e       	mov	r10, r31
    311a:	b1 2c       	mov	r11, r1
    311c:	f0 2d       	mov	r31, r0
    311e:	ba 82       	std	Y+2, r11	; 0x02
    3120:	a9 82       	std	Y+1, r10	; 0x01
    3122:	00 e4       	ldi	r16, 0x40	; 64
    3124:	11 e0       	ldi	r17, 0x01	; 1
    3126:	1c 83       	std	Y+4, r17	; 0x04
    3128:	0b 83       	std	Y+3, r16	; 0x03

  void running(void);
  void jumping(void);

public:
  Player() : TFT() { m_JumpSpeed = 6; m_IsReset = false; m_IsUp = false; isJump = false; }
    312a:	86 e0       	ldi	r24, 0x06	; 6
    312c:	8f 83       	std	Y+7, r24	; 0x07
    312e:	19 86       	std	Y+9, r1	; 0x09
    3130:	1a 86       	std	Y+10, r1	; 0x0a
    3132:	1c 86       	std	Y+12, r1	; 0x0c
    3134:	be 86       	std	Y+14, r11	; 0x0e
    3136:	ad 86       	std	Y+13, r10	; 0x0d
    3138:	18 8b       	std	Y+16, r17	; 0x10
    313a:	0f 87       	std	Y+15, r16	; 0x0f
  void present(void);
  void rollBlock(void);
  void rollBackground(void);

public:
  Object() : TFT() { m_MoveSpeed = 3; m_IsBlock = true; m_IsReset = false; isRolling = false; isPresent = false; init(); }
    313c:	0f 2e       	mov	r0, r31
    313e:	f3 e0       	ldi	r31, 0x03	; 3
    3140:	7f 2e       	mov	r7, r31
    3142:	f0 2d       	mov	r31, r0
    3144:	7b 8e       	std	Y+27, r7	; 0x1b
    3146:	dd 24       	eor	r13, r13
    3148:	d3 94       	inc	r13
    314a:	df 8e       	std	Y+31, r13	; 0x1f
    314c:	18 a2       	std	Y+32, r1	; 0x20
    314e:	1d a2       	std	Y+37, r1	; 0x25
    3150:	1e a2       	std	Y+38, r1	; 0x26
    3152:	ce 01       	movw	r24, r28
    3154:	0d 96       	adiw	r24, 0x0d	; 13
    3156:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    315a:	b8 a6       	std	Y+40, r11	; 0x28
    315c:	af a2       	std	Y+39, r10	; 0x27
    315e:	1a a7       	std	Y+42, r17	; 0x2a
    3160:	09 a7       	std	Y+41, r16	; 0x29
    3162:	7d aa       	std	Y+53, r7	; 0x35
    3164:	d9 ae       	std	Y+57, r13	; 0x39
    3166:	1a ae       	std	Y+58, r1	; 0x3a
    3168:	1f ae       	std	Y+63, r1	; 0x3f
    316a:	21 96       	adiw	r28, 0x01	; 1
    316c:	1f ae       	std	Y+63, r1	; 0x3f
    316e:	21 97       	sbiw	r28, 0x01	; 1
    3170:	ce 01       	movw	r24, r28
    3172:	87 96       	adiw	r24, 0x27	; 39
    3174:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    3178:	23 96       	adiw	r28, 0x03	; 3
    317a:	bf ae       	std	Y+63, r11	; 0x3f
    317c:	ae ae       	std	Y+62, r10	; 0x3e
    317e:	23 97       	sbiw	r28, 0x03	; 3
    3180:	25 96       	adiw	r28, 0x05	; 5
    3182:	1f af       	std	Y+63, r17	; 0x3f
    3184:	0e af       	std	Y+62, r16	; 0x3e
    3186:	25 97       	sbiw	r28, 0x05	; 5
    3188:	60 96       	adiw	r28, 0x10	; 16
    318a:	7f ae       	std	Y+63, r7	; 0x3f
    318c:	60 97       	sbiw	r28, 0x10	; 16
    318e:	64 96       	adiw	r28, 0x14	; 20
    3190:	df ae       	std	Y+63, r13	; 0x3f
    3192:	64 97       	sbiw	r28, 0x14	; 20
    3194:	65 96       	adiw	r28, 0x15	; 21
    3196:	1f ae       	std	Y+63, r1	; 0x3f
    3198:	65 97       	sbiw	r28, 0x15	; 21
    319a:	6a 96       	adiw	r28, 0x1a	; 26
    319c:	1f ae       	std	Y+63, r1	; 0x3f
    319e:	6a 97       	sbiw	r28, 0x1a	; 26
    31a0:	6b 96       	adiw	r28, 0x1b	; 27
    31a2:	1f ae       	std	Y+63, r1	; 0x3f
    31a4:	6b 97       	sbiw	r28, 0x1b	; 27
    31a6:	ce 01       	movw	r24, r28
    31a8:	8f 5b       	subi	r24, 0xBF	; 191
    31aa:	9f 4f       	sbci	r25, 0xFF	; 255
    31ac:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    31b0:	6d 96       	adiw	r28, 0x1d	; 29
    31b2:	bf ae       	std	Y+63, r11	; 0x3f
    31b4:	ae ae       	std	Y+62, r10	; 0x3e
    31b6:	6d 97       	sbiw	r28, 0x1d	; 29
    31b8:	6f 96       	adiw	r28, 0x1f	; 31
    31ba:	1f af       	std	Y+63, r17	; 0x3f
    31bc:	0e af       	std	Y+62, r16	; 0x3e
    31be:	6f 97       	sbiw	r28, 0x1f	; 31
  Object(int16_t width, int16_t height, const uint8_t *bitmap, int8_t speed) : TFT() { m_MoveSpeed = speed; m_IsBlock = false; m_IsReset = false; isRolling = false;
    31c0:	88 e2       	ldi	r24, 0x28	; 40
    31c2:	aa 96       	adiw	r28, 0x2a	; 42
    31c4:	8f af       	std	Y+63, r24	; 0x3f
    31c6:	aa 97       	sbiw	r28, 0x2a	; 42
    31c8:	ae 96       	adiw	r28, 0x2e	; 46
    31ca:	1f ae       	std	Y+63, r1	; 0x3f
    31cc:	ae 97       	sbiw	r28, 0x2e	; 46
    31ce:	af 96       	adiw	r28, 0x2f	; 47
    31d0:	1f ae       	std	Y+63, r1	; 0x3f
    31d2:	af 97       	sbiw	r28, 0x2f	; 47
    31d4:	e4 96       	adiw	r28, 0x34	; 52
    31d6:	1f ae       	std	Y+63, r1	; 0x3f
    31d8:	e4 97       	sbiw	r28, 0x34	; 52
    m_Bitmap = bitmap; m_Width = width; m_Height = height; }
    31da:	8c e1       	ldi	r24, 0x1C	; 28
    31dc:	91 e0       	ldi	r25, 0x01	; 1
    31de:	a1 96       	adiw	r28, 0x21	; 33
    31e0:	9f af       	std	Y+63, r25	; 0x3f
    31e2:	8e af       	std	Y+62, r24	; 0x3e
    31e4:	a1 97       	sbiw	r28, 0x21	; 33
    31e6:	82 e3       	ldi	r24, 0x32	; 50
    31e8:	90 e0       	ldi	r25, 0x00	; 0
    31ea:	a3 96       	adiw	r28, 0x23	; 35
    31ec:	9f af       	std	Y+63, r25	; 0x3f
    31ee:	8e af       	std	Y+62, r24	; 0x3e
    31f0:	a3 97       	sbiw	r28, 0x23	; 35
    31f2:	88 e4       	ldi	r24, 0x48	; 72
    31f4:	90 e0       	ldi	r25, 0x00	; 0
    31f6:	a5 96       	adiw	r28, 0x25	; 37
    31f8:	9f af       	std	Y+63, r25	; 0x3f
    31fa:	8e af       	std	Y+62, r24	; 0x3e
    31fc:	a5 97       	sbiw	r28, 0x25	; 37
    31fe:	e7 96       	adiw	r28, 0x37	; 55
    3200:	bf ae       	std	Y+63, r11	; 0x3f
    3202:	ae ae       	std	Y+62, r10	; 0x3e
    3204:	e7 97       	sbiw	r28, 0x37	; 55
    3206:	e9 96       	adiw	r28, 0x39	; 57
    3208:	1f af       	std	Y+63, r17	; 0x3f
    320a:	0e af       	std	Y+62, r16	; 0x3e
    320c:	e9 97       	sbiw	r28, 0x39	; 57
  void rollBlock(void);
  void rollBackground(void);

public:
  Object() : TFT() { m_MoveSpeed = 3; m_IsBlock = true; m_IsReset = false; isRolling = false; isPresent = false; init(); }
  Object(int16_t width, int16_t height, const uint8_t *bitmap, int8_t speed) : TFT() { m_MoveSpeed = speed; m_IsBlock = false; m_IsReset = false; isRolling = false;
    320e:	8a e0       	ldi	r24, 0x0A	; 10
    3210:	cd 57       	subi	r28, 0x7D	; 125
    3212:	df 4f       	sbci	r29, 0xFF	; 255
    3214:	88 83       	st	Y, r24
    3216:	c3 58       	subi	r28, 0x83	; 131
    3218:	d0 40       	sbci	r29, 0x00	; 0
    321a:	c9 57       	subi	r28, 0x79	; 121
    321c:	df 4f       	sbci	r29, 0xFF	; 255
    321e:	18 82       	st	Y, r1
    3220:	c7 58       	subi	r28, 0x87	; 135
    3222:	d0 40       	sbci	r29, 0x00	; 0
    3224:	c8 57       	subi	r28, 0x78	; 120
    3226:	df 4f       	sbci	r29, 0xFF	; 255
    3228:	18 82       	st	Y, r1
    322a:	c8 58       	subi	r28, 0x88	; 136
    322c:	d0 40       	sbci	r29, 0x00	; 0
    322e:	c3 57       	subi	r28, 0x73	; 115
    3230:	df 4f       	sbci	r29, 0xFF	; 255
    3232:	18 82       	st	Y, r1
    3234:	cd 58       	subi	r28, 0x8D	; 141
    3236:	d0 40       	sbci	r29, 0x00	; 0
    m_Bitmap = bitmap; m_Width = width; m_Height = height; }
    3238:	86 e2       	ldi	r24, 0x26	; 38
    323a:	91 e0       	ldi	r25, 0x01	; 1
    323c:	eb 96       	adiw	r28, 0x3b	; 59
    323e:	9f af       	std	Y+63, r25	; 0x3f
    3240:	8e af       	std	Y+62, r24	; 0x3e
    3242:	eb 97       	sbiw	r28, 0x3b	; 59
    3244:	8a ef       	ldi	r24, 0xFA	; 250
    3246:	90 e0       	ldi	r25, 0x00	; 0
    3248:	ed 96       	adiw	r28, 0x3d	; 61
    324a:	9f af       	std	Y+63, r25	; 0x3f
    324c:	8e af       	std	Y+62, r24	; 0x3e
    324e:	ed 97       	sbiw	r28, 0x3d	; 61
    3250:	88 e5       	ldi	r24, 0x58	; 88
    3252:	90 e0       	ldi	r25, 0x00	; 0
    3254:	ef 96       	adiw	r28, 0x3f	; 63
    3256:	9f af       	std	Y+63, r25	; 0x3f
    3258:	8e af       	std	Y+62, r24	; 0x3e
    325a:	ef 97       	sbiw	r28, 0x3f	; 63
    325c:	c1 57       	subi	r28, 0x71	; 113
    325e:	df 4f       	sbci	r29, 0xFF	; 255
    3260:	b9 82       	std	Y+1, r11	; 0x01
    3262:	a8 82       	st	Y, r10
    3264:	cf 58       	subi	r28, 0x8F	; 143
    3266:	d0 40       	sbci	r29, 0x00	; 0
    3268:	cf 56       	subi	r28, 0x6F	; 111
    326a:	df 4f       	sbci	r29, 0xFF	; 255
    326c:	19 83       	std	Y+1, r17	; 0x01
    326e:	08 83       	st	Y, r16
    3270:	c1 59       	subi	r28, 0x91	; 145
    3272:	d0 40       	sbci	r29, 0x00	; 0
  void rollBlock(void);
  void rollBackground(void);

public:
  Object() : TFT() { m_MoveSpeed = 3; m_IsBlock = true; m_IsReset = false; isRolling = false; isPresent = false; init(); }
  Object(int16_t width, int16_t height, const uint8_t *bitmap, int8_t speed) : TFT() { m_MoveSpeed = speed; m_IsBlock = false; m_IsReset = false; isRolling = false;
    3274:	c3 56       	subi	r28, 0x63	; 99
    3276:	df 4f       	sbci	r29, 0xFF	; 255
    3278:	78 82       	st	Y, r7
    327a:	cd 59       	subi	r28, 0x9D	; 157
    327c:	d0 40       	sbci	r29, 0x00	; 0
    327e:	cf 55       	subi	r28, 0x5F	; 95
    3280:	df 4f       	sbci	r29, 0xFF	; 255
    3282:	18 82       	st	Y, r1
    3284:	c1 5a       	subi	r28, 0xA1	; 161
    3286:	d0 40       	sbci	r29, 0x00	; 0
    3288:	ce 55       	subi	r28, 0x5E	; 94
    328a:	df 4f       	sbci	r29, 0xFF	; 255
    328c:	18 82       	st	Y, r1
    328e:	c2 5a       	subi	r28, 0xA2	; 162
    3290:	d0 40       	sbci	r29, 0x00	; 0
    3292:	c9 55       	subi	r28, 0x59	; 89
    3294:	df 4f       	sbci	r29, 0xFF	; 255
    3296:	18 82       	st	Y, r1
    3298:	c7 5a       	subi	r28, 0xA7	; 167
    329a:	d0 40       	sbci	r29, 0x00	; 0
    m_Bitmap = bitmap; m_Width = width; m_Height = height; }
    329c:	81 e2       	ldi	r24, 0x21	; 33
    329e:	91 e0       	ldi	r25, 0x01	; 1
    32a0:	cd 56       	subi	r28, 0x6D	; 109
    32a2:	df 4f       	sbci	r29, 0xFF	; 255
    32a4:	99 83       	std	Y+1, r25	; 0x01
    32a6:	88 83       	st	Y, r24
    32a8:	c3 59       	subi	r28, 0x93	; 147
    32aa:	d0 40       	sbci	r29, 0x00	; 0
    32ac:	86 e9       	ldi	r24, 0x96	; 150
    32ae:	90 e0       	ldi	r25, 0x00	; 0
    32b0:	cb 56       	subi	r28, 0x6B	; 107
    32b2:	df 4f       	sbci	r29, 0xFF	; 255
    32b4:	99 83       	std	Y+1, r25	; 0x01
    32b6:	88 83       	st	Y, r24
    32b8:	c5 59       	subi	r28, 0x95	; 149
    32ba:	d0 40       	sbci	r29, 0x00	; 0
    32bc:	8e e6       	ldi	r24, 0x6E	; 110
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	c9 56       	subi	r28, 0x69	; 105
    32c2:	df 4f       	sbci	r29, 0xFF	; 255
    32c4:	99 83       	std	Y+1, r25	; 0x01
    32c6:	88 83       	st	Y, r24
    32c8:	c7 59       	subi	r28, 0x97	; 151
    32ca:	d0 40       	sbci	r29, 0x00	; 0
  void startingMusic(void);
  void jumpingMusic(void);

public:
  Music(int8_t mode) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = false; }
  Music(int8_t mode, bool start) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = true; }
    32cc:	c6 55       	subi	r28, 0x56	; 86
    32ce:	df 4f       	sbci	r29, 0xFF	; 255
    32d0:	d8 82       	st	Y, r13
    32d2:	ca 5a       	subi	r28, 0xAA	; 170
    32d4:	d0 40       	sbci	r29, 0x00	; 0
    32d6:	c5 55       	subi	r28, 0x55	; 85
    32d8:	df 4f       	sbci	r29, 0xFF	; 255
    32da:	18 82       	st	Y, r1
    32dc:	cb 5a       	subi	r28, 0xAB	; 171
    32de:	d0 40       	sbci	r29, 0x00	; 0
    32e0:	c4 55       	subi	r28, 0x54	; 84
    32e2:	df 4f       	sbci	r29, 0xFF	; 255
    32e4:	d8 82       	st	Y, r13
    32e6:	cc 5a       	subi	r28, 0xAC	; 172
    32e8:	d0 40       	sbci	r29, 0x00	; 0
  void titleMusic(void);
  void startingMusic(void);
  void jumpingMusic(void);

public:
  Music(int8_t mode) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = false; }
    32ea:	82 e0       	ldi	r24, 0x02	; 2
    32ec:	c3 55       	subi	r28, 0x53	; 83
    32ee:	df 4f       	sbci	r29, 0xFF	; 255
    32f0:	88 83       	st	Y, r24
    32f2:	cd 5a       	subi	r28, 0xAD	; 173
    32f4:	d0 40       	sbci	r29, 0x00	; 0
    32f6:	c2 55       	subi	r28, 0x52	; 82
    32f8:	df 4f       	sbci	r29, 0xFF	; 255
    32fa:	18 82       	st	Y, r1
    32fc:	ce 5a       	subi	r28, 0xAE	; 174
    32fe:	d0 40       	sbci	r29, 0x00	; 0
    3300:	c1 55       	subi	r28, 0x51	; 81
    3302:	df 4f       	sbci	r29, 0xFF	; 255
    3304:	18 82       	st	Y, r1
    3306:	cf 5a       	subi	r28, 0xAF	; 175
    3308:	d0 40       	sbci	r29, 0x00	; 0

  Audio audio;
  Music startingSound(START, ON);
  Music jumpingSound(JUMP);

  print(10, 16, "Score:");
    330a:	68 2c       	mov	r6, r8
    330c:	79 2c       	mov	r7, r9
    330e:	22 ea       	ldi	r18, 0xA2	; 162
    3310:	31 e0       	ldi	r19, 0x01	; 1
    3312:	40 e1       	ldi	r20, 0x10	; 16
    3314:	50 e0       	ldi	r21, 0x00	; 0
    3316:	6a e0       	ldi	r22, 0x0A	; 10
    3318:	70 e0       	ldi	r23, 0x00	; 0
    331a:	c4 01       	movw	r24, r8
    331c:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  draw(250, 40, 32, 32, moonTile, BLACK, WHITE);
    3320:	aa 24       	eor	r10, r10
    3322:	aa 94       	dec	r10
    3324:	ba 2c       	mov	r11, r10
    3326:	c1 2c       	mov	r12, r1
    3328:	d1 2c       	mov	r13, r1
    332a:	0f 2e       	mov	r0, r31
    332c:	fb e2       	ldi	r31, 0x2B	; 43
    332e:	ef 2e       	mov	r14, r31
    3330:	f1 e0       	ldi	r31, 0x01	; 1
    3332:	ff 2e       	mov	r15, r31
    3334:	f0 2d       	mov	r31, r0
    3336:	00 e2       	ldi	r16, 0x20	; 32
    3338:	10 e0       	ldi	r17, 0x00	; 0
    333a:	20 e2       	ldi	r18, 0x20	; 32
    333c:	30 e0       	ldi	r19, 0x00	; 0
    333e:	48 e2       	ldi	r20, 0x28	; 40
    3340:	50 e0       	ldi	r21, 0x00	; 0
    3342:	6a ef       	ldi	r22, 0xFA	; 250
    3344:	70 e0       	ldi	r23, 0x00	; 0
    3346:	c4 01       	movw	r24, r8
    3348:	0e 94 b1 2c 	call	0x5962	; 0x5962 <_ZN3TFT4drawEiiiiPKhjj>

  ~Object(){};

  void init(void);
  void start(void);
  void setSpeed(int8_t speed) { m_MoveSpeed = speed; }
    334c:	0f 2e       	mov	r0, r31
    334e:	f7 e0       	ldi	r31, 0x07	; 7
    3350:	df 2e       	mov	r13, r31
    3352:	f0 2d       	mov	r31, r0

  while (1)
  {

    star1.start();
    3354:	ce 01       	movw	r24, r28
    3356:	85 5a       	subi	r24, 0xA5	; 165
    3358:	9f 4f       	sbci	r25, 0xFF	; 255
    335a:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
    star2.start();
    335e:	ce 01       	movw	r24, r28
    3360:	8b 58       	subi	r24, 0x8B	; 139
    3362:	9f 4f       	sbci	r25, 0xFF	; 255
    3364:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
    star3.start();
    3368:	ce 01       	movw	r24, r28
    336a:	81 57       	subi	r24, 0x71	; 113
    336c:	9f 4f       	sbci	r25, 0xFF	; 255
    336e:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>

    if (m_IsHighSpeed == false)
    3372:	f4 01       	movw	r30, r8
    3374:	83 89       	ldd	r24, Z+19	; 0x13
    3376:	81 11       	cpse	r24, r1
    3378:	09 c0       	rjmp	.+18     	; 0x338c <_ZN4Game9startLoopEv+0x2a8>
    {
      block1.start();
    337a:	ce 01       	movw	r24, r28
    337c:	0d 96       	adiw	r24, 0x0d	; 13
    337e:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
      block2.start();
    3382:	ce 01       	movw	r24, r28
    3384:	87 96       	adiw	r24, 0x27	; 39
    3386:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
    338a:	0d c0       	rjmp	.+26     	; 0x33a6 <_ZN4Game9startLoopEv+0x2c2>
    }

    else
    {
      block1.start();
    338c:	ce 01       	movw	r24, r28
    338e:	0d 96       	adiw	r24, 0x0d	; 13
    3390:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
      block2.start();
    3394:	ce 01       	movw	r24, r28
    3396:	87 96       	adiw	r24, 0x27	; 39
    3398:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
      block3.start();
    339c:	ce 01       	movw	r24, r28
    339e:	8f 5b       	subi	r24, 0xBF	; 191
    33a0:	9f 4f       	sbci	r25, 0xFF	; 255
    33a2:	0e 94 05 28 	call	0x500a	; 0x500a <_ZN6Object5startEv>
    }

    if (block1.xPosition > 288 && block2.xPosition > 288)
    33a6:	8b a1       	ldd	r24, Y+35	; 0x23
    33a8:	9c a1       	ldd	r25, Y+36	; 0x24
    33aa:	81 32       	cpi	r24, 0x21	; 33
    33ac:	f1 e0       	ldi	r31, 0x01	; 1
    33ae:	9f 07       	cpc	r25, r31
    33b0:	44 f0       	brlt	.+16     	; 0x33c2 <_ZN4Game9startLoopEv+0x2de>
    33b2:	8d ad       	ldd	r24, Y+61	; 0x3d
    33b4:	9e ad       	ldd	r25, Y+62	; 0x3e
    33b6:	81 32       	cpi	r24, 0x21	; 33
    33b8:	91 40       	sbci	r25, 0x01	; 1
    33ba:	0c f4       	brge	.+2      	; 0x33be <_ZN4Game9startLoopEv+0x2da>
    33bc:	64 c4       	rjmp	.+2248   	; 0x3c86 <_ZN4Game9startLoopEv+0xba2>
    {
      block2.isRolling = false;
    33be:	1f ae       	std	Y+63, r1	; 0x3f
    33c0:	18 c0       	rjmp	.+48     	; 0x33f2 <_ZN4Game9startLoopEv+0x30e>
    }
    
    else
    {
      if ((block1.xPosition > 235 && block1.xPosition <= 260) && block2.xPosition > 288)
    33c2:	8c 5e       	subi	r24, 0xEC	; 236
    33c4:	91 09       	sbc	r25, r1
    33c6:	49 97       	sbiw	r24, 0x19	; 25
    33c8:	a0 f4       	brcc	.+40     	; 0x33f2 <_ZN4Game9startLoopEv+0x30e>
    33ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    33cc:	9e ad       	ldd	r25, Y+62	; 0x3e
    33ce:	81 32       	cpi	r24, 0x21	; 33
    33d0:	91 40       	sbci	r25, 0x01	; 1
    33d2:	7c f0       	brlt	.+30     	; 0x33f2 <_ZN4Game9startLoopEv+0x30e>
      {
        block2.isRolling = false;
    33d4:	1f ae       	std	Y+63, r1	; 0x3f
        block2.isPresent = false;
    33d6:	21 96       	adiw	r28, 0x01	; 1
    33d8:	1f ae       	std	Y+63, r1	; 0x3f
    33da:	21 97       	sbiw	r28, 0x01	; 1
        block2.clearObject();
    33dc:	ce 01       	movw	r24, r28
    33de:	87 96       	adiw	r24, 0x27	; 39
    33e0:	0e 94 1e 28 	call	0x503c	; 0x503c <_ZN6Object11clearObjectEv>
    33e4:	06 c0       	rjmp	.+12     	; 0x33f2 <_ZN4Game9startLoopEv+0x30e>
      }

      else if ((block2.xPosition > 235 && block2.xPosition <= 260) && block1.xPosition > 288)
      {
        block1.isRolling = false;
    33e6:	1d a2       	std	Y+37, r1	; 0x25
        block1.isPresent = false;
    33e8:	1e a2       	std	Y+38, r1	; 0x26
        block1.clearObject();
    33ea:	ce 01       	movw	r24, r28
    33ec:	0d 96       	adiw	r24, 0x0d	; 13
    33ee:	0e 94 1e 28 	call	0x503c	; 0x503c <_ZN6Object11clearObjectEv>
      block1.setSpeed(6);
      block2.setSpeed(6);
    }
    */

    if (m_ScoreTemp != Frame::scoreTime)
    33f2:	00 91 47 02 	lds	r16, 0x0247	; 0x800247 <_ZN5Frame9scoreTimeE>
    33f6:	10 91 48 02 	lds	r17, 0x0248	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    33fa:	f4 01       	movw	r30, r8
    33fc:	85 85       	ldd	r24, Z+13	; 0x0d
    33fe:	96 85       	ldd	r25, Z+14	; 0x0e
    3400:	80 17       	cp	r24, r16
    3402:	91 07       	cpc	r25, r17
    3404:	09 f4       	brne	.+2      	; 0x3408 <_ZN4Game9startLoopEv+0x324>
    3406:	ff c1       	rjmp	.+1022   	; 0x3806 <_ZN4Game9startLoopEv+0x722>
    {
      m_ScoreTemp = Frame::scoreTime;
    3408:	16 87       	std	Z+14, r17	; 0x0e
    340a:	05 87       	std	Z+13, r16	; 0x0d
      print(108, 16, Frame::scoreTime);
    340c:	20 e0       	ldi	r18, 0x00	; 0
    340e:	30 e0       	ldi	r19, 0x00	; 0
    3410:	40 e1       	ldi	r20, 0x10	; 16
    3412:	50 e0       	ldi	r21, 0x00	; 0
    3414:	6c e6       	ldi	r22, 0x6C	; 108
    3416:	70 e0       	ldi	r23, 0x00	; 0
    3418:	86 2d       	mov	r24, r6
    341a:	97 2d       	mov	r25, r7
    341c:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
      SW::start = OFF;
    3420:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <_ZN2SW5startE>

      if (m_IsDrawed == true)
    3424:	f4 01       	movw	r30, r8
    3426:	84 89       	ldd	r24, Z+20	; 0x14
    3428:	88 23       	and	r24, r24
    342a:	79 f1       	breq	.+94     	; 0x348a <_ZN4Game9startLoopEv+0x3a6>
      {
        m_Temp ++;
    342c:	84 85       	ldd	r24, Z+12	; 0x0c
    342e:	8f 5f       	subi	r24, 0xFF	; 255
    3430:	84 87       	std	Z+12, r24	; 0x0c

        if (m_IsReset == false && m_Temp > 5)
    3432:	92 89       	ldd	r25, Z+18	; 0x12
    3434:	91 11       	cpse	r25, r1
    3436:	14 c0       	rjmp	.+40     	; 0x3460 <_ZN4Game9startLoopEv+0x37c>
    3438:	86 30       	cpi	r24, 0x06	; 6
    343a:	3c f1       	brlt	.+78     	; 0x348a <_ZN4Game9startLoopEv+0x3a6>
        {
          m_Temp = 0;
    343c:	14 86       	std	Z+12, r1	; 0x0c
          clear(108, 40, 96, 16, BLACK);
    343e:	e1 2c       	mov	r14, r1
    3440:	f1 2c       	mov	r15, r1
    3442:	00 e1       	ldi	r16, 0x10	; 16
    3444:	10 e0       	ldi	r17, 0x00	; 0
    3446:	20 e6       	ldi	r18, 0x60	; 96
    3448:	30 e0       	ldi	r19, 0x00	; 0
    344a:	48 e2       	ldi	r20, 0x28	; 40
    344c:	50 e0       	ldi	r21, 0x00	; 0
    344e:	6c e6       	ldi	r22, 0x6C	; 108
    3450:	70 e0       	ldi	r23, 0x00	; 0
    3452:	86 2d       	mov	r24, r6
    3454:	97 2d       	mov	r25, r7
    3456:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

          m_IsDrawed = false;
    345a:	f4 01       	movw	r30, r8
    345c:	14 8a       	std	Z+20, r1	; 0x14
    345e:	15 c0       	rjmp	.+42     	; 0x348a <_ZN4Game9startLoopEv+0x3a6>
        }

        else if (m_IsReset == true && m_Temp > 20)
    3460:	85 31       	cpi	r24, 0x15	; 21
    3462:	9c f0       	brlt	.+38     	; 0x348a <_ZN4Game9startLoopEv+0x3a6>
        {
          m_Temp = 0;
    3464:	f4 01       	movw	r30, r8
    3466:	14 86       	std	Z+12, r1	; 0x0c
          clear(108, 40, 96, 16, BLACK);
    3468:	e1 2c       	mov	r14, r1
    346a:	f1 2c       	mov	r15, r1
    346c:	00 e1       	ldi	r16, 0x10	; 16
    346e:	10 e0       	ldi	r17, 0x00	; 0
    3470:	20 e6       	ldi	r18, 0x60	; 96
    3472:	30 e0       	ldi	r19, 0x00	; 0
    3474:	48 e2       	ldi	r20, 0x28	; 40
    3476:	50 e0       	ldi	r21, 0x00	; 0
    3478:	6c e6       	ldi	r22, 0x6C	; 108
    347a:	70 e0       	ldi	r23, 0x00	; 0
    347c:	86 2d       	mov	r24, r6
    347e:	97 2d       	mov	r25, r7
    3480:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

          m_IsReset = false;
    3484:	f4 01       	movw	r30, r8
    3486:	12 8a       	std	Z+18, r1	; 0x12
          m_IsDrawed = false;
    3488:	14 8a       	std	Z+20, r1	; 0x14
        }
      }

      if (m_IsDrawedScore == true)
    348a:	f4 01       	movw	r30, r8
    348c:	85 89       	ldd	r24, Z+21	; 0x15
    348e:	88 23       	and	r24, r24
    3490:	c9 f0       	breq	.+50     	; 0x34c4 <_ZN4Game9startLoopEv+0x3e0>
      {
        m_Cache ++;
    3492:	83 85       	ldd	r24, Z+11	; 0x0b
    3494:	8f 5f       	subi	r24, 0xFF	; 255

        if (m_Cache > 10)
    3496:	8b 30       	cpi	r24, 0x0B	; 11
    3498:	14 f4       	brge	.+4      	; 0x349e <_ZN4Game9startLoopEv+0x3ba>
        }
      }

      if (m_IsDrawedScore == true)
      {
        m_Cache ++;
    349a:	83 87       	std	Z+11, r24	; 0x0b
    349c:	4c c1       	rjmp	.+664    	; 0x3736 <_ZN4Game9startLoopEv+0x652>

        if (m_Cache > 10)
        {
          m_Cache = 0;
    349e:	f4 01       	movw	r30, r8
    34a0:	13 86       	std	Z+11, r1	; 0x0b
          clear(176, 16, 144, 16, BLACK);
    34a2:	e1 2c       	mov	r14, r1
    34a4:	f1 2c       	mov	r15, r1
    34a6:	00 e1       	ldi	r16, 0x10	; 16
    34a8:	10 e0       	ldi	r17, 0x00	; 0
    34aa:	20 e9       	ldi	r18, 0x90	; 144
    34ac:	30 e0       	ldi	r19, 0x00	; 0
    34ae:	40 e1       	ldi	r20, 0x10	; 16
    34b0:	50 e0       	ldi	r21, 0x00	; 0
    34b2:	60 eb       	ldi	r22, 0xB0	; 176
    34b4:	70 e0       	ldi	r23, 0x00	; 0
    34b6:	86 2d       	mov	r24, r6
    34b8:	97 2d       	mov	r25, r7
    34ba:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

          m_IsDrawedScore = false;
    34be:	f4 01       	movw	r30, r8
    34c0:	15 8a       	std	Z+21, r1	; 0x15
    34c2:	39 c1       	rjmp	.+626    	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }
      }

      else
      {
        if (m_ScoreTemp > firstScore && m_ScoreTemp < (firstScore + 10))
    34c4:	f4 01       	movw	r30, r8
    34c6:	85 85       	ldd	r24, Z+13	; 0x0d
    34c8:	96 85       	ldd	r25, Z+14	; 0x0e
    34ca:	22 8d       	ldd	r18, Z+26	; 0x1a
    34cc:	33 8d       	ldd	r19, Z+27	; 0x1b
    34ce:	28 17       	cp	r18, r24
    34d0:	39 07       	cpc	r19, r25
    34d2:	e8 f4       	brcc	.+58     	; 0x350e <_ZN4Game9startLoopEv+0x42a>
    34d4:	26 5f       	subi	r18, 0xF6	; 246
    34d6:	3f 4f       	sbci	r19, 0xFF	; 255
    34d8:	82 17       	cp	r24, r18
    34da:	93 07       	cpc	r25, r19
    34dc:	c0 f4       	brcc	.+48     	; 0x350e <_ZN4Game9startLoopEv+0x42a>
        {
          print(188, 16, "New");
    34de:	29 ea       	ldi	r18, 0xA9	; 169
    34e0:	31 e0       	ldi	r19, 0x01	; 1
    34e2:	40 e1       	ldi	r20, 0x10	; 16
    34e4:	50 e0       	ldi	r21, 0x00	; 0
    34e6:	6c eb       	ldi	r22, 0xBC	; 188
    34e8:	70 e0       	ldi	r23, 0x00	; 0
    34ea:	86 2d       	mov	r24, r6
    34ec:	97 2d       	mov	r25, r7
    34ee:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
          print(240, 16, "Record");
    34f2:	2d ea       	ldi	r18, 0xAD	; 173
    34f4:	31 e0       	ldi	r19, 0x01	; 1
    34f6:	40 e1       	ldi	r20, 0x10	; 16
    34f8:	50 e0       	ldi	r21, 0x00	; 0
    34fa:	60 ef       	ldi	r22, 0xF0	; 240
    34fc:	70 e0       	ldi	r23, 0x00	; 0
    34fe:	86 2d       	mov	r24, r6
    3500:	97 2d       	mov	r25, r7
    3502:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

          m_IsDrawedScore = true;
    3506:	81 e0       	ldi	r24, 0x01	; 1
    3508:	f4 01       	movw	r30, r8
    350a:	85 8b       	std	Z+21, r24	; 0x15
    350c:	14 c1       	rjmp	.+552    	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }

        else if (m_ScoreTemp > secondScore && m_ScoreTemp < (secondScore + 10))
    350e:	f4 01       	movw	r30, r8
    3510:	20 a1       	ldd	r18, Z+32	; 0x20
    3512:	31 a1       	ldd	r19, Z+33	; 0x21
    3514:	28 17       	cp	r18, r24
    3516:	39 07       	cpc	r19, r25
    3518:	98 f5       	brcc	.+102    	; 0x3580 <_ZN4Game9startLoopEv+0x49c>
    351a:	26 5f       	subi	r18, 0xF6	; 246
    351c:	3f 4f       	sbci	r19, 0xFF	; 255
    351e:	82 17       	cp	r24, r18
    3520:	93 07       	cpc	r25, r19
    3522:	70 f5       	brcc	.+92     	; 0x3580 <_ZN4Game9startLoopEv+0x49c>
        {
          printLetter(188, 16, firstName1st);
    3524:	26 89       	ldd	r18, Z+22	; 0x16
    3526:	40 e1       	ldi	r20, 0x10	; 16
    3528:	50 e0       	ldi	r21, 0x00	; 0
    352a:	6c eb       	ldi	r22, 0xBC	; 188
    352c:	70 e0       	ldi	r23, 0x00	; 0
    352e:	86 2d       	mov	r24, r6
    3530:	97 2d       	mov	r25, r7
    3532:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(204, 16, firstName2nd);
    3536:	f4 01       	movw	r30, r8
    3538:	27 89       	ldd	r18, Z+23	; 0x17
    353a:	40 e1       	ldi	r20, 0x10	; 16
    353c:	50 e0       	ldi	r21, 0x00	; 0
    353e:	6c ec       	ldi	r22, 0xCC	; 204
    3540:	70 e0       	ldi	r23, 0x00	; 0
    3542:	86 2d       	mov	r24, r6
    3544:	97 2d       	mov	r25, r7
    3546:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(220, 16, firstName3rd);
    354a:	f4 01       	movw	r30, r8
    354c:	20 8d       	ldd	r18, Z+24	; 0x18
    354e:	40 e1       	ldi	r20, 0x10	; 16
    3550:	50 e0       	ldi	r21, 0x00	; 0
    3552:	6c ed       	ldi	r22, 0xDC	; 220
    3554:	70 e0       	ldi	r23, 0x00	; 0
    3556:	86 2d       	mov	r24, r6
    3558:	97 2d       	mov	r25, r7
    355a:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          print(240, 16, firstScore);
    355e:	f4 01       	movw	r30, r8
    3560:	02 8d       	ldd	r16, Z+26	; 0x1a
    3562:	13 8d       	ldd	r17, Z+27	; 0x1b
    3564:	20 e0       	ldi	r18, 0x00	; 0
    3566:	30 e0       	ldi	r19, 0x00	; 0
    3568:	40 e1       	ldi	r20, 0x10	; 16
    356a:	50 e0       	ldi	r21, 0x00	; 0
    356c:	60 ef       	ldi	r22, 0xF0	; 240
    356e:	70 e0       	ldi	r23, 0x00	; 0
    3570:	86 2d       	mov	r24, r6
    3572:	97 2d       	mov	r25, r7
    3574:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
          m_IsDrawedScore = true;
    3578:	81 e0       	ldi	r24, 0x01	; 1
    357a:	f4 01       	movw	r30, r8
    357c:	85 8b       	std	Z+21, r24	; 0x15
    357e:	db c0       	rjmp	.+438    	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }

        else if (m_ScoreTemp > thirdScore && m_ScoreTemp < (thirdScore + 10))
    3580:	f4 01       	movw	r30, r8
    3582:	26 a1       	ldd	r18, Z+38	; 0x26
    3584:	37 a1       	ldd	r19, Z+39	; 0x27
    3586:	28 17       	cp	r18, r24
    3588:	39 07       	cpc	r19, r25
    358a:	98 f5       	brcc	.+102    	; 0x35f2 <_ZN4Game9startLoopEv+0x50e>
    358c:	26 5f       	subi	r18, 0xF6	; 246
    358e:	3f 4f       	sbci	r19, 0xFF	; 255
    3590:	82 17       	cp	r24, r18
    3592:	93 07       	cpc	r25, r19
    3594:	70 f5       	brcc	.+92     	; 0x35f2 <_ZN4Game9startLoopEv+0x50e>
        {
          printLetter(188, 16, secondName1st);
    3596:	24 8d       	ldd	r18, Z+28	; 0x1c
    3598:	40 e1       	ldi	r20, 0x10	; 16
    359a:	50 e0       	ldi	r21, 0x00	; 0
    359c:	6c eb       	ldi	r22, 0xBC	; 188
    359e:	70 e0       	ldi	r23, 0x00	; 0
    35a0:	86 2d       	mov	r24, r6
    35a2:	97 2d       	mov	r25, r7
    35a4:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(204, 16, secondName2nd);
    35a8:	f4 01       	movw	r30, r8
    35aa:	25 8d       	ldd	r18, Z+29	; 0x1d
    35ac:	40 e1       	ldi	r20, 0x10	; 16
    35ae:	50 e0       	ldi	r21, 0x00	; 0
    35b0:	6c ec       	ldi	r22, 0xCC	; 204
    35b2:	70 e0       	ldi	r23, 0x00	; 0
    35b4:	86 2d       	mov	r24, r6
    35b6:	97 2d       	mov	r25, r7
    35b8:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(220, 16, secondName3rd);
    35bc:	f4 01       	movw	r30, r8
    35be:	26 8d       	ldd	r18, Z+30	; 0x1e
    35c0:	40 e1       	ldi	r20, 0x10	; 16
    35c2:	50 e0       	ldi	r21, 0x00	; 0
    35c4:	6c ed       	ldi	r22, 0xDC	; 220
    35c6:	70 e0       	ldi	r23, 0x00	; 0
    35c8:	86 2d       	mov	r24, r6
    35ca:	97 2d       	mov	r25, r7
    35cc:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          print(240, 16, secondScore);
    35d0:	f4 01       	movw	r30, r8
    35d2:	00 a1       	ldd	r16, Z+32	; 0x20
    35d4:	11 a1       	ldd	r17, Z+33	; 0x21
    35d6:	20 e0       	ldi	r18, 0x00	; 0
    35d8:	30 e0       	ldi	r19, 0x00	; 0
    35da:	40 e1       	ldi	r20, 0x10	; 16
    35dc:	50 e0       	ldi	r21, 0x00	; 0
    35de:	60 ef       	ldi	r22, 0xF0	; 240
    35e0:	70 e0       	ldi	r23, 0x00	; 0
    35e2:	86 2d       	mov	r24, r6
    35e4:	97 2d       	mov	r25, r7
    35e6:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
          m_IsDrawedScore = true;
    35ea:	81 e0       	ldi	r24, 0x01	; 1
    35ec:	f4 01       	movw	r30, r8
    35ee:	85 8b       	std	Z+21, r24	; 0x15
    35f0:	a2 c0       	rjmp	.+324    	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }

        else if (m_ScoreTemp > fourthScore && m_ScoreTemp < (fourthScore + 10))
    35f2:	f4 01       	movw	r30, r8
    35f4:	24 a5       	ldd	r18, Z+44	; 0x2c
    35f6:	35 a5       	ldd	r19, Z+45	; 0x2d
    35f8:	28 17       	cp	r18, r24
    35fa:	39 07       	cpc	r19, r25
    35fc:	98 f5       	brcc	.+102    	; 0x3664 <_ZN4Game9startLoopEv+0x580>
    35fe:	26 5f       	subi	r18, 0xF6	; 246
    3600:	3f 4f       	sbci	r19, 0xFF	; 255
    3602:	82 17       	cp	r24, r18
    3604:	93 07       	cpc	r25, r19
    3606:	70 f5       	brcc	.+92     	; 0x3664 <_ZN4Game9startLoopEv+0x580>
        {
          printLetter(188, 16, thirdName1st);
    3608:	22 a1       	ldd	r18, Z+34	; 0x22
    360a:	40 e1       	ldi	r20, 0x10	; 16
    360c:	50 e0       	ldi	r21, 0x00	; 0
    360e:	6c eb       	ldi	r22, 0xBC	; 188
    3610:	70 e0       	ldi	r23, 0x00	; 0
    3612:	86 2d       	mov	r24, r6
    3614:	97 2d       	mov	r25, r7
    3616:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(204, 16, thirdName2nd);
    361a:	f4 01       	movw	r30, r8
    361c:	23 a1       	ldd	r18, Z+35	; 0x23
    361e:	40 e1       	ldi	r20, 0x10	; 16
    3620:	50 e0       	ldi	r21, 0x00	; 0
    3622:	6c ec       	ldi	r22, 0xCC	; 204
    3624:	70 e0       	ldi	r23, 0x00	; 0
    3626:	86 2d       	mov	r24, r6
    3628:	97 2d       	mov	r25, r7
    362a:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(220, 16, thirdName3rd);
    362e:	f4 01       	movw	r30, r8
    3630:	24 a1       	ldd	r18, Z+36	; 0x24
    3632:	40 e1       	ldi	r20, 0x10	; 16
    3634:	50 e0       	ldi	r21, 0x00	; 0
    3636:	6c ed       	ldi	r22, 0xDC	; 220
    3638:	70 e0       	ldi	r23, 0x00	; 0
    363a:	86 2d       	mov	r24, r6
    363c:	97 2d       	mov	r25, r7
    363e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          print(240, 16, thirdScore);
    3642:	f4 01       	movw	r30, r8
    3644:	06 a1       	ldd	r16, Z+38	; 0x26
    3646:	17 a1       	ldd	r17, Z+39	; 0x27
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	30 e0       	ldi	r19, 0x00	; 0
    364c:	40 e1       	ldi	r20, 0x10	; 16
    364e:	50 e0       	ldi	r21, 0x00	; 0
    3650:	60 ef       	ldi	r22, 0xF0	; 240
    3652:	70 e0       	ldi	r23, 0x00	; 0
    3654:	86 2d       	mov	r24, r6
    3656:	97 2d       	mov	r25, r7
    3658:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
          m_IsDrawedScore = true;
    365c:	81 e0       	ldi	r24, 0x01	; 1
    365e:	f4 01       	movw	r30, r8
    3660:	85 8b       	std	Z+21, r24	; 0x15
    3662:	69 c0       	rjmp	.+210    	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }

        else if (m_ScoreTemp > fifthScore && m_ScoreTemp < (fifthScore + 10))
    3664:	f4 01       	movw	r30, r8
    3666:	22 a9       	ldd	r18, Z+50	; 0x32
    3668:	33 a9       	ldd	r19, Z+51	; 0x33
    366a:	28 17       	cp	r18, r24
    366c:	39 07       	cpc	r19, r25
    366e:	98 f5       	brcc	.+102    	; 0x36d6 <_ZN4Game9startLoopEv+0x5f2>
    3670:	26 5f       	subi	r18, 0xF6	; 246
    3672:	3f 4f       	sbci	r19, 0xFF	; 255
    3674:	82 17       	cp	r24, r18
    3676:	93 07       	cpc	r25, r19
    3678:	70 f5       	brcc	.+92     	; 0x36d6 <_ZN4Game9startLoopEv+0x5f2>
        {
          printLetter(188, 16, fourthName1st);
    367a:	20 a5       	ldd	r18, Z+40	; 0x28
    367c:	40 e1       	ldi	r20, 0x10	; 16
    367e:	50 e0       	ldi	r21, 0x00	; 0
    3680:	6c eb       	ldi	r22, 0xBC	; 188
    3682:	70 e0       	ldi	r23, 0x00	; 0
    3684:	86 2d       	mov	r24, r6
    3686:	97 2d       	mov	r25, r7
    3688:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(204, 16, fourthName2nd);
    368c:	f4 01       	movw	r30, r8
    368e:	21 a5       	ldd	r18, Z+41	; 0x29
    3690:	40 e1       	ldi	r20, 0x10	; 16
    3692:	50 e0       	ldi	r21, 0x00	; 0
    3694:	6c ec       	ldi	r22, 0xCC	; 204
    3696:	70 e0       	ldi	r23, 0x00	; 0
    3698:	86 2d       	mov	r24, r6
    369a:	97 2d       	mov	r25, r7
    369c:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(220, 16, fourthName3rd);
    36a0:	f4 01       	movw	r30, r8
    36a2:	22 a5       	ldd	r18, Z+42	; 0x2a
    36a4:	40 e1       	ldi	r20, 0x10	; 16
    36a6:	50 e0       	ldi	r21, 0x00	; 0
    36a8:	6c ed       	ldi	r22, 0xDC	; 220
    36aa:	70 e0       	ldi	r23, 0x00	; 0
    36ac:	86 2d       	mov	r24, r6
    36ae:	97 2d       	mov	r25, r7
    36b0:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          print(240, 16, fourthScore);
    36b4:	f4 01       	movw	r30, r8
    36b6:	04 a5       	ldd	r16, Z+44	; 0x2c
    36b8:	15 a5       	ldd	r17, Z+45	; 0x2d
    36ba:	20 e0       	ldi	r18, 0x00	; 0
    36bc:	30 e0       	ldi	r19, 0x00	; 0
    36be:	40 e1       	ldi	r20, 0x10	; 16
    36c0:	50 e0       	ldi	r21, 0x00	; 0
    36c2:	60 ef       	ldi	r22, 0xF0	; 240
    36c4:	70 e0       	ldi	r23, 0x00	; 0
    36c6:	86 2d       	mov	r24, r6
    36c8:	97 2d       	mov	r25, r7
    36ca:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
          m_IsDrawedScore = true;
    36ce:	81 e0       	ldi	r24, 0x01	; 1
    36d0:	f4 01       	movw	r30, r8
    36d2:	85 8b       	std	Z+21, r24	; 0x15
    36d4:	30 c0       	rjmp	.+96     	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        }

        else if (m_ScoreTemp < 10)
    36d6:	0a 97       	sbiw	r24, 0x0a	; 10
    36d8:	70 f5       	brcc	.+92     	; 0x3736 <_ZN4Game9startLoopEv+0x652>
        {
          printLetter(188, 16, fifthName1st);
    36da:	f4 01       	movw	r30, r8
    36dc:	26 a5       	ldd	r18, Z+46	; 0x2e
    36de:	40 e1       	ldi	r20, 0x10	; 16
    36e0:	50 e0       	ldi	r21, 0x00	; 0
    36e2:	6c eb       	ldi	r22, 0xBC	; 188
    36e4:	70 e0       	ldi	r23, 0x00	; 0
    36e6:	86 2d       	mov	r24, r6
    36e8:	97 2d       	mov	r25, r7
    36ea:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(204, 16, fifthName2nd);
    36ee:	f4 01       	movw	r30, r8
    36f0:	27 a5       	ldd	r18, Z+47	; 0x2f
    36f2:	40 e1       	ldi	r20, 0x10	; 16
    36f4:	50 e0       	ldi	r21, 0x00	; 0
    36f6:	6c ec       	ldi	r22, 0xCC	; 204
    36f8:	70 e0       	ldi	r23, 0x00	; 0
    36fa:	86 2d       	mov	r24, r6
    36fc:	97 2d       	mov	r25, r7
    36fe:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          printLetter(220, 16, fifthName3rd);
    3702:	f4 01       	movw	r30, r8
    3704:	20 a9       	ldd	r18, Z+48	; 0x30
    3706:	40 e1       	ldi	r20, 0x10	; 16
    3708:	50 e0       	ldi	r21, 0x00	; 0
    370a:	6c ed       	ldi	r22, 0xDC	; 220
    370c:	70 e0       	ldi	r23, 0x00	; 0
    370e:	86 2d       	mov	r24, r6
    3710:	97 2d       	mov	r25, r7
    3712:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
          print(240, 16, fifthScore);
    3716:	f4 01       	movw	r30, r8
    3718:	02 a9       	ldd	r16, Z+50	; 0x32
    371a:	13 a9       	ldd	r17, Z+51	; 0x33
    371c:	20 e0       	ldi	r18, 0x00	; 0
    371e:	30 e0       	ldi	r19, 0x00	; 0
    3720:	40 e1       	ldi	r20, 0x10	; 16
    3722:	50 e0       	ldi	r21, 0x00	; 0
    3724:	60 ef       	ldi	r22, 0xF0	; 240
    3726:	70 e0       	ldi	r23, 0x00	; 0
    3728:	86 2d       	mov	r24, r6
    372a:	97 2d       	mov	r25, r7
    372c:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
          m_IsDrawedScore = true;
    3730:	81 e0       	ldi	r24, 0x01	; 1
    3732:	f4 01       	movw	r30, r8
    3734:	85 8b       	std	Z+21, r24	; 0x15
        }
      }

      if (m_IsReset == false)
    3736:	f4 01       	movw	r30, r8
    3738:	82 89       	ldd	r24, Z+18	; 0x12
    373a:	81 11       	cpse	r24, r1
    373c:	64 c0       	rjmp	.+200    	; 0x3806 <_ZN4Game9startLoopEv+0x722>
      {
        if (m_ScoreTemp >= 200 && m_ScoreTemp < 221)
    373e:	85 85       	ldd	r24, Z+13	; 0x0d
    3740:	96 85       	ldd	r25, Z+14	; 0x0e
    3742:	9c 01       	movw	r18, r24
    3744:	28 5c       	subi	r18, 0xC8	; 200
    3746:	31 09       	sbc	r19, r1
    3748:	25 31       	cpi	r18, 0x15	; 21
    374a:	31 05       	cpc	r19, r1
    374c:	90 f4       	brcc	.+36     	; 0x3772 <_ZN4Game9startLoopEv+0x68e>
        {
          print(108, 40, "Speed+");
    374e:	24 eb       	ldi	r18, 0xB4	; 180
    3750:	31 e0       	ldi	r19, 0x01	; 1
    3752:	48 e2       	ldi	r20, 0x28	; 40
    3754:	50 e0       	ldi	r21, 0x00	; 0
    3756:	6c e6       	ldi	r22, 0x6C	; 108
    3758:	70 e0       	ldi	r23, 0x00	; 0
    375a:	86 2d       	mov	r24, r6
    375c:	97 2d       	mov	r25, r7
    375e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    3762:	84 e0       	ldi	r24, 0x04	; 4
    3764:	8b 8f       	std	Y+27, r24	; 0x1b
    3766:	8d ab       	std	Y+53, r24	; 0x35
          block1.setSpeed(4);
          block2.setSpeed(4);

          m_IsReset = true;
    3768:	81 e0       	ldi	r24, 0x01	; 1
    376a:	f4 01       	movw	r30, r8
    376c:	82 8b       	std	Z+18, r24	; 0x12
          m_IsDrawed = true;
    376e:	84 8b       	std	Z+20, r24	; 0x14
    3770:	4a c0       	rjmp	.+148    	; 0x3806 <_ZN4Game9startLoopEv+0x722>
        }

        else if (m_ScoreTemp >= 400 && m_ScoreTemp < 421)
    3772:	9c 01       	movw	r18, r24
    3774:	20 59       	subi	r18, 0x90	; 144
    3776:	31 40       	sbci	r19, 0x01	; 1
    3778:	25 31       	cpi	r18, 0x15	; 21
    377a:	31 05       	cpc	r19, r1
    377c:	90 f4       	brcc	.+36     	; 0x37a2 <_ZN4Game9startLoopEv+0x6be>
        {
          print(108, 40, "Speed+");
    377e:	24 eb       	ldi	r18, 0xB4	; 180
    3780:	31 e0       	ldi	r19, 0x01	; 1
    3782:	48 e2       	ldi	r20, 0x28	; 40
    3784:	50 e0       	ldi	r21, 0x00	; 0
    3786:	6c e6       	ldi	r22, 0x6C	; 108
    3788:	70 e0       	ldi	r23, 0x00	; 0
    378a:	86 2d       	mov	r24, r6
    378c:	97 2d       	mov	r25, r7
    378e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    3792:	85 e0       	ldi	r24, 0x05	; 5
    3794:	8b 8f       	std	Y+27, r24	; 0x1b
    3796:	8d ab       	std	Y+53, r24	; 0x35
          block1.setSpeed(5);
          block2.setSpeed(5);

          m_IsReset = true;
    3798:	81 e0       	ldi	r24, 0x01	; 1
    379a:	f4 01       	movw	r30, r8
    379c:	82 8b       	std	Z+18, r24	; 0x12
          m_IsDrawed = true;
    379e:	84 8b       	std	Z+20, r24	; 0x14
    37a0:	32 c0       	rjmp	.+100    	; 0x3806 <_ZN4Game9startLoopEv+0x722>
        }

        else if (m_ScoreTemp >= 600 && m_ScoreTemp < 621)
    37a2:	9c 01       	movw	r18, r24
    37a4:	28 55       	subi	r18, 0x58	; 88
    37a6:	32 40       	sbci	r19, 0x02	; 2
    37a8:	25 31       	cpi	r18, 0x15	; 21
    37aa:	31 05       	cpc	r19, r1
    37ac:	90 f4       	brcc	.+36     	; 0x37d2 <_ZN4Game9startLoopEv+0x6ee>
        {
          print(108, 40, "Speed+");
    37ae:	24 eb       	ldi	r18, 0xB4	; 180
    37b0:	31 e0       	ldi	r19, 0x01	; 1
    37b2:	48 e2       	ldi	r20, 0x28	; 40
    37b4:	50 e0       	ldi	r21, 0x00	; 0
    37b6:	6c e6       	ldi	r22, 0x6C	; 108
    37b8:	70 e0       	ldi	r23, 0x00	; 0
    37ba:	86 2d       	mov	r24, r6
    37bc:	97 2d       	mov	r25, r7
    37be:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    37c2:	86 e0       	ldi	r24, 0x06	; 6
    37c4:	8b 8f       	std	Y+27, r24	; 0x1b
    37c6:	8d ab       	std	Y+53, r24	; 0x35
          block1.setSpeed(6);
          block2.setSpeed(6);

          m_IsReset = true;
    37c8:	81 e0       	ldi	r24, 0x01	; 1
    37ca:	f4 01       	movw	r30, r8
    37cc:	82 8b       	std	Z+18, r24	; 0x12
          m_IsDrawed = true;
    37ce:	84 8b       	std	Z+20, r24	; 0x14
    37d0:	1a c0       	rjmp	.+52     	; 0x3806 <_ZN4Game9startLoopEv+0x722>
        }

        else if (m_ScoreTemp >= 1000 && m_ScoreTemp < 1021)
    37d2:	88 5e       	subi	r24, 0xE8	; 232
    37d4:	93 40       	sbci	r25, 0x03	; 3
    37d6:	45 97       	sbiw	r24, 0x15	; 21
    37d8:	b0 f4       	brcc	.+44     	; 0x3806 <_ZN4Game9startLoopEv+0x722>
        {
          print(108, 40, "Block+");
    37da:	2b eb       	ldi	r18, 0xBB	; 187
    37dc:	31 e0       	ldi	r19, 0x01	; 1
    37de:	48 e2       	ldi	r20, 0x28	; 40
    37e0:	50 e0       	ldi	r21, 0x00	; 0
    37e2:	6c e6       	ldi	r22, 0x6C	; 108
    37e4:	70 e0       	ldi	r23, 0x00	; 0
    37e6:	86 2d       	mov	r24, r6
    37e8:	97 2d       	mov	r25, r7
    37ea:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    37ee:	db 8e       	std	Y+27, r13	; 0x1b
    37f0:	dd aa       	std	Y+53, r13	; 0x35
    37f2:	60 96       	adiw	r28, 0x10	; 16
    37f4:	df ae       	std	Y+63, r13	; 0x3f
    37f6:	60 97       	sbiw	r28, 0x10	; 16
  ~Player(){};

  void init(void);
  void start(void);
  void setSpeed(int8_t speed) { m_JumpSpeed = speed; }
    37f8:	88 e0       	ldi	r24, 0x08	; 8
    37fa:	8f 83       	std	Y+7, r24	; 0x07
          block1.setSpeed(7);
          block2.setSpeed(7);
          block3.setSpeed(7);
          user.setSpeed(8);

          m_IsReset = true;
    37fc:	81 e0       	ldi	r24, 0x01	; 1
    37fe:	f4 01       	movw	r30, r8
    3800:	82 8b       	std	Z+18, r24	; 0x12
          m_IsHighSpeed = true;
    3802:	83 8b       	std	Z+19, r24	; 0x13
          m_IsDrawed = true;
    3804:	84 8b       	std	Z+20, r24	; 0x14
        }
      }
    }

    if (user.isJump == false)
    3806:	8c 85       	ldd	r24, Y+12	; 0x0c
    3808:	81 11       	cpse	r24, r1
    380a:	90 c1       	rjmp	.+800    	; 0x3b2c <_ZN4Game9startLoopEv+0xa48>
    {
      if (block1.xPosition < 75 && block1.xPosition > 40)
    380c:	8b a1       	ldd	r24, Y+35	; 0x23
    380e:	9c a1       	ldd	r25, Y+36	; 0x24
    3810:	89 97       	sbiw	r24, 0x29	; 41
    3812:	82 97       	sbiw	r24, 0x22	; 34
    3814:	08 f0       	brcs	.+2      	; 0x3818 <_ZN4Game9startLoopEv+0x734>
    3816:	7a c0       	rjmp	.+244    	; 0x390c <_ZN4Game9startLoopEv+0x828>
      {
        if (block1.isPresent == true)
    3818:	8e a1       	ldd	r24, Y+38	; 0x26
    381a:	88 23       	and	r24, r24
    381c:	b9 f1       	breq	.+110    	; 0x388c <_ZN4Game9startLoopEv+0x7a8>
        {
          clear(80, 160, 20, 20, BLACK);
    381e:	e1 2c       	mov	r14, r1
    3820:	f1 2c       	mov	r15, r1
    3822:	04 e1       	ldi	r16, 0x14	; 20
    3824:	10 e0       	ldi	r17, 0x00	; 0
    3826:	24 e1       	ldi	r18, 0x14	; 20
    3828:	30 e0       	ldi	r19, 0x00	; 0
    382a:	40 ea       	ldi	r20, 0xA0	; 160
    382c:	50 e0       	ldi	r21, 0x00	; 0
    382e:	60 e5       	ldi	r22, 0x50	; 80
    3830:	70 e0       	ldi	r23, 0x00	; 0
    3832:	86 2d       	mov	r24, r6
    3834:	97 2d       	mov	r25, r7
    3836:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          clear(108, 40, 96, 16, BLACK);
    383a:	00 e1       	ldi	r16, 0x10	; 16
    383c:	10 e0       	ldi	r17, 0x00	; 0
    383e:	20 e6       	ldi	r18, 0x60	; 96
    3840:	30 e0       	ldi	r19, 0x00	; 0
    3842:	48 e2       	ldi	r20, 0x28	; 40
    3844:	50 e0       	ldi	r21, 0x00	; 0
    3846:	6c e6       	ldi	r22, 0x6C	; 108
    3848:	70 e0       	ldi	r23, 0x00	; 0
    384a:	86 2d       	mov	r24, r6
    384c:	97 2d       	mov	r25, r7
    384e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          print(108, 40, "+10");
    3852:	22 ec       	ldi	r18, 0xC2	; 194
    3854:	31 e0       	ldi	r19, 0x01	; 1
    3856:	48 e2       	ldi	r20, 0x28	; 40
    3858:	50 e0       	ldi	r21, 0x00	; 0
    385a:	6c e6       	ldi	r22, 0x6C	; 108
    385c:	70 e0       	ldi	r23, 0x00	; 0
    385e:	86 2d       	mov	r24, r6
    3860:	97 2d       	mov	r25, r7
    3862:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
          Frame::scoreTime += 10;
    3866:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <_ZN5Frame9scoreTimeE>
    386a:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    386e:	0a 96       	adiw	r24, 0x0a	; 10
    3870:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    3874:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <_ZN5Frame9scoreTimeE>
          m_IsDrawed = true;
    3878:	81 e0       	ldi	r24, 0x01	; 1
    387a:	f4 01       	movw	r30, r8
    387c:	84 8b       	std	Z+20, r24	; 0x14

          block1.isRolling = false;
    387e:	1d a2       	std	Y+37, r1	; 0x25
          block1.isPresent = false;
    3880:	1e a2       	std	Y+38, r1	; 0x26
          block1.init();
    3882:	ce 01       	movw	r24, r28
    3884:	0d 96       	adiw	r24, 0x0d	; 13
    3886:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    388a:	40 c0       	rjmp	.+128    	; 0x390c <_ZN4Game9startLoopEv+0x828>
        }

        else
        {
          print(90, 100, "GAME OVER");
    388c:	26 ec       	ldi	r18, 0xC6	; 198
    388e:	31 e0       	ldi	r19, 0x01	; 1
    3890:	44 e6       	ldi	r20, 0x64	; 100
    3892:	50 e0       	ldi	r21, 0x00	; 0
    3894:	6a e5       	ldi	r22, 0x5A	; 90
    3896:	70 e0       	ldi	r23, 0x00	; 0
    3898:	c4 01       	movw	r24, r8
    389a:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

          audio.setTonicSolFa(MI);
    389e:	62 e0       	ldi	r22, 0x02	; 2
    38a0:	ce 01       	movw	r24, r28
    38a2:	87 55       	subi	r24, 0x57	; 87
    38a4:	9f 4f       	sbci	r25, 0xFF	; 255
    38a6:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
          audio.setSound(ON);
    38aa:	61 e0       	ldi	r22, 0x01	; 1
    38ac:	ce 01       	movw	r24, r28
    38ae:	87 55       	subi	r24, 0x57	; 87
    38b0:	9f 4f       	sbci	r25, 0xFF	; 255
    38b2:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    38b6:	ff ef       	ldi	r31, 0xFF	; 255
    38b8:	24 e3       	ldi	r18, 0x34	; 52
    38ba:	8c e0       	ldi	r24, 0x0C	; 12
    38bc:	f1 50       	subi	r31, 0x01	; 1
    38be:	20 40       	sbci	r18, 0x00	; 0
    38c0:	80 40       	sbci	r24, 0x00	; 0
    38c2:	e1 f7       	brne	.-8      	; 0x38bc <_ZN4Game9startLoopEv+0x7d8>
    38c4:	00 c0       	rjmp	.+0      	; 0x38c6 <_ZN4Game9startLoopEv+0x7e2>
    38c6:	00 00       	nop
          _delay_ms(250);
          audio.setTonicSolFa(DO);
    38c8:	60 e0       	ldi	r22, 0x00	; 0
    38ca:	ce 01       	movw	r24, r28
    38cc:	87 55       	subi	r24, 0x57	; 87
    38ce:	9f 4f       	sbci	r25, 0xFF	; 255
    38d0:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    38d4:	9f ef       	ldi	r25, 0xFF	; 255
    38d6:	e9 e6       	ldi	r30, 0x69	; 105
    38d8:	f8 e1       	ldi	r31, 0x18	; 24
    38da:	91 50       	subi	r25, 0x01	; 1
    38dc:	e0 40       	sbci	r30, 0x00	; 0
    38de:	f0 40       	sbci	r31, 0x00	; 0
    38e0:	e1 f7       	brne	.-8      	; 0x38da <_ZN4Game9startLoopEv+0x7f6>
    38e2:	00 c0       	rjmp	.+0      	; 0x38e4 <_ZN4Game9startLoopEv+0x800>
    38e4:	00 00       	nop
          _delay_ms(500);
          audio.setSound(OFF);
    38e6:	60 e0       	ldi	r22, 0x00	; 0
    38e8:	ce 01       	movw	r24, r28
    38ea:	87 55       	subi	r24, 0x57	; 87
    38ec:	9f 4f       	sbci	r25, 0xFF	; 255
    38ee:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    38f2:	2f ef       	ldi	r18, 0xFF	; 255
    38f4:	88 e0       	ldi	r24, 0x08	; 8
    38f6:	9d e3       	ldi	r25, 0x3D	; 61
    38f8:	21 50       	subi	r18, 0x01	; 1
    38fa:	80 40       	sbci	r24, 0x00	; 0
    38fc:	90 40       	sbci	r25, 0x00	; 0
    38fe:	e1 f7       	brne	.-8      	; 0x38f8 <_ZN4Game9startLoopEv+0x814>
    3900:	00 c0       	rjmp	.+0      	; 0x3902 <_ZN4Game9startLoopEv+0x81e>
    3902:	00 00       	nop
          _delay_ms(1250);

          m_IsReset = true;
    3904:	81 e0       	ldi	r24, 0x01	; 1
    3906:	f4 01       	movw	r30, r8
    3908:	82 8b       	std	Z+18, r24	; 0x12
          return;
    390a:	b0 c1       	rjmp	.+864    	; 0x3c6c <_ZN4Game9startLoopEv+0xb88>
        }
      }

      if (block2.xPosition < 75 && block2.xPosition > 40)
    390c:	8d ad       	ldd	r24, Y+61	; 0x3d
    390e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3910:	89 97       	sbiw	r24, 0x29	; 41
    3912:	82 97       	sbiw	r24, 0x22	; 34
    3914:	08 f0       	brcs	.+2      	; 0x3918 <_ZN4Game9startLoopEv+0x834>
    3916:	7e c0       	rjmp	.+252    	; 0x3a14 <_ZN4Game9startLoopEv+0x930>
      {
        if (block2.isPresent == true)
    3918:	21 96       	adiw	r28, 0x01	; 1
    391a:	8f ad       	ldd	r24, Y+63	; 0x3f
    391c:	21 97       	sbiw	r28, 0x01	; 1
    391e:	88 23       	and	r24, r24
    3920:	c9 f1       	breq	.+114    	; 0x3994 <_ZN4Game9startLoopEv+0x8b0>
        {
          clear(80, 160, 20, 20, BLACK);
    3922:	e1 2c       	mov	r14, r1
    3924:	f1 2c       	mov	r15, r1
    3926:	04 e1       	ldi	r16, 0x14	; 20
    3928:	10 e0       	ldi	r17, 0x00	; 0
    392a:	24 e1       	ldi	r18, 0x14	; 20
    392c:	30 e0       	ldi	r19, 0x00	; 0
    392e:	40 ea       	ldi	r20, 0xA0	; 160
    3930:	50 e0       	ldi	r21, 0x00	; 0
    3932:	60 e5       	ldi	r22, 0x50	; 80
    3934:	70 e0       	ldi	r23, 0x00	; 0
    3936:	86 2d       	mov	r24, r6
    3938:	97 2d       	mov	r25, r7
    393a:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          clear(108, 40, 96, 16, BLACK);
    393e:	00 e1       	ldi	r16, 0x10	; 16
    3940:	10 e0       	ldi	r17, 0x00	; 0
    3942:	20 e6       	ldi	r18, 0x60	; 96
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	48 e2       	ldi	r20, 0x28	; 40
    3948:	50 e0       	ldi	r21, 0x00	; 0
    394a:	6c e6       	ldi	r22, 0x6C	; 108
    394c:	70 e0       	ldi	r23, 0x00	; 0
    394e:	86 2d       	mov	r24, r6
    3950:	97 2d       	mov	r25, r7
    3952:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          print(108, 40, "+10");
    3956:	22 ec       	ldi	r18, 0xC2	; 194
    3958:	31 e0       	ldi	r19, 0x01	; 1
    395a:	48 e2       	ldi	r20, 0x28	; 40
    395c:	50 e0       	ldi	r21, 0x00	; 0
    395e:	6c e6       	ldi	r22, 0x6C	; 108
    3960:	70 e0       	ldi	r23, 0x00	; 0
    3962:	86 2d       	mov	r24, r6
    3964:	97 2d       	mov	r25, r7
    3966:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
          Frame::scoreTime += 10;
    396a:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <_ZN5Frame9scoreTimeE>
    396e:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    3972:	0a 96       	adiw	r24, 0x0a	; 10
    3974:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    3978:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <_ZN5Frame9scoreTimeE>
          m_IsDrawed = true;
    397c:	81 e0       	ldi	r24, 0x01	; 1
    397e:	f4 01       	movw	r30, r8
    3980:	84 8b       	std	Z+20, r24	; 0x14

          block2.isRolling = false;
    3982:	1f ae       	std	Y+63, r1	; 0x3f
          block2.isPresent = false;
    3984:	21 96       	adiw	r28, 0x01	; 1
    3986:	1f ae       	std	Y+63, r1	; 0x3f
    3988:	21 97       	sbiw	r28, 0x01	; 1
          block2.init();
    398a:	ce 01       	movw	r24, r28
    398c:	87 96       	adiw	r24, 0x27	; 39
    398e:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    3992:	40 c0       	rjmp	.+128    	; 0x3a14 <_ZN4Game9startLoopEv+0x930>
        }

        else
        {
          print(90, 100, "GAME OVER");
    3994:	26 ec       	ldi	r18, 0xC6	; 198
    3996:	31 e0       	ldi	r19, 0x01	; 1
    3998:	44 e6       	ldi	r20, 0x64	; 100
    399a:	50 e0       	ldi	r21, 0x00	; 0
    399c:	6a e5       	ldi	r22, 0x5A	; 90
    399e:	70 e0       	ldi	r23, 0x00	; 0
    39a0:	c4 01       	movw	r24, r8
    39a2:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

          audio.setTonicSolFa(MI);
    39a6:	62 e0       	ldi	r22, 0x02	; 2
    39a8:	ce 01       	movw	r24, r28
    39aa:	87 55       	subi	r24, 0x57	; 87
    39ac:	9f 4f       	sbci	r25, 0xFF	; 255
    39ae:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
          audio.setSound(ON);
    39b2:	61 e0       	ldi	r22, 0x01	; 1
    39b4:	ce 01       	movw	r24, r28
    39b6:	87 55       	subi	r24, 0x57	; 87
    39b8:	9f 4f       	sbci	r25, 0xFF	; 255
    39ba:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    39be:	ff ef       	ldi	r31, 0xFF	; 255
    39c0:	24 e3       	ldi	r18, 0x34	; 52
    39c2:	8c e0       	ldi	r24, 0x0C	; 12
    39c4:	f1 50       	subi	r31, 0x01	; 1
    39c6:	20 40       	sbci	r18, 0x00	; 0
    39c8:	80 40       	sbci	r24, 0x00	; 0
    39ca:	e1 f7       	brne	.-8      	; 0x39c4 <_ZN4Game9startLoopEv+0x8e0>
    39cc:	00 c0       	rjmp	.+0      	; 0x39ce <_ZN4Game9startLoopEv+0x8ea>
    39ce:	00 00       	nop
          _delay_ms(250);
          audio.setTonicSolFa(DO);
    39d0:	60 e0       	ldi	r22, 0x00	; 0
    39d2:	ce 01       	movw	r24, r28
    39d4:	87 55       	subi	r24, 0x57	; 87
    39d6:	9f 4f       	sbci	r25, 0xFF	; 255
    39d8:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    39dc:	9f ef       	ldi	r25, 0xFF	; 255
    39de:	e9 e6       	ldi	r30, 0x69	; 105
    39e0:	f8 e1       	ldi	r31, 0x18	; 24
    39e2:	91 50       	subi	r25, 0x01	; 1
    39e4:	e0 40       	sbci	r30, 0x00	; 0
    39e6:	f0 40       	sbci	r31, 0x00	; 0
    39e8:	e1 f7       	brne	.-8      	; 0x39e2 <_ZN4Game9startLoopEv+0x8fe>
    39ea:	00 c0       	rjmp	.+0      	; 0x39ec <_ZN4Game9startLoopEv+0x908>
    39ec:	00 00       	nop
          _delay_ms(500);
          audio.setSound(OFF);
    39ee:	60 e0       	ldi	r22, 0x00	; 0
    39f0:	ce 01       	movw	r24, r28
    39f2:	87 55       	subi	r24, 0x57	; 87
    39f4:	9f 4f       	sbci	r25, 0xFF	; 255
    39f6:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    39fa:	2f ef       	ldi	r18, 0xFF	; 255
    39fc:	88 e0       	ldi	r24, 0x08	; 8
    39fe:	9d e3       	ldi	r25, 0x3D	; 61
    3a00:	21 50       	subi	r18, 0x01	; 1
    3a02:	80 40       	sbci	r24, 0x00	; 0
    3a04:	90 40       	sbci	r25, 0x00	; 0
    3a06:	e1 f7       	brne	.-8      	; 0x3a00 <_ZN4Game9startLoopEv+0x91c>
    3a08:	00 c0       	rjmp	.+0      	; 0x3a0a <_ZN4Game9startLoopEv+0x926>
    3a0a:	00 00       	nop
          _delay_ms(1250);

          m_IsReset = true;
    3a0c:	81 e0       	ldi	r24, 0x01	; 1
    3a0e:	f4 01       	movw	r30, r8
    3a10:	82 8b       	std	Z+18, r24	; 0x12
          return;
    3a12:	2c c1       	rjmp	.+600    	; 0x3c6c <_ZN4Game9startLoopEv+0xb88>
        }
      }

      if (block3.xPosition < 75 && block3.xPosition > 40)
    3a14:	69 96       	adiw	r28, 0x19	; 25
    3a16:	8e ad       	ldd	r24, Y+62	; 0x3e
    3a18:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a1a:	69 97       	sbiw	r28, 0x19	; 25
    3a1c:	89 97       	sbiw	r24, 0x29	; 41
    3a1e:	82 97       	sbiw	r24, 0x22	; 34
    3a20:	08 f0       	brcs	.+2      	; 0x3a24 <_ZN4Game9startLoopEv+0x940>
    3a22:	81 c0       	rjmp	.+258    	; 0x3b26 <_ZN4Game9startLoopEv+0xa42>
      {
        if (block3.isPresent == true)
    3a24:	6b 96       	adiw	r28, 0x1b	; 27
    3a26:	8f ad       	ldd	r24, Y+63	; 0x3f
    3a28:	6b 97       	sbiw	r28, 0x1b	; 27
    3a2a:	88 23       	and	r24, r24
    3a2c:	e1 f1       	breq	.+120    	; 0x3aa6 <_ZN4Game9startLoopEv+0x9c2>
        {
          clear(80, 160, 20, 20, BLACK);
    3a2e:	e1 2c       	mov	r14, r1
    3a30:	f1 2c       	mov	r15, r1
    3a32:	04 e1       	ldi	r16, 0x14	; 20
    3a34:	10 e0       	ldi	r17, 0x00	; 0
    3a36:	24 e1       	ldi	r18, 0x14	; 20
    3a38:	30 e0       	ldi	r19, 0x00	; 0
    3a3a:	40 ea       	ldi	r20, 0xA0	; 160
    3a3c:	50 e0       	ldi	r21, 0x00	; 0
    3a3e:	60 e5       	ldi	r22, 0x50	; 80
    3a40:	70 e0       	ldi	r23, 0x00	; 0
    3a42:	86 2d       	mov	r24, r6
    3a44:	97 2d       	mov	r25, r7
    3a46:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          clear(108, 40, 96, 16, BLACK);
    3a4a:	00 e1       	ldi	r16, 0x10	; 16
    3a4c:	10 e0       	ldi	r17, 0x00	; 0
    3a4e:	20 e6       	ldi	r18, 0x60	; 96
    3a50:	30 e0       	ldi	r19, 0x00	; 0
    3a52:	48 e2       	ldi	r20, 0x28	; 40
    3a54:	50 e0       	ldi	r21, 0x00	; 0
    3a56:	6c e6       	ldi	r22, 0x6C	; 108
    3a58:	70 e0       	ldi	r23, 0x00	; 0
    3a5a:	86 2d       	mov	r24, r6
    3a5c:	97 2d       	mov	r25, r7
    3a5e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          print(108, 40, "+10");
    3a62:	22 ec       	ldi	r18, 0xC2	; 194
    3a64:	31 e0       	ldi	r19, 0x01	; 1
    3a66:	48 e2       	ldi	r20, 0x28	; 40
    3a68:	50 e0       	ldi	r21, 0x00	; 0
    3a6a:	6c e6       	ldi	r22, 0x6C	; 108
    3a6c:	70 e0       	ldi	r23, 0x00	; 0
    3a6e:	86 2d       	mov	r24, r6
    3a70:	97 2d       	mov	r25, r7
    3a72:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
          Frame::scoreTime += 10;
    3a76:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <_ZN5Frame9scoreTimeE>
    3a7a:	90 91 48 02 	lds	r25, 0x0248	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    3a7e:	0a 96       	adiw	r24, 0x0a	; 10
    3a80:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    3a84:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <_ZN5Frame9scoreTimeE>
          m_IsDrawed = true;
    3a88:	81 e0       	ldi	r24, 0x01	; 1
    3a8a:	f4 01       	movw	r30, r8
    3a8c:	84 8b       	std	Z+20, r24	; 0x14

          block3.isRolling = false;
    3a8e:	6a 96       	adiw	r28, 0x1a	; 26
    3a90:	1f ae       	std	Y+63, r1	; 0x3f
    3a92:	6a 97       	sbiw	r28, 0x1a	; 26
          block3.isPresent = false;
    3a94:	6b 96       	adiw	r28, 0x1b	; 27
    3a96:	1f ae       	std	Y+63, r1	; 0x3f
    3a98:	6b 97       	sbiw	r28, 0x1b	; 27
          block3.init();
    3a9a:	ce 01       	movw	r24, r28
    3a9c:	8f 5b       	subi	r24, 0xBF	; 191
    3a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    3aa0:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    3aa4:	40 c0       	rjmp	.+128    	; 0x3b26 <_ZN4Game9startLoopEv+0xa42>
        }

        else
        {
          print(90, 100, "GAME OVER");
    3aa6:	26 ec       	ldi	r18, 0xC6	; 198
    3aa8:	31 e0       	ldi	r19, 0x01	; 1
    3aaa:	44 e6       	ldi	r20, 0x64	; 100
    3aac:	50 e0       	ldi	r21, 0x00	; 0
    3aae:	6a e5       	ldi	r22, 0x5A	; 90
    3ab0:	70 e0       	ldi	r23, 0x00	; 0
    3ab2:	c4 01       	movw	r24, r8
    3ab4:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

          audio.setTonicSolFa(MI);
    3ab8:	62 e0       	ldi	r22, 0x02	; 2
    3aba:	ce 01       	movw	r24, r28
    3abc:	87 55       	subi	r24, 0x57	; 87
    3abe:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac0:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
          audio.setSound(ON);
    3ac4:	61 e0       	ldi	r22, 0x01	; 1
    3ac6:	ce 01       	movw	r24, r28
    3ac8:	87 55       	subi	r24, 0x57	; 87
    3aca:	9f 4f       	sbci	r25, 0xFF	; 255
    3acc:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3ad0:	ff ef       	ldi	r31, 0xFF	; 255
    3ad2:	24 e3       	ldi	r18, 0x34	; 52
    3ad4:	8c e0       	ldi	r24, 0x0C	; 12
    3ad6:	f1 50       	subi	r31, 0x01	; 1
    3ad8:	20 40       	sbci	r18, 0x00	; 0
    3ada:	80 40       	sbci	r24, 0x00	; 0
    3adc:	e1 f7       	brne	.-8      	; 0x3ad6 <_ZN4Game9startLoopEv+0x9f2>
    3ade:	00 c0       	rjmp	.+0      	; 0x3ae0 <_ZN4Game9startLoopEv+0x9fc>
    3ae0:	00 00       	nop
          _delay_ms(250);
          audio.setTonicSolFa(DO);
    3ae2:	60 e0       	ldi	r22, 0x00	; 0
    3ae4:	ce 01       	movw	r24, r28
    3ae6:	87 55       	subi	r24, 0x57	; 87
    3ae8:	9f 4f       	sbci	r25, 0xFF	; 255
    3aea:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    3aee:	9f ef       	ldi	r25, 0xFF	; 255
    3af0:	e9 e6       	ldi	r30, 0x69	; 105
    3af2:	f8 e1       	ldi	r31, 0x18	; 24
    3af4:	91 50       	subi	r25, 0x01	; 1
    3af6:	e0 40       	sbci	r30, 0x00	; 0
    3af8:	f0 40       	sbci	r31, 0x00	; 0
    3afa:	e1 f7       	brne	.-8      	; 0x3af4 <_ZN4Game9startLoopEv+0xa10>
    3afc:	00 c0       	rjmp	.+0      	; 0x3afe <_ZN4Game9startLoopEv+0xa1a>
    3afe:	00 00       	nop
          _delay_ms(500);
          audio.setSound(OFF);
    3b00:	60 e0       	ldi	r22, 0x00	; 0
    3b02:	ce 01       	movw	r24, r28
    3b04:	87 55       	subi	r24, 0x57	; 87
    3b06:	9f 4f       	sbci	r25, 0xFF	; 255
    3b08:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3b0c:	2f ef       	ldi	r18, 0xFF	; 255
    3b0e:	88 e0       	ldi	r24, 0x08	; 8
    3b10:	9d e3       	ldi	r25, 0x3D	; 61
    3b12:	21 50       	subi	r18, 0x01	; 1
    3b14:	80 40       	sbci	r24, 0x00	; 0
    3b16:	90 40       	sbci	r25, 0x00	; 0
    3b18:	e1 f7       	brne	.-8      	; 0x3b12 <_ZN4Game9startLoopEv+0xa2e>
    3b1a:	00 c0       	rjmp	.+0      	; 0x3b1c <_ZN4Game9startLoopEv+0xa38>
    3b1c:	00 00       	nop
          _delay_ms(1250);

          m_IsReset = true;
    3b1e:	81 e0       	ldi	r24, 0x01	; 1
    3b20:	f4 01       	movw	r30, r8
    3b22:	82 8b       	std	Z+18, r24	; 0x12
          return;
    3b24:	a3 c0       	rjmp	.+326    	; 0x3c6c <_ZN4Game9startLoopEv+0xb88>
        }
      }
    }

    if (user.isJump == true && startingSound.isPlay == false)
    3b26:	8c 85       	ldd	r24, Y+12	; 0x0c
    3b28:	88 23       	and	r24, r24
    3b2a:	71 f0       	breq	.+28     	; 0x3b48 <_ZN4Game9startLoopEv+0xa64>
    3b2c:	c4 55       	subi	r28, 0x54	; 84
    3b2e:	df 4f       	sbci	r29, 0xFF	; 255
    3b30:	88 81       	ld	r24, Y
    3b32:	cc 5a       	subi	r28, 0xAC	; 172
    3b34:	d0 40       	sbci	r29, 0x00	; 0
    3b36:	81 11       	cpse	r24, r1
    3b38:	13 c0       	rjmp	.+38     	; 0x3b60 <_ZN4Game9startLoopEv+0xa7c>
    {
      jumpingSound.isPlay = true;
    3b3a:	81 e0       	ldi	r24, 0x01	; 1
    3b3c:	c1 55       	subi	r28, 0x51	; 81
    3b3e:	df 4f       	sbci	r29, 0xFF	; 255
    3b40:	88 83       	st	Y, r24
    3b42:	cf 5a       	subi	r28, 0xAF	; 175
    3b44:	d0 40       	sbci	r29, 0x00	; 0
    3b46:	0c c0       	rjmp	.+24     	; 0x3b60 <_ZN4Game9startLoopEv+0xa7c>
    }

    else if (user.isJump == false && startingSound.isPlay == false)
    3b48:	c4 55       	subi	r28, 0x54	; 84
    3b4a:	df 4f       	sbci	r29, 0xFF	; 255
    3b4c:	88 81       	ld	r24, Y
    3b4e:	cc 5a       	subi	r28, 0xAC	; 172
    3b50:	d0 40       	sbci	r29, 0x00	; 0
    3b52:	81 11       	cpse	r24, r1
    3b54:	05 c0       	rjmp	.+10     	; 0x3b60 <_ZN4Game9startLoopEv+0xa7c>
    {
      jumpingSound.isPlay = false;
    3b56:	c1 55       	subi	r28, 0x51	; 81
    3b58:	df 4f       	sbci	r29, 0xFF	; 255
    3b5a:	18 82       	st	Y, r1
    3b5c:	cf 5a       	subi	r28, 0xAF	; 175
    3b5e:	d0 40       	sbci	r29, 0x00	; 0
    }

    if (SW::select == OFF)
    3b60:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <_ZN2SW6selectE>
    3b64:	81 11       	cpse	r24, r1
    3b66:	11 c0       	rjmp	.+34     	; 0x3b8a <_ZN4Game9startLoopEv+0xaa6>
    {
      Frame::update();
    3b68:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <_ZN5Frame6updateEv>
      user.start();
    3b6c:	ce 01       	movw	r24, r28
    3b6e:	01 96       	adiw	r24, 0x01	; 1
    3b70:	0e 94 d2 29 	call	0x53a4	; 0x53a4 <_ZN6Player5startEv>
      startingSound.start();
    3b74:	ce 01       	movw	r24, r28
    3b76:	86 55       	subi	r24, 0x56	; 86
    3b78:	9f 4f       	sbci	r25, 0xFF	; 255
    3b7a:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN5Music5startEv>
      jumpingSound.start();
    3b7e:	ce 01       	movw	r24, r28
    3b80:	83 55       	subi	r24, 0x53	; 83
    3b82:	9f 4f       	sbci	r25, 0xFF	; 255
    3b84:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN5Music5startEv>
    3b88:	e5 cb       	rjmp	.-2102   	; 0x3354 <_ZN4Game9startLoopEv+0x270>
  Music(int8_t mode, bool start) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = true; }
  ~Music() { setSound(OFF); }

  void start(void);
  void pause(void) { setSound(OFF); }
    3b8a:	60 e0       	ldi	r22, 0x00	; 0
    3b8c:	ce 01       	movw	r24, r28
    3b8e:	86 55       	subi	r24, 0x56	; 86
    3b90:	9f 4f       	sbci	r25, 0xFF	; 255
    3b92:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    }

    else
    {
      startingSound.pause();
      print(120, 100, "Pause");
    3b96:	20 ed       	ldi	r18, 0xD0	; 208
    3b98:	31 e0       	ldi	r19, 0x01	; 1
    3b9a:	44 e6       	ldi	r20, 0x64	; 100
    3b9c:	50 e0       	ldi	r21, 0x00	; 0
    3b9e:	68 e7       	ldi	r22, 0x78	; 120
    3ba0:	70 e0       	ldi	r23, 0x00	; 0
    3ba2:	86 2d       	mov	r24, r6
    3ba4:	97 2d       	mov	r25, r7
    3ba6:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

      if (SW::start == ON)
    3baa:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <_ZN2SW5startE>
    3bae:	88 23       	and	r24, r24
    3bb0:	09 f4       	brne	.+2      	; 0x3bb4 <_ZN4Game9startLoopEv+0xad0>
    3bb2:	d0 cb       	rjmp	.-2144   	; 0x3354 <_ZN4Game9startLoopEv+0x270>
      {
        print(120, 100, "Ready");
    3bb4:	26 ed       	ldi	r18, 0xD6	; 214
    3bb6:	31 e0       	ldi	r19, 0x01	; 1
    3bb8:	44 e6       	ldi	r20, 0x64	; 100
    3bba:	50 e0       	ldi	r21, 0x00	; 0
    3bbc:	68 e7       	ldi	r22, 0x78	; 120
    3bbe:	70 e0       	ldi	r23, 0x00	; 0
    3bc0:	86 2d       	mov	r24, r6
    3bc2:	97 2d       	mov	r25, r7
    3bc4:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    3bc8:	ff ef       	ldi	r31, 0xFF	; 255
    3bca:	2d e3       	ldi	r18, 0x3D	; 61
    3bcc:	89 e4       	ldi	r24, 0x49	; 73
    3bce:	f1 50       	subi	r31, 0x01	; 1
    3bd0:	20 40       	sbci	r18, 0x00	; 0
    3bd2:	80 40       	sbci	r24, 0x00	; 0
    3bd4:	e1 f7       	brne	.-8      	; 0x3bce <_ZN4Game9startLoopEv+0xaea>
    3bd6:	00 c0       	rjmp	.+0      	; 0x3bd8 <_ZN4Game9startLoopEv+0xaf4>
    3bd8:	00 00       	nop
    3bda:	0f 2e       	mov	r0, r31
    3bdc:	f5 e0       	ldi	r31, 0x05	; 5
    3bde:	af 2e       	mov	r10, r31
    3be0:	b1 2c       	mov	r11, r1
    3be2:	f0 2d       	mov	r31, r0
        _delay_ms(1500);

        for (int i=0; i<5; i++)
        {
          print(120, 100, "Start");
    3be4:	2c ed       	ldi	r18, 0xDC	; 220
    3be6:	31 e0       	ldi	r19, 0x01	; 1
    3be8:	44 e6       	ldi	r20, 0x64	; 100
    3bea:	50 e0       	ldi	r21, 0x00	; 0
    3bec:	68 e7       	ldi	r22, 0x78	; 120
    3bee:	70 e0       	ldi	r23, 0x00	; 0
    3bf0:	86 2d       	mov	r24, r6
    3bf2:	97 2d       	mov	r25, r7
    3bf4:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
          audio.setTonicSolFa(RE);
    3bf8:	61 e0       	ldi	r22, 0x01	; 1
    3bfa:	ce 01       	movw	r24, r28
    3bfc:	87 55       	subi	r24, 0x57	; 87
    3bfe:	9f 4f       	sbci	r25, 0xFF	; 255
    3c00:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
          audio.setSound(ON);
    3c04:	61 e0       	ldi	r22, 0x01	; 1
    3c06:	ce 01       	movw	r24, r28
    3c08:	87 55       	subi	r24, 0x57	; 87
    3c0a:	9f 4f       	sbci	r25, 0xFF	; 255
    3c0c:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3c10:	9f ef       	ldi	r25, 0xFF	; 255
    3c12:	e1 ee       	ldi	r30, 0xE1	; 225
    3c14:	f4 e0       	ldi	r31, 0x04	; 4
    3c16:	91 50       	subi	r25, 0x01	; 1
    3c18:	e0 40       	sbci	r30, 0x00	; 0
    3c1a:	f0 40       	sbci	r31, 0x00	; 0
    3c1c:	e1 f7       	brne	.-8      	; 0x3c16 <_ZN4Game9startLoopEv+0xb32>
    3c1e:	00 c0       	rjmp	.+0      	; 0x3c20 <_ZN4Game9startLoopEv+0xb3c>
    3c20:	00 00       	nop
          _delay_ms(100);

          clear(120, 100, 80, 16, BLACK);
    3c22:	e1 2c       	mov	r14, r1
    3c24:	f1 2c       	mov	r15, r1
    3c26:	00 e1       	ldi	r16, 0x10	; 16
    3c28:	10 e0       	ldi	r17, 0x00	; 0
    3c2a:	20 e5       	ldi	r18, 0x50	; 80
    3c2c:	30 e0       	ldi	r19, 0x00	; 0
    3c2e:	44 e6       	ldi	r20, 0x64	; 100
    3c30:	50 e0       	ldi	r21, 0x00	; 0
    3c32:	68 e7       	ldi	r22, 0x78	; 120
    3c34:	70 e0       	ldi	r23, 0x00	; 0
    3c36:	86 2d       	mov	r24, r6
    3c38:	97 2d       	mov	r25, r7
    3c3a:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          audio.setSound(OFF);
    3c3e:	60 e0       	ldi	r22, 0x00	; 0
    3c40:	ce 01       	movw	r24, r28
    3c42:	87 55       	subi	r24, 0x57	; 87
    3c44:	9f 4f       	sbci	r25, 0xFF	; 255
    3c46:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3c4a:	2f ef       	ldi	r18, 0xFF	; 255
    3c4c:	81 ee       	ldi	r24, 0xE1	; 225
    3c4e:	94 e0       	ldi	r25, 0x04	; 4
    3c50:	21 50       	subi	r18, 0x01	; 1
    3c52:	80 40       	sbci	r24, 0x00	; 0
    3c54:	90 40       	sbci	r25, 0x00	; 0
    3c56:	e1 f7       	brne	.-8      	; 0x3c50 <_ZN4Game9startLoopEv+0xb6c>
    3c58:	00 c0       	rjmp	.+0      	; 0x3c5a <_ZN4Game9startLoopEv+0xb76>
    3c5a:	00 00       	nop
    3c5c:	e1 e0       	ldi	r30, 0x01	; 1
    3c5e:	ae 1a       	sub	r10, r30
    3c60:	b1 08       	sbc	r11, r1
      if (SW::start == ON)
      {
        print(120, 100, "Ready");
        _delay_ms(1500);

        for (int i=0; i<5; i++)
    3c62:	09 f0       	breq	.+2      	; 0x3c66 <_ZN4Game9startLoopEv+0xb82>
    3c64:	bf cf       	rjmp	.-130    	; 0x3be4 <_ZN4Game9startLoopEv+0xb00>
          clear(120, 100, 80, 16, BLACK);
          audio.setSound(OFF);
          _delay_ms(100);
        }

        SW::init();
    3c66:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
    3c6a:	74 cb       	rjmp	.-2328   	; 0x3354 <_ZN4Game9startLoopEv+0x270>
  void jumpingMusic(void);

public:
  Music(int8_t mode) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = false; }
  Music(int8_t mode, bool start) { m_MusicMode = mode; m_SixteenBeat = 0; isPlay = true; }
  ~Music() { setSound(OFF); }
    3c6c:	60 e0       	ldi	r22, 0x00	; 0
    3c6e:	ce 01       	movw	r24, r28
    3c70:	83 55       	subi	r24, 0x53	; 83
    3c72:	9f 4f       	sbci	r25, 0xFF	; 255
    3c74:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3c78:	60 e0       	ldi	r22, 0x00	; 0
    3c7a:	ce 01       	movw	r24, r28
    3c7c:	86 55       	subi	r24, 0x56	; 86
    3c7e:	9f 4f       	sbci	r25, 0xFF	; 255
    3c80:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    3c84:	08 c0       	rjmp	.+16     	; 0x3c96 <_ZN4Game9startLoopEv+0xbb2>
        block2.isRolling = false;
        block2.isPresent = false;
        block2.clearObject();
      }

      else if ((block2.xPosition > 235 && block2.xPosition <= 260) && block1.xPosition > 288)
    3c86:	8d ad       	ldd	r24, Y+61	; 0x3d
    3c88:	9e ad       	ldd	r25, Y+62	; 0x3e
    3c8a:	8c 5e       	subi	r24, 0xEC	; 236
    3c8c:	91 09       	sbc	r25, r1
    3c8e:	49 97       	sbiw	r24, 0x19	; 25
    3c90:	08 f0       	brcs	.+2      	; 0x3c94 <_ZN4Game9startLoopEv+0xbb0>
    3c92:	af cb       	rjmp	.-2210   	; 0x33f2 <_ZN4Game9startLoopEv+0x30e>
    3c94:	a8 cb       	rjmp	.-2224   	; 0x33e6 <_ZN4Game9startLoopEv+0x302>
      }
    }

  }

}
    3c96:	c1 55       	subi	r28, 0x51	; 81
    3c98:	df 4f       	sbci	r29, 0xFF	; 255
    3c9a:	0f b6       	in	r0, 0x3f	; 63
    3c9c:	f8 94       	cli
    3c9e:	de bf       	out	0x3e, r29	; 62
    3ca0:	0f be       	out	0x3f, r0	; 63
    3ca2:	cd bf       	out	0x3d, r28	; 61
    3ca4:	df 91       	pop	r29
    3ca6:	cf 91       	pop	r28
    3ca8:	1f 91       	pop	r17
    3caa:	0f 91       	pop	r16
    3cac:	ff 90       	pop	r15
    3cae:	ef 90       	pop	r14
    3cb0:	df 90       	pop	r13
    3cb2:	cf 90       	pop	r12
    3cb4:	bf 90       	pop	r11
    3cb6:	af 90       	pop	r10
    3cb8:	9f 90       	pop	r9
    3cba:	8f 90       	pop	r8
    3cbc:	7f 90       	pop	r7
    3cbe:	6f 90       	pop	r6
    3cc0:	08 95       	ret

00003cc2 <_ZN4Game7endLoopEv>:
/*----------------------------------------//
              Game End Loop
//----------------------------------------*/

void Game::endLoop(void)
{
    3cc2:	8f 92       	push	r8
    3cc4:	9f 92       	push	r9
    3cc6:	af 92       	push	r10
    3cc8:	bf 92       	push	r11
    3cca:	cf 92       	push	r12
    3ccc:	df 92       	push	r13
    3cce:	ef 92       	push	r14
    3cd0:	ff 92       	push	r15
    3cd2:	0f 93       	push	r16
    3cd4:	1f 93       	push	r17
    3cd6:	cf 93       	push	r28
    3cd8:	df 93       	push	r29
    3cda:	ec 01       	movw	r28, r24

  clear(55, 20, 210, 160, BLACK);
    3cdc:	c8 2e       	mov	r12, r24
    3cde:	dd 2e       	mov	r13, r29
    3ce0:	e1 2c       	mov	r14, r1
    3ce2:	f1 2c       	mov	r15, r1
    3ce4:	00 ea       	ldi	r16, 0xA0	; 160
    3ce6:	10 e0       	ldi	r17, 0x00	; 0
    3ce8:	22 ed       	ldi	r18, 0xD2	; 210
    3cea:	30 e0       	ldi	r19, 0x00	; 0
    3cec:	44 e1       	ldi	r20, 0x14	; 20
    3cee:	50 e0       	ldi	r21, 0x00	; 0
    3cf0:	67 e3       	ldi	r22, 0x37	; 55
    3cf2:	70 e0       	ldi	r23, 0x00	; 0
    3cf4:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
  print(90, 50, "New Score");
    3cf8:	22 ee       	ldi	r18, 0xE2	; 226
    3cfa:	31 e0       	ldi	r19, 0x01	; 1
    3cfc:	42 e3       	ldi	r20, 0x32	; 50
    3cfe:	50 e0       	ldi	r21, 0x00	; 0
    3d00:	6a e5       	ldi	r22, 0x5A	; 90
    3d02:	70 e0       	ldi	r23, 0x00	; 0
    3d04:	ce 01       	movw	r24, r28
    3d06:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
  print(166, 100, m_ScoreTemp);
    3d0a:	0d 85       	ldd	r16, Y+13	; 0x0d
    3d0c:	1e 85       	ldd	r17, Y+14	; 0x0e
    3d0e:	20 e0       	ldi	r18, 0x00	; 0
    3d10:	30 e0       	ldi	r19, 0x00	; 0
    3d12:	44 e6       	ldi	r20, 0x64	; 100
    3d14:	50 e0       	ldi	r21, 0x00	; 0
    3d16:	66 ea       	ldi	r22, 0xA6	; 166
    3d18:	70 e0       	ldi	r23, 0x00	; 0
    3d1a:	ce 01       	movw	r24, r28
    3d1c:	0e 94 c3 12 	call	0x2586	; 0x2586 <_ZN4Font5printEiim>
  tempName1st = 0x41;
    3d20:	81 e4       	ldi	r24, 0x41	; 65
    3d22:	8c ab       	std	Y+52, r24	; 0x34
  tempName2nd = 0x41;
    3d24:	8d ab       	std	Y+53, r24	; 0x35
  tempName3rd = 0x41;
    3d26:	8e ab       	std	Y+54, r24	; 0x36
  m_Temp = 0x41;
    3d28:	8c 87       	std	Y+12, r24	; 0x0c
      SW::right = OFF;
    }

    else if (SW::interrupt1 == ON)
    {
      m_Temp = 0x41;
    3d2a:	0f 2e       	mov	r0, r31
    3d2c:	f1 e4       	ldi	r31, 0x41	; 65
    3d2e:	9f 2e       	mov	r9, r31
    3d30:	f0 2d       	mov	r31, r0
      m_Cursor += 1;

      if (m_Cursor > 3)
      {
        m_Cursor = 3;
    3d32:	0f 2e       	mov	r0, r31
    3d34:	f3 e0       	ldi	r31, 0x03	; 3
    3d36:	8f 2e       	mov	r8, r31
    3d38:	f0 2d       	mov	r31, r0
    {
      m_Temp += 1;

      if (m_Temp > 0x5A)
      {
        m_Temp = 0x20;
    3d3a:	68 94       	set
    3d3c:	aa 24       	eor	r10, r10
    3d3e:	a5 f8       	bld	r10, 5
    {
      m_Temp -= 1;

      if (m_Temp < 0x20)
      {
        m_Temp = 0x5A;
    3d40:	0f 2e       	mov	r0, r31
    3d42:	fa e5       	ldi	r31, 0x5A	; 90
    3d44:	bf 2e       	mov	r11, r31
    3d46:	f0 2d       	mov	r31, r0
  m_Temp = 0x41;

  while (1)
  {

    Frame::update();
    3d48:	0e 94 6a 13 	call	0x26d4	; 0x26d4 <_ZN5Frame6updateEv>

    printLetter(102, 100, tempName1st);
    3d4c:	2c a9       	ldd	r18, Y+52	; 0x34
    3d4e:	44 e6       	ldi	r20, 0x64	; 100
    3d50:	50 e0       	ldi	r21, 0x00	; 0
    3d52:	66 e6       	ldi	r22, 0x66	; 102
    3d54:	70 e0       	ldi	r23, 0x00	; 0
    3d56:	8c 2d       	mov	r24, r12
    3d58:	9d 2d       	mov	r25, r13
    3d5a:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
    printLetter(118, 100, tempName2nd);
    3d5e:	2d a9       	ldd	r18, Y+53	; 0x35
    3d60:	44 e6       	ldi	r20, 0x64	; 100
    3d62:	50 e0       	ldi	r21, 0x00	; 0
    3d64:	66 e7       	ldi	r22, 0x76	; 118
    3d66:	70 e0       	ldi	r23, 0x00	; 0
    3d68:	8c 2d       	mov	r24, r12
    3d6a:	9d 2d       	mov	r25, r13
    3d6c:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>
    printLetter(134, 100, tempName3rd);
    3d70:	2e a9       	ldd	r18, Y+54	; 0x36
    3d72:	44 e6       	ldi	r20, 0x64	; 100
    3d74:	50 e0       	ldi	r21, 0x00	; 0
    3d76:	66 e8       	ldi	r22, 0x86	; 134
    3d78:	70 e0       	ldi	r23, 0x00	; 0
    3d7a:	8c 2d       	mov	r24, r12
    3d7c:	9d 2d       	mov	r25, r13
    3d7e:	0e 94 24 12 	call	0x2448	; 0x2448 <_ZN4Font11printLetterEiih>

    if (SW::left == ON)
    3d82:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <_ZN2SW4leftE>
    3d86:	88 23       	and	r24, r24
    3d88:	99 f0       	breq	.+38     	; 0x3db0 <_ZN4Game7endLoopEv+0xee>
    {
      m_Temp -= 1;
    3d8a:	8c 85       	ldd	r24, Y+12	; 0x0c
    3d8c:	81 50       	subi	r24, 0x01	; 1

      if (m_Temp < 0x20)
    3d8e:	80 32       	cpi	r24, 0x20	; 32
    3d90:	14 f0       	brlt	.+4      	; 0x3d96 <_ZN4Game7endLoopEv+0xd4>
    printLetter(118, 100, tempName2nd);
    printLetter(134, 100, tempName3rd);

    if (SW::left == ON)
    {
      m_Temp -= 1;
    3d92:	8c 87       	std	Y+12, r24	; 0x0c
    3d94:	01 c0       	rjmp	.+2      	; 0x3d98 <_ZN4Game7endLoopEv+0xd6>

      if (m_Temp < 0x20)
      {
        m_Temp = 0x5A;
    3d96:	bc 86       	std	Y+12, r11	; 0x0c
    3d98:	2f ef       	ldi	r18, 0xFF	; 255
    3d9a:	81 ee       	ldi	r24, 0xE1	; 225
    3d9c:	94 e0       	ldi	r25, 0x04	; 4
    3d9e:	21 50       	subi	r18, 0x01	; 1
    3da0:	80 40       	sbci	r24, 0x00	; 0
    3da2:	90 40       	sbci	r25, 0x00	; 0
    3da4:	e1 f7       	brne	.-8      	; 0x3d9e <_ZN4Game7endLoopEv+0xdc>
    3da6:	00 c0       	rjmp	.+0      	; 0x3da8 <_ZN4Game7endLoopEv+0xe6>
    3da8:	00 00       	nop
      }

      _delay_ms(100);
      SW::left = OFF;
    3daa:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <_ZN2SW4leftE>
    3dae:	a9 c0       	rjmp	.+338    	; 0x3f02 <_ZN4Game7endLoopEv+0x240>
    }

    else if (SW::right == ON)
    3db0:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <_ZN2SW5rightE>
    3db4:	88 23       	and	r24, r24
    3db6:	99 f0       	breq	.+38     	; 0x3dde <_ZN4Game7endLoopEv+0x11c>
    {
      m_Temp += 1;
    3db8:	8c 85       	ldd	r24, Y+12	; 0x0c
    3dba:	8f 5f       	subi	r24, 0xFF	; 255

      if (m_Temp > 0x5A)
    3dbc:	8b 35       	cpi	r24, 0x5B	; 91
    3dbe:	14 f4       	brge	.+4      	; 0x3dc4 <_ZN4Game7endLoopEv+0x102>
      SW::left = OFF;
    }

    else if (SW::right == ON)
    {
      m_Temp += 1;
    3dc0:	8c 87       	std	Y+12, r24	; 0x0c
    3dc2:	01 c0       	rjmp	.+2      	; 0x3dc6 <_ZN4Game7endLoopEv+0x104>

      if (m_Temp > 0x5A)
      {
        m_Temp = 0x20;
    3dc4:	ac 86       	std	Y+12, r10	; 0x0c
    3dc6:	2f ef       	ldi	r18, 0xFF	; 255
    3dc8:	81 ee       	ldi	r24, 0xE1	; 225
    3dca:	94 e0       	ldi	r25, 0x04	; 4
    3dcc:	21 50       	subi	r18, 0x01	; 1
    3dce:	80 40       	sbci	r24, 0x00	; 0
    3dd0:	90 40       	sbci	r25, 0x00	; 0
    3dd2:	e1 f7       	brne	.-8      	; 0x3dcc <_ZN4Game7endLoopEv+0x10a>
    3dd4:	00 c0       	rjmp	.+0      	; 0x3dd6 <_ZN4Game7endLoopEv+0x114>
    3dd6:	00 00       	nop
      }

      _delay_ms(100);
      SW::right = OFF;
    3dd8:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <_ZN2SW5rightE>
    3ddc:	92 c0       	rjmp	.+292    	; 0x3f02 <_ZN4Game7endLoopEv+0x240>
    }

    else if (SW::interrupt1 == ON)
    3dde:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <_ZN2SW10interrupt1E>
    3de2:	88 23       	and	r24, r24
    3de4:	09 f4       	brne	.+2      	; 0x3de8 <_ZN4Game7endLoopEv+0x126>
    3de6:	8d c0       	rjmp	.+282    	; 0x3f02 <_ZN4Game7endLoopEv+0x240>
    {
      m_Temp = 0x41;
    3de8:	9c 86       	std	Y+12, r9	; 0x0c
      m_Cursor += 1;
    3dea:	8a 85       	ldd	r24, Y+10	; 0x0a
    3dec:	8f 5f       	subi	r24, 0xFF	; 255
    3dee:	8a 87       	std	Y+10, r24	; 0x0a

      if (m_Cursor > 3)
    3df0:	84 30       	cpi	r24, 0x04	; 4
    3df2:	14 f0       	brlt	.+4      	; 0x3df8 <_ZN4Game7endLoopEv+0x136>
      {
        m_Cursor = 3;
    3df4:	8a 86       	std	Y+10, r8	; 0x0a
    3df6:	6a c0       	rjmp	.+212    	; 0x3ecc <_ZN4Game7endLoopEv+0x20a>
      }

      switch (m_Cursor)
    3df8:	81 30       	cpi	r24, 0x01	; 1
    3dfa:	21 f1       	breq	.+72     	; 0x3e44 <_ZN4Game7endLoopEv+0x182>
    3dfc:	38 f0       	brcs	.+14     	; 0x3e0c <_ZN4Game7endLoopEv+0x14a>
    3dfe:	82 30       	cpi	r24, 0x02	; 2
    3e00:	09 f4       	brne	.+2      	; 0x3e04 <_ZN4Game7endLoopEv+0x142>
    3e02:	48 c0       	rjmp	.+144    	; 0x3e94 <_ZN4Game7endLoopEv+0x1d2>
    3e04:	83 30       	cpi	r24, 0x03	; 3
    3e06:	09 f0       	breq	.+2      	; 0x3e0a <_ZN4Game7endLoopEv+0x148>
    3e08:	6f c0       	rjmp	.+222    	; 0x3ee8 <_ZN4Game7endLoopEv+0x226>
    3e0a:	60 c0       	rjmp	.+192    	; 0x3ecc <_ZN4Game7endLoopEv+0x20a>
      {
      case 0:
        clear(102, 120, 14, 8, WHITE);
    3e0c:	ee 24       	eor	r14, r14
    3e0e:	ea 94       	dec	r14
    3e10:	fe 2c       	mov	r15, r14
    3e12:	08 e0       	ldi	r16, 0x08	; 8
    3e14:	10 e0       	ldi	r17, 0x00	; 0
    3e16:	2e e0       	ldi	r18, 0x0E	; 14
    3e18:	30 e0       	ldi	r19, 0x00	; 0
    3e1a:	48 e7       	ldi	r20, 0x78	; 120
    3e1c:	50 e0       	ldi	r21, 0x00	; 0
    3e1e:	66 e6       	ldi	r22, 0x66	; 102
    3e20:	70 e0       	ldi	r23, 0x00	; 0
    3e22:	8c 2d       	mov	r24, r12
    3e24:	9d 2d       	mov	r25, r13
    3e26:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        clear(118, 120, 14, 8, BLACK);
    3e2a:	e1 2c       	mov	r14, r1
    3e2c:	f1 2c       	mov	r15, r1
    3e2e:	2e e0       	ldi	r18, 0x0E	; 14
    3e30:	30 e0       	ldi	r19, 0x00	; 0
    3e32:	48 e7       	ldi	r20, 0x78	; 120
    3e34:	50 e0       	ldi	r21, 0x00	; 0
    3e36:	66 e7       	ldi	r22, 0x76	; 118
    3e38:	70 e0       	ldi	r23, 0x00	; 0
    3e3a:	8c 2d       	mov	r24, r12
    3e3c:	9d 2d       	mov	r25, r13
    3e3e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

        break;
    3e42:	52 c0       	rjmp	.+164    	; 0x3ee8 <_ZN4Game7endLoopEv+0x226>

      case 1:
        clear(102, 120, 14, 8, BLACK);
    3e44:	e1 2c       	mov	r14, r1
    3e46:	f1 2c       	mov	r15, r1
    3e48:	08 e0       	ldi	r16, 0x08	; 8
    3e4a:	10 e0       	ldi	r17, 0x00	; 0
    3e4c:	2e e0       	ldi	r18, 0x0E	; 14
    3e4e:	30 e0       	ldi	r19, 0x00	; 0
    3e50:	48 e7       	ldi	r20, 0x78	; 120
    3e52:	50 e0       	ldi	r21, 0x00	; 0
    3e54:	66 e6       	ldi	r22, 0x66	; 102
    3e56:	70 e0       	ldi	r23, 0x00	; 0
    3e58:	8c 2d       	mov	r24, r12
    3e5a:	9d 2d       	mov	r25, r13
    3e5c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        clear(118, 120, 14, 8, WHITE);
    3e60:	ee 24       	eor	r14, r14
    3e62:	ea 94       	dec	r14
    3e64:	fe 2c       	mov	r15, r14
    3e66:	2e e0       	ldi	r18, 0x0E	; 14
    3e68:	30 e0       	ldi	r19, 0x00	; 0
    3e6a:	48 e7       	ldi	r20, 0x78	; 120
    3e6c:	50 e0       	ldi	r21, 0x00	; 0
    3e6e:	66 e7       	ldi	r22, 0x76	; 118
    3e70:	70 e0       	ldi	r23, 0x00	; 0
    3e72:	8c 2d       	mov	r24, r12
    3e74:	9d 2d       	mov	r25, r13
    3e76:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        clear(134, 120, 14, 8, BLACK);
    3e7a:	e1 2c       	mov	r14, r1
    3e7c:	f1 2c       	mov	r15, r1
    3e7e:	2e e0       	ldi	r18, 0x0E	; 14
    3e80:	30 e0       	ldi	r19, 0x00	; 0
    3e82:	48 e7       	ldi	r20, 0x78	; 120
    3e84:	50 e0       	ldi	r21, 0x00	; 0
    3e86:	66 e8       	ldi	r22, 0x86	; 134
    3e88:	70 e0       	ldi	r23, 0x00	; 0
    3e8a:	8c 2d       	mov	r24, r12
    3e8c:	9d 2d       	mov	r25, r13
    3e8e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

        break;
    3e92:	2a c0       	rjmp	.+84     	; 0x3ee8 <_ZN4Game7endLoopEv+0x226>

      case 2:
        clear(118, 120, 14, 8, BLACK);
    3e94:	e1 2c       	mov	r14, r1
    3e96:	f1 2c       	mov	r15, r1
    3e98:	08 e0       	ldi	r16, 0x08	; 8
    3e9a:	10 e0       	ldi	r17, 0x00	; 0
    3e9c:	2e e0       	ldi	r18, 0x0E	; 14
    3e9e:	30 e0       	ldi	r19, 0x00	; 0
    3ea0:	48 e7       	ldi	r20, 0x78	; 120
    3ea2:	50 e0       	ldi	r21, 0x00	; 0
    3ea4:	66 e7       	ldi	r22, 0x76	; 118
    3ea6:	70 e0       	ldi	r23, 0x00	; 0
    3ea8:	8c 2d       	mov	r24, r12
    3eaa:	9d 2d       	mov	r25, r13
    3eac:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
        clear(134, 120, 14, 8, WHITE);
    3eb0:	ee 24       	eor	r14, r14
    3eb2:	ea 94       	dec	r14
    3eb4:	fe 2c       	mov	r15, r14
    3eb6:	2e e0       	ldi	r18, 0x0E	; 14
    3eb8:	30 e0       	ldi	r19, 0x00	; 0
    3eba:	48 e7       	ldi	r20, 0x78	; 120
    3ebc:	50 e0       	ldi	r21, 0x00	; 0
    3ebe:	66 e8       	ldi	r22, 0x86	; 134
    3ec0:	70 e0       	ldi	r23, 0x00	; 0
    3ec2:	8c 2d       	mov	r24, r12
    3ec4:	9d 2d       	mov	r25, r13
    3ec6:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

        break;
    3eca:	0e c0       	rjmp	.+28     	; 0x3ee8 <_ZN4Game7endLoopEv+0x226>

      case 3:
        clear(134, 120, 14, 8, BLACK);
    3ecc:	e1 2c       	mov	r14, r1
    3ece:	f1 2c       	mov	r15, r1
    3ed0:	08 e0       	ldi	r16, 0x08	; 8
    3ed2:	10 e0       	ldi	r17, 0x00	; 0
    3ed4:	2e e0       	ldi	r18, 0x0E	; 14
    3ed6:	30 e0       	ldi	r19, 0x00	; 0
    3ed8:	48 e7       	ldi	r20, 0x78	; 120
    3eda:	50 e0       	ldi	r21, 0x00	; 0
    3edc:	66 e8       	ldi	r22, 0x86	; 134
    3ede:	70 e0       	ldi	r23, 0x00	; 0
    3ee0:	8c 2d       	mov	r24, r12
    3ee2:	9d 2d       	mov	r25, r13
    3ee4:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3ee8:	2f ef       	ldi	r18, 0xFF	; 255
    3eea:	81 ee       	ldi	r24, 0xE1	; 225
    3eec:	94 e0       	ldi	r25, 0x04	; 4
    3eee:	21 50       	subi	r18, 0x01	; 1
    3ef0:	80 40       	sbci	r24, 0x00	; 0
    3ef2:	90 40       	sbci	r25, 0x00	; 0
    3ef4:	e1 f7       	brne	.-8      	; 0x3eee <_ZN4Game7endLoopEv+0x22c>
    3ef6:	00 c0       	rjmp	.+0      	; 0x3ef8 <_ZN4Game7endLoopEv+0x236>
    3ef8:	00 00       	nop
      default:
        break;
      }

      _delay_ms(100);
      SW::start = OFF;
    3efa:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <_ZN2SW5startE>
      SW::interrupt1 = OFF;
    3efe:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <_ZN2SW10interrupt1E>
    }

    switch (m_Cursor)
    3f02:	8a 85       	ldd	r24, Y+10	; 0x0a
    3f04:	81 30       	cpi	r24, 0x01	; 1
    3f06:	99 f1       	breq	.+102    	; 0x3f6e <_ZN4Game7endLoopEv+0x2ac>
    3f08:	1c f4       	brge	.+6      	; 0x3f10 <_ZN4Game7endLoopEv+0x24e>
    3f0a:	88 23       	and	r24, r24
    3f0c:	41 f0       	breq	.+16     	; 0x3f1e <_ZN4Game7endLoopEv+0x25c>
    3f0e:	1c cf       	rjmp	.-456    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
    3f10:	82 30       	cpi	r24, 0x02	; 2
    3f12:	09 f4       	brne	.+2      	; 0x3f16 <_ZN4Game7endLoopEv+0x254>
    3f14:	54 c0       	rjmp	.+168    	; 0x3fbe <_ZN4Game7endLoopEv+0x2fc>
    3f16:	83 30       	cpi	r24, 0x03	; 3
    3f18:	09 f4       	brne	.+2      	; 0x3f1c <_ZN4Game7endLoopEv+0x25a>
    3f1a:	79 c0       	rjmp	.+242    	; 0x400e <_ZN4Game7endLoopEv+0x34c>
    3f1c:	15 cf       	rjmp	.-470    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
    {
    case 0:
      tempName1st = m_Temp;
    3f1e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f20:	8c ab       	std	Y+52, r24	; 0x34

      if (Frame::sixFrames == 0)
    3f22:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    3f26:	81 11       	cpse	r24, r1
    3f28:	0f c0       	rjmp	.+30     	; 0x3f48 <_ZN4Game7endLoopEv+0x286>
      {
        clear(102, 120, 14, 8, BLACK);
    3f2a:	e1 2c       	mov	r14, r1
    3f2c:	f1 2c       	mov	r15, r1
    3f2e:	08 e0       	ldi	r16, 0x08	; 8
    3f30:	10 e0       	ldi	r17, 0x00	; 0
    3f32:	2e e0       	ldi	r18, 0x0E	; 14
    3f34:	30 e0       	ldi	r19, 0x00	; 0
    3f36:	48 e7       	ldi	r20, 0x78	; 120
    3f38:	50 e0       	ldi	r21, 0x00	; 0
    3f3a:	66 e6       	ldi	r22, 0x66	; 102
    3f3c:	70 e0       	ldi	r23, 0x00	; 0
    3f3e:	8c 2d       	mov	r24, r12
    3f40:	9d 2d       	mov	r25, r13
    3f42:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3f46:	00 cf       	rjmp	.-512    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      else if (Frame::sixFrames == 4)
    3f48:	84 30       	cpi	r24, 0x04	; 4
    3f4a:	09 f0       	breq	.+2      	; 0x3f4e <_ZN4Game7endLoopEv+0x28c>
    3f4c:	fd ce       	rjmp	.-518    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      {
        clear(102, 120, 14, 8, WHITE);
    3f4e:	ee 24       	eor	r14, r14
    3f50:	ea 94       	dec	r14
    3f52:	fe 2c       	mov	r15, r14
    3f54:	08 e0       	ldi	r16, 0x08	; 8
    3f56:	10 e0       	ldi	r17, 0x00	; 0
    3f58:	2e e0       	ldi	r18, 0x0E	; 14
    3f5a:	30 e0       	ldi	r19, 0x00	; 0
    3f5c:	48 e7       	ldi	r20, 0x78	; 120
    3f5e:	50 e0       	ldi	r21, 0x00	; 0
    3f60:	66 e6       	ldi	r22, 0x66	; 102
    3f62:	70 e0       	ldi	r23, 0x00	; 0
    3f64:	8c 2d       	mov	r24, r12
    3f66:	9d 2d       	mov	r25, r13
    3f68:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3f6c:	ed ce       	rjmp	.-550    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      break;

    case 1:
      tempName2nd = m_Temp;
    3f6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3f70:	8d ab       	std	Y+53, r24	; 0x35

      if (Frame::sixFrames == 0)
    3f72:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    3f76:	81 11       	cpse	r24, r1
    3f78:	0f c0       	rjmp	.+30     	; 0x3f98 <_ZN4Game7endLoopEv+0x2d6>
      {
        clear(118, 120, 14, 8, BLACK);
    3f7a:	e1 2c       	mov	r14, r1
    3f7c:	f1 2c       	mov	r15, r1
    3f7e:	08 e0       	ldi	r16, 0x08	; 8
    3f80:	10 e0       	ldi	r17, 0x00	; 0
    3f82:	2e e0       	ldi	r18, 0x0E	; 14
    3f84:	30 e0       	ldi	r19, 0x00	; 0
    3f86:	48 e7       	ldi	r20, 0x78	; 120
    3f88:	50 e0       	ldi	r21, 0x00	; 0
    3f8a:	66 e7       	ldi	r22, 0x76	; 118
    3f8c:	70 e0       	ldi	r23, 0x00	; 0
    3f8e:	8c 2d       	mov	r24, r12
    3f90:	9d 2d       	mov	r25, r13
    3f92:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3f96:	d8 ce       	rjmp	.-592    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      else if (Frame::sixFrames == 4)
    3f98:	84 30       	cpi	r24, 0x04	; 4
    3f9a:	09 f0       	breq	.+2      	; 0x3f9e <_ZN4Game7endLoopEv+0x2dc>
    3f9c:	d5 ce       	rjmp	.-598    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      {
        clear(118, 120, 14, 8, WHITE);
    3f9e:	ee 24       	eor	r14, r14
    3fa0:	ea 94       	dec	r14
    3fa2:	fe 2c       	mov	r15, r14
    3fa4:	08 e0       	ldi	r16, 0x08	; 8
    3fa6:	10 e0       	ldi	r17, 0x00	; 0
    3fa8:	2e e0       	ldi	r18, 0x0E	; 14
    3faa:	30 e0       	ldi	r19, 0x00	; 0
    3fac:	48 e7       	ldi	r20, 0x78	; 120
    3fae:	50 e0       	ldi	r21, 0x00	; 0
    3fb0:	66 e7       	ldi	r22, 0x76	; 118
    3fb2:	70 e0       	ldi	r23, 0x00	; 0
    3fb4:	8c 2d       	mov	r24, r12
    3fb6:	9d 2d       	mov	r25, r13
    3fb8:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3fbc:	c5 ce       	rjmp	.-630    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      break;

    case 2:
      tempName3rd = m_Temp;
    3fbe:	8c 85       	ldd	r24, Y+12	; 0x0c
    3fc0:	8e ab       	std	Y+54, r24	; 0x36

      if (Frame::sixFrames == 0)
    3fc2:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    3fc6:	81 11       	cpse	r24, r1
    3fc8:	0f c0       	rjmp	.+30     	; 0x3fe8 <_ZN4Game7endLoopEv+0x326>
      {
        clear(134, 120, 14, 8, BLACK);
    3fca:	e1 2c       	mov	r14, r1
    3fcc:	f1 2c       	mov	r15, r1
    3fce:	08 e0       	ldi	r16, 0x08	; 8
    3fd0:	10 e0       	ldi	r17, 0x00	; 0
    3fd2:	2e e0       	ldi	r18, 0x0E	; 14
    3fd4:	30 e0       	ldi	r19, 0x00	; 0
    3fd6:	48 e7       	ldi	r20, 0x78	; 120
    3fd8:	50 e0       	ldi	r21, 0x00	; 0
    3fda:	66 e8       	ldi	r22, 0x86	; 134
    3fdc:	70 e0       	ldi	r23, 0x00	; 0
    3fde:	8c 2d       	mov	r24, r12
    3fe0:	9d 2d       	mov	r25, r13
    3fe2:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    3fe6:	b0 ce       	rjmp	.-672    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      else if (Frame::sixFrames == 4)
    3fe8:	84 30       	cpi	r24, 0x04	; 4
    3fea:	09 f0       	breq	.+2      	; 0x3fee <_ZN4Game7endLoopEv+0x32c>
    3fec:	ad ce       	rjmp	.-678    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      {
        clear(134, 120, 14, 8, WHITE);
    3fee:	ee 24       	eor	r14, r14
    3ff0:	ea 94       	dec	r14
    3ff2:	fe 2c       	mov	r15, r14
    3ff4:	08 e0       	ldi	r16, 0x08	; 8
    3ff6:	10 e0       	ldi	r17, 0x00	; 0
    3ff8:	2e e0       	ldi	r18, 0x0E	; 14
    3ffa:	30 e0       	ldi	r19, 0x00	; 0
    3ffc:	48 e7       	ldi	r20, 0x78	; 120
    3ffe:	50 e0       	ldi	r21, 0x00	; 0
    4000:	66 e8       	ldi	r22, 0x86	; 134
    4002:	70 e0       	ldi	r23, 0x00	; 0
    4004:	8c 2d       	mov	r24, r12
    4006:	9d 2d       	mov	r25, r13
    4008:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    400c:	9d ce       	rjmp	.-710    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      }

      break;

    case 3:
      if (SW::start == ON)
    400e:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <_ZN2SW5startE>
    4012:	88 23       	and	r24, r24
    4014:	09 f4       	brne	.+2      	; 0x4018 <_ZN4Game7endLoopEv+0x356>
    4016:	98 ce       	rjmp	.-720    	; 0x3d48 <_ZN4Game7endLoopEv+0x86>
      break;
    }

  }

}
    4018:	df 91       	pop	r29
    401a:	cf 91       	pop	r28
    401c:	1f 91       	pop	r17
    401e:	0f 91       	pop	r16
    4020:	ff 90       	pop	r15
    4022:	ef 90       	pop	r14
    4024:	df 90       	pop	r13
    4026:	cf 90       	pop	r12
    4028:	bf 90       	pop	r11
    402a:	af 90       	pop	r10
    402c:	9f 90       	pop	r9
    402e:	8f 90       	pop	r8
    4030:	08 95       	ret

00004032 <_ZN4Game5startEv>:
/*----------------------------------------//
                Game Start
//----------------------------------------*/

void Game::start(void)
{
    4032:	2f 92       	push	r2
    4034:	3f 92       	push	r3
    4036:	4f 92       	push	r4
    4038:	5f 92       	push	r5
    403a:	6f 92       	push	r6
    403c:	7f 92       	push	r7
    403e:	8f 92       	push	r8
    4040:	9f 92       	push	r9
    4042:	af 92       	push	r10
    4044:	bf 92       	push	r11
    4046:	cf 92       	push	r12
    4048:	df 92       	push	r13
    404a:	ef 92       	push	r14
    404c:	ff 92       	push	r15
    404e:	0f 93       	push	r16
    4050:	1f 93       	push	r17
    4052:	cf 93       	push	r28
    4054:	df 93       	push	r29
    4056:	00 d0       	rcall	.+0      	; 0x4058 <_ZN4Game5startEv+0x26>
    4058:	cd b7       	in	r28, 0x3d	; 61
    405a:	de b7       	in	r29, 0x3e	; 62
    405c:	2c 01       	movw	r4, r24

  Audio audio;

  fillScreen(BLACK);
    405e:	8a 83       	std	Y+2, r24	; 0x02
    4060:	35 2c       	mov	r3, r5
    4062:	60 e0       	ldi	r22, 0x00	; 0
    4064:	70 e0       	ldi	r23, 0x00	; 0
    4066:	0e 94 33 2c 	call	0x5866	; 0x5866 <_ZN3TFT10fillScreenEj>
  draw(40, 140, 40, 40, charStand, BLACK, MAROON, RED, WHITE);
    406a:	8f ef       	ldi	r24, 0xFF	; 255
    406c:	8f 93       	push	r24
    406e:	8f 93       	push	r24
    4070:	0f 2e       	mov	r0, r31
    4072:	81 2c       	mov	r8, r1
    4074:	f8 ef       	ldi	r31, 0xF8	; 248
    4076:	9f 2e       	mov	r9, r31
    4078:	f0 2d       	mov	r31, r0
    407a:	0f 2e       	mov	r0, r31
    407c:	a1 2c       	mov	r10, r1
    407e:	f8 e7       	ldi	r31, 0x78	; 120
    4080:	bf 2e       	mov	r11, r31
    4082:	f0 2d       	mov	r31, r0
    4084:	c1 2c       	mov	r12, r1
    4086:	d1 2c       	mov	r13, r1
    4088:	0f 2e       	mov	r0, r31
    408a:	f8 eb       	ldi	r31, 0xB8	; 184
    408c:	ef 2e       	mov	r14, r31
    408e:	f0 e0       	ldi	r31, 0x00	; 0
    4090:	ff 2e       	mov	r15, r31
    4092:	f0 2d       	mov	r31, r0
    4094:	08 e2       	ldi	r16, 0x28	; 40
    4096:	10 e0       	ldi	r17, 0x00	; 0
    4098:	28 e2       	ldi	r18, 0x28	; 40
    409a:	30 e0       	ldi	r19, 0x00	; 0
    409c:	4c e8       	ldi	r20, 0x8C	; 140
    409e:	50 e0       	ldi	r21, 0x00	; 0
    40a0:	68 e2       	ldi	r22, 0x28	; 40
    40a2:	70 e0       	ldi	r23, 0x00	; 0
    40a4:	c2 01       	movw	r24, r4
    40a6:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>

  print(120, 100, "Ready");
    40aa:	26 ed       	ldi	r18, 0xD6	; 214
    40ac:	31 e0       	ldi	r19, 0x01	; 1
    40ae:	44 e6       	ldi	r20, 0x64	; 100
    40b0:	50 e0       	ldi	r21, 0x00	; 0
    40b2:	68 e7       	ldi	r22, 0x78	; 120
    40b4:	70 e0       	ldi	r23, 0x00	; 0
    40b6:	c2 01       	movw	r24, r4
    40b8:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    40bc:	2f ef       	ldi	r18, 0xFF	; 255
    40be:	8d e3       	ldi	r24, 0x3D	; 61
    40c0:	99 e4       	ldi	r25, 0x49	; 73
    40c2:	21 50       	subi	r18, 0x01	; 1
    40c4:	80 40       	sbci	r24, 0x00	; 0
    40c6:	90 40       	sbci	r25, 0x00	; 0
    40c8:	e1 f7       	brne	.-8      	; 0x40c2 <_ZN4Game5startEv+0x90>
    40ca:	00 c0       	rjmp	.+0      	; 0x40cc <_ZN4Game5startEv+0x9a>
    40cc:	00 00       	nop
    40ce:	0f 90       	pop	r0
    40d0:	0f 90       	pop	r0
    40d2:	0f 2e       	mov	r0, r31
    40d4:	f5 e0       	ldi	r31, 0x05	; 5
    40d6:	6f 2e       	mov	r6, r31
    40d8:	71 2c       	mov	r7, r1
    40da:	f0 2d       	mov	r31, r0
  _delay_ms(1500);

  for (int i=0; i<5; i++)
  {
    print(120, 100, "Start");
    40dc:	2c ed       	ldi	r18, 0xDC	; 220
    40de:	31 e0       	ldi	r19, 0x01	; 1
    40e0:	44 e6       	ldi	r20, 0x64	; 100
    40e2:	50 e0       	ldi	r21, 0x00	; 0
    40e4:	68 e7       	ldi	r22, 0x78	; 120
    40e6:	70 e0       	ldi	r23, 0x00	; 0
    40e8:	8a 81       	ldd	r24, Y+2	; 0x02
    40ea:	93 2d       	mov	r25, r3
    40ec:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    audio.setTonicSolFa(RE);
    40f0:	61 e0       	ldi	r22, 0x01	; 1
    40f2:	ce 01       	movw	r24, r28
    40f4:	01 96       	adiw	r24, 0x01	; 1
    40f6:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    audio.setSound(ON);
    40fa:	61 e0       	ldi	r22, 0x01	; 1
    40fc:	ce 01       	movw	r24, r28
    40fe:	01 96       	adiw	r24, 0x01	; 1
    4100:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    4104:	ef ef       	ldi	r30, 0xFF	; 255
    4106:	f1 ee       	ldi	r31, 0xE1	; 225
    4108:	24 e0       	ldi	r18, 0x04	; 4
    410a:	e1 50       	subi	r30, 0x01	; 1
    410c:	f0 40       	sbci	r31, 0x00	; 0
    410e:	20 40       	sbci	r18, 0x00	; 0
    4110:	e1 f7       	brne	.-8      	; 0x410a <_ZN4Game5startEv+0xd8>
    4112:	00 c0       	rjmp	.+0      	; 0x4114 <_ZN4Game5startEv+0xe2>
    4114:	00 00       	nop
    _delay_ms(100);

    clear(120, 100, 80, 16, BLACK);
    4116:	e1 2c       	mov	r14, r1
    4118:	f1 2c       	mov	r15, r1
    411a:	00 e1       	ldi	r16, 0x10	; 16
    411c:	10 e0       	ldi	r17, 0x00	; 0
    411e:	20 e5       	ldi	r18, 0x50	; 80
    4120:	30 e0       	ldi	r19, 0x00	; 0
    4122:	44 e6       	ldi	r20, 0x64	; 100
    4124:	50 e0       	ldi	r21, 0x00	; 0
    4126:	68 e7       	ldi	r22, 0x78	; 120
    4128:	70 e0       	ldi	r23, 0x00	; 0
    412a:	8a 81       	ldd	r24, Y+2	; 0x02
    412c:	93 2d       	mov	r25, r3
    412e:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    audio.setSound(OFF);
    4132:	60 e0       	ldi	r22, 0x00	; 0
    4134:	ce 01       	movw	r24, r28
    4136:	01 96       	adiw	r24, 0x01	; 1
    4138:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    413c:	8f ef       	ldi	r24, 0xFF	; 255
    413e:	91 ee       	ldi	r25, 0xE1	; 225
    4140:	e4 e0       	ldi	r30, 0x04	; 4
    4142:	81 50       	subi	r24, 0x01	; 1
    4144:	90 40       	sbci	r25, 0x00	; 0
    4146:	e0 40       	sbci	r30, 0x00	; 0
    4148:	e1 f7       	brne	.-8      	; 0x4142 <_ZN4Game5startEv+0x110>
    414a:	00 c0       	rjmp	.+0      	; 0x414c <_ZN4Game5startEv+0x11a>
    414c:	00 00       	nop
    414e:	f1 e0       	ldi	r31, 0x01	; 1
    4150:	6f 1a       	sub	r6, r31
    4152:	71 08       	sbc	r7, r1
  draw(40, 140, 40, 40, charStand, BLACK, MAROON, RED, WHITE);

  print(120, 100, "Ready");
  _delay_ms(1500);

  for (int i=0; i<5; i++)
    4154:	19 f6       	brne	.-122    	; 0x40dc <_ZN4Game5startEv+0xaa>
    _delay_ms(100);
  }
  
  for (int j=0; j<5; j++)
  {
    draw(64 * j, 180, 64, 48, groundTile, BLACK, BROWN, MAROON, WHITE);
    4156:	22 24       	eor	r2, r2
    4158:	2a 94       	dec	r2
    415a:	2f 92       	push	r2
    415c:	2f 92       	push	r2
    415e:	0f 2e       	mov	r0, r31
    4160:	81 2c       	mov	r8, r1
    4162:	f8 e7       	ldi	r31, 0x78	; 120
    4164:	9f 2e       	mov	r9, r31
    4166:	f0 2d       	mov	r31, r0
    4168:	0f 2e       	mov	r0, r31
    416a:	a1 2c       	mov	r10, r1
    416c:	f8 e3       	ldi	r31, 0x38	; 56
    416e:	bf 2e       	mov	r11, r31
    4170:	f0 2d       	mov	r31, r0
    4172:	c1 2c       	mov	r12, r1
    4174:	d1 2c       	mov	r13, r1
    4176:	0f 2e       	mov	r0, r31
    4178:	f1 e8       	ldi	r31, 0x81	; 129
    417a:	ef 2e       	mov	r14, r31
    417c:	f6 e1       	ldi	r31, 0x16	; 22
    417e:	ff 2e       	mov	r15, r31
    4180:	f0 2d       	mov	r31, r0
    4182:	00 e3       	ldi	r16, 0x30	; 48
    4184:	10 e0       	ldi	r17, 0x00	; 0
    4186:	20 e4       	ldi	r18, 0x40	; 64
    4188:	30 e0       	ldi	r19, 0x00	; 0
    418a:	44 eb       	ldi	r20, 0xB4	; 180
    418c:	50 e0       	ldi	r21, 0x00	; 0
    418e:	b3 01       	movw	r22, r6
    4190:	8a 81       	ldd	r24, Y+2	; 0x02
    4192:	93 2d       	mov	r25, r3
    4194:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    4198:	20 e4       	ldi	r18, 0x40	; 64
    419a:	62 0e       	add	r6, r18
    419c:	71 1c       	adc	r7, r1
    clear(120, 100, 80, 16, BLACK);
    audio.setSound(OFF);
    _delay_ms(100);
  }
  
  for (int j=0; j<5; j++)
    419e:	0f 90       	pop	r0
    41a0:	0f 90       	pop	r0
    41a2:	80 e4       	ldi	r24, 0x40	; 64
    41a4:	68 16       	cp	r6, r24
    41a6:	81 e0       	ldi	r24, 0x01	; 1
    41a8:	78 06       	cpc	r7, r24
    41aa:	b9 f6       	brne	.-82     	; 0x415a <_ZN4Game5startEv+0x128>
  {
    draw(64 * j, 180, 64, 48, groundTile, BLACK, BROWN, MAROON, WHITE);
  }

  SW::init();
    41ac:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
  Frame::init();
    41b0:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <_ZN5Frame4initEv>
  void nomalTitle(void);
  void titleLoop(void);
  void startLoop(void);
  void endLoop(void);

  void init(void) { m_Cursor = 0; m_Cache = 0; m_Temp = 0; m_ScoreTemp = 0; Frame::scoreTime = 0;
    41b4:	f2 01       	movw	r30, r4
    41b6:	12 86       	std	Z+10, r1	; 0x0a
    41b8:	13 86       	std	Z+11, r1	; 0x0b
    41ba:	14 86       	std	Z+12, r1	; 0x0c
    41bc:	16 86       	std	Z+14, r1	; 0x0e
    41be:	15 86       	std	Z+13, r1	; 0x0d
    41c0:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    41c4:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <_ZN5Frame9scoreTimeE>
    m_IsReset = false; m_IsHighSpeed = false; m_IsDrawed = false; m_IsDrawedScore = false;  }
    41c8:	12 8a       	std	Z+18, r1	; 0x12
    41ca:	13 8a       	std	Z+19, r1	; 0x13
    41cc:	14 8a       	std	Z+20, r1	; 0x14
    41ce:	15 8a       	std	Z+21, r1	; 0x15
  Game::init();
  startLoop();
    41d0:	c2 01       	movw	r24, r4
    41d2:	0e 94 72 18 	call	0x30e4	; 0x30e4 <_ZN4Game9startLoopEv>

}
    41d6:	0f 90       	pop	r0
    41d8:	0f 90       	pop	r0
    41da:	df 91       	pop	r29
    41dc:	cf 91       	pop	r28
    41de:	1f 91       	pop	r17
    41e0:	0f 91       	pop	r16
    41e2:	ff 90       	pop	r15
    41e4:	ef 90       	pop	r14
    41e6:	df 90       	pop	r13
    41e8:	cf 90       	pop	r12
    41ea:	bf 90       	pop	r11
    41ec:	af 90       	pop	r10
    41ee:	9f 90       	pop	r9
    41f0:	8f 90       	pop	r8
    41f2:	7f 90       	pop	r7
    41f4:	6f 90       	pop	r6
    41f6:	5f 90       	pop	r5
    41f8:	4f 90       	pop	r4
    41fa:	3f 90       	pop	r3
    41fc:	2f 90       	pop	r2
    41fe:	08 95       	ret

00004200 <_ZN4Game3endEv>:
/*----------------------------------------//
                  Game End
//----------------------------------------*/

void Game::end(void)
{
    4200:	cf 92       	push	r12
    4202:	df 92       	push	r13
    4204:	ef 92       	push	r14
    4206:	ff 92       	push	r15
    4208:	0f 93       	push	r16
    420a:	1f 93       	push	r17
    420c:	cf 93       	push	r28
    420e:	df 93       	push	r29
    4210:	1f 92       	push	r1
    4212:	cd b7       	in	r28, 0x3d	; 61
    4214:	de b7       	in	r29, 0x3e	; 62

  Audio audio;

  if (m_ScoreTemp > fifthScore)
    4216:	fc 01       	movw	r30, r24
    4218:	45 85       	ldd	r20, Z+13	; 0x0d
    421a:	56 85       	ldd	r21, Z+14	; 0x0e
    421c:	22 a9       	ldd	r18, Z+50	; 0x32
    421e:	33 a9       	ldd	r19, Z+51	; 0x33
    4220:	24 17       	cp	r18, r20
    4222:	35 07       	cpc	r19, r21
    4224:	08 f0       	brcs	.+2      	; 0x4228 <_ZN4Game3endEv+0x28>
    4226:	87 c2       	rjmp	.+1294   	; 0x4736 <_ZN4Game3endEv+0x536>
    4228:	6c 01       	movw	r12, r24
  {
    print(90, 100, "NEW SCORE");
    422a:	2c ee       	ldi	r18, 0xEC	; 236
    422c:	31 e0       	ldi	r19, 0x01	; 1
    422e:	44 e6       	ldi	r20, 0x64	; 100
    4230:	50 e0       	ldi	r21, 0x00	; 0
    4232:	6a e5       	ldi	r22, 0x5A	; 90
    4234:	70 e0       	ldi	r23, 0x00	; 0
    4236:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

    audio.setTonicSolFa(FA);
    423a:	63 e0       	ldi	r22, 0x03	; 3
    423c:	ce 01       	movw	r24, r28
    423e:	01 96       	adiw	r24, 0x01	; 1
    4240:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    audio.setSound(ON);
    4244:	61 e0       	ldi	r22, 0x01	; 1
    4246:	ce 01       	movw	r24, r28
    4248:	01 96       	adiw	r24, 0x01	; 1
    424a:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    424e:	ff e7       	ldi	r31, 0x7F	; 127
    4250:	2a e1       	ldi	r18, 0x1A	; 26
    4252:	86 e0       	ldi	r24, 0x06	; 6
    4254:	f1 50       	subi	r31, 0x01	; 1
    4256:	20 40       	sbci	r18, 0x00	; 0
    4258:	80 40       	sbci	r24, 0x00	; 0
    425a:	e1 f7       	brne	.-8      	; 0x4254 <_ZN4Game3endEv+0x54>
    425c:	00 c0       	rjmp	.+0      	; 0x425e <_ZN4Game3endEv+0x5e>
    425e:	00 00       	nop
    _delay_ms(125);
    audio.setTonicSolFa(MI);
    4260:	62 e0       	ldi	r22, 0x02	; 2
    4262:	ce 01       	movw	r24, r28
    4264:	01 96       	adiw	r24, 0x01	; 1
    4266:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    426a:	9f e7       	ldi	r25, 0x7F	; 127
    426c:	ea e1       	ldi	r30, 0x1A	; 26
    426e:	f6 e0       	ldi	r31, 0x06	; 6
    4270:	91 50       	subi	r25, 0x01	; 1
    4272:	e0 40       	sbci	r30, 0x00	; 0
    4274:	f0 40       	sbci	r31, 0x00	; 0
    4276:	e1 f7       	brne	.-8      	; 0x4270 <_ZN4Game3endEv+0x70>
    4278:	00 c0       	rjmp	.+0      	; 0x427a <_ZN4Game3endEv+0x7a>
    427a:	00 00       	nop
    _delay_ms(125);

    clear(90, 100, 144, 16, BLACK);
    427c:	e1 2c       	mov	r14, r1
    427e:	f1 2c       	mov	r15, r1
    4280:	00 e1       	ldi	r16, 0x10	; 16
    4282:	10 e0       	ldi	r17, 0x00	; 0
    4284:	20 e9       	ldi	r18, 0x90	; 144
    4286:	30 e0       	ldi	r19, 0x00	; 0
    4288:	44 e6       	ldi	r20, 0x64	; 100
    428a:	50 e0       	ldi	r21, 0x00	; 0
    428c:	6a e5       	ldi	r22, 0x5A	; 90
    428e:	70 e0       	ldi	r23, 0x00	; 0
    4290:	c6 01       	movw	r24, r12
    4292:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

    audio.setTonicSolFa(SO);
    4296:	64 e0       	ldi	r22, 0x04	; 4
    4298:	ce 01       	movw	r24, r28
    429a:	01 96       	adiw	r24, 0x01	; 1
    429c:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    42a0:	2f e7       	ldi	r18, 0x7F	; 127
    42a2:	8a e1       	ldi	r24, 0x1A	; 26
    42a4:	96 e0       	ldi	r25, 0x06	; 6
    42a6:	21 50       	subi	r18, 0x01	; 1
    42a8:	80 40       	sbci	r24, 0x00	; 0
    42aa:	90 40       	sbci	r25, 0x00	; 0
    42ac:	e1 f7       	brne	.-8      	; 0x42a6 <_ZN4Game3endEv+0xa6>
    42ae:	00 c0       	rjmp	.+0      	; 0x42b0 <_ZN4Game3endEv+0xb0>
    42b0:	00 00       	nop
    _delay_ms(125);
    audio.setTonicSolFa(FA);
    42b2:	63 e0       	ldi	r22, 0x03	; 3
    42b4:	ce 01       	movw	r24, r28
    42b6:	01 96       	adiw	r24, 0x01	; 1
    42b8:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    42bc:	ef e7       	ldi	r30, 0x7F	; 127
    42be:	fa e1       	ldi	r31, 0x1A	; 26
    42c0:	26 e0       	ldi	r18, 0x06	; 6
    42c2:	e1 50       	subi	r30, 0x01	; 1
    42c4:	f0 40       	sbci	r31, 0x00	; 0
    42c6:	20 40       	sbci	r18, 0x00	; 0
    42c8:	e1 f7       	brne	.-8      	; 0x42c2 <_ZN4Game3endEv+0xc2>
    42ca:	00 c0       	rjmp	.+0      	; 0x42cc <_ZN4Game3endEv+0xcc>
    42cc:	00 00       	nop
    _delay_ms(125);

    print(90, 100, "NEW SCORE");
    42ce:	2c ee       	ldi	r18, 0xEC	; 236
    42d0:	31 e0       	ldi	r19, 0x01	; 1
    42d2:	44 e6       	ldi	r20, 0x64	; 100
    42d4:	50 e0       	ldi	r21, 0x00	; 0
    42d6:	6a e5       	ldi	r22, 0x5A	; 90
    42d8:	70 e0       	ldi	r23, 0x00	; 0
    42da:	c6 01       	movw	r24, r12
    42dc:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>

    audio.setTonicSolFa(RA);
    42e0:	65 e0       	ldi	r22, 0x05	; 5
    42e2:	ce 01       	movw	r24, r28
    42e4:	01 96       	adiw	r24, 0x01	; 1
    42e6:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    42ea:	8f e7       	ldi	r24, 0x7F	; 127
    42ec:	9a e1       	ldi	r25, 0x1A	; 26
    42ee:	e6 e0       	ldi	r30, 0x06	; 6
    42f0:	81 50       	subi	r24, 0x01	; 1
    42f2:	90 40       	sbci	r25, 0x00	; 0
    42f4:	e0 40       	sbci	r30, 0x00	; 0
    42f6:	e1 f7       	brne	.-8      	; 0x42f0 <_ZN4Game3endEv+0xf0>
    42f8:	00 c0       	rjmp	.+0      	; 0x42fa <_ZN4Game3endEv+0xfa>
    42fa:	00 00       	nop
    _delay_ms(125);
    audio.setTonicSolFa(SO);
    42fc:	64 e0       	ldi	r22, 0x04	; 4
    42fe:	ce 01       	movw	r24, r28
    4300:	01 96       	adiw	r24, 0x01	; 1
    4302:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    4306:	ff e7       	ldi	r31, 0x7F	; 127
    4308:	2a e1       	ldi	r18, 0x1A	; 26
    430a:	86 e0       	ldi	r24, 0x06	; 6
    430c:	f1 50       	subi	r31, 0x01	; 1
    430e:	20 40       	sbci	r18, 0x00	; 0
    4310:	80 40       	sbci	r24, 0x00	; 0
    4312:	e1 f7       	brne	.-8      	; 0x430c <_ZN4Game3endEv+0x10c>
    4314:	00 c0       	rjmp	.+0      	; 0x4316 <_ZN4Game3endEv+0x116>
    4316:	00 00       	nop
    _delay_ms(125);

    clear(90, 100, 144, 16, BLACK);
    4318:	20 e9       	ldi	r18, 0x90	; 144
    431a:	30 e0       	ldi	r19, 0x00	; 0
    431c:	44 e6       	ldi	r20, 0x64	; 100
    431e:	50 e0       	ldi	r21, 0x00	; 0
    4320:	6a e5       	ldi	r22, 0x5A	; 90
    4322:	70 e0       	ldi	r23, 0x00	; 0
    4324:	c6 01       	movw	r24, r12
    4326:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>

    audio.setTonicSolFa(DO);
    432a:	60 e0       	ldi	r22, 0x00	; 0
    432c:	ce 01       	movw	r24, r28
    432e:	01 96       	adiw	r24, 0x01	; 1
    4330:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    4334:	9f ef       	ldi	r25, 0xFF	; 255
    4336:	e4 e3       	ldi	r30, 0x34	; 52
    4338:	fc e0       	ldi	r31, 0x0C	; 12
    433a:	91 50       	subi	r25, 0x01	; 1
    433c:	e0 40       	sbci	r30, 0x00	; 0
    433e:	f0 40       	sbci	r31, 0x00	; 0
    4340:	e1 f7       	brne	.-8      	; 0x433a <_ZN4Game3endEv+0x13a>
    4342:	00 c0       	rjmp	.+0      	; 0x4344 <_ZN4Game3endEv+0x144>
    4344:	00 00       	nop
    _delay_ms(250);
    audio.setSound(OFF);
    4346:	60 e0       	ldi	r22, 0x00	; 0
    4348:	ce 01       	movw	r24, r28
    434a:	01 96       	adiw	r24, 0x01	; 1
    434c:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>

    print(90, 100, "NEW SCORE");
    4350:	2c ee       	ldi	r18, 0xEC	; 236
    4352:	31 e0       	ldi	r19, 0x01	; 1
    4354:	44 e6       	ldi	r20, 0x64	; 100
    4356:	50 e0       	ldi	r21, 0x00	; 0
    4358:	6a e5       	ldi	r22, 0x5A	; 90
    435a:	70 e0       	ldi	r23, 0x00	; 0
    435c:	c6 01       	movw	r24, r12
    435e:	0e 94 9d 12 	call	0x253a	; 0x253a <_ZN4Font5printEiiPKc>
    4362:	2f ef       	ldi	r18, 0xFF	; 255
    4364:	89 e6       	ldi	r24, 0x69	; 105
    4366:	98 e1       	ldi	r25, 0x18	; 24
    4368:	21 50       	subi	r18, 0x01	; 1
    436a:	80 40       	sbci	r24, 0x00	; 0
    436c:	90 40       	sbci	r25, 0x00	; 0
    436e:	e1 f7       	brne	.-8      	; 0x4368 <_ZN4Game3endEv+0x168>
    4370:	00 c0       	rjmp	.+0      	; 0x4372 <_ZN4Game3endEv+0x172>
    4372:	00 00       	nop
    _delay_ms(500);

    SW::init();
    4374:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
    Frame::init();
    4378:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <_ZN5Frame4initEv>
    endLoop();
    437c:	c6 01       	movw	r24, r12
    437e:	0e 94 61 1e 	call	0x3cc2	; 0x3cc2 <_ZN4Game7endLoopEv>

    if (m_ScoreTemp > firstScore)
    4382:	f6 01       	movw	r30, r12
    4384:	65 85       	ldd	r22, Z+13	; 0x0d
    4386:	76 85       	ldd	r23, Z+14	; 0x0e
    4388:	82 8d       	ldd	r24, Z+26	; 0x1a
    438a:	93 8d       	ldd	r25, Z+27	; 0x1b
    438c:	86 17       	cp	r24, r22
    438e:	97 07       	cpc	r25, r23
    4390:	08 f0       	brcs	.+2      	; 0x4394 <_ZN4Game3endEv+0x194>
    4392:	94 c0       	rjmp	.+296    	; 0x44bc <_ZN4Game3endEv+0x2bc>
    {
      eeprom_update_word((uint16_t*)10, m_ScoreTemp);
    4394:	8a e0       	ldi	r24, 0x0A	; 10
    4396:	90 e0       	ldi	r25, 0x00	; 0
    4398:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)110, tempName1st);
    439c:	f6 01       	movw	r30, r12
    439e:	64 a9       	ldd	r22, Z+52	; 0x34
    43a0:	8e e6       	ldi	r24, 0x6E	; 110
    43a2:	90 e0       	ldi	r25, 0x00	; 0
    43a4:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)111, tempName2nd);
    43a8:	f6 01       	movw	r30, r12
    43aa:	65 a9       	ldd	r22, Z+53	; 0x35
    43ac:	8f e6       	ldi	r24, 0x6F	; 111
    43ae:	90 e0       	ldi	r25, 0x00	; 0
    43b0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)112, tempName3rd);
    43b4:	f6 01       	movw	r30, r12
    43b6:	66 a9       	ldd	r22, Z+54	; 0x36
    43b8:	80 e7       	ldi	r24, 0x70	; 112
    43ba:	90 e0       	ldi	r25, 0x00	; 0
    43bc:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)113, 0x00);
    43c0:	60 e0       	ldi	r22, 0x00	; 0
    43c2:	81 e7       	ldi	r24, 0x71	; 113
    43c4:	90 e0       	ldi	r25, 0x00	; 0
    43c6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)20, firstScore);
    43ca:	f6 01       	movw	r30, r12
    43cc:	62 8d       	ldd	r22, Z+26	; 0x1a
    43ce:	73 8d       	ldd	r23, Z+27	; 0x1b
    43d0:	84 e1       	ldi	r24, 0x14	; 20
    43d2:	90 e0       	ldi	r25, 0x00	; 0
    43d4:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)120, firstName1st);
    43d8:	f6 01       	movw	r30, r12
    43da:	66 89       	ldd	r22, Z+22	; 0x16
    43dc:	88 e7       	ldi	r24, 0x78	; 120
    43de:	90 e0       	ldi	r25, 0x00	; 0
    43e0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)121, firstName2nd);
    43e4:	f6 01       	movw	r30, r12
    43e6:	67 89       	ldd	r22, Z+23	; 0x17
    43e8:	89 e7       	ldi	r24, 0x79	; 121
    43ea:	90 e0       	ldi	r25, 0x00	; 0
    43ec:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)122, firstName3rd);
    43f0:	f6 01       	movw	r30, r12
    43f2:	60 8d       	ldd	r22, Z+24	; 0x18
    43f4:	8a e7       	ldi	r24, 0x7A	; 122
    43f6:	90 e0       	ldi	r25, 0x00	; 0
    43f8:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)123, 0x00);
    43fc:	60 e0       	ldi	r22, 0x00	; 0
    43fe:	8b e7       	ldi	r24, 0x7B	; 123
    4400:	90 e0       	ldi	r25, 0x00	; 0
    4402:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)30, secondScore);
    4406:	f6 01       	movw	r30, r12
    4408:	60 a1       	ldd	r22, Z+32	; 0x20
    440a:	71 a1       	ldd	r23, Z+33	; 0x21
    440c:	8e e1       	ldi	r24, 0x1E	; 30
    440e:	90 e0       	ldi	r25, 0x00	; 0
    4410:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)130, secondName1st);
    4414:	f6 01       	movw	r30, r12
    4416:	64 8d       	ldd	r22, Z+28	; 0x1c
    4418:	82 e8       	ldi	r24, 0x82	; 130
    441a:	90 e0       	ldi	r25, 0x00	; 0
    441c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)131, secondName2nd);
    4420:	f6 01       	movw	r30, r12
    4422:	65 8d       	ldd	r22, Z+29	; 0x1d
    4424:	83 e8       	ldi	r24, 0x83	; 131
    4426:	90 e0       	ldi	r25, 0x00	; 0
    4428:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)132, secondName3rd);
    442c:	f6 01       	movw	r30, r12
    442e:	66 8d       	ldd	r22, Z+30	; 0x1e
    4430:	84 e8       	ldi	r24, 0x84	; 132
    4432:	90 e0       	ldi	r25, 0x00	; 0
    4434:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)133, 0x00);
    4438:	60 e0       	ldi	r22, 0x00	; 0
    443a:	85 e8       	ldi	r24, 0x85	; 133
    443c:	90 e0       	ldi	r25, 0x00	; 0
    443e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)40, thirdScore);
    4442:	f6 01       	movw	r30, r12
    4444:	66 a1       	ldd	r22, Z+38	; 0x26
    4446:	77 a1       	ldd	r23, Z+39	; 0x27
    4448:	88 e2       	ldi	r24, 0x28	; 40
    444a:	90 e0       	ldi	r25, 0x00	; 0
    444c:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)140, thirdName1st);
    4450:	f6 01       	movw	r30, r12
    4452:	62 a1       	ldd	r22, Z+34	; 0x22
    4454:	8c e8       	ldi	r24, 0x8C	; 140
    4456:	90 e0       	ldi	r25, 0x00	; 0
    4458:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)141, thirdName2nd);
    445c:	f6 01       	movw	r30, r12
    445e:	63 a1       	ldd	r22, Z+35	; 0x23
    4460:	8d e8       	ldi	r24, 0x8D	; 141
    4462:	90 e0       	ldi	r25, 0x00	; 0
    4464:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)142, thirdName3rd);
    4468:	f6 01       	movw	r30, r12
    446a:	64 a1       	ldd	r22, Z+36	; 0x24
    446c:	8e e8       	ldi	r24, 0x8E	; 142
    446e:	90 e0       	ldi	r25, 0x00	; 0
    4470:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)143, 0x00);
    4474:	60 e0       	ldi	r22, 0x00	; 0
    4476:	8f e8       	ldi	r24, 0x8F	; 143
    4478:	90 e0       	ldi	r25, 0x00	; 0
    447a:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)50, fourthScore);
    447e:	f6 01       	movw	r30, r12
    4480:	64 a5       	ldd	r22, Z+44	; 0x2c
    4482:	75 a5       	ldd	r23, Z+45	; 0x2d
    4484:	82 e3       	ldi	r24, 0x32	; 50
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)150, fourthName1st);
    448c:	f6 01       	movw	r30, r12
    448e:	60 a5       	ldd	r22, Z+40	; 0x28
    4490:	86 e9       	ldi	r24, 0x96	; 150
    4492:	90 e0       	ldi	r25, 0x00	; 0
    4494:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)151, fourthName2nd);
    4498:	f6 01       	movw	r30, r12
    449a:	61 a5       	ldd	r22, Z+41	; 0x29
    449c:	87 e9       	ldi	r24, 0x97	; 151
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)152, fourthName3rd);
    44a4:	f6 01       	movw	r30, r12
    44a6:	62 a5       	ldd	r22, Z+42	; 0x2a
    44a8:	88 e9       	ldi	r24, 0x98	; 152
    44aa:	90 e0       	ldi	r25, 0x00	; 0
    44ac:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)153, 0x00);
    44b0:	60 e0       	ldi	r22, 0x00	; 0
    44b2:	89 e9       	ldi	r24, 0x99	; 153
    44b4:	90 e0       	ldi	r25, 0x00	; 0
    44b6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    44ba:	3d c1       	rjmp	.+634    	; 0x4736 <_ZN4Game3endEv+0x536>
    }

    else if (m_ScoreTemp > secondScore)
    44bc:	f6 01       	movw	r30, r12
    44be:	80 a1       	ldd	r24, Z+32	; 0x20
    44c0:	91 a1       	ldd	r25, Z+33	; 0x21
    44c2:	86 17       	cp	r24, r22
    44c4:	97 07       	cpc	r25, r23
    44c6:	08 f0       	brcs	.+2      	; 0x44ca <_ZN4Game3endEv+0x2ca>
    44c8:	76 c0       	rjmp	.+236    	; 0x45b6 <_ZN4Game3endEv+0x3b6>
    {
      eeprom_update_word((uint16_t*)20, m_ScoreTemp);
    44ca:	84 e1       	ldi	r24, 0x14	; 20
    44cc:	90 e0       	ldi	r25, 0x00	; 0
    44ce:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)120, tempName1st);
    44d2:	f6 01       	movw	r30, r12
    44d4:	64 a9       	ldd	r22, Z+52	; 0x34
    44d6:	88 e7       	ldi	r24, 0x78	; 120
    44d8:	90 e0       	ldi	r25, 0x00	; 0
    44da:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)121, tempName2nd);
    44de:	f6 01       	movw	r30, r12
    44e0:	65 a9       	ldd	r22, Z+53	; 0x35
    44e2:	89 e7       	ldi	r24, 0x79	; 121
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)122, tempName3rd);
    44ea:	f6 01       	movw	r30, r12
    44ec:	66 a9       	ldd	r22, Z+54	; 0x36
    44ee:	8a e7       	ldi	r24, 0x7A	; 122
    44f0:	90 e0       	ldi	r25, 0x00	; 0
    44f2:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)123, 0x00);
    44f6:	60 e0       	ldi	r22, 0x00	; 0
    44f8:	8b e7       	ldi	r24, 0x7B	; 123
    44fa:	90 e0       	ldi	r25, 0x00	; 0
    44fc:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)30, secondScore);
    4500:	f6 01       	movw	r30, r12
    4502:	60 a1       	ldd	r22, Z+32	; 0x20
    4504:	71 a1       	ldd	r23, Z+33	; 0x21
    4506:	8e e1       	ldi	r24, 0x1E	; 30
    4508:	90 e0       	ldi	r25, 0x00	; 0
    450a:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)130, secondName1st);
    450e:	f6 01       	movw	r30, r12
    4510:	64 8d       	ldd	r22, Z+28	; 0x1c
    4512:	82 e8       	ldi	r24, 0x82	; 130
    4514:	90 e0       	ldi	r25, 0x00	; 0
    4516:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)131, secondName2nd);
    451a:	f6 01       	movw	r30, r12
    451c:	65 8d       	ldd	r22, Z+29	; 0x1d
    451e:	83 e8       	ldi	r24, 0x83	; 131
    4520:	90 e0       	ldi	r25, 0x00	; 0
    4522:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)132, secondName3rd);
    4526:	f6 01       	movw	r30, r12
    4528:	66 8d       	ldd	r22, Z+30	; 0x1e
    452a:	84 e8       	ldi	r24, 0x84	; 132
    452c:	90 e0       	ldi	r25, 0x00	; 0
    452e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)133, 0x00);
    4532:	60 e0       	ldi	r22, 0x00	; 0
    4534:	85 e8       	ldi	r24, 0x85	; 133
    4536:	90 e0       	ldi	r25, 0x00	; 0
    4538:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)40, thirdScore);
    453c:	f6 01       	movw	r30, r12
    453e:	66 a1       	ldd	r22, Z+38	; 0x26
    4540:	77 a1       	ldd	r23, Z+39	; 0x27
    4542:	88 e2       	ldi	r24, 0x28	; 40
    4544:	90 e0       	ldi	r25, 0x00	; 0
    4546:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)140, thirdName1st);
    454a:	f6 01       	movw	r30, r12
    454c:	62 a1       	ldd	r22, Z+34	; 0x22
    454e:	8c e8       	ldi	r24, 0x8C	; 140
    4550:	90 e0       	ldi	r25, 0x00	; 0
    4552:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)141, thirdName2nd);
    4556:	f6 01       	movw	r30, r12
    4558:	63 a1       	ldd	r22, Z+35	; 0x23
    455a:	8d e8       	ldi	r24, 0x8D	; 141
    455c:	90 e0       	ldi	r25, 0x00	; 0
    455e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)142, thirdName3rd);
    4562:	f6 01       	movw	r30, r12
    4564:	64 a1       	ldd	r22, Z+36	; 0x24
    4566:	8e e8       	ldi	r24, 0x8E	; 142
    4568:	90 e0       	ldi	r25, 0x00	; 0
    456a:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)143, 0x00);
    456e:	60 e0       	ldi	r22, 0x00	; 0
    4570:	8f e8       	ldi	r24, 0x8F	; 143
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)50, fourthScore);
    4578:	f6 01       	movw	r30, r12
    457a:	64 a5       	ldd	r22, Z+44	; 0x2c
    457c:	75 a5       	ldd	r23, Z+45	; 0x2d
    457e:	82 e3       	ldi	r24, 0x32	; 50
    4580:	90 e0       	ldi	r25, 0x00	; 0
    4582:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)150, fourthName1st);
    4586:	f6 01       	movw	r30, r12
    4588:	60 a5       	ldd	r22, Z+40	; 0x28
    458a:	86 e9       	ldi	r24, 0x96	; 150
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)151, fourthName2nd);
    4592:	f6 01       	movw	r30, r12
    4594:	61 a5       	ldd	r22, Z+41	; 0x29
    4596:	87 e9       	ldi	r24, 0x97	; 151
    4598:	90 e0       	ldi	r25, 0x00	; 0
    459a:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)152, fourthName3rd);
    459e:	f6 01       	movw	r30, r12
    45a0:	62 a5       	ldd	r22, Z+42	; 0x2a
    45a2:	88 e9       	ldi	r24, 0x98	; 152
    45a4:	90 e0       	ldi	r25, 0x00	; 0
    45a6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)153, 0x00);
    45aa:	60 e0       	ldi	r22, 0x00	; 0
    45ac:	89 e9       	ldi	r24, 0x99	; 153
    45ae:	90 e0       	ldi	r25, 0x00	; 0
    45b0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    45b4:	c0 c0       	rjmp	.+384    	; 0x4736 <_ZN4Game3endEv+0x536>
    }

    else if (m_ScoreTemp > thirdScore)
    45b6:	f6 01       	movw	r30, r12
    45b8:	86 a1       	ldd	r24, Z+38	; 0x26
    45ba:	97 a1       	ldd	r25, Z+39	; 0x27
    45bc:	86 17       	cp	r24, r22
    45be:	97 07       	cpc	r25, r23
    45c0:	08 f0       	brcs	.+2      	; 0x45c4 <_ZN4Game3endEv+0x3c4>
    45c2:	58 c0       	rjmp	.+176    	; 0x4674 <_ZN4Game3endEv+0x474>
    {
      eeprom_update_word((uint16_t*)30, m_ScoreTemp);
    45c4:	8e e1       	ldi	r24, 0x1E	; 30
    45c6:	90 e0       	ldi	r25, 0x00	; 0
    45c8:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)130, tempName1st);
    45cc:	f6 01       	movw	r30, r12
    45ce:	64 a9       	ldd	r22, Z+52	; 0x34
    45d0:	82 e8       	ldi	r24, 0x82	; 130
    45d2:	90 e0       	ldi	r25, 0x00	; 0
    45d4:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)131, tempName2nd);
    45d8:	f6 01       	movw	r30, r12
    45da:	65 a9       	ldd	r22, Z+53	; 0x35
    45dc:	83 e8       	ldi	r24, 0x83	; 131
    45de:	90 e0       	ldi	r25, 0x00	; 0
    45e0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)132, tempName3rd);
    45e4:	f6 01       	movw	r30, r12
    45e6:	66 a9       	ldd	r22, Z+54	; 0x36
    45e8:	84 e8       	ldi	r24, 0x84	; 132
    45ea:	90 e0       	ldi	r25, 0x00	; 0
    45ec:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)133, 0x00);
    45f0:	60 e0       	ldi	r22, 0x00	; 0
    45f2:	85 e8       	ldi	r24, 0x85	; 133
    45f4:	90 e0       	ldi	r25, 0x00	; 0
    45f6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)40, thirdScore);
    45fa:	f6 01       	movw	r30, r12
    45fc:	66 a1       	ldd	r22, Z+38	; 0x26
    45fe:	77 a1       	ldd	r23, Z+39	; 0x27
    4600:	88 e2       	ldi	r24, 0x28	; 40
    4602:	90 e0       	ldi	r25, 0x00	; 0
    4604:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)140, thirdName1st);
    4608:	f6 01       	movw	r30, r12
    460a:	62 a1       	ldd	r22, Z+34	; 0x22
    460c:	8c e8       	ldi	r24, 0x8C	; 140
    460e:	90 e0       	ldi	r25, 0x00	; 0
    4610:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)141, thirdName2nd);
    4614:	f6 01       	movw	r30, r12
    4616:	63 a1       	ldd	r22, Z+35	; 0x23
    4618:	8d e8       	ldi	r24, 0x8D	; 141
    461a:	90 e0       	ldi	r25, 0x00	; 0
    461c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)142, thirdName3rd);
    4620:	f6 01       	movw	r30, r12
    4622:	64 a1       	ldd	r22, Z+36	; 0x24
    4624:	8e e8       	ldi	r24, 0x8E	; 142
    4626:	90 e0       	ldi	r25, 0x00	; 0
    4628:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)143, 0x00);
    462c:	60 e0       	ldi	r22, 0x00	; 0
    462e:	8f e8       	ldi	r24, 0x8F	; 143
    4630:	90 e0       	ldi	r25, 0x00	; 0
    4632:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)50, fourthScore);
    4636:	f6 01       	movw	r30, r12
    4638:	64 a5       	ldd	r22, Z+44	; 0x2c
    463a:	75 a5       	ldd	r23, Z+45	; 0x2d
    463c:	82 e3       	ldi	r24, 0x32	; 50
    463e:	90 e0       	ldi	r25, 0x00	; 0
    4640:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)150, fourthName1st);
    4644:	f6 01       	movw	r30, r12
    4646:	60 a5       	ldd	r22, Z+40	; 0x28
    4648:	86 e9       	ldi	r24, 0x96	; 150
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)151, fourthName2nd);
    4650:	f6 01       	movw	r30, r12
    4652:	61 a5       	ldd	r22, Z+41	; 0x29
    4654:	87 e9       	ldi	r24, 0x97	; 151
    4656:	90 e0       	ldi	r25, 0x00	; 0
    4658:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)152, fourthName3rd);
    465c:	f6 01       	movw	r30, r12
    465e:	62 a5       	ldd	r22, Z+42	; 0x2a
    4660:	88 e9       	ldi	r24, 0x98	; 152
    4662:	90 e0       	ldi	r25, 0x00	; 0
    4664:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)153, 0x00);
    4668:	60 e0       	ldi	r22, 0x00	; 0
    466a:	89 e9       	ldi	r24, 0x99	; 153
    466c:	90 e0       	ldi	r25, 0x00	; 0
    466e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    4672:	61 c0       	rjmp	.+194    	; 0x4736 <_ZN4Game3endEv+0x536>
    }

    else if (m_ScoreTemp > fourthScore)
    4674:	f6 01       	movw	r30, r12
    4676:	84 a5       	ldd	r24, Z+44	; 0x2c
    4678:	95 a5       	ldd	r25, Z+45	; 0x2d
    467a:	86 17       	cp	r24, r22
    467c:	97 07       	cpc	r25, r23
    467e:	d0 f5       	brcc	.+116    	; 0x46f4 <_ZN4Game3endEv+0x4f4>
    {
      eeprom_update_word((uint16_t*)40, m_ScoreTemp);
    4680:	88 e2       	ldi	r24, 0x28	; 40
    4682:	90 e0       	ldi	r25, 0x00	; 0
    4684:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)140, tempName1st);
    4688:	f6 01       	movw	r30, r12
    468a:	64 a9       	ldd	r22, Z+52	; 0x34
    468c:	8c e8       	ldi	r24, 0x8C	; 140
    468e:	90 e0       	ldi	r25, 0x00	; 0
    4690:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)141, tempName2nd);
    4694:	f6 01       	movw	r30, r12
    4696:	65 a9       	ldd	r22, Z+53	; 0x35
    4698:	8d e8       	ldi	r24, 0x8D	; 141
    469a:	90 e0       	ldi	r25, 0x00	; 0
    469c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)142, tempName3rd);
    46a0:	f6 01       	movw	r30, r12
    46a2:	66 a9       	ldd	r22, Z+54	; 0x36
    46a4:	8e e8       	ldi	r24, 0x8E	; 142
    46a6:	90 e0       	ldi	r25, 0x00	; 0
    46a8:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)143, 0x00);
    46ac:	60 e0       	ldi	r22, 0x00	; 0
    46ae:	8f e8       	ldi	r24, 0x8F	; 143
    46b0:	90 e0       	ldi	r25, 0x00	; 0
    46b2:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

      eeprom_update_word((uint16_t*)50, fourthScore);
    46b6:	f6 01       	movw	r30, r12
    46b8:	64 a5       	ldd	r22, Z+44	; 0x2c
    46ba:	75 a5       	ldd	r23, Z+45	; 0x2d
    46bc:	82 e3       	ldi	r24, 0x32	; 50
    46be:	90 e0       	ldi	r25, 0x00	; 0
    46c0:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)150, fourthName1st);
    46c4:	f6 01       	movw	r30, r12
    46c6:	60 a5       	ldd	r22, Z+40	; 0x28
    46c8:	86 e9       	ldi	r24, 0x96	; 150
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)151, fourthName2nd);
    46d0:	f6 01       	movw	r30, r12
    46d2:	61 a5       	ldd	r22, Z+41	; 0x29
    46d4:	87 e9       	ldi	r24, 0x97	; 151
    46d6:	90 e0       	ldi	r25, 0x00	; 0
    46d8:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)152, fourthName3rd);
    46dc:	f6 01       	movw	r30, r12
    46de:	62 a5       	ldd	r22, Z+42	; 0x2a
    46e0:	88 e9       	ldi	r24, 0x98	; 152
    46e2:	90 e0       	ldi	r25, 0x00	; 0
    46e4:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)153, 0x00);
    46e8:	60 e0       	ldi	r22, 0x00	; 0
    46ea:	89 e9       	ldi	r24, 0x99	; 153
    46ec:	90 e0       	ldi	r25, 0x00	; 0
    46ee:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    46f2:	21 c0       	rjmp	.+66     	; 0x4736 <_ZN4Game3endEv+0x536>
    }

    else if (m_ScoreTemp > fifthScore)
    46f4:	f6 01       	movw	r30, r12
    46f6:	82 a9       	ldd	r24, Z+50	; 0x32
    46f8:	93 a9       	ldd	r25, Z+51	; 0x33
    46fa:	86 17       	cp	r24, r22
    46fc:	97 07       	cpc	r25, r23
    46fe:	d8 f4       	brcc	.+54     	; 0x4736 <_ZN4Game3endEv+0x536>
    {
      eeprom_update_word((uint16_t*)50, m_ScoreTemp);
    4700:	82 e3       	ldi	r24, 0x32	; 50
    4702:	90 e0       	ldi	r25, 0x00	; 0
    4704:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
      eeprom_update_byte((uint8_t*)150, tempName1st);
    4708:	f6 01       	movw	r30, r12
    470a:	64 a9       	ldd	r22, Z+52	; 0x34
    470c:	86 e9       	ldi	r24, 0x96	; 150
    470e:	90 e0       	ldi	r25, 0x00	; 0
    4710:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)151, tempName2nd);
    4714:	f6 01       	movw	r30, r12
    4716:	65 a9       	ldd	r22, Z+53	; 0x35
    4718:	87 e9       	ldi	r24, 0x97	; 151
    471a:	90 e0       	ldi	r25, 0x00	; 0
    471c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)152, tempName3rd);
    4720:	f6 01       	movw	r30, r12
    4722:	66 a9       	ldd	r22, Z+54	; 0x36
    4724:	88 e9       	ldi	r24, 0x98	; 152
    4726:	90 e0       	ldi	r25, 0x00	; 0
    4728:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
      eeprom_update_byte((uint8_t*)153, 0x00);
    472c:	60 e0       	ldi	r22, 0x00	; 0
    472e:	89 e9       	ldi	r24, 0x99	; 153
    4730:	90 e0       	ldi	r25, 0x00	; 0
    4732:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    }
  }

}
    4736:	0f 90       	pop	r0
    4738:	df 91       	pop	r29
    473a:	cf 91       	pop	r28
    473c:	1f 91       	pop	r17
    473e:	0f 91       	pop	r16
    4740:	ff 90       	pop	r15
    4742:	ef 90       	pop	r14
    4744:	df 90       	pop	r13
    4746:	cf 90       	pop	r12
    4748:	08 95       	ret

0000474a <_ZN4Game10resetScoreEv>:
//----------------------------------------*/

void Game::resetScore(void)
{

  eeprom_update_word((uint16_t*)10, 1500);
    474a:	6c ed       	ldi	r22, 0xDC	; 220
    474c:	75 e0       	ldi	r23, 0x05	; 5
    474e:	8a e0       	ldi	r24, 0x0A	; 10
    4750:	90 e0       	ldi	r25, 0x00	; 0
    4752:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
  eeprom_update_word((uint16_t*)20, 800);
    4756:	60 e2       	ldi	r22, 0x20	; 32
    4758:	73 e0       	ldi	r23, 0x03	; 3
    475a:	84 e1       	ldi	r24, 0x14	; 20
    475c:	90 e0       	ldi	r25, 0x00	; 0
    475e:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
  eeprom_update_word((uint16_t*)30, 500);
    4762:	64 ef       	ldi	r22, 0xF4	; 244
    4764:	71 e0       	ldi	r23, 0x01	; 1
    4766:	8e e1       	ldi	r24, 0x1E	; 30
    4768:	90 e0       	ldi	r25, 0x00	; 0
    476a:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
  eeprom_update_word((uint16_t*)40, 300);
    476e:	6c e2       	ldi	r22, 0x2C	; 44
    4770:	71 e0       	ldi	r23, 0x01	; 1
    4772:	88 e2       	ldi	r24, 0x28	; 40
    4774:	90 e0       	ldi	r25, 0x00	; 0
    4776:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>
  eeprom_update_word((uint16_t*)50, 100);
    477a:	64 e6       	ldi	r22, 0x64	; 100
    477c:	70 e0       	ldi	r23, 0x00	; 0
    477e:	82 e3       	ldi	r24, 0x32	; 50
    4780:	90 e0       	ldi	r25, 0x00	; 0
    4782:	0e 94 39 30 	call	0x6072	; 0x6072 <eeprom_update_word>

  eeprom_update_byte((uint8_t*)110, 0x4B);
    4786:	6b e4       	ldi	r22, 0x4B	; 75
    4788:	8e e6       	ldi	r24, 0x6E	; 110
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)111, 0x50);
    4790:	60 e5       	ldi	r22, 0x50	; 80
    4792:	8f e6       	ldi	r24, 0x6F	; 111
    4794:	90 e0       	ldi	r25, 0x00	; 0
    4796:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)112, 0x4F);
    479a:	6f e4       	ldi	r22, 0x4F	; 79
    479c:	80 e7       	ldi	r24, 0x70	; 112
    479e:	90 e0       	ldi	r25, 0x00	; 0
    47a0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)113, 0x00);
    47a4:	60 e0       	ldi	r22, 0x00	; 0
    47a6:	81 e7       	ldi	r24, 0x71	; 113
    47a8:	90 e0       	ldi	r25, 0x00	; 0
    47aa:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    
  eeprom_update_byte((uint8_t*)120, 0x41);
    47ae:	61 e4       	ldi	r22, 0x41	; 65
    47b0:	88 e7       	ldi	r24, 0x78	; 120
    47b2:	90 e0       	ldi	r25, 0x00	; 0
    47b4:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)121, 0x42);
    47b8:	62 e4       	ldi	r22, 0x42	; 66
    47ba:	89 e7       	ldi	r24, 0x79	; 121
    47bc:	90 e0       	ldi	r25, 0x00	; 0
    47be:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)122, 0x43);
    47c2:	63 e4       	ldi	r22, 0x43	; 67
    47c4:	8a e7       	ldi	r24, 0x7A	; 122
    47c6:	90 e0       	ldi	r25, 0x00	; 0
    47c8:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)123, 0x00);
    47cc:	60 e0       	ldi	r22, 0x00	; 0
    47ce:	8b e7       	ldi	r24, 0x7B	; 123
    47d0:	90 e0       	ldi	r25, 0x00	; 0
    47d2:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    
  eeprom_update_byte((uint8_t*)130, 0x44);
    47d6:	64 e4       	ldi	r22, 0x44	; 68
    47d8:	82 e8       	ldi	r24, 0x82	; 130
    47da:	90 e0       	ldi	r25, 0x00	; 0
    47dc:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)131, 0x45);
    47e0:	65 e4       	ldi	r22, 0x45	; 69
    47e2:	83 e8       	ldi	r24, 0x83	; 131
    47e4:	90 e0       	ldi	r25, 0x00	; 0
    47e6:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)132, 0x46);
    47ea:	66 e4       	ldi	r22, 0x46	; 70
    47ec:	84 e8       	ldi	r24, 0x84	; 132
    47ee:	90 e0       	ldi	r25, 0x00	; 0
    47f0:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)133, 0x00);
    47f4:	60 e0       	ldi	r22, 0x00	; 0
    47f6:	85 e8       	ldi	r24, 0x85	; 133
    47f8:	90 e0       	ldi	r25, 0x00	; 0
    47fa:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    
  eeprom_update_byte((uint8_t*)140, 0x47);
    47fe:	67 e4       	ldi	r22, 0x47	; 71
    4800:	8c e8       	ldi	r24, 0x8C	; 140
    4802:	90 e0       	ldi	r25, 0x00	; 0
    4804:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)141, 0x48);
    4808:	68 e4       	ldi	r22, 0x48	; 72
    480a:	8d e8       	ldi	r24, 0x8D	; 141
    480c:	90 e0       	ldi	r25, 0x00	; 0
    480e:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)142, 0x49);
    4812:	69 e4       	ldi	r22, 0x49	; 73
    4814:	8e e8       	ldi	r24, 0x8E	; 142
    4816:	90 e0       	ldi	r25, 0x00	; 0
    4818:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)143, 0x00);
    481c:	60 e0       	ldi	r22, 0x00	; 0
    481e:	8f e8       	ldi	r24, 0x8F	; 143
    4820:	90 e0       	ldi	r25, 0x00	; 0
    4822:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    
  eeprom_update_byte((uint8_t*)150, 0x4A);
    4826:	6a e4       	ldi	r22, 0x4A	; 74
    4828:	86 e9       	ldi	r24, 0x96	; 150
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)151, 0x4B);
    4830:	6b e4       	ldi	r22, 0x4B	; 75
    4832:	87 e9       	ldi	r24, 0x97	; 151
    4834:	90 e0       	ldi	r25, 0x00	; 0
    4836:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)152, 0x4C);
    483a:	6c e4       	ldi	r22, 0x4C	; 76
    483c:	88 e9       	ldi	r24, 0x98	; 152
    483e:	90 e0       	ldi	r25, 0x00	; 0
    4840:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
  eeprom_update_byte((uint8_t*)153, 0x00);
    4844:	60 e0       	ldi	r22, 0x00	; 0
    4846:	89 e9       	ldi	r24, 0x99	; 153
    4848:	90 e0       	ldi	r25, 0x00	; 0
    484a:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>

  eeprom_update_byte((uint8_t*)200, 0x01);
    484e:	61 e0       	ldi	r22, 0x01	; 1
    4850:	88 ec       	ldi	r24, 0xC8	; 200
    4852:	90 e0       	ldi	r25, 0x00	; 0
    4854:	0e 94 27 30 	call	0x604e	; 0x604e <eeprom_update_byte>
    4858:	08 95       	ret

0000485a <_ZN4Game9readScoreEv>:
/*----------------------------------------//
                Read Score
//----------------------------------------*/

void Game::readScore(void)
{
    485a:	cf 93       	push	r28
    485c:	df 93       	push	r29
    485e:	ec 01       	movw	r28, r24

  firstScore = eeprom_read_word((uint16_t*)10);
    4860:	8a e0       	ldi	r24, 0x0A	; 10
    4862:	90 e0       	ldi	r25, 0x00	; 0
    4864:	0e 94 21 30 	call	0x6042	; 0x6042 <eeprom_read_word>
    4868:	9b 8f       	std	Y+27, r25	; 0x1b
    486a:	8a 8f       	std	Y+26, r24	; 0x1a
  secondScore = eeprom_read_word((uint16_t*)20);
    486c:	84 e1       	ldi	r24, 0x14	; 20
    486e:	90 e0       	ldi	r25, 0x00	; 0
    4870:	0e 94 21 30 	call	0x6042	; 0x6042 <eeprom_read_word>
    4874:	99 a3       	std	Y+33, r25	; 0x21
    4876:	88 a3       	std	Y+32, r24	; 0x20
  thirdScore = eeprom_read_word((uint16_t*)30);
    4878:	8e e1       	ldi	r24, 0x1E	; 30
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	0e 94 21 30 	call	0x6042	; 0x6042 <eeprom_read_word>
    4880:	9f a3       	std	Y+39, r25	; 0x27
    4882:	8e a3       	std	Y+38, r24	; 0x26
  fourthScore = eeprom_read_word((uint16_t*)40);
    4884:	88 e2       	ldi	r24, 0x28	; 40
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	0e 94 21 30 	call	0x6042	; 0x6042 <eeprom_read_word>
    488c:	9d a7       	std	Y+45, r25	; 0x2d
    488e:	8c a7       	std	Y+44, r24	; 0x2c
  fifthScore = eeprom_read_word((uint16_t*)50);
    4890:	82 e3       	ldi	r24, 0x32	; 50
    4892:	90 e0       	ldi	r25, 0x00	; 0
    4894:	0e 94 21 30 	call	0x6042	; 0x6042 <eeprom_read_word>
    4898:	9b ab       	std	Y+51, r25	; 0x33
    489a:	8a ab       	std	Y+50, r24	; 0x32

  firstName1st = eeprom_read_byte((uint8_t*)110);
    489c:	8e e6       	ldi	r24, 0x6E	; 110
    489e:	90 e0       	ldi	r25, 0x00	; 0
    48a0:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48a4:	8e 8b       	std	Y+22, r24	; 0x16
  firstName2nd = eeprom_read_byte((uint8_t*)111);
    48a6:	8f e6       	ldi	r24, 0x6F	; 111
    48a8:	90 e0       	ldi	r25, 0x00	; 0
    48aa:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48ae:	8f 8b       	std	Y+23, r24	; 0x17
  firstName3rd = eeprom_read_byte((uint8_t*)112);
    48b0:	80 e7       	ldi	r24, 0x70	; 112
    48b2:	90 e0       	ldi	r25, 0x00	; 0
    48b4:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48b8:	88 8f       	std	Y+24, r24	; 0x18
  firstMode = eeprom_read_byte((uint8_t*)113);
    48ba:	81 e7       	ldi	r24, 0x71	; 113
    48bc:	90 e0       	ldi	r25, 0x00	; 0
    48be:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48c2:	89 8f       	std	Y+25, r24	; 0x19

  secondName1st = eeprom_read_byte((uint8_t*)120);
    48c4:	88 e7       	ldi	r24, 0x78	; 120
    48c6:	90 e0       	ldi	r25, 0x00	; 0
    48c8:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48cc:	8c 8f       	std	Y+28, r24	; 0x1c
  secondName2nd = eeprom_read_byte((uint8_t*)121);
    48ce:	89 e7       	ldi	r24, 0x79	; 121
    48d0:	90 e0       	ldi	r25, 0x00	; 0
    48d2:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48d6:	8d 8f       	std	Y+29, r24	; 0x1d
  secondName3rd = eeprom_read_byte((uint8_t*)122);
    48d8:	8a e7       	ldi	r24, 0x7A	; 122
    48da:	90 e0       	ldi	r25, 0x00	; 0
    48dc:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48e0:	8e 8f       	std	Y+30, r24	; 0x1e
  secondMode = eeprom_read_byte((uint8_t*)123);
    48e2:	8b e7       	ldi	r24, 0x7B	; 123
    48e4:	90 e0       	ldi	r25, 0x00	; 0
    48e6:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48ea:	8f 8f       	std	Y+31, r24	; 0x1f

  thirdName1st = eeprom_read_byte((uint8_t*)130);
    48ec:	82 e8       	ldi	r24, 0x82	; 130
    48ee:	90 e0       	ldi	r25, 0x00	; 0
    48f0:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48f4:	8a a3       	std	Y+34, r24	; 0x22
  thirdName2nd = eeprom_read_byte((uint8_t*)131);
    48f6:	83 e8       	ldi	r24, 0x83	; 131
    48f8:	90 e0       	ldi	r25, 0x00	; 0
    48fa:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    48fe:	8b a3       	std	Y+35, r24	; 0x23
  thirdName3rd = eeprom_read_byte((uint8_t*)132);
    4900:	84 e8       	ldi	r24, 0x84	; 132
    4902:	90 e0       	ldi	r25, 0x00	; 0
    4904:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4908:	8c a3       	std	Y+36, r24	; 0x24
  thirdMode = eeprom_read_byte((uint8_t*)133);
    490a:	85 e8       	ldi	r24, 0x85	; 133
    490c:	90 e0       	ldi	r25, 0x00	; 0
    490e:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4912:	8d a3       	std	Y+37, r24	; 0x25

  fourthName1st = eeprom_read_byte((uint8_t*)140);
    4914:	8c e8       	ldi	r24, 0x8C	; 140
    4916:	90 e0       	ldi	r25, 0x00	; 0
    4918:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    491c:	88 a7       	std	Y+40, r24	; 0x28
  fourthName2nd = eeprom_read_byte((uint8_t*)141);
    491e:	8d e8       	ldi	r24, 0x8D	; 141
    4920:	90 e0       	ldi	r25, 0x00	; 0
    4922:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4926:	89 a7       	std	Y+41, r24	; 0x29
  fourthName3rd = eeprom_read_byte((uint8_t*)142);
    4928:	8e e8       	ldi	r24, 0x8E	; 142
    492a:	90 e0       	ldi	r25, 0x00	; 0
    492c:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4930:	8a a7       	std	Y+42, r24	; 0x2a
  fourthMode = eeprom_read_byte((uint8_t*)143);
    4932:	8f e8       	ldi	r24, 0x8F	; 143
    4934:	90 e0       	ldi	r25, 0x00	; 0
    4936:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    493a:	8b a7       	std	Y+43, r24	; 0x2b

  fifthName1st = eeprom_read_byte((uint8_t*)150);
    493c:	86 e9       	ldi	r24, 0x96	; 150
    493e:	90 e0       	ldi	r25, 0x00	; 0
    4940:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4944:	8e a7       	std	Y+46, r24	; 0x2e
  fifthName2nd = eeprom_read_byte((uint8_t*)151);
    4946:	87 e9       	ldi	r24, 0x97	; 151
    4948:	90 e0       	ldi	r25, 0x00	; 0
    494a:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    494e:	8f a7       	std	Y+47, r24	; 0x2f
  fifthName3rd = eeprom_read_byte((uint8_t*)152);
    4950:	88 e9       	ldi	r24, 0x98	; 152
    4952:	90 e0       	ldi	r25, 0x00	; 0
    4954:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4958:	88 ab       	std	Y+48, r24	; 0x30
  fifthMode = eeprom_read_byte((uint8_t*)153);
    495a:	89 e9       	ldi	r24, 0x99	; 153
    495c:	90 e0       	ldi	r25, 0x00	; 0
    495e:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    4962:	89 ab       	std	Y+49, r24	; 0x31

  checkReset = eeprom_read_byte((uint8_t*)200);
    4964:	88 ec       	ldi	r24, 0xC8	; 200
    4966:	90 e0       	ldi	r25, 0x00	; 0
    4968:	0e 94 19 30 	call	0x6032	; 0x6032 <eeprom_read_byte>
    496c:	88 af       	std	Y+56, r24	; 0x38

    496e:	df 91       	pop	r29
    4970:	cf 91       	pop	r28
    4972:	08 95       	ret

00004974 <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game title
//----------------------------------------*/

void Game::title(void)
{
    4974:	6f 92       	push	r6
    4976:	7f 92       	push	r7
    4978:	8f 92       	push	r8
    497a:	9f 92       	push	r9
    497c:	af 92       	push	r10
    497e:	bf 92       	push	r11
    4980:	cf 92       	push	r12
    4982:	df 92       	push	r13
    4984:	ef 92       	push	r14
    4986:	ff 92       	push	r15
    4988:	0f 93       	push	r16
    498a:	1f 93       	push	r17
    498c:	cf 93       	push	r28
    498e:	df 93       	push	r29
    4990:	1f 92       	push	r1
    4992:	cd b7       	in	r28, 0x3d	; 61
    4994:	de b7       	in	r29, 0x3e	; 62
    4996:	3c 01       	movw	r6, r24

  Audio audio;

  if (m_IsReset == false)
    4998:	fc 01       	movw	r30, r24
    499a:	82 89       	ldd	r24, Z+18	; 0x12
    499c:	81 11       	cpse	r24, r1
    499e:	68 c0       	rjmp	.+208    	; 0x4a70 <_ZN4Game5titleEv+0xfc>
  {
    begin();
    49a0:	c3 01       	movw	r24, r6
    49a2:	0e 94 82 2b 	call	0x5704	; 0x5704 <_ZN3TFT5beginEv>
    setRotation(0);
    49a6:	60 e0       	ldi	r22, 0x00	; 0
    49a8:	c3 01       	movw	r24, r6
    49aa:	0e 94 d7 2b 	call	0x57ae	; 0x57ae <_ZN3TFT11setRotationEa>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
    49ae:	81 e4       	ldi	r24, 0x41	; 65
    49b0:	97 e1       	ldi	r25, 0x17	; 23
    49b2:	f3 01       	movw	r30, r6
    49b4:	95 83       	std	Z+5, r25	; 0x05
    49b6:	84 83       	std	Z+4, r24	; 0x04
  void setColor(uint16_t color0, uint16_t color1) { m_Background = color0; m_Colored = color1; }
    49b8:	17 82       	std	Z+7, r1	; 0x07
    49ba:	16 82       	std	Z+6, r1	; 0x06
    49bc:	8f ef       	ldi	r24, 0xFF	; 255
    49be:	9f ef       	ldi	r25, 0xFF	; 255
    49c0:	91 87       	std	Z+9, r25	; 0x09
    49c2:	80 87       	std	Z+8, r24	; 0x08
    setFont(fontASCII);
    setColor(BLACK, WHITE);

    fillScreen(WHITE);
    49c4:	6f ef       	ldi	r22, 0xFF	; 255
    49c6:	7f ef       	ldi	r23, 0xFF	; 255
    49c8:	c3 01       	movw	r24, r6
    49ca:	0e 94 33 2c 	call	0x5866	; 0x5866 <_ZN3TFT10fillScreenEj>
    draw(72, 100, 176, 40, logoBitmap, BLACK, BLACK, RED, WHITE);
    49ce:	8f ef       	ldi	r24, 0xFF	; 255
    49d0:	8f 93       	push	r24
    49d2:	8f 93       	push	r24
    49d4:	0f 2e       	mov	r0, r31
    49d6:	81 2c       	mov	r8, r1
    49d8:	f8 ef       	ldi	r31, 0xF8	; 248
    49da:	9f 2e       	mov	r9, r31
    49dc:	f0 2d       	mov	r31, r0
    49de:	a1 2c       	mov	r10, r1
    49e0:	b1 2c       	mov	r11, r1
    49e2:	c1 2c       	mov	r12, r1
    49e4:	d1 2c       	mov	r13, r1
    49e6:	0f 2e       	mov	r0, r31
    49e8:	f9 ec       	ldi	r31, 0xC9	; 201
    49ea:	ef 2e       	mov	r14, r31
    49ec:	f4 e1       	ldi	r31, 0x14	; 20
    49ee:	ff 2e       	mov	r15, r31
    49f0:	f0 2d       	mov	r31, r0
    49f2:	08 e2       	ldi	r16, 0x28	; 40
    49f4:	10 e0       	ldi	r17, 0x00	; 0
    49f6:	20 eb       	ldi	r18, 0xB0	; 176
    49f8:	30 e0       	ldi	r19, 0x00	; 0
    49fa:	44 e6       	ldi	r20, 0x64	; 100
    49fc:	50 e0       	ldi	r21, 0x00	; 0
    49fe:	68 e4       	ldi	r22, 0x48	; 72
    4a00:	70 e0       	ldi	r23, 0x00	; 0
    4a02:	c3 01       	movw	r24, r6
    4a04:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>

    audio.setTonicSolFa(SO);
    4a08:	64 e0       	ldi	r22, 0x04	; 4
    4a0a:	ce 01       	movw	r24, r28
    4a0c:	01 96       	adiw	r24, 0x01	; 1
    4a0e:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    audio.setSound(ON);
    4a12:	61 e0       	ldi	r22, 0x01	; 1
    4a14:	ce 01       	movw	r24, r28
    4a16:	01 96       	adiw	r24, 0x01	; 1
    4a18:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    4a1c:	ff e7       	ldi	r31, 0x7F	; 127
    4a1e:	2a e1       	ldi	r18, 0x1A	; 26
    4a20:	86 e0       	ldi	r24, 0x06	; 6
    4a22:	f1 50       	subi	r31, 0x01	; 1
    4a24:	20 40       	sbci	r18, 0x00	; 0
    4a26:	80 40       	sbci	r24, 0x00	; 0
    4a28:	e1 f7       	brne	.-8      	; 0x4a22 <_ZN4Game5titleEv+0xae>
    4a2a:	00 c0       	rjmp	.+0      	; 0x4a2c <_ZN4Game5titleEv+0xb8>
    4a2c:	00 00       	nop
    _delay_ms(125);
    audio.setTonicSolFa(SI);
    4a2e:	66 e0       	ldi	r22, 0x06	; 6
    4a30:	ce 01       	movw	r24, r28
    4a32:	01 96       	adiw	r24, 0x01	; 1
    4a34:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN5Audio13setTonicSolFaEa>
    4a38:	9f ef       	ldi	r25, 0xFF	; 255
    4a3a:	e9 e6       	ldi	r30, 0x69	; 105
    4a3c:	f8 e1       	ldi	r31, 0x18	; 24
    4a3e:	91 50       	subi	r25, 0x01	; 1
    4a40:	e0 40       	sbci	r30, 0x00	; 0
    4a42:	f0 40       	sbci	r31, 0x00	; 0
    4a44:	e1 f7       	brne	.-8      	; 0x4a3e <_ZN4Game5titleEv+0xca>
    4a46:	00 c0       	rjmp	.+0      	; 0x4a48 <_ZN4Game5titleEv+0xd4>
    4a48:	00 00       	nop
    _delay_ms(500);
    audio.setSound(OFF);
    4a4a:	60 e0       	ldi	r22, 0x00	; 0
    4a4c:	ce 01       	movw	r24, r28
    4a4e:	01 96       	adiw	r24, 0x01	; 1
    4a50:	0e 94 1e 11 	call	0x223c	; 0x223c <_ZN5Audio8setSoundEb>
    4a54:	2f ef       	ldi	r18, 0xFF	; 255
    4a56:	88 e0       	ldi	r24, 0x08	; 8
    4a58:	9d e3       	ldi	r25, 0x3D	; 61
    4a5a:	21 50       	subi	r18, 0x01	; 1
    4a5c:	80 40       	sbci	r24, 0x00	; 0
    4a5e:	90 40       	sbci	r25, 0x00	; 0
    4a60:	e1 f7       	brne	.-8      	; 0x4a5a <_ZN4Game5titleEv+0xe6>
    4a62:	00 c0       	rjmp	.+0      	; 0x4a64 <_ZN4Game5titleEv+0xf0>
    4a64:	00 00       	nop

    _delay_ms(1250);
    m_IsReset = true;
    4a66:	81 e0       	ldi	r24, 0x01	; 1
    4a68:	f3 01       	movw	r30, r6
    4a6a:	82 8b       	std	Z+18, r24	; 0x12
    4a6c:	0f 90       	pop	r0
    4a6e:	0f 90       	pop	r0
  }

  readScore();
    4a70:	c3 01       	movw	r24, r6
    4a72:	0e 94 2d 24 	call	0x485a	; 0x485a <_ZN4Game9readScoreEv>

  if (checkReset != 0x01)
    4a76:	f3 01       	movw	r30, r6
    4a78:	80 ad       	ldd	r24, Z+56	; 0x38
    4a7a:	81 30       	cpi	r24, 0x01	; 1
    4a7c:	31 f0       	breq	.+12     	; 0x4a8a <_ZN4Game5titleEv+0x116>
  {
    resetScore();
    4a7e:	c3 01       	movw	r24, r6
    4a80:	0e 94 a5 23 	call	0x474a	; 0x474a <_ZN4Game10resetScoreEv>
    readScore();
    4a84:	c3 01       	movw	r24, r6
    4a86:	0e 94 2d 24 	call	0x485a	; 0x485a <_ZN4Game9readScoreEv>
  }

  fillScreen(BLACK);
    4a8a:	60 e0       	ldi	r22, 0x00	; 0
    4a8c:	70 e0       	ldi	r23, 0x00	; 0
    4a8e:	c3 01       	movw	r24, r6
    4a90:	0e 94 33 2c 	call	0x5866	; 0x5866 <_ZN3TFT10fillScreenEj>
  draw(0, 16, 320, 224, titleMenu, BLACK, MAROON, RED, WHITE);
    4a94:	8f ef       	ldi	r24, 0xFF	; 255
    4a96:	8f 93       	push	r24
    4a98:	8f 93       	push	r24
    4a9a:	0f 2e       	mov	r0, r31
    4a9c:	81 2c       	mov	r8, r1
    4a9e:	f8 ef       	ldi	r31, 0xF8	; 248
    4aa0:	9f 2e       	mov	r9, r31
    4aa2:	f0 2d       	mov	r31, r0
    4aa4:	0f 2e       	mov	r0, r31
    4aa6:	a1 2c       	mov	r10, r1
    4aa8:	f8 e7       	ldi	r31, 0x78	; 120
    4aaa:	bf 2e       	mov	r11, r31
    4aac:	f0 2d       	mov	r31, r0
    4aae:	c1 2c       	mov	r12, r1
    4ab0:	d1 2c       	mov	r13, r1
    4ab2:	0f 2e       	mov	r0, r31
    4ab4:	f9 e4       	ldi	r31, 0x49	; 73
    4ab6:	ef 2e       	mov	r14, r31
    4ab8:	f3 e0       	ldi	r31, 0x03	; 3
    4aba:	ff 2e       	mov	r15, r31
    4abc:	f0 2d       	mov	r31, r0
    4abe:	00 ee       	ldi	r16, 0xE0	; 224
    4ac0:	10 e0       	ldi	r17, 0x00	; 0
    4ac2:	20 e4       	ldi	r18, 0x40	; 64
    4ac4:	31 e0       	ldi	r19, 0x01	; 1
    4ac6:	40 e1       	ldi	r20, 0x10	; 16
    4ac8:	50 e0       	ldi	r21, 0x00	; 0
    4aca:	60 e0       	ldi	r22, 0x00	; 0
    4acc:	70 e0       	ldi	r23, 0x00	; 0
    4ace:	c3 01       	movw	r24, r6
    4ad0:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    4ad4:	ff ef       	ldi	r31, 0xFF	; 255
    4ad6:	21 ee       	ldi	r18, 0xE1	; 225
    4ad8:	84 e0       	ldi	r24, 0x04	; 4
    4ada:	f1 50       	subi	r31, 0x01	; 1
    4adc:	20 40       	sbci	r18, 0x00	; 0
    4ade:	80 40       	sbci	r24, 0x00	; 0
    4ae0:	e1 f7       	brne	.-8      	; 0x4ada <_ZN4Game5titleEv+0x166>
    4ae2:	00 c0       	rjmp	.+0      	; 0x4ae4 <_ZN4Game5titleEv+0x170>
    4ae4:	00 00       	nop
  _delay_ms(100);

  SW::init();
    4ae6:	0e 94 4d 2b 	call	0x569a	; 0x569a <_ZN2SW4initEv>
  Frame::init();
    4aea:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <_ZN5Frame4initEv>
  void nomalTitle(void);
  void titleLoop(void);
  void startLoop(void);
  void endLoop(void);

  void init(void) { m_Cursor = 0; m_Cache = 0; m_Temp = 0; m_ScoreTemp = 0; Frame::scoreTime = 0;
    4aee:	f3 01       	movw	r30, r6
    4af0:	12 86       	std	Z+10, r1	; 0x0a
    4af2:	13 86       	std	Z+11, r1	; 0x0b
    4af4:	14 86       	std	Z+12, r1	; 0x0c
    4af6:	16 86       	std	Z+14, r1	; 0x0e
    4af8:	15 86       	std	Z+13, r1	; 0x0d
    4afa:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <_ZN5Frame9scoreTimeE+0x1>
    4afe:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <_ZN5Frame9scoreTimeE>
    m_IsReset = false; m_IsHighSpeed = false; m_IsDrawed = false; m_IsDrawedScore = false;  }
    4b02:	12 8a       	std	Z+18, r1	; 0x12
    4b04:	13 8a       	std	Z+19, r1	; 0x13
    4b06:	14 8a       	std	Z+20, r1	; 0x14
    4b08:	15 8a       	std	Z+21, r1	; 0x15
  Game::init();
  titleLoop();
    4b0a:	c3 01       	movw	r24, r6
    4b0c:	0e 94 8b 17 	call	0x2f16	; 0x2f16 <_ZN4Game9titleLoopEv>

}
    4b10:	0f 90       	pop	r0
    4b12:	0f 90       	pop	r0
    4b14:	0f 90       	pop	r0
    4b16:	df 91       	pop	r29
    4b18:	cf 91       	pop	r28
    4b1a:	1f 91       	pop	r17
    4b1c:	0f 91       	pop	r16
    4b1e:	ff 90       	pop	r15
    4b20:	ef 90       	pop	r14
    4b22:	df 90       	pop	r13
    4b24:	cf 90       	pop	r12
    4b26:	bf 90       	pop	r11
    4b28:	af 90       	pop	r10
    4b2a:	9f 90       	pop	r9
    4b2c:	8f 90       	pop	r8
    4b2e:	7f 90       	pop	r7
    4b30:	6f 90       	pop	r6
    4b32:	08 95       	ret

00004b34 <_ZN6Object4ballEv>:
/*----------------------------------------//
                Object Ball
//----------------------------------------*/

void Object::ball(void)
{
    4b34:	8f 92       	push	r8
    4b36:	9f 92       	push	r9
    4b38:	af 92       	push	r10
    4b3a:	bf 92       	push	r11
    4b3c:	cf 92       	push	r12
    4b3e:	df 92       	push	r13
    4b40:	ef 92       	push	r14
    4b42:	ff 92       	push	r15
    4b44:	0f 93       	push	r16
    4b46:	1f 93       	push	r17
    4b48:	cf 93       	push	r28
    4b4a:	df 93       	push	r29
    4b4c:	ec 01       	movw	r28, r24

  if (m_MoveDistance < 304)
    4b4e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4b50:	98 89       	ldd	r25, Y+16	; 0x10
    4b52:	80 33       	cpi	r24, 0x30	; 48
    4b54:	21 e0       	ldi	r18, 0x01	; 1
    4b56:	92 07       	cpc	r25, r18
    4b58:	e4 f5       	brge	.+120    	; 0x4bd2 <_ZN6Object4ballEv+0x9e>
  {
    xPosition = 304 - m_MoveDistance;
    4b5a:	60 e3       	ldi	r22, 0x30	; 48
    4b5c:	71 e0       	ldi	r23, 0x01	; 1
    4b5e:	68 1b       	sub	r22, r24
    4b60:	79 0b       	sbc	r23, r25
    4b62:	7f 8b       	std	Y+23, r23	; 0x17
    4b64:	6e 8b       	std	Y+22, r22	; 0x16
    draw(304 - m_MoveDistance, 164, 16, 16, ballTile, BLACK, DARKGRAY, GRAY, WHITE);
    4b66:	8f ef       	ldi	r24, 0xFF	; 255
    4b68:	8f 93       	push	r24
    4b6a:	8f 93       	push	r24
    4b6c:	0f 2e       	mov	r0, r31
    4b6e:	ff ee       	ldi	r31, 0xEF	; 239
    4b70:	8f 2e       	mov	r8, r31
    4b72:	fb e7       	ldi	r31, 0x7B	; 123
    4b74:	9f 2e       	mov	r9, r31
    4b76:	f0 2d       	mov	r31, r0
    4b78:	0f 2e       	mov	r0, r31
    4b7a:	f7 ee       	ldi	r31, 0xE7	; 231
    4b7c:	af 2e       	mov	r10, r31
    4b7e:	f9 e3       	ldi	r31, 0x39	; 57
    4b80:	bf 2e       	mov	r11, r31
    4b82:	f0 2d       	mov	r31, r0
    4b84:	c1 2c       	mov	r12, r1
    4b86:	d1 2c       	mov	r13, r1
    4b88:	0f 2e       	mov	r0, r31
    4b8a:	f1 e7       	ldi	r31, 0x71	; 113
    4b8c:	ef 2e       	mov	r14, r31
    4b8e:	fa e1       	ldi	r31, 0x1A	; 26
    4b90:	ff 2e       	mov	r15, r31
    4b92:	f0 2d       	mov	r31, r0
    4b94:	00 e1       	ldi	r16, 0x10	; 16
    4b96:	10 e0       	ldi	r17, 0x00	; 0
    4b98:	20 e1       	ldi	r18, 0x10	; 16
    4b9a:	30 e0       	ldi	r19, 0x00	; 0
    4b9c:	44 ea       	ldi	r20, 0xA4	; 164
    4b9e:	50 e0       	ldi	r21, 0x00	; 0
    4ba0:	ce 01       	movw	r24, r28
    4ba2:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    clear(320 - m_MoveDistance, 164, m_MoveSpeed + 2, 16, BLACK);
    4ba6:	2e 85       	ldd	r18, Y+14	; 0x0e
    4ba8:	02 2e       	mov	r0, r18
    4baa:	00 0c       	add	r0, r0
    4bac:	33 0b       	sbc	r19, r19
    4bae:	2e 5f       	subi	r18, 0xFE	; 254
    4bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    4bb2:	8f 85       	ldd	r24, Y+15	; 0x0f
    4bb4:	98 89       	ldd	r25, Y+16	; 0x10
    4bb6:	60 e4       	ldi	r22, 0x40	; 64
    4bb8:	71 e0       	ldi	r23, 0x01	; 1
    4bba:	68 1b       	sub	r22, r24
    4bbc:	79 0b       	sbc	r23, r25
    4bbe:	e1 2c       	mov	r14, r1
    4bc0:	f1 2c       	mov	r15, r1
    4bc2:	44 ea       	ldi	r20, 0xA4	; 164
    4bc4:	50 e0       	ldi	r21, 0x00	; 0
    4bc6:	ce 01       	movw	r24, r28
    4bc8:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    4bcc:	0f 90       	pop	r0
    4bce:	0f 90       	pop	r0
    4bd0:	0e c0       	rjmp	.+28     	; 0x4bee <_ZN6Object4ballEv+0xba>
  }

  else
  {
    clear(0, 164, 24, 16, BLACK);
    4bd2:	e1 2c       	mov	r14, r1
    4bd4:	f1 2c       	mov	r15, r1
    4bd6:	00 e1       	ldi	r16, 0x10	; 16
    4bd8:	10 e0       	ldi	r17, 0x00	; 0
    4bda:	28 e1       	ldi	r18, 0x18	; 24
    4bdc:	30 e0       	ldi	r19, 0x00	; 0
    4bde:	44 ea       	ldi	r20, 0xA4	; 164
    4be0:	50 e0       	ldi	r21, 0x00	; 0
    4be2:	60 e0       	ldi	r22, 0x00	; 0
    4be4:	70 e0       	ldi	r23, 0x00	; 0
    4be6:	ce 01       	movw	r24, r28
    4be8:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    isRolling = false;
    4bec:	18 8e       	std	Y+24, r1	; 0x18
  }

}
    4bee:	df 91       	pop	r29
    4bf0:	cf 91       	pop	r28
    4bf2:	1f 91       	pop	r17
    4bf4:	0f 91       	pop	r16
    4bf6:	ff 90       	pop	r15
    4bf8:	ef 90       	pop	r14
    4bfa:	df 90       	pop	r13
    4bfc:	cf 90       	pop	r12
    4bfe:	bf 90       	pop	r11
    4c00:	af 90       	pop	r10
    4c02:	9f 90       	pop	r9
    4c04:	8f 90       	pop	r8
    4c06:	08 95       	ret

00004c08 <_ZN6Object4bombEv>:
/*----------------------------------------//
                Object Bomb
//----------------------------------------*/

void Object::bomb(void)
{
    4c08:	8f 92       	push	r8
    4c0a:	9f 92       	push	r9
    4c0c:	af 92       	push	r10
    4c0e:	bf 92       	push	r11
    4c10:	cf 92       	push	r12
    4c12:	df 92       	push	r13
    4c14:	ef 92       	push	r14
    4c16:	ff 92       	push	r15
    4c18:	0f 93       	push	r16
    4c1a:	1f 93       	push	r17
    4c1c:	cf 93       	push	r28
    4c1e:	df 93       	push	r29
    4c20:	ec 01       	movw	r28, r24

  if (m_MoveDistance < 304)
    4c22:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c24:	98 89       	ldd	r25, Y+16	; 0x10
    4c26:	80 33       	cpi	r24, 0x30	; 48
    4c28:	21 e0       	ldi	r18, 0x01	; 1
    4c2a:	92 07       	cpc	r25, r18
    4c2c:	e4 f5       	brge	.+120    	; 0x4ca6 <_ZN6Object4bombEv+0x9e>
  {
    xPosition = 304 - m_MoveDistance;
    4c2e:	60 e3       	ldi	r22, 0x30	; 48
    4c30:	71 e0       	ldi	r23, 0x01	; 1
    4c32:	68 1b       	sub	r22, r24
    4c34:	79 0b       	sbc	r23, r25
    4c36:	7f 8b       	std	Y+23, r23	; 0x17
    4c38:	6e 8b       	std	Y+22, r22	; 0x16
    draw(304 - m_MoveDistance, 164, 16, 16, bombTile, BLACK, DARKGRAY, GRAY, WHITE);
    4c3a:	8f ef       	ldi	r24, 0xFF	; 255
    4c3c:	8f 93       	push	r24
    4c3e:	8f 93       	push	r24
    4c40:	0f 2e       	mov	r0, r31
    4c42:	ff ee       	ldi	r31, 0xEF	; 239
    4c44:	8f 2e       	mov	r8, r31
    4c46:	fb e7       	ldi	r31, 0x7B	; 123
    4c48:	9f 2e       	mov	r9, r31
    4c4a:	f0 2d       	mov	r31, r0
    4c4c:	0f 2e       	mov	r0, r31
    4c4e:	f7 ee       	ldi	r31, 0xE7	; 231
    4c50:	af 2e       	mov	r10, r31
    4c52:	f9 e3       	ldi	r31, 0x39	; 57
    4c54:	bf 2e       	mov	r11, r31
    4c56:	f0 2d       	mov	r31, r0
    4c58:	c1 2c       	mov	r12, r1
    4c5a:	d1 2c       	mov	r13, r1
    4c5c:	0f 2e       	mov	r0, r31
    4c5e:	f1 e6       	ldi	r31, 0x61	; 97
    4c60:	ef 2e       	mov	r14, r31
    4c62:	fa e1       	ldi	r31, 0x1A	; 26
    4c64:	ff 2e       	mov	r15, r31
    4c66:	f0 2d       	mov	r31, r0
    4c68:	00 e1       	ldi	r16, 0x10	; 16
    4c6a:	10 e0       	ldi	r17, 0x00	; 0
    4c6c:	20 e1       	ldi	r18, 0x10	; 16
    4c6e:	30 e0       	ldi	r19, 0x00	; 0
    4c70:	44 ea       	ldi	r20, 0xA4	; 164
    4c72:	50 e0       	ldi	r21, 0x00	; 0
    4c74:	ce 01       	movw	r24, r28
    4c76:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    clear(320 - m_MoveDistance, 164, m_MoveSpeed + 2, 16, BLACK);
    4c7a:	2e 85       	ldd	r18, Y+14	; 0x0e
    4c7c:	02 2e       	mov	r0, r18
    4c7e:	00 0c       	add	r0, r0
    4c80:	33 0b       	sbc	r19, r19
    4c82:	2e 5f       	subi	r18, 0xFE	; 254
    4c84:	3f 4f       	sbci	r19, 0xFF	; 255
    4c86:	8f 85       	ldd	r24, Y+15	; 0x0f
    4c88:	98 89       	ldd	r25, Y+16	; 0x10
    4c8a:	60 e4       	ldi	r22, 0x40	; 64
    4c8c:	71 e0       	ldi	r23, 0x01	; 1
    4c8e:	68 1b       	sub	r22, r24
    4c90:	79 0b       	sbc	r23, r25
    4c92:	e1 2c       	mov	r14, r1
    4c94:	f1 2c       	mov	r15, r1
    4c96:	44 ea       	ldi	r20, 0xA4	; 164
    4c98:	50 e0       	ldi	r21, 0x00	; 0
    4c9a:	ce 01       	movw	r24, r28
    4c9c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    4ca0:	0f 90       	pop	r0
    4ca2:	0f 90       	pop	r0
    4ca4:	41 c0       	rjmp	.+130    	; 0x4d28 <_ZN6Object4bombEv+0x120>
  }

  else
  {
    draw(0, 164, 16, 16, fireTile, BLACK, RED, YELLOW, WHITE);
    4ca6:	8f ef       	ldi	r24, 0xFF	; 255
    4ca8:	8f 93       	push	r24
    4caa:	8f 93       	push	r24
    4cac:	0f 2e       	mov	r0, r31
    4cae:	f0 ee       	ldi	r31, 0xE0	; 224
    4cb0:	8f 2e       	mov	r8, r31
    4cb2:	99 24       	eor	r9, r9
    4cb4:	9a 94       	dec	r9
    4cb6:	f0 2d       	mov	r31, r0
    4cb8:	0f 2e       	mov	r0, r31
    4cba:	a1 2c       	mov	r10, r1
    4cbc:	f8 ef       	ldi	r31, 0xF8	; 248
    4cbe:	bf 2e       	mov	r11, r31
    4cc0:	f0 2d       	mov	r31, r0
    4cc2:	c1 2c       	mov	r12, r1
    4cc4:	d1 2c       	mov	r13, r1
    4cc6:	0f 2e       	mov	r0, r31
    4cc8:	f1 e5       	ldi	r31, 0x51	; 81
    4cca:	ef 2e       	mov	r14, r31
    4ccc:	fa e1       	ldi	r31, 0x1A	; 26
    4cce:	ff 2e       	mov	r15, r31
    4cd0:	f0 2d       	mov	r31, r0
    4cd2:	00 e1       	ldi	r16, 0x10	; 16
    4cd4:	10 e0       	ldi	r17, 0x00	; 0
    4cd6:	20 e1       	ldi	r18, 0x10	; 16
    4cd8:	30 e0       	ldi	r19, 0x00	; 0
    4cda:	44 ea       	ldi	r20, 0xA4	; 164
    4cdc:	50 e0       	ldi	r21, 0x00	; 0
    4cde:	60 e0       	ldi	r22, 0x00	; 0
    4ce0:	70 e0       	ldi	r23, 0x00	; 0
    4ce2:	ce 01       	movw	r24, r28
    4ce4:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    clear(16, 164, 4, 16, BLACK);
    4ce8:	e1 2c       	mov	r14, r1
    4cea:	f1 2c       	mov	r15, r1
    4cec:	24 e0       	ldi	r18, 0x04	; 4
    4cee:	30 e0       	ldi	r19, 0x00	; 0
    4cf0:	44 ea       	ldi	r20, 0xA4	; 164
    4cf2:	50 e0       	ldi	r21, 0x00	; 0
    4cf4:	60 e1       	ldi	r22, 0x10	; 16
    4cf6:	70 e0       	ldi	r23, 0x00	; 0
    4cf8:	ce 01       	movw	r24, r28
    4cfa:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    m_MoveDistance = 304;
    4cfe:	80 e3       	ldi	r24, 0x30	; 48
    4d00:	91 e0       	ldi	r25, 0x01	; 1
    4d02:	98 8b       	std	Y+16, r25	; 0x10
    4d04:	8f 87       	std	Y+15, r24	; 0x0f
    m_MoveTemp += 1;
    4d06:	8d 85       	ldd	r24, Y+13	; 0x0d
    4d08:	8f 5f       	subi	r24, 0xFF	; 255
    4d0a:	8d 87       	std	Y+13, r24	; 0x0d

    if (m_MoveTemp > 25)
    4d0c:	0f 90       	pop	r0
    4d0e:	0f 90       	pop	r0
    4d10:	8a 31       	cpi	r24, 0x1A	; 26
    4d12:	54 f0       	brlt	.+20     	; 0x4d28 <_ZN6Object4bombEv+0x120>
    {
      clear(0, 164, 24, 16, BLACK);
    4d14:	28 e1       	ldi	r18, 0x18	; 24
    4d16:	30 e0       	ldi	r19, 0x00	; 0
    4d18:	44 ea       	ldi	r20, 0xA4	; 164
    4d1a:	50 e0       	ldi	r21, 0x00	; 0
    4d1c:	60 e0       	ldi	r22, 0x00	; 0
    4d1e:	70 e0       	ldi	r23, 0x00	; 0
    4d20:	ce 01       	movw	r24, r28
    4d22:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      isRolling = false;
    4d26:	18 8e       	std	Y+24, r1	; 0x18
    }
  }

}
    4d28:	df 91       	pop	r29
    4d2a:	cf 91       	pop	r28
    4d2c:	1f 91       	pop	r17
    4d2e:	0f 91       	pop	r16
    4d30:	ff 90       	pop	r15
    4d32:	ef 90       	pop	r14
    4d34:	df 90       	pop	r13
    4d36:	cf 90       	pop	r12
    4d38:	bf 90       	pop	r11
    4d3a:	af 90       	pop	r10
    4d3c:	9f 90       	pop	r9
    4d3e:	8f 90       	pop	r8
    4d40:	08 95       	ret

00004d42 <_ZN6Object7presentEv>:
/*----------------------------------------//
              Object Present
//----------------------------------------*/

void Object::present(void)
{
    4d42:	8f 92       	push	r8
    4d44:	9f 92       	push	r9
    4d46:	af 92       	push	r10
    4d48:	bf 92       	push	r11
    4d4a:	cf 92       	push	r12
    4d4c:	df 92       	push	r13
    4d4e:	ef 92       	push	r14
    4d50:	ff 92       	push	r15
    4d52:	0f 93       	push	r16
    4d54:	1f 93       	push	r17
    4d56:	cf 93       	push	r28
    4d58:	df 93       	push	r29
    4d5a:	ec 01       	movw	r28, r24

  if (m_MoveDistance < 304)
    4d5c:	8f 85       	ldd	r24, Y+15	; 0x0f
    4d5e:	98 89       	ldd	r25, Y+16	; 0x10
    4d60:	80 33       	cpi	r24, 0x30	; 48
    4d62:	21 e0       	ldi	r18, 0x01	; 1
    4d64:	92 07       	cpc	r25, r18
    4d66:	e4 f5       	brge	.+120    	; 0x4de0 <_ZN6Object7presentEv+0x9e>
  {
    xPosition = 304 - m_MoveDistance;
    4d68:	60 e3       	ldi	r22, 0x30	; 48
    4d6a:	71 e0       	ldi	r23, 0x01	; 1
    4d6c:	68 1b       	sub	r22, r24
    4d6e:	79 0b       	sbc	r23, r25
    4d70:	7f 8b       	std	Y+23, r23	; 0x17
    4d72:	6e 8b       	std	Y+22, r22	; 0x16
    draw(304 - m_MoveDistance, 164, 16, 16, presentTile, BLACK, MAROON, RED, WHITE);
    4d74:	8f ef       	ldi	r24, 0xFF	; 255
    4d76:	8f 93       	push	r24
    4d78:	8f 93       	push	r24
    4d7a:	0f 2e       	mov	r0, r31
    4d7c:	81 2c       	mov	r8, r1
    4d7e:	f8 ef       	ldi	r31, 0xF8	; 248
    4d80:	9f 2e       	mov	r9, r31
    4d82:	f0 2d       	mov	r31, r0
    4d84:	0f 2e       	mov	r0, r31
    4d86:	a1 2c       	mov	r10, r1
    4d88:	f8 e7       	ldi	r31, 0x78	; 120
    4d8a:	bf 2e       	mov	r11, r31
    4d8c:	f0 2d       	mov	r31, r0
    4d8e:	c1 2c       	mov	r12, r1
    4d90:	d1 2c       	mov	r13, r1
    4d92:	0f 2e       	mov	r0, r31
    4d94:	f1 e4       	ldi	r31, 0x41	; 65
    4d96:	ef 2e       	mov	r14, r31
    4d98:	fa e1       	ldi	r31, 0x1A	; 26
    4d9a:	ff 2e       	mov	r15, r31
    4d9c:	f0 2d       	mov	r31, r0
    4d9e:	00 e1       	ldi	r16, 0x10	; 16
    4da0:	10 e0       	ldi	r17, 0x00	; 0
    4da2:	20 e1       	ldi	r18, 0x10	; 16
    4da4:	30 e0       	ldi	r19, 0x00	; 0
    4da6:	44 ea       	ldi	r20, 0xA4	; 164
    4da8:	50 e0       	ldi	r21, 0x00	; 0
    4daa:	ce 01       	movw	r24, r28
    4dac:	0e 94 5b 2d 	call	0x5ab6	; 0x5ab6 <_ZN3TFT4drawEiiiiPKhjjjj>
    clear(320 - m_MoveDistance, 164, m_MoveSpeed + 2, 16, BLACK);
    4db0:	2e 85       	ldd	r18, Y+14	; 0x0e
    4db2:	02 2e       	mov	r0, r18
    4db4:	00 0c       	add	r0, r0
    4db6:	33 0b       	sbc	r19, r19
    4db8:	2e 5f       	subi	r18, 0xFE	; 254
    4dba:	3f 4f       	sbci	r19, 0xFF	; 255
    4dbc:	8f 85       	ldd	r24, Y+15	; 0x0f
    4dbe:	98 89       	ldd	r25, Y+16	; 0x10
    4dc0:	60 e4       	ldi	r22, 0x40	; 64
    4dc2:	71 e0       	ldi	r23, 0x01	; 1
    4dc4:	68 1b       	sub	r22, r24
    4dc6:	79 0b       	sbc	r23, r25
    4dc8:	e1 2c       	mov	r14, r1
    4dca:	f1 2c       	mov	r15, r1
    4dcc:	44 ea       	ldi	r20, 0xA4	; 164
    4dce:	50 e0       	ldi	r21, 0x00	; 0
    4dd0:	ce 01       	movw	r24, r28
    4dd2:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    isPresent = true;
    4dd6:	81 e0       	ldi	r24, 0x01	; 1
    4dd8:	89 8f       	std	Y+25, r24	; 0x19
    4dda:	0f 90       	pop	r0
    4ddc:	0f 90       	pop	r0
    4dde:	0f c0       	rjmp	.+30     	; 0x4dfe <_ZN6Object7presentEv+0xbc>
  }

  else
  {
    clear(0, 164, 24, 16, BLACK);
    4de0:	e1 2c       	mov	r14, r1
    4de2:	f1 2c       	mov	r15, r1
    4de4:	00 e1       	ldi	r16, 0x10	; 16
    4de6:	10 e0       	ldi	r17, 0x00	; 0
    4de8:	28 e1       	ldi	r18, 0x18	; 24
    4dea:	30 e0       	ldi	r19, 0x00	; 0
    4dec:	44 ea       	ldi	r20, 0xA4	; 164
    4dee:	50 e0       	ldi	r21, 0x00	; 0
    4df0:	60 e0       	ldi	r22, 0x00	; 0
    4df2:	70 e0       	ldi	r23, 0x00	; 0
    4df4:	ce 01       	movw	r24, r28
    4df6:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    isRolling = false;
    4dfa:	18 8e       	std	Y+24, r1	; 0x18
    isPresent = false;
    4dfc:	19 8e       	std	Y+25, r1	; 0x19
  }

}
    4dfe:	df 91       	pop	r29
    4e00:	cf 91       	pop	r28
    4e02:	1f 91       	pop	r17
    4e04:	0f 91       	pop	r16
    4e06:	ff 90       	pop	r15
    4e08:	ef 90       	pop	r14
    4e0a:	df 90       	pop	r13
    4e0c:	cf 90       	pop	r12
    4e0e:	bf 90       	pop	r11
    4e10:	af 90       	pop	r10
    4e12:	9f 90       	pop	r9
    4e14:	8f 90       	pop	r8
    4e16:	08 95       	ret

00004e18 <_ZN6Object9rollBlockEv>:
/*----------------------------------------//
                Roll Object
//----------------------------------------*/

void Object::rollBlock(void)
{
    4e18:	cf 93       	push	r28
    4e1a:	df 93       	push	r29
    4e1c:	fc 01       	movw	r30, r24

  if (m_Temp != Frame::oneTick)
    4e1e:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    4e22:	82 85       	ldd	r24, Z+10	; 0x0a
    4e24:	08 2e       	mov	r0, r24
    4e26:	00 0c       	add	r0, r0
    4e28:	99 0b       	sbc	r25, r25
    4e2a:	42 2f       	mov	r20, r18
    4e2c:	50 e0       	ldi	r21, 0x00	; 0
    4e2e:	84 17       	cp	r24, r20
    4e30:	95 07       	cpc	r25, r21
    4e32:	a9 f0       	breq	.+42     	; 0x4e5e <_ZN6Object9rollBlockEv+0x46>
  {
    m_Temp = Frame::oneTick;
    4e34:	22 87       	std	Z+10, r18	; 0x0a

    if (Frame::oneTick == 2)
    4e36:	22 30       	cpi	r18, 0x02	; 2
    4e38:	71 f4       	brne	.+28     	; 0x4e56 <_ZN6Object9rollBlockEv+0x3e>
    {
      m_MoveDistance += m_MoveSpeed;
    4e3a:	26 85       	ldd	r18, Z+14	; 0x0e
    4e3c:	87 85       	ldd	r24, Z+15	; 0x0f
    4e3e:	90 89       	ldd	r25, Z+16	; 0x10
    4e40:	82 0f       	add	r24, r18
    4e42:	91 1d       	adc	r25, r1
    4e44:	27 fd       	sbrc	r18, 7
    4e46:	9a 95       	dec	r25
    4e48:	90 8b       	std	Z+16, r25	; 0x10
    4e4a:	87 87       	std	Z+15, r24	; 0x0f
      m_IsDrawed = false;
    4e4c:	14 8a       	std	Z+20, r1	; 0x14
        isRolling = false;
      }
    }
  }

  if (isRolling == true && m_IsDrawed == false)
    4e4e:	80 8d       	ldd	r24, Z+24	; 0x18
    4e50:	81 11       	cpse	r24, r1
    4e52:	0b c0       	rjmp	.+22     	; 0x4e6a <_ZN6Object9rollBlockEv+0x52>
    4e54:	22 c0       	rjmp	.+68     	; 0x4e9a <_ZN6Object9rollBlockEv+0x82>
      m_IsDrawed = false;
    }

    else
    {
      if (isRolling == true)
    4e56:	80 8d       	ldd	r24, Z+24	; 0x18
    4e58:	88 23       	and	r24, r24
    4e5a:	f9 f0       	breq	.+62     	; 0x4e9a <_ZN6Object9rollBlockEv+0x82>
    4e5c:	24 c0       	rjmp	.+72     	; 0x4ea6 <_ZN6Object9rollBlockEv+0x8e>
        isRolling = false;
      }
    }
  }

  if (isRolling == true && m_IsDrawed == false)
    4e5e:	80 8d       	ldd	r24, Z+24	; 0x18
    4e60:	88 23       	and	r24, r24
    4e62:	d9 f0       	breq	.+54     	; 0x4e9a <_ZN6Object9rollBlockEv+0x82>
    4e64:	84 89       	ldd	r24, Z+20	; 0x14
    4e66:	81 11       	cpse	r24, r1
    4e68:	1e c0       	rjmp	.+60     	; 0x4ea6 <_ZN6Object9rollBlockEv+0x8e>
    4e6a:	ef 01       	movw	r28, r30
  {
    if (m_RandomNumber < 4)
    4e6c:	81 89       	ldd	r24, Z+17	; 0x11
    4e6e:	84 30       	cpi	r24, 0x04	; 4
    4e70:	20 f4       	brcc	.+8      	; 0x4e7a <_ZN6Object9rollBlockEv+0x62>
    {
      ball();
    4e72:	cf 01       	movw	r24, r30
    4e74:	0e 94 9a 25 	call	0x4b34	; 0x4b34 <_ZN6Object4ballEv>
    4e78:	0d c0       	rjmp	.+26     	; 0x4e94 <_ZN6Object9rollBlockEv+0x7c>
    }

    else if (m_RandomNumber >= 4 && m_RandomNumber < 6)
    4e7a:	9c ef       	ldi	r25, 0xFC	; 252
    4e7c:	98 0f       	add	r25, r24
    4e7e:	92 30       	cpi	r25, 0x02	; 2
    4e80:	20 f4       	brcc	.+8      	; 0x4e8a <_ZN6Object9rollBlockEv+0x72>
    {
      present();
    4e82:	cf 01       	movw	r24, r30
    4e84:	0e 94 a1 26 	call	0x4d42	; 0x4d42 <_ZN6Object7presentEv>
    4e88:	05 c0       	rjmp	.+10     	; 0x4e94 <_ZN6Object9rollBlockEv+0x7c>
    }

    else if (m_RandomNumber >= 6)
    4e8a:	86 30       	cpi	r24, 0x06	; 6
    4e8c:	18 f0       	brcs	.+6      	; 0x4e94 <_ZN6Object9rollBlockEv+0x7c>
    {
      bomb();
    4e8e:	cf 01       	movw	r24, r30
    4e90:	0e 94 04 26 	call	0x4c08	; 0x4c08 <_ZN6Object4bombEv>
    }

    m_IsDrawed = true;
    4e94:	81 e0       	ldi	r24, 0x01	; 1
    4e96:	8c 8b       	std	Y+20, r24	; 0x14
    4e98:	06 c0       	rjmp	.+12     	; 0x4ea6 <_ZN6Object9rollBlockEv+0x8e>
  }

  else if (isRolling == false)
  {
    if (m_RandomNumber == Frame::secondFrame)
    4e9a:	91 89       	ldd	r25, Z+17	; 0x11
    4e9c:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <_ZN5Frame11secondFrameE>
    4ea0:	98 13       	cpse	r25, r24
    4ea2:	01 c0       	rjmp	.+2      	; 0x4ea6 <_ZN6Object9rollBlockEv+0x8e>
    {
      m_IsReset = false;
    4ea4:	13 8a       	std	Z+19, r1	; 0x13
    }
  }

}
    4ea6:	df 91       	pop	r29
    4ea8:	cf 91       	pop	r28
    4eaa:	08 95       	ret

00004eac <_ZN6Object14rollBackgroundEv>:
/*----------------------------------------//
                Roll Object
//----------------------------------------*/

void Object::rollBackground(void)
{
    4eac:	af 92       	push	r10
    4eae:	bf 92       	push	r11
    4eb0:	cf 92       	push	r12
    4eb2:	df 92       	push	r13
    4eb4:	ef 92       	push	r14
    4eb6:	ff 92       	push	r15
    4eb8:	0f 93       	push	r16
    4eba:	1f 93       	push	r17
    4ebc:	cf 93       	push	r28
    4ebe:	df 93       	push	r29
    4ec0:	fc 01       	movw	r30, r24

  if (m_Temp != Frame::oneTick)
    4ec2:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    4ec6:	82 85       	ldd	r24, Z+10	; 0x0a
    4ec8:	08 2e       	mov	r0, r24
    4eca:	00 0c       	add	r0, r0
    4ecc:	99 0b       	sbc	r25, r25
    4ece:	42 2f       	mov	r20, r18
    4ed0:	50 e0       	ldi	r21, 0x00	; 0
    4ed2:	84 17       	cp	r24, r20
    4ed4:	95 07       	cpc	r25, r21
    4ed6:	b1 f0       	breq	.+44     	; 0x4f04 <_ZN6Object14rollBackgroundEv+0x58>
  {
    m_Temp = Frame::oneTick;
    4ed8:	22 87       	std	Z+10, r18	; 0x0a
    m_rollTemp++;
    4eda:	83 85       	ldd	r24, Z+11	; 0x0b
    4edc:	8f 5f       	subi	r24, 0xFF	; 255
    4ede:	83 87       	std	Z+11, r24	; 0x0b

    if (Frame::oneTick == 1 && m_rollTemp > m_MoveSpeed)
    4ee0:	21 30       	cpi	r18, 0x01	; 1
    4ee2:	09 f0       	breq	.+2      	; 0x4ee6 <_ZN6Object14rollBackgroundEv+0x3a>
    4ee4:	46 c0       	rjmp	.+140    	; 0x4f72 <_ZN6Object14rollBackgroundEv+0xc6>
    4ee6:	96 85       	ldd	r25, Z+14	; 0x0e
    4ee8:	98 17       	cp	r25, r24
    4eea:	0c f0       	brlt	.+2      	; 0x4eee <_ZN6Object14rollBackgroundEv+0x42>
    4eec:	42 c0       	rjmp	.+132    	; 0x4f72 <_ZN6Object14rollBackgroundEv+0xc6>
    {
      m_rollTemp = 0;
    4eee:	13 86       	std	Z+11, r1	; 0x0b
      m_MoveDistance += 1;
    4ef0:	87 85       	ldd	r24, Z+15	; 0x0f
    4ef2:	90 89       	ldd	r25, Z+16	; 0x10
    4ef4:	01 96       	adiw	r24, 0x01	; 1
    4ef6:	90 8b       	std	Z+16, r25	; 0x10
    4ef8:	87 87       	std	Z+15, r24	; 0x0f
      m_IsDrawed = false;
    4efa:	14 8a       	std	Z+20, r1	; 0x14
    {
      return;
    }
  }
  
  if (isRolling == true && m_IsDrawed == false)
    4efc:	80 8d       	ldd	r24, Z+24	; 0x18
    4efe:	88 23       	and	r24, r24
    4f00:	99 f1       	breq	.+102    	; 0x4f68 <_ZN6Object14rollBackgroundEv+0xbc>
    4f02:	06 c0       	rjmp	.+12     	; 0x4f10 <_ZN6Object14rollBackgroundEv+0x64>
    4f04:	80 8d       	ldd	r24, Z+24	; 0x18
    4f06:	88 23       	and	r24, r24
    4f08:	79 f1       	breq	.+94     	; 0x4f68 <_ZN6Object14rollBackgroundEv+0xbc>
    4f0a:	84 89       	ldd	r24, Z+20	; 0x14
    4f0c:	81 11       	cpse	r24, r1
    4f0e:	31 c0       	rjmp	.+98     	; 0x4f72 <_ZN6Object14rollBackgroundEv+0xc6>
    4f10:	ef 01       	movw	r28, r30
  {
    if ((m_Width - m_MoveDistance) > 0)
    4f12:	66 81       	ldd	r22, Z+6	; 0x06
    4f14:	77 81       	ldd	r23, Z+7	; 0x07
    4f16:	87 85       	ldd	r24, Z+15	; 0x0f
    4f18:	90 89       	ldd	r25, Z+16	; 0x10
    4f1a:	68 1b       	sub	r22, r24
    4f1c:	79 0b       	sbc	r23, r25
    4f1e:	16 16       	cp	r1, r22
    4f20:	17 06       	cpc	r1, r23
    4f22:	8c f4       	brge	.+34     	; 0x4f46 <_ZN6Object14rollBackgroundEv+0x9a>
    {
      draw(m_Width - m_MoveDistance, m_Height, 16, 10, m_Bitmap, BLACK, WHITE);
    4f24:	e4 80       	ldd	r14, Z+4	; 0x04
    4f26:	f5 80       	ldd	r15, Z+5	; 0x05
    4f28:	40 85       	ldd	r20, Z+8	; 0x08
    4f2a:	51 85       	ldd	r21, Z+9	; 0x09
    4f2c:	aa 24       	eor	r10, r10
    4f2e:	aa 94       	dec	r10
    4f30:	ba 2c       	mov	r11, r10
    4f32:	c1 2c       	mov	r12, r1
    4f34:	d1 2c       	mov	r13, r1
    4f36:	0a e0       	ldi	r16, 0x0A	; 10
    4f38:	10 e0       	ldi	r17, 0x00	; 0
    4f3a:	20 e1       	ldi	r18, 0x10	; 16
    4f3c:	30 e0       	ldi	r19, 0x00	; 0
    4f3e:	cf 01       	movw	r24, r30
    4f40:	0e 94 b1 2c 	call	0x5962	; 0x5962 <_ZN3TFT4drawEiiiiPKhjj>
    4f44:	0e c0       	rjmp	.+28     	; 0x4f62 <_ZN6Object14rollBackgroundEv+0xb6>
    }

    else
    {
      clear(0, m_Height, 20, 10, BLACK);
    4f46:	40 85       	ldd	r20, Z+8	; 0x08
    4f48:	51 85       	ldd	r21, Z+9	; 0x09
    4f4a:	e1 2c       	mov	r14, r1
    4f4c:	f1 2c       	mov	r15, r1
    4f4e:	0a e0       	ldi	r16, 0x0A	; 10
    4f50:	10 e0       	ldi	r17, 0x00	; 0
    4f52:	24 e1       	ldi	r18, 0x14	; 20
    4f54:	30 e0       	ldi	r19, 0x00	; 0
    4f56:	60 e0       	ldi	r22, 0x00	; 0
    4f58:	70 e0       	ldi	r23, 0x00	; 0
    4f5a:	cf 01       	movw	r24, r30
    4f5c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
      isRolling = false;
    4f60:	18 8e       	std	Y+24, r1	; 0x18
    }
  
    m_IsDrawed = true;
    4f62:	81 e0       	ldi	r24, 0x01	; 1
    4f64:	8c 8b       	std	Y+20, r24	; 0x14
    4f66:	05 c0       	rjmp	.+10     	; 0x4f72 <_ZN6Object14rollBackgroundEv+0xc6>
  }

  else if (isRolling == false)
  {
    m_Width = 304;
    4f68:	80 e3       	ldi	r24, 0x30	; 48
    4f6a:	91 e0       	ldi	r25, 0x01	; 1
    4f6c:	97 83       	std	Z+7, r25	; 0x07
    4f6e:	86 83       	std	Z+6, r24	; 0x06
    m_IsReset = false;
    4f70:	13 8a       	std	Z+19, r1	; 0x13
  }

}
    4f72:	df 91       	pop	r29
    4f74:	cf 91       	pop	r28
    4f76:	1f 91       	pop	r17
    4f78:	0f 91       	pop	r16
    4f7a:	ff 90       	pop	r15
    4f7c:	ef 90       	pop	r14
    4f7e:	df 90       	pop	r13
    4f80:	cf 90       	pop	r12
    4f82:	bf 90       	pop	r11
    4f84:	af 90       	pop	r10
    4f86:	08 95       	ret

00004f88 <_ZN6Object4initEv>:
/*----------------------------------------//
            Initialize Object
//----------------------------------------*/

void Object::init(void)
{
    4f88:	8f 92       	push	r8
    4f8a:	9f 92       	push	r9
    4f8c:	af 92       	push	r10
    4f8e:	bf 92       	push	r11
    4f90:	cf 92       	push	r12
    4f92:	df 92       	push	r13
    4f94:	ef 92       	push	r14
    4f96:	ff 92       	push	r15
    4f98:	cf 93       	push	r28
    4f9a:	df 93       	push	r29
    4f9c:	ec 01       	movw	r28, r24
  xPosition = 0;
    4f9e:	1f 8a       	std	Y+23, r1	; 0x17
    4fa0:	1e 8a       	std	Y+22, r1	; 0x16
  m_Temp = 0;
    4fa2:	1a 86       	std	Y+10, r1	; 0x0a
  m_MoveTemp = 0;
    4fa4:	1d 86       	std	Y+13, r1	; 0x0d
  m_MoveDistance = 0;
    4fa6:	18 8a       	std	Y+16, r1	; 0x10
    4fa8:	1f 86       	std	Y+15, r1	; 0x0f
  m_RandomNumber = (Frame::presentTime * Frame::oneTick) % 10;
    4faa:	80 90 43 02 	lds	r8, 0x0243	; 0x800243 <_ZN5Frame11presentTimeE>
    4fae:	90 90 44 02 	lds	r9, 0x0244	; 0x800244 <_ZN5Frame11presentTimeE+0x1>
    4fb2:	a0 90 45 02 	lds	r10, 0x0245	; 0x800245 <_ZN5Frame11presentTimeE+0x2>
    4fb6:	b0 90 46 02 	lds	r11, 0x0246	; 0x800246 <_ZN5Frame11presentTimeE+0x3>
  m_RandomNumber = (Frame::presentTime * m_RandomNumber) % 10;
    4fba:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    4fbe:	b0 e0       	ldi	r27, 0x00	; 0
    4fc0:	a5 01       	movw	r20, r10
    4fc2:	94 01       	movw	r18, r8
    4fc4:	0e 94 ff 2f 	call	0x5ffe	; 0x5ffe <__muluhisi3>
    4fc8:	0f 2e       	mov	r0, r31
    4fca:	fa e0       	ldi	r31, 0x0A	; 10
    4fcc:	cf 2e       	mov	r12, r31
    4fce:	d1 2c       	mov	r13, r1
    4fd0:	e1 2c       	mov	r14, r1
    4fd2:	f1 2c       	mov	r15, r1
    4fd4:	f0 2d       	mov	r31, r0
    4fd6:	a7 01       	movw	r20, r14
    4fd8:	96 01       	movw	r18, r12
    4fda:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <__udivmodsi4>
    4fde:	a6 2f       	mov	r26, r22
    4fe0:	b0 e0       	ldi	r27, 0x00	; 0
    4fe2:	a5 01       	movw	r20, r10
    4fe4:	94 01       	movw	r18, r8
    4fe6:	0e 94 ff 2f 	call	0x5ffe	; 0x5ffe <__muluhisi3>
    4fea:	a7 01       	movw	r20, r14
    4fec:	96 01       	movw	r18, r12
    4fee:	0e 94 d7 2f 	call	0x5fae	; 0x5fae <__udivmodsi4>
    4ff2:	69 8b       	std	Y+17, r22	; 0x11
}
    4ff4:	df 91       	pop	r29
    4ff6:	cf 91       	pop	r28
    4ff8:	ff 90       	pop	r15
    4ffa:	ef 90       	pop	r14
    4ffc:	df 90       	pop	r13
    4ffe:	cf 90       	pop	r12
    5000:	bf 90       	pop	r11
    5002:	af 90       	pop	r10
    5004:	9f 90       	pop	r9
    5006:	8f 90       	pop	r8
    5008:	08 95       	ret

0000500a <_ZN6Object5startEv>:
/*----------------------------------------//
              Start Object
//----------------------------------------*/

void Object::start(void)
{
    500a:	cf 93       	push	r28
    500c:	df 93       	push	r29
    500e:	ec 01       	movw	r28, r24

  if (m_IsReset == false)
    5010:	8b 89       	ldd	r24, Y+19	; 0x13
    5012:	81 11       	cpse	r24, r1
    5014:	06 c0       	rjmp	.+12     	; 0x5022 <_ZN6Object5startEv+0x18>
  {
    init();
    5016:	ce 01       	movw	r24, r28
    5018:	0e 94 c4 27 	call	0x4f88	; 0x4f88 <_ZN6Object4initEv>
    m_IsReset = true;
    501c:	81 e0       	ldi	r24, 0x01	; 1
    501e:	8b 8b       	std	Y+19, r24	; 0x13
    isRolling = true;
    5020:	88 8f       	std	Y+24, r24	; 0x18
  }
  
  if (m_IsBlock == true)
    5022:	8a 89       	ldd	r24, Y+18	; 0x12
    5024:	88 23       	and	r24, r24
    5026:	21 f0       	breq	.+8      	; 0x5030 <_ZN6Object5startEv+0x26>
  {
    rollBlock();
    5028:	ce 01       	movw	r24, r28
    502a:	0e 94 0c 27 	call	0x4e18	; 0x4e18 <_ZN6Object9rollBlockEv>
    502e:	03 c0       	rjmp	.+6      	; 0x5036 <_ZN6Object5startEv+0x2c>
  }

  else
  {
    rollBackground();
    5030:	ce 01       	movw	r24, r28
    5032:	0e 94 56 27 	call	0x4eac	; 0x4eac <_ZN6Object14rollBackgroundEv>
  }
  
}
    5036:	df 91       	pop	r29
    5038:	cf 91       	pop	r28
    503a:	08 95       	ret

0000503c <_ZN6Object11clearObjectEv>:
/*----------------------------------------//
              Clear Object
//----------------------------------------*/

void Object::clearObject(void)
{
    503c:	ef 92       	push	r14
    503e:	ff 92       	push	r15
    5040:	0f 93       	push	r16
    5042:	1f 93       	push	r17
    5044:	cf 93       	push	r28
    5046:	df 93       	push	r29
    5048:	fc 01       	movw	r30, r24

  if (m_clearTemp != Frame::oneTick)
    504a:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    504e:	84 85       	ldd	r24, Z+12	; 0x0c
    5050:	08 2e       	mov	r0, r24
    5052:	00 0c       	add	r0, r0
    5054:	99 0b       	sbc	r25, r25
    5056:	42 2f       	mov	r20, r18
    5058:	50 e0       	ldi	r21, 0x00	; 0
    505a:	84 17       	cp	r24, r20
    505c:	95 07       	cpc	r25, r21
    505e:	29 f0       	breq	.+10     	; 0x506a <_ZN6Object11clearObjectEv+0x2e>
  {
    m_clearTemp = Frame::oneTick;
    5060:	24 87       	std	Z+12, r18	; 0x0c

    if (Frame::oneTick == 1)
    5062:	21 30       	cpi	r18, 0x01	; 1
    5064:	c9 f4       	brne	.+50     	; 0x5098 <_ZN6Object11clearObjectEv+0x5c>
    {
      m_IsClearDrawed = false;
    5066:	15 8a       	std	Z+21, r1	; 0x15
    5068:	03 c0       	rjmp	.+6      	; 0x5070 <_ZN6Object11clearObjectEv+0x34>
    {
      return;
    }
  }

  if (m_IsClearDrawed == false)
    506a:	85 89       	ldd	r24, Z+21	; 0x15
    506c:	81 11       	cpse	r24, r1
    506e:	14 c0       	rjmp	.+40     	; 0x5098 <_ZN6Object11clearObjectEv+0x5c>
    5070:	ef 01       	movw	r28, r30
  {
    clear(304 - m_MoveDistance, 164, 16, 16, BLACK);
    5072:	87 85       	ldd	r24, Z+15	; 0x0f
    5074:	90 89       	ldd	r25, Z+16	; 0x10
    5076:	60 e3       	ldi	r22, 0x30	; 48
    5078:	71 e0       	ldi	r23, 0x01	; 1
    507a:	68 1b       	sub	r22, r24
    507c:	79 0b       	sbc	r23, r25
    507e:	e1 2c       	mov	r14, r1
    5080:	f1 2c       	mov	r15, r1
    5082:	00 e1       	ldi	r16, 0x10	; 16
    5084:	10 e0       	ldi	r17, 0x00	; 0
    5086:	20 e1       	ldi	r18, 0x10	; 16
    5088:	30 e0       	ldi	r19, 0x00	; 0
    508a:	44 ea       	ldi	r20, 0xA4	; 164
    508c:	50 e0       	ldi	r21, 0x00	; 0
    508e:	cf 01       	movw	r24, r30
    5090:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    m_IsClearDrawed = true;
    5094:	81 e0       	ldi	r24, 0x01	; 1
    5096:	8d 8b       	std	Y+21, r24	; 0x15
  }

    5098:	df 91       	pop	r29
    509a:	cf 91       	pop	r28
    509c:	1f 91       	pop	r17
    509e:	0f 91       	pop	r16
    50a0:	ff 90       	pop	r15
    50a2:	ef 90       	pop	r14
    50a4:	08 95       	ret

000050a6 <_ZN6Player7runningEv>:
/*----------------------------------------//
              Running Player
//----------------------------------------*/

void Player::running(void)
{
    50a6:	4f 92       	push	r4
    50a8:	5f 92       	push	r5
    50aa:	6f 92       	push	r6
    50ac:	7f 92       	push	r7
    50ae:	8f 92       	push	r8
    50b0:	9f 92       	push	r9
    50b2:	af 92       	push	r10
    50b4:	bf 92       	push	r11
    50b6:	cf 92       	push	r12
    50b8:	df 92       	push	r13
    50ba:	ef 92       	push	r14
    50bc:	ff 92       	push	r15
    50be:	0f 93       	push	r16
    50c0:	1f 93       	push	r17
    50c2:	cf 93       	push	r28
    50c4:	df 93       	push	r29
    50c6:	fc 01       	movw	r30, r24

  if (m_Temp != Frame::oneTick)
    50c8:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    50cc:	84 81       	ldd	r24, Z+4	; 0x04
    50ce:	08 2e       	mov	r0, r24
    50d0:	00 0c       	add	r0, r0
    50d2:	99 0b       	sbc	r25, r25
    50d4:	42 2f       	mov	r20, r18
    50d6:	50 e0       	ldi	r21, 0x00	; 0
    50d8:	84 17       	cp	r24, r20
    50da:	95 07       	cpc	r25, r21
    50dc:	e9 f1       	breq	.+122    	; 0x5158 <_ZN6Player7runningEv+0xb2>
  {
    m_Temp = Frame::oneTick;
    50de:	24 83       	std	Z+4, r18	; 0x04

    if (Frame::oneTick == 0)
    50e0:	21 11       	cpse	r18, r1
    50e2:	3d c0       	rjmp	.+122    	; 0x515e <_ZN6Player7runningEv+0xb8>
    {
      m_IsDrawed = false;
    50e4:	12 86       	std	Z+10, r1	; 0x0a
    50e6:	3f 01       	movw	r6, r30
/*----------------------------------------//
              Running Player
//----------------------------------------*/

void Player::running(void)
{
    50e8:	c0 e0       	ldi	r28, 0x00	; 0
    50ea:	d0 e0       	ldi	r29, 0x00	; 0
  {
    for (int i=0; i<6; i++)
    {
      if (Frame::sixFrames == i)
      {
        draw(40, 140, 40, 40, charRun, i, BLACK, MAROON, RED, WHITE);
    50ec:	dd 24       	eor	r13, r13
    50ee:	da 94       	dec	r13
    50f0:	0f 2e       	mov	r0, r31
    50f2:	f8 ef       	ldi	r31, 0xF8	; 248
    50f4:	4f 2e       	mov	r4, r31
    50f6:	f0 2d       	mov	r31, r0
        m_IsDrawed = true;
    50f8:	55 24       	eor	r5, r5
    50fa:	53 94       	inc	r5

  if (m_IsDrawed == false)
  {
    for (int i=0; i<6; i++)
    {
      if (Frame::sixFrames == i)
    50fc:	20 91 2f 02 	lds	r18, 0x022F	; 0x80022f <_ZN5Frame9sixFramesE>
    5100:	30 e0       	ldi	r19, 0x00	; 0
    5102:	2c 17       	cp	r18, r28
    5104:	3d 07       	cpc	r19, r29
    5106:	19 f5       	brne	.+70     	; 0x514e <_ZN6Player7runningEv+0xa8>
      {
        draw(40, 140, 40, 40, charRun, i, BLACK, MAROON, RED, WHITE);
    5108:	df 92       	push	r13
    510a:	df 92       	push	r13
    510c:	4f 92       	push	r4
    510e:	1f 92       	push	r1
    5110:	0f 2e       	mov	r0, r31
    5112:	81 2c       	mov	r8, r1
    5114:	f8 e7       	ldi	r31, 0x78	; 120
    5116:	9f 2e       	mov	r9, r31
    5118:	f0 2d       	mov	r31, r0
    511a:	a1 2c       	mov	r10, r1
    511c:	b1 2c       	mov	r11, r1
    511e:	cc 2e       	mov	r12, r28
    5120:	0f 2e       	mov	r0, r31
    5122:	f1 e1       	ldi	r31, 0x11	; 17
    5124:	ef 2e       	mov	r14, r31
    5126:	fc e1       	ldi	r31, 0x1C	; 28
    5128:	ff 2e       	mov	r15, r31
    512a:	f0 2d       	mov	r31, r0
    512c:	08 e2       	ldi	r16, 0x28	; 40
    512e:	10 e0       	ldi	r17, 0x00	; 0
    5130:	28 e2       	ldi	r18, 0x28	; 40
    5132:	30 e0       	ldi	r19, 0x00	; 0
    5134:	4c e8       	ldi	r20, 0x8C	; 140
    5136:	50 e0       	ldi	r21, 0x00	; 0
    5138:	68 e2       	ldi	r22, 0x28	; 40
    513a:	70 e0       	ldi	r23, 0x00	; 0
    513c:	c3 01       	movw	r24, r6
    513e:	0e 94 2d 2e 	call	0x5c5a	; 0x5c5a <_ZN3TFT4drawEiiiiPA100_Khajjjj>
        m_IsDrawed = true;
    5142:	f3 01       	movw	r30, r6
    5144:	52 86       	std	Z+10, r5	; 0x0a
    5146:	0f 90       	pop	r0
    5148:	0f 90       	pop	r0
    514a:	0f 90       	pop	r0
    514c:	0f 90       	pop	r0
    }
  }

  if (m_IsDrawed == false)
  {
    for (int i=0; i<6; i++)
    514e:	21 96       	adiw	r28, 0x01	; 1
    5150:	c6 30       	cpi	r28, 0x06	; 6
    5152:	d1 05       	cpc	r29, r1
    5154:	99 f6       	brne	.-90     	; 0x50fc <_ZN6Player7runningEv+0x56>
    5156:	03 c0       	rjmp	.+6      	; 0x515e <_ZN6Player7runningEv+0xb8>
    {
      return;
    }
  }

  if (m_IsDrawed == false)
    5158:	82 85       	ldd	r24, Z+10	; 0x0a
    515a:	88 23       	and	r24, r24
    515c:	21 f2       	breq	.-120    	; 0x50e6 <_ZN6Player7runningEv+0x40>
        m_IsDrawed = true;
      }
    }
  }

}
    515e:	df 91       	pop	r29
    5160:	cf 91       	pop	r28
    5162:	1f 91       	pop	r17
    5164:	0f 91       	pop	r16
    5166:	ff 90       	pop	r15
    5168:	ef 90       	pop	r14
    516a:	df 90       	pop	r13
    516c:	cf 90       	pop	r12
    516e:	bf 90       	pop	r11
    5170:	af 90       	pop	r10
    5172:	9f 90       	pop	r9
    5174:	8f 90       	pop	r8
    5176:	7f 90       	pop	r7
    5178:	6f 90       	pop	r6
    517a:	5f 90       	pop	r5
    517c:	4f 90       	pop	r4
    517e:	08 95       	ret

00005180 <_ZN6Player7jumpingEv>:
/*----------------------------------------//
              Jumping Player
//----------------------------------------*/

void Player::jumping(void)
{
    5180:	2f 92       	push	r2
    5182:	3f 92       	push	r3
    5184:	4f 92       	push	r4
    5186:	5f 92       	push	r5
    5188:	6f 92       	push	r6
    518a:	7f 92       	push	r7
    518c:	8f 92       	push	r8
    518e:	9f 92       	push	r9
    5190:	af 92       	push	r10
    5192:	bf 92       	push	r11
    5194:	cf 92       	push	r12
    5196:	df 92       	push	r13
    5198:	ef 92       	push	r14
    519a:	ff 92       	push	r15
    519c:	0f 93       	push	r16
    519e:	1f 93       	push	r17
    51a0:	cf 93       	push	r28
    51a2:	df 93       	push	r29
    51a4:	ec 01       	movw	r28, r24

  if (m_Temp != Frame::oneTick)
    51a6:	20 91 32 02 	lds	r18, 0x0232	; 0x800232 <_ZN5Frame7oneTickE>
    51aa:	8c 81       	ldd	r24, Y+4	; 0x04
    51ac:	08 2e       	mov	r0, r24
    51ae:	00 0c       	add	r0, r0
    51b0:	99 0b       	sbc	r25, r25
    51b2:	42 2f       	mov	r20, r18
    51b4:	50 e0       	ldi	r21, 0x00	; 0
    51b6:	84 17       	cp	r24, r20
    51b8:	95 07       	cpc	r25, r21
    51ba:	09 f4       	brne	.+2      	; 0x51be <_ZN6Player7jumpingEv+0x3e>
    51bc:	bf c0       	rjmp	.+382    	; 0x533c <_ZN6Player7jumpingEv+0x1bc>
  {
    m_Temp = Frame::oneTick;
    51be:	2c 83       	std	Y+4, r18	; 0x04

    if (Frame::oneTick == 0)
    51c0:	21 11       	cpse	r18, r1
    51c2:	c0 c0       	rjmp	.+384    	; 0x5344 <_ZN6Player7jumpingEv+0x1c4>
    {
      if (m_IsUp == true)
    51c4:	89 85       	ldd	r24, Y+9	; 0x09
    51c6:	88 23       	and	r24, r24
    51c8:	61 f0       	breq	.+24     	; 0x51e2 <_ZN6Player7jumpingEv+0x62>
      {
        m_JumpHeight += m_JumpSpeed;
    51ca:	9f 81       	ldd	r25, Y+7	; 0x07
    51cc:	8e 81       	ldd	r24, Y+6	; 0x06
    51ce:	89 0f       	add	r24, r25

        if (m_JumpHeight >= 50)
    51d0:	82 33       	cpi	r24, 0x32	; 50
    51d2:	fc f0       	brlt	.+62     	; 0x5212 <_ZN6Player7jumpingEv+0x92>
        {
          m_JumpHeight -= m_JumpSpeed;
          m_JumpTemp ++;
    51d4:	8d 81       	ldd	r24, Y+5	; 0x05
    51d6:	8f 5f       	subi	r24, 0xFF	; 255
    51d8:	8d 83       	std	Y+5, r24	; 0x05

          if (m_JumpTemp == 8)
    51da:	88 30       	cpi	r24, 0x08	; 8
    51dc:	d9 f4       	brne	.+54     	; 0x5214 <_ZN6Player7jumpingEv+0x94>
          {
            m_IsUp = false;
    51de:	19 86       	std	Y+9, r1	; 0x09
    51e0:	19 c0       	rjmp	.+50     	; 0x5214 <_ZN6Player7jumpingEv+0x94>
        }
      }

      else
      {
        m_JumpHeight -= m_JumpSpeed;
    51e2:	8f 81       	ldd	r24, Y+7	; 0x07
    51e4:	9e 81       	ldd	r25, Y+6	; 0x06
    51e6:	89 1b       	sub	r24, r25
    51e8:	8f 83       	std	Y+7, r24	; 0x07

        if (m_JumpHeight <= 0)
    51ea:	18 16       	cp	r1, r24
    51ec:	9c f0       	brlt	.+38     	; 0x5214 <_ZN6Player7jumpingEv+0x94>
        {
          clear(40, 140 - 25, 40, 25, BLACK);
    51ee:	e1 2c       	mov	r14, r1
    51f0:	f1 2c       	mov	r15, r1
    51f2:	09 e1       	ldi	r16, 0x19	; 25
    51f4:	10 e0       	ldi	r17, 0x00	; 0
    51f6:	28 e2       	ldi	r18, 0x28	; 40
    51f8:	30 e0       	ldi	r19, 0x00	; 0
    51fa:	43 e7       	ldi	r20, 0x73	; 115
    51fc:	50 e0       	ldi	r21, 0x00	; 0
    51fe:	68 e2       	ldi	r22, 0x28	; 40
    5200:	70 e0       	ldi	r23, 0x00	; 0
    5202:	ce 01       	movw	r24, r28
    5204:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
          SW::interrupt0 = OFF;
    5208:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <_ZN2SW10interrupt0E>
          m_IsReset = false;
    520c:	18 86       	std	Y+8, r1	; 0x08
          isJump = false;
    520e:	1b 86       	std	Y+11, r1	; 0x0b
          return;
    5210:	99 c0       	rjmp	.+306    	; 0x5344 <_ZN6Player7jumpingEv+0x1c4>

    if (Frame::oneTick == 0)
    {
      if (m_IsUp == true)
      {
        m_JumpHeight += m_JumpSpeed;
    5212:	8f 83       	std	Y+7, r24	; 0x07
          isJump = false;
          return;
        }
      }

      m_IsDrawed = false;
    5214:	1a 86       	std	Y+10, r1	; 0x0a
/*----------------------------------------//
              Jumping Player
//----------------------------------------*/

void Player::jumping(void)
{
    5216:	61 2c       	mov	r6, r1
    5218:	71 2c       	mov	r7, r1
          clear(40, (122 - m_JumpHeight) + 50, 32, 8, BLACK);
        }

        else
        {
          draw(40, 122 - m_JumpHeight, 32, 60, charDown, i, BLACK, MAROON, RED, WHITE);
    521a:	0f 2e       	mov	r0, r31
    521c:	fa e7       	ldi	r31, 0x7A	; 122
    521e:	4f 2e       	mov	r4, r31
    5220:	51 2c       	mov	r5, r1
    5222:	f0 2d       	mov	r31, r0
    5224:	dd 24       	eor	r13, r13
    5226:	da 94       	dec	r13
          clear(40, (122 - m_JumpHeight) - 8, 32, 8, BLACK);
    5228:	0f 2e       	mov	r0, r31
    522a:	f2 e7       	ldi	r31, 0x72	; 114
    522c:	2f 2e       	mov	r2, r31
    522e:	31 2c       	mov	r3, r1
    5230:	f0 2d       	mov	r31, r0

  if (m_IsDrawed == false)
  {
    for (int i=0; i<4; i++)
    {
      if (Frame::fourFrames == i)
    5232:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <_ZN5Frame10fourFramesE>
    5236:	90 e0       	ldi	r25, 0x00	; 0
    5238:	86 15       	cp	r24, r6
    523a:	97 05       	cpc	r25, r7
    523c:	09 f0       	breq	.+2      	; 0x5240 <_ZN6Player7jumpingEv+0xc0>
    523e:	75 c0       	rjmp	.+234    	; 0x532a <_ZN6Player7jumpingEv+0x1aa>
      {

        if (m_IsUp == true)
    5240:	89 85       	ldd	r24, Y+9	; 0x09
    5242:	88 23       	and	r24, r24
    5244:	c9 f1       	breq	.+114    	; 0x52b8 <_ZN6Player7jumpingEv+0x138>
        {
          draw(40, 122 - m_JumpHeight, 32, 50, charUp, i, BLACK, MAROON, RED, WHITE);
    5246:	8f 81       	ldd	r24, Y+7	; 0x07
    5248:	a2 01       	movw	r20, r4
    524a:	48 1b       	sub	r20, r24
    524c:	51 09       	sbc	r21, r1
    524e:	87 fd       	sbrc	r24, 7
    5250:	53 95       	inc	r21
    5252:	df 92       	push	r13
    5254:	df 92       	push	r13
    5256:	88 ef       	ldi	r24, 0xF8	; 248
    5258:	8f 93       	push	r24
    525a:	1f 92       	push	r1
    525c:	0f 2e       	mov	r0, r31
    525e:	81 2c       	mov	r8, r1
    5260:	f8 e7       	ldi	r31, 0x78	; 120
    5262:	9f 2e       	mov	r9, r31
    5264:	f0 2d       	mov	r31, r0
    5266:	a1 2c       	mov	r10, r1
    5268:	b1 2c       	mov	r11, r1
    526a:	c6 2c       	mov	r12, r6
    526c:	0f 2e       	mov	r0, r31
    526e:	f1 e8       	ldi	r31, 0x81	; 129
    5270:	ef 2e       	mov	r14, r31
    5272:	fa e1       	ldi	r31, 0x1A	; 26
    5274:	ff 2e       	mov	r15, r31
    5276:	f0 2d       	mov	r31, r0
    5278:	02 e3       	ldi	r16, 0x32	; 50
    527a:	10 e0       	ldi	r17, 0x00	; 0
    527c:	20 e2       	ldi	r18, 0x20	; 32
    527e:	30 e0       	ldi	r19, 0x00	; 0
    5280:	68 e2       	ldi	r22, 0x28	; 40
    5282:	70 e0       	ldi	r23, 0x00	; 0
    5284:	ce 01       	movw	r24, r28
    5286:	0e 94 2d 2e 	call	0x5c5a	; 0x5c5a <_ZN3TFT4drawEiiiiPA100_Khajjjj>
          clear(40, (122 - m_JumpHeight) + 50, 32, 8, BLACK);
    528a:	8f 81       	ldd	r24, Y+7	; 0x07
    528c:	4c ea       	ldi	r20, 0xAC	; 172
    528e:	50 e0       	ldi	r21, 0x00	; 0
    5290:	48 1b       	sub	r20, r24
    5292:	51 09       	sbc	r21, r1
    5294:	87 fd       	sbrc	r24, 7
    5296:	53 95       	inc	r21
    5298:	e1 2c       	mov	r14, r1
    529a:	f1 2c       	mov	r15, r1
    529c:	08 e0       	ldi	r16, 0x08	; 8
    529e:	10 e0       	ldi	r17, 0x00	; 0
    52a0:	20 e2       	ldi	r18, 0x20	; 32
    52a2:	30 e0       	ldi	r19, 0x00	; 0
    52a4:	68 e2       	ldi	r22, 0x28	; 40
    52a6:	70 e0       	ldi	r23, 0x00	; 0
    52a8:	ce 01       	movw	r24, r28
    52aa:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    52ae:	0f 90       	pop	r0
    52b0:	0f 90       	pop	r0
    52b2:	0f 90       	pop	r0
    52b4:	0f 90       	pop	r0
    52b6:	37 c0       	rjmp	.+110    	; 0x5326 <_ZN6Player7jumpingEv+0x1a6>
        }

        else
        {
          draw(40, 122 - m_JumpHeight, 32, 60, charDown, i, BLACK, MAROON, RED, WHITE);
    52b8:	8f 81       	ldd	r24, Y+7	; 0x07
    52ba:	a2 01       	movw	r20, r4
    52bc:	48 1b       	sub	r20, r24
    52be:	51 09       	sbc	r21, r1
    52c0:	87 fd       	sbrc	r24, 7
    52c2:	53 95       	inc	r21
    52c4:	df 92       	push	r13
    52c6:	df 92       	push	r13
    52c8:	88 ef       	ldi	r24, 0xF8	; 248
    52ca:	8f 93       	push	r24
    52cc:	1f 92       	push	r1
    52ce:	0f 2e       	mov	r0, r31
    52d0:	81 2c       	mov	r8, r1
    52d2:	f8 e7       	ldi	r31, 0x78	; 120
    52d4:	9f 2e       	mov	r9, r31
    52d6:	f0 2d       	mov	r31, r0
    52d8:	a1 2c       	mov	r10, r1
    52da:	b1 2c       	mov	r11, r1
    52dc:	c6 2c       	mov	r12, r6
    52de:	0f 2e       	mov	r0, r31
    52e0:	f9 e6       	ldi	r31, 0x69	; 105
    52e2:	ef 2e       	mov	r14, r31
    52e4:	fe e1       	ldi	r31, 0x1E	; 30
    52e6:	ff 2e       	mov	r15, r31
    52e8:	f0 2d       	mov	r31, r0
    52ea:	0c e3       	ldi	r16, 0x3C	; 60
    52ec:	10 e0       	ldi	r17, 0x00	; 0
    52ee:	20 e2       	ldi	r18, 0x20	; 32
    52f0:	30 e0       	ldi	r19, 0x00	; 0
    52f2:	68 e2       	ldi	r22, 0x28	; 40
    52f4:	70 e0       	ldi	r23, 0x00	; 0
    52f6:	ce 01       	movw	r24, r28
    52f8:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <_ZN3TFT4drawEiiiiPA120_Khajjjj>
          clear(40, (122 - m_JumpHeight) - 8, 32, 8, BLACK);
    52fc:	8f 81       	ldd	r24, Y+7	; 0x07
    52fe:	a1 01       	movw	r20, r2
    5300:	48 1b       	sub	r20, r24
    5302:	51 09       	sbc	r21, r1
    5304:	87 fd       	sbrc	r24, 7
    5306:	53 95       	inc	r21
    5308:	e1 2c       	mov	r14, r1
    530a:	f1 2c       	mov	r15, r1
    530c:	08 e0       	ldi	r16, 0x08	; 8
    530e:	10 e0       	ldi	r17, 0x00	; 0
    5310:	20 e2       	ldi	r18, 0x20	; 32
    5312:	30 e0       	ldi	r19, 0x00	; 0
    5314:	68 e2       	ldi	r22, 0x28	; 40
    5316:	70 e0       	ldi	r23, 0x00	; 0
    5318:	ce 01       	movw	r24, r28
    531a:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
    531e:	0f 90       	pop	r0
    5320:	0f 90       	pop	r0
    5322:	0f 90       	pop	r0
    5324:	0f 90       	pop	r0
        }

        m_IsDrawed = true;
    5326:	81 e0       	ldi	r24, 0x01	; 1
    5328:	8a 87       	std	Y+10, r24	; 0x0a
    }
  }

  if (m_IsDrawed == false)
  {
    for (int i=0; i<4; i++)
    532a:	8f ef       	ldi	r24, 0xFF	; 255
    532c:	68 1a       	sub	r6, r24
    532e:	78 0a       	sbc	r7, r24
    5330:	84 e0       	ldi	r24, 0x04	; 4
    5332:	68 16       	cp	r6, r24
    5334:	71 04       	cpc	r7, r1
    5336:	09 f0       	breq	.+2      	; 0x533a <_ZN6Player7jumpingEv+0x1ba>
    5338:	7c cf       	rjmp	.-264    	; 0x5232 <_ZN6Player7jumpingEv+0xb2>
    533a:	04 c0       	rjmp	.+8      	; 0x5344 <_ZN6Player7jumpingEv+0x1c4>
    {
      return;
    }
  }

  if (m_IsDrawed == false)
    533c:	8a 85       	ldd	r24, Y+10	; 0x0a
    533e:	88 23       	and	r24, r24
    5340:	09 f4       	brne	.+2      	; 0x5344 <_ZN6Player7jumpingEv+0x1c4>
    5342:	69 cf       	rjmp	.-302    	; 0x5216 <_ZN6Player7jumpingEv+0x96>

      }
    }
  }
  
}
    5344:	df 91       	pop	r29
    5346:	cf 91       	pop	r28
    5348:	1f 91       	pop	r17
    534a:	0f 91       	pop	r16
    534c:	ff 90       	pop	r15
    534e:	ef 90       	pop	r14
    5350:	df 90       	pop	r13
    5352:	cf 90       	pop	r12
    5354:	bf 90       	pop	r11
    5356:	af 90       	pop	r10
    5358:	9f 90       	pop	r9
    535a:	8f 90       	pop	r8
    535c:	7f 90       	pop	r7
    535e:	6f 90       	pop	r6
    5360:	5f 90       	pop	r5
    5362:	4f 90       	pop	r4
    5364:	3f 90       	pop	r3
    5366:	2f 90       	pop	r2
    5368:	08 95       	ret

0000536a <_ZN6Player4initEv>:
/*----------------------------------------//
            Initialize Player
//----------------------------------------*/

void Player::init(void)
{
    536a:	ef 92       	push	r14
    536c:	ff 92       	push	r15
    536e:	0f 93       	push	r16
    5370:	1f 93       	push	r17
    5372:	cf 93       	push	r28
    5374:	df 93       	push	r29
    5376:	ec 01       	movw	r28, r24
  clear(40, 140, 40, 40, BLACK);
    5378:	e1 2c       	mov	r14, r1
    537a:	f1 2c       	mov	r15, r1
    537c:	08 e2       	ldi	r16, 0x28	; 40
    537e:	10 e0       	ldi	r17, 0x00	; 0
    5380:	28 e2       	ldi	r18, 0x28	; 40
    5382:	30 e0       	ldi	r19, 0x00	; 0
    5384:	4c e8       	ldi	r20, 0x8C	; 140
    5386:	50 e0       	ldi	r21, 0x00	; 0
    5388:	68 e2       	ldi	r22, 0x28	; 40
    538a:	70 e0       	ldi	r23, 0x00	; 0
    538c:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <_ZN3TFT5clearEiiiij>
  m_Temp = 0;
    5390:	1c 82       	std	Y+4, r1	; 0x04
  m_JumpTemp = 0;
    5392:	1d 82       	std	Y+5, r1	; 0x05
  m_JumpHeight = 0;
    5394:	1f 82       	std	Y+7, r1	; 0x07
    5396:	df 91       	pop	r29
    5398:	cf 91       	pop	r28
    539a:	1f 91       	pop	r17
    539c:	0f 91       	pop	r16
    539e:	ff 90       	pop	r15
    53a0:	ef 90       	pop	r14
    53a2:	08 95       	ret

000053a4 <_ZN6Player5startEv>:
/*----------------------------------------//
                Start Player
//----------------------------------------*/

void Player::start(void)
{
    53a4:	cf 93       	push	r28
    53a6:	df 93       	push	r29
    53a8:	ec 01       	movw	r28, r24

  if (SW::interrupt0 == ON && m_IsReset == false)
    53aa:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <_ZN2SW10interrupt0E>
    53ae:	88 23       	and	r24, r24
    53b0:	59 f0       	breq	.+22     	; 0x53c8 <_ZN6Player5startEv+0x24>
    53b2:	88 85       	ldd	r24, Y+8	; 0x08
    53b4:	81 11       	cpse	r24, r1
    53b6:	08 c0       	rjmp	.+16     	; 0x53c8 <_ZN6Player5startEv+0x24>
  {
    init();
    53b8:	ce 01       	movw	r24, r28
    53ba:	0e 94 b5 29 	call	0x536a	; 0x536a <_ZN6Player4initEv>
    m_IsReset = true;
    53be:	81 e0       	ldi	r24, 0x01	; 1
    53c0:	88 87       	std	Y+8, r24	; 0x08
    m_IsUp = true;
    53c2:	89 87       	std	Y+9, r24	; 0x09
    isJump = true;
    53c4:	8b 87       	std	Y+11, r24	; 0x0b
    53c6:	07 c0       	rjmp	.+14     	; 0x53d6 <_ZN6Player5startEv+0x32>
  }

  if (isJump == false)
    53c8:	8b 85       	ldd	r24, Y+11	; 0x0b
    53ca:	81 11       	cpse	r24, r1
    53cc:	04 c0       	rjmp	.+8      	; 0x53d6 <_ZN6Player5startEv+0x32>
  {
    running();
    53ce:	ce 01       	movw	r24, r28
    53d0:	0e 94 53 28 	call	0x50a6	; 0x50a6 <_ZN6Player7runningEv>
    53d4:	03 c0       	rjmp	.+6      	; 0x53dc <_ZN6Player5startEv+0x38>
  }
  
  else
  {
    jumping();
    53d6:	ce 01       	movw	r24, r28
    53d8:	0e 94 c0 28 	call	0x5180	; 0x5180 <_ZN6Player7jumpingEv>
  }

}
    53dc:	df 91       	pop	r29
    53de:	cf 91       	pop	r28
    53e0:	08 95       	ret

000053e2 <_ZN3MCU7Setting8beginPinEaa>:

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    PCICR |= 0x04;
    53e2:	81 30       	cpi	r24, 0x01	; 1
    53e4:	89 f0       	breq	.+34     	; 0x5408 <_ZN3MCU7Setting8beginPinEaa+0x26>
    53e6:	82 30       	cpi	r24, 0x02	; 2
    53e8:	e1 f0       	breq	.+56     	; 0x5422 <_ZN3MCU7Setting8beginPinEaa+0x40>
    53ea:	81 11       	cpse	r24, r1
    53ec:	26 c0       	rjmp	.+76     	; 0x543a <_ZN3MCU7Setting8beginPinEaa+0x58>
    53ee:	24 b1       	in	r18, 0x04	; 4
    53f0:	81 e0       	ldi	r24, 0x01	; 1
    53f2:	90 e0       	ldi	r25, 0x00	; 0
    53f4:	02 c0       	rjmp	.+4      	; 0x53fa <_ZN3MCU7Setting8beginPinEaa+0x18>
    53f6:	88 0f       	add	r24, r24
    53f8:	99 1f       	adc	r25, r25
    53fa:	6a 95       	dec	r22
    53fc:	e2 f7       	brpl	.-8      	; 0x53f6 <_ZN3MCU7Setting8beginPinEaa+0x14>
    53fe:	82 2b       	or	r24, r18
    5400:	84 b9       	out	0x04, r24	; 4
    5402:	85 b1       	in	r24, 0x05	; 5
    5404:	85 b9       	out	0x05, r24	; 5
    5406:	08 95       	ret
    5408:	27 b1       	in	r18, 0x07	; 7
    540a:	81 e0       	ldi	r24, 0x01	; 1
    540c:	90 e0       	ldi	r25, 0x00	; 0
    540e:	02 c0       	rjmp	.+4      	; 0x5414 <_ZN3MCU7Setting8beginPinEaa+0x32>
    5410:	88 0f       	add	r24, r24
    5412:	99 1f       	adc	r25, r25
    5414:	6a 95       	dec	r22
    5416:	e2 f7       	brpl	.-8      	; 0x5410 <_ZN3MCU7Setting8beginPinEaa+0x2e>
    5418:	82 2b       	or	r24, r18
    541a:	87 b9       	out	0x07, r24	; 7
    541c:	88 b1       	in	r24, 0x08	; 8
    541e:	88 b9       	out	0x08, r24	; 8
    5420:	08 95       	ret
    5422:	2a b1       	in	r18, 0x0a	; 10
    5424:	81 e0       	ldi	r24, 0x01	; 1
    5426:	90 e0       	ldi	r25, 0x00	; 0
    5428:	02 c0       	rjmp	.+4      	; 0x542e <_ZN3MCU7Setting8beginPinEaa+0x4c>
    542a:	88 0f       	add	r24, r24
    542c:	99 1f       	adc	r25, r25
    542e:	6a 95       	dec	r22
    5430:	e2 f7       	brpl	.-8      	; 0x542a <_ZN3MCU7Setting8beginPinEaa+0x48>
    5432:	82 2b       	or	r24, r18
    5434:	8a b9       	out	0x0a, r24	; 10
    5436:	8b b1       	in	r24, 0x0b	; 11
    5438:	8b b9       	out	0x0b, r24	; 11
    543a:	08 95       	ret

0000543c <_ZN3MCU7Setting9beginPortEab>:
    543c:	61 95       	neg	r22
    543e:	81 30       	cpi	r24, 0x01	; 1
    5440:	39 f0       	breq	.+14     	; 0x5450 <_ZN3MCU7Setting9beginPortEab+0x14>
    5442:	82 30       	cpi	r24, 0x02	; 2
    5444:	41 f0       	breq	.+16     	; 0x5456 <_ZN3MCU7Setting9beginPortEab+0x1a>
    5446:	81 11       	cpse	r24, r1
    5448:	08 c0       	rjmp	.+16     	; 0x545a <_ZN3MCU7Setting9beginPortEab+0x1e>
    544a:	64 b9       	out	0x04, r22	; 4
    544c:	15 b8       	out	0x05, r1	; 5
    544e:	08 95       	ret
    5450:	67 b9       	out	0x07, r22	; 7
    5452:	18 b8       	out	0x08, r1	; 8
    5454:	08 95       	ret
    5456:	6a b9       	out	0x0a, r22	; 10
    5458:	1b b8       	out	0x0b, r1	; 11
    545a:	08 95       	ret

0000545c <_ZN3MCU7Setting8beginINTEaa>:
    545c:	9d b3       	in	r25, 0x1d	; 29
    545e:	21 e0       	ldi	r18, 0x01	; 1
    5460:	30 e0       	ldi	r19, 0x00	; 0
    5462:	02 c0       	rjmp	.+4      	; 0x5468 <_ZN3MCU7Setting8beginINTEaa+0xc>
    5464:	22 0f       	add	r18, r18
    5466:	33 1f       	adc	r19, r19
    5468:	8a 95       	dec	r24
    546a:	e2 f7       	brpl	.-8      	; 0x5464 <_ZN3MCU7Setting8beginINTEaa+0x8>
    546c:	29 2b       	or	r18, r25
    546e:	2d bb       	out	0x1d, r18	; 29
    5470:	61 30       	cpi	r22, 0x01	; 1
    5472:	39 f0       	breq	.+14     	; 0x5482 <_ZN3MCU7Setting8beginINTEaa+0x26>
    5474:	62 30       	cpi	r22, 0x02	; 2
    5476:	49 f0       	breq	.+18     	; 0x548a <_ZN3MCU7Setting8beginINTEaa+0x2e>
    5478:	61 11       	cpse	r22, r1
    547a:	0a c0       	rjmp	.+20     	; 0x5490 <_ZN3MCU7Setting8beginINTEaa+0x34>
    547c:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    5480:	08 95       	ret
    5482:	8a e0       	ldi	r24, 0x0A	; 10
    5484:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    5488:	08 95       	ret
    548a:	8f e0       	ldi	r24, 0x0F	; 15
    548c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    5490:	08 95       	ret

00005492 <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    5492:	81 30       	cpi	r24, 0x01	; 1
    5494:	99 f1       	breq	.+102    	; 0x54fc <_ZN3MCU7Setting10beginTimerEab+0x6a>
    5496:	82 30       	cpi	r24, 0x02	; 2
    5498:	b1 f0       	breq	.+44     	; 0x54c6 <_ZN3MCU7Setting10beginTimerEab+0x34>
    549a:	81 11       	cpse	r24, r1
    549c:	4f c0       	rjmp	.+158    	; 0x553c <_ZN3MCU7Setting10beginTimerEab+0xaa>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    549e:	61 11       	cpse	r22, r1
    54a0:	08 c0       	rjmp	.+16     	; 0x54b2 <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    54a2:	81 e0       	ldi	r24, 0x01	; 1
    54a4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    54a8:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    54aa:	85 e0       	ldi	r24, 0x05	; 5
    54ac:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    54ae:	16 bc       	out	0x26, r1	; 38
    54b0:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    54b2:	82 e0       	ldi	r24, 0x02	; 2
    54b4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    54b8:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    54ba:	85 e0       	ldi	r24, 0x05	; 5
    54bc:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    54be:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    54c0:	8f ef       	ldi	r24, 0xFF	; 255
    54c2:	87 bd       	out	0x27, r24	; 39
    54c4:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    54c6:	61 11       	cpse	r22, r1
    54c8:	0b c0       	rjmp	.+22     	; 0x54e0 <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    54ca:	81 e0       	ldi	r24, 0x01	; 1
    54cc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    54d0:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    54d4:	84 e0       	ldi	r24, 0x04	; 4
    54d6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    54da:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    54de:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    54e0:	82 e0       	ldi	r24, 0x02	; 2
    54e2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    54e6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    54ea:	84 e0       	ldi	r24, 0x04	; 4
    54ec:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    54f0:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    54f4:	89 ef       	ldi	r24, 0xF9	; 249
    54f6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    54fa:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    54fc:	61 11       	cpse	r22, r1
    54fe:	0d c0       	rjmp	.+26     	; 0x551a <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    5500:	81 e0       	ldi	r24, 0x01	; 1
    5502:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, Normal Mode
    5506:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x05;
    550a:	85 e0       	ldi	r24, 0x05	; 5
    550c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    5510:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    5514:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    5518:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    551a:	82 e0       	ldi	r24, 0x02	; 2
    551c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, CTC Mode
    5520:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0D;
    5524:	8d e0       	ldi	r24, 0x0D	; 13
    5526:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    552a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    552e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    5532:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    5536:	8f ef       	ldi	r24, 0xFF	; 255
    5538:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    553c:	08 95       	ret

0000553e <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    553e:	85 30       	cpi	r24, 0x05	; 5
    5540:	09 f4       	brne	.+2      	; 0x5544 <_ZN3MCU7Setting8beginPWMEab+0x6>
    5542:	5d c0       	rjmp	.+186    	; 0x55fe <_ZN3MCU7Setting8beginPWMEab+0xc0>
    5544:	2c f4       	brge	.+10     	; 0x5550 <_ZN3MCU7Setting8beginPWMEab+0x12>
    5546:	83 30       	cpi	r24, 0x03	; 3
    5548:	51 f0       	breq	.+20     	; 0x555e <_ZN3MCU7Setting8beginPWMEab+0x20>
    554a:	84 30       	cpi	r24, 0x04	; 4
    554c:	c1 f0       	breq	.+48     	; 0x557e <_ZN3MCU7Setting8beginPWMEab+0x40>
    554e:	08 95       	ret
    5550:	87 30       	cpi	r24, 0x07	; 7
    5552:	29 f1       	breq	.+74     	; 0x559e <_ZN3MCU7Setting8beginPWMEab+0x60>
    5554:	0c f4       	brge	.+2      	; 0x5558 <_ZN3MCU7Setting8beginPWMEab+0x1a>
    5556:	6f c0       	rjmp	.+222    	; 0x5636 <_ZN3MCU7Setting8beginPWMEab+0xf8>
    5558:	88 30       	cpi	r24, 0x08	; 8
    555a:	c9 f1       	breq	.+114    	; 0x55ce <_ZN3MCU7Setting8beginPWMEab+0x90>
    555c:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    555e:	61 11       	cpse	r22, r1
    5560:	07 c0       	rjmp	.+14     	; 0x5570 <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    5562:	84 b5       	in	r24, 0x24	; 36
    5564:	81 64       	ori	r24, 0x41	; 65
    5566:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    5568:	8c e0       	ldi	r24, 0x0C	; 12
    556a:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    556c:	16 bc       	out	0x26, r1	; 38
    556e:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    5570:	84 b5       	in	r24, 0x24	; 36
    5572:	83 64       	ori	r24, 0x43	; 67
    5574:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    5576:	8c e0       	ldi	r24, 0x0C	; 12
    5578:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    557a:	16 bc       	out	0x26, r1	; 38
    557c:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    557e:	61 11       	cpse	r22, r1
    5580:	07 c0       	rjmp	.+14     	; 0x5590 <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    5582:	84 b5       	in	r24, 0x24	; 36
    5584:	81 61       	ori	r24, 0x11	; 17
    5586:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    5588:	8c e0       	ldi	r24, 0x0C	; 12
    558a:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    558c:	16 bc       	out	0x26, r1	; 38
    558e:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    5590:	84 b5       	in	r24, 0x24	; 36
    5592:	83 61       	ori	r24, 0x13	; 19
    5594:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    5596:	8c e0       	ldi	r24, 0x0C	; 12
    5598:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    559a:	16 bc       	out	0x26, r1	; 38
    559c:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    559e:	61 11       	cpse	r22, r1
    55a0:	0b c0       	rjmp	.+22     	; 0x55b8 <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    55a2:	e0 eb       	ldi	r30, 0xB0	; 176
    55a4:	f0 e0       	ldi	r31, 0x00	; 0
    55a6:	80 81       	ld	r24, Z
    55a8:	81 68       	ori	r24, 0x81	; 129
    55aa:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    55ac:	86 e0       	ldi	r24, 0x06	; 6
    55ae:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    55b2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    55b6:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    55b8:	e0 eb       	ldi	r30, 0xB0	; 176
    55ba:	f0 e0       	ldi	r31, 0x00	; 0
    55bc:	80 81       	ld	r24, Z
    55be:	83 68       	ori	r24, 0x83	; 131
    55c0:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    55c2:	86 e0       	ldi	r24, 0x06	; 6
    55c4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    55c8:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    55cc:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    55ce:	61 11       	cpse	r22, r1
    55d0:	0b c0       	rjmp	.+22     	; 0x55e8 <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    55d2:	e0 eb       	ldi	r30, 0xB0	; 176
    55d4:	f0 e0       	ldi	r31, 0x00	; 0
    55d6:	80 81       	ld	r24, Z
    55d8:	81 62       	ori	r24, 0x21	; 33
    55da:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    55dc:	86 e0       	ldi	r24, 0x06	; 6
    55de:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    55e2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    55e6:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    55e8:	e0 eb       	ldi	r30, 0xB0	; 176
    55ea:	f0 e0       	ldi	r31, 0x00	; 0
    55ec:	80 81       	ld	r24, Z
    55ee:	83 62       	ori	r24, 0x23	; 35
    55f0:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    55f2:	86 e0       	ldi	r24, 0x06	; 6
    55f4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    55f8:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    55fc:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    55fe:	61 11       	cpse	r22, r1
    5600:	0d c0       	rjmp	.+26     	; 0x561c <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    5602:	e0 e8       	ldi	r30, 0x80	; 128
    5604:	f0 e0       	ldi	r31, 0x00	; 0
    5606:	80 81       	ld	r24, Z
    5608:	83 68       	ori	r24, 0x83	; 131
    560a:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    560c:	84 e0       	ldi	r24, 0x04	; 4
    560e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    5612:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    5616:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    561a:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    561c:	e0 e8       	ldi	r30, 0x80	; 128
    561e:	f0 e0       	ldi	r31, 0x00	; 0
    5620:	80 81       	ld	r24, Z
    5622:	83 68       	ori	r24, 0x83	; 131
    5624:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    5626:	8c e0       	ldi	r24, 0x0C	; 12
    5628:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    562c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    5630:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    5634:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    5636:	61 11       	cpse	r22, r1
    5638:	0d c0       	rjmp	.+26     	; 0x5654 <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    563a:	e0 e8       	ldi	r30, 0x80	; 128
    563c:	f0 e0       	ldi	r31, 0x00	; 0
    563e:	80 81       	ld	r24, Z
    5640:	83 62       	ori	r24, 0x23	; 35
    5642:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    5644:	84 e0       	ldi	r24, 0x04	; 4
    5646:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    564a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    564e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    5652:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    5654:	e0 e8       	ldi	r30, 0x80	; 128
    5656:	f0 e0       	ldi	r31, 0x00	; 0
    5658:	80 81       	ld	r24, Z
    565a:	83 62       	ori	r24, 0x23	; 35
    565c:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    565e:	8c e0       	ldi	r24, 0x0C	; 12
    5660:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    5664:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    5668:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    566c:	08 95       	ret

0000566e <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    566e:	80 e5       	ldi	r24, 0x50	; 80
    5670:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    5672:	81 e0       	ldi	r24, 0x01	; 1
    5674:	8d bd       	out	0x2d, r24	; 45
    5676:	08 95       	ret

00005678 <_ZN2SW6updateEv>:
              update Switch
//----------------------------------------*/

void SW::update(void)
{
  newData = PINC | 0xC0;
    5678:	86 b1       	in	r24, 0x06	; 6
    567a:	80 6c       	ori	r24, 0xC0	; 192
    567c:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <_ZN2SW7newDataE>
  result = oldData & ~newData;
    5680:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <_ZN2SW7newDataE>
    5684:	90 91 51 02 	lds	r25, 0x0251	; 0x800251 <_ZN2SW7oldDataE>
    5688:	80 95       	com	r24
    568a:	89 23       	and	r24, r25
    568c:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <_ZN2SW6resultE>
  oldData = newData;
    5690:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <_ZN2SW7newDataE>
    5694:	80 93 51 02 	sts	0x0251, r24	; 0x800251 <_ZN2SW7oldDataE>
    5698:	08 95       	ret

0000569a <_ZN2SW4initEv>:
            Initialize Switch
//----------------------------------------*/

void SW::init(void)
{
  interrupt0 = OFF;
    569a:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <_ZN2SW10interrupt0E>
  interrupt1 = OFF;
    569e:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <_ZN2SW10interrupt1E>
  up = OFF;
    56a2:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <_ZN2SW2upE>
  down = OFF;
    56a6:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <_ZN2SW4downE>
  left = OFF;
    56aa:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <_ZN2SW4leftE>
  right = OFF;
    56ae:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <_ZN2SW5rightE>
  start = OFF;
    56b2:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <_ZN2SW5startE>
  select = OFF;
    56b6:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <_ZN2SW6selectE>
    56ba:	08 95       	ret

000056bc <_ZN3SPI7sendBitEh>:

void TFT::fillPixel(int16_t xPos, int16_t yPos, uint16_t colorValue)
{
  setAddress(xPos, yPos, xPos, yPos);
  exportLongData(colorValue);
}
    56bc:	6e bd       	out	0x2e, r22	; 46
    56be:	0d b4       	in	r0, 0x2d	; 45
    56c0:	07 fe       	sbrs	r0, 7
    56c2:	fd cf       	rjmp	.-6      	; 0x56be <_ZN3SPI7sendBitEh+0x2>
    56c4:	08 95       	ret

000056c6 <_ZN3SPI13exportCommandEh>:
    56c6:	2a 98       	cbi	0x05, 2	; 5
    56c8:	28 98       	cbi	0x05, 0	; 5
    56ca:	0e 94 5e 2b 	call	0x56bc	; 0x56bc <_ZN3SPI7sendBitEh>
    56ce:	28 9a       	sbi	0x05, 0	; 5
    56d0:	08 95       	ret

000056d2 <_ZN3SPI10exportDataEh>:
    56d2:	2a 9a       	sbi	0x05, 2	; 5
    56d4:	28 98       	cbi	0x05, 0	; 5
    56d6:	0e 94 5e 2b 	call	0x56bc	; 0x56bc <_ZN3SPI7sendBitEh>
    56da:	28 9a       	sbi	0x05, 0	; 5
    56dc:	08 95       	ret

000056de <_ZN3SPI14exportLongDataEj>:
    56de:	1f 93       	push	r17
    56e0:	cf 93       	push	r28
    56e2:	df 93       	push	r29
    56e4:	ec 01       	movw	r28, r24
    56e6:	16 2f       	mov	r17, r22
    56e8:	67 2f       	mov	r22, r23
    56ea:	2a 9a       	sbi	0x05, 2	; 5
    56ec:	28 98       	cbi	0x05, 0	; 5
    56ee:	0e 94 5e 2b 	call	0x56bc	; 0x56bc <_ZN3SPI7sendBitEh>
    56f2:	61 2f       	mov	r22, r17
    56f4:	ce 01       	movw	r24, r28
    56f6:	0e 94 5e 2b 	call	0x56bc	; 0x56bc <_ZN3SPI7sendBitEh>
    56fa:	28 9a       	sbi	0x05, 0	; 5
    56fc:	df 91       	pop	r29
    56fe:	cf 91       	pop	r28
    5700:	1f 91       	pop	r17
    5702:	08 95       	ret

00005704 <_ZN3TFT5beginEv>:
    5704:	cf 93       	push	r28
    5706:	df 93       	push	r29
    5708:	ec 01       	movw	r28, r24
    570a:	28 9a       	sbi	0x05, 0	; 5
    570c:	29 98       	cbi	0x05, 1	; 5
    570e:	2f ef       	ldi	r18, 0xFF	; 255
    5710:	89 ef       	ldi	r24, 0xF9	; 249
    5712:	90 e0       	ldi	r25, 0x00	; 0
    5714:	21 50       	subi	r18, 0x01	; 1
    5716:	80 40       	sbci	r24, 0x00	; 0
    5718:	90 40       	sbci	r25, 0x00	; 0
    571a:	e1 f7       	brne	.-8      	; 0x5714 <_ZN3TFT5beginEv+0x10>
    571c:	00 c0       	rjmp	.+0      	; 0x571e <_ZN3TFT5beginEv+0x1a>
    571e:	00 00       	nop
    5720:	29 9a       	sbi	0x05, 1	; 5
    5722:	2f ef       	ldi	r18, 0xFF	; 255
    5724:	89 e6       	ldi	r24, 0x69	; 105
    5726:	98 e1       	ldi	r25, 0x18	; 24
    5728:	21 50       	subi	r18, 0x01	; 1
    572a:	80 40       	sbci	r24, 0x00	; 0
    572c:	90 40       	sbci	r25, 0x00	; 0
    572e:	e1 f7       	brne	.-8      	; 0x5728 <_ZN3TFT5beginEv+0x24>
    5730:	00 c0       	rjmp	.+0      	; 0x5732 <_ZN3TFT5beginEv+0x2e>
    5732:	00 00       	nop
    5734:	61 e0       	ldi	r22, 0x01	; 1
    5736:	ce 01       	movw	r24, r28
    5738:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    573c:	2f ef       	ldi	r18, 0xFF	; 255
    573e:	89 ef       	ldi	r24, 0xF9	; 249
    5740:	90 e0       	ldi	r25, 0x00	; 0
    5742:	21 50       	subi	r18, 0x01	; 1
    5744:	80 40       	sbci	r24, 0x00	; 0
    5746:	90 40       	sbci	r25, 0x00	; 0
    5748:	e1 f7       	brne	.-8      	; 0x5742 <_ZN3TFT5beginEv+0x3e>
    574a:	00 c0       	rjmp	.+0      	; 0x574c <_ZN3TFT5beginEv+0x48>
    574c:	00 00       	nop
    574e:	60 ec       	ldi	r22, 0xC0	; 192
    5750:	ce 01       	movw	r24, r28
    5752:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5756:	6f e3       	ldi	r22, 0x3F	; 63
    5758:	ce 01       	movw	r24, r28
    575a:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    575e:	66 e3       	ldi	r22, 0x36	; 54
    5760:	ce 01       	movw	r24, r28
    5762:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5766:	68 e4       	ldi	r22, 0x48	; 72
    5768:	ce 01       	movw	r24, r28
    576a:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    576e:	6a e3       	ldi	r22, 0x3A	; 58
    5770:	ce 01       	movw	r24, r28
    5772:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5776:	65 e5       	ldi	r22, 0x55	; 85
    5778:	ce 01       	movw	r24, r28
    577a:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    577e:	60 e2       	ldi	r22, 0x20	; 32
    5780:	ce 01       	movw	r24, r28
    5782:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5786:	61 e1       	ldi	r22, 0x11	; 17
    5788:	ce 01       	movw	r24, r28
    578a:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    578e:	2f ef       	ldi	r18, 0xFF	; 255
    5790:	8d ee       	ldi	r24, 0xED	; 237
    5792:	92 e0       	ldi	r25, 0x02	; 2
    5794:	21 50       	subi	r18, 0x01	; 1
    5796:	80 40       	sbci	r24, 0x00	; 0
    5798:	90 40       	sbci	r25, 0x00	; 0
    579a:	e1 f7       	brne	.-8      	; 0x5794 <_ZN3TFT5beginEv+0x90>
    579c:	00 c0       	rjmp	.+0      	; 0x579e <_ZN3TFT5beginEv+0x9a>
    579e:	00 00       	nop
    57a0:	69 e2       	ldi	r22, 0x29	; 41
    57a2:	ce 01       	movw	r24, r28
    57a4:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    57a8:	df 91       	pop	r29
    57aa:	cf 91       	pop	r28
    57ac:	08 95       	ret

000057ae <_ZN3TFT11setRotationEa>:
    57ae:	1f 93       	push	r17
    57b0:	cf 93       	push	r28
    57b2:	df 93       	push	r29
    57b4:	ec 01       	movw	r28, r24
    57b6:	16 2f       	mov	r17, r22
    57b8:	66 e3       	ldi	r22, 0x36	; 54
    57ba:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    57be:	11 30       	cpi	r17, 0x01	; 1
    57c0:	89 f0       	breq	.+34     	; 0x57e4 <_ZN3TFT11setRotationEa+0x36>
    57c2:	12 30       	cpi	r17, 0x02	; 2
    57c4:	a1 f0       	breq	.+40     	; 0x57ee <_ZN3TFT11setRotationEa+0x40>
    57c6:	11 11       	cpse	r17, r1
    57c8:	16 c0       	rjmp	.+44     	; 0x57f6 <_ZN3TFT11setRotationEa+0x48>
    57ca:	68 e2       	ldi	r22, 0x28	; 40
    57cc:	ce 01       	movw	r24, r28
    57ce:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    57d2:	88 81       	ld	r24, Y
    57d4:	99 81       	ldd	r25, Y+1	; 0x01
    57d6:	2a 81       	ldd	r18, Y+2	; 0x02
    57d8:	3b 81       	ldd	r19, Y+3	; 0x03
    57da:	39 83       	std	Y+1, r19	; 0x01
    57dc:	28 83       	st	Y, r18
    57de:	9b 83       	std	Y+3, r25	; 0x03
    57e0:	8a 83       	std	Y+2, r24	; 0x02
    57e2:	09 c0       	rjmp	.+18     	; 0x57f6 <_ZN3TFT11setRotationEa+0x48>
    57e4:	68 e4       	ldi	r22, 0x48	; 72
    57e6:	ce 01       	movw	r24, r28
    57e8:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    57ec:	04 c0       	rjmp	.+8      	; 0x57f6 <_ZN3TFT11setRotationEa+0x48>
    57ee:	68 e8       	ldi	r22, 0x88	; 136
    57f0:	ce 01       	movw	r24, r28
    57f2:	0e 94 69 2b 	call	0x56d2	; 0x56d2 <_ZN3SPI10exportDataEh>
    57f6:	df 91       	pop	r29
    57f8:	cf 91       	pop	r28
    57fa:	1f 91       	pop	r17
    57fc:	08 95       	ret

000057fe <_ZN3TFT10setAddressEiiii>:
    57fe:	af 92       	push	r10
    5800:	bf 92       	push	r11
    5802:	cf 92       	push	r12
    5804:	df 92       	push	r13
    5806:	ef 92       	push	r14
    5808:	ff 92       	push	r15
    580a:	0f 93       	push	r16
    580c:	1f 93       	push	r17
    580e:	cf 93       	push	r28
    5810:	df 93       	push	r29
    5812:	ec 01       	movw	r28, r24
    5814:	5b 01       	movw	r10, r22
    5816:	7a 01       	movw	r14, r20
    5818:	69 01       	movw	r12, r18
    581a:	6a e2       	ldi	r22, 0x2A	; 42
    581c:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5820:	b5 01       	movw	r22, r10
    5822:	ce 01       	movw	r24, r28
    5824:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5828:	b6 01       	movw	r22, r12
    582a:	ce 01       	movw	r24, r28
    582c:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5830:	6b e2       	ldi	r22, 0x2B	; 43
    5832:	ce 01       	movw	r24, r28
    5834:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5838:	b7 01       	movw	r22, r14
    583a:	ce 01       	movw	r24, r28
    583c:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5840:	b8 01       	movw	r22, r16
    5842:	ce 01       	movw	r24, r28
    5844:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5848:	6c e2       	ldi	r22, 0x2C	; 44
    584a:	ce 01       	movw	r24, r28
    584c:	0e 94 63 2b 	call	0x56c6	; 0x56c6 <_ZN3SPI13exportCommandEh>
    5850:	df 91       	pop	r29
    5852:	cf 91       	pop	r28
    5854:	1f 91       	pop	r17
    5856:	0f 91       	pop	r16
    5858:	ff 90       	pop	r15
    585a:	ef 90       	pop	r14
    585c:	df 90       	pop	r13
    585e:	cf 90       	pop	r12
    5860:	bf 90       	pop	r11
    5862:	af 90       	pop	r10
    5864:	08 95       	ret

00005866 <_ZN3TFT10fillScreenEj>:
    5866:	cf 92       	push	r12
    5868:	df 92       	push	r13
    586a:	ef 92       	push	r14
    586c:	ff 92       	push	r15
    586e:	0f 93       	push	r16
    5870:	1f 93       	push	r17
    5872:	cf 93       	push	r28
    5874:	df 93       	push	r29
    5876:	7c 01       	movw	r14, r24
    5878:	6b 01       	movw	r12, r22
    587a:	fc 01       	movw	r30, r24
    587c:	02 81       	ldd	r16, Z+2	; 0x02
    587e:	13 81       	ldd	r17, Z+3	; 0x03
    5880:	01 50       	subi	r16, 0x01	; 1
    5882:	11 09       	sbc	r17, r1
    5884:	20 81       	ld	r18, Z
    5886:	31 81       	ldd	r19, Z+1	; 0x01
    5888:	21 50       	subi	r18, 0x01	; 1
    588a:	31 09       	sbc	r19, r1
    588c:	40 e0       	ldi	r20, 0x00	; 0
    588e:	50 e0       	ldi	r21, 0x00	; 0
    5890:	60 e0       	ldi	r22, 0x00	; 0
    5892:	70 e0       	ldi	r23, 0x00	; 0
    5894:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>
    5898:	f7 01       	movw	r30, r14
    589a:	82 81       	ldd	r24, Z+2	; 0x02
    589c:	93 81       	ldd	r25, Z+3	; 0x03
    589e:	18 16       	cp	r1, r24
    58a0:	19 06       	cpc	r1, r25
    58a2:	ec f4       	brge	.+58     	; 0x58de <_ZN3TFT10fillScreenEj+0x78>
    58a4:	00 e0       	ldi	r16, 0x00	; 0
    58a6:	10 e0       	ldi	r17, 0x00	; 0
    58a8:	f7 01       	movw	r30, r14
    58aa:	80 81       	ld	r24, Z
    58ac:	91 81       	ldd	r25, Z+1	; 0x01
    58ae:	18 16       	cp	r1, r24
    58b0:	19 06       	cpc	r1, r25
    58b2:	6c f4       	brge	.+26     	; 0x58ce <_ZN3TFT10fillScreenEj+0x68>
    58b4:	c0 e0       	ldi	r28, 0x00	; 0
    58b6:	d0 e0       	ldi	r29, 0x00	; 0
    58b8:	b6 01       	movw	r22, r12
    58ba:	c7 01       	movw	r24, r14
    58bc:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    58c0:	21 96       	adiw	r28, 0x01	; 1
    58c2:	f7 01       	movw	r30, r14
    58c4:	80 81       	ld	r24, Z
    58c6:	91 81       	ldd	r25, Z+1	; 0x01
    58c8:	c8 17       	cp	r28, r24
    58ca:	d9 07       	cpc	r29, r25
    58cc:	ac f3       	brlt	.-22     	; 0x58b8 <_ZN3TFT10fillScreenEj+0x52>
    58ce:	0f 5f       	subi	r16, 0xFF	; 255
    58d0:	1f 4f       	sbci	r17, 0xFF	; 255
    58d2:	f7 01       	movw	r30, r14
    58d4:	82 81       	ldd	r24, Z+2	; 0x02
    58d6:	93 81       	ldd	r25, Z+3	; 0x03
    58d8:	08 17       	cp	r16, r24
    58da:	19 07       	cpc	r17, r25
    58dc:	2c f3       	brlt	.-54     	; 0x58a8 <_ZN3TFT10fillScreenEj+0x42>
    58de:	df 91       	pop	r29
    58e0:	cf 91       	pop	r28
    58e2:	1f 91       	pop	r17
    58e4:	0f 91       	pop	r16
    58e6:	ff 90       	pop	r15
    58e8:	ef 90       	pop	r14
    58ea:	df 90       	pop	r13
    58ec:	cf 90       	pop	r12
    58ee:	08 95       	ret

000058f0 <_ZN3TFT5clearEiiiij>:
/*----------------------------------------//
                Clear Screen
//----------------------------------------*/

void TFT::clear(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
    58f0:	8f 92       	push	r8
    58f2:	9f 92       	push	r9
    58f4:	af 92       	push	r10
    58f6:	bf 92       	push	r11
    58f8:	cf 92       	push	r12
    58fa:	df 92       	push	r13
    58fc:	ef 92       	push	r14
    58fe:	ff 92       	push	r15
    5900:	0f 93       	push	r16
    5902:	1f 93       	push	r17
    5904:	cf 93       	push	r28
    5906:	df 93       	push	r29
    5908:	6c 01       	movw	r12, r24
    590a:	49 01       	movw	r8, r18
    590c:	58 01       	movw	r10, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    590e:	8a 01       	movw	r16, r20
    5910:	0a 0d       	add	r16, r10
    5912:	1b 1d       	adc	r17, r11
    5914:	01 50       	subi	r16, 0x01	; 1
    5916:	11 09       	sbc	r17, r1
    5918:	9b 01       	movw	r18, r22
    591a:	28 0d       	add	r18, r8
    591c:	39 1d       	adc	r19, r9
    591e:	21 50       	subi	r18, 0x01	; 1
    5920:	31 09       	sbc	r19, r1
    5922:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>

  for (int yPos=height; yPos>0; yPos--)
    5926:	1a 14       	cp	r1, r10
    5928:	1b 04       	cpc	r1, r11
    592a:	74 f4       	brge	.+28     	; 0x5948 <_ZN3TFT5clearEiiiij+0x58>
  {
    for (int xPos=width; xPos>0; xPos--)
    592c:	18 14       	cp	r1, r8
    592e:	19 04       	cpc	r1, r9
    5930:	3c f4       	brge	.+14     	; 0x5940 <_ZN3TFT5clearEiiiij+0x50>
    5932:	e4 01       	movw	r28, r8
    {
      exportLongData(colorValue);
    5934:	b7 01       	movw	r22, r14
    5936:	c6 01       	movw	r24, r12
    5938:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
  {
    for (int xPos=width; xPos>0; xPos--)
    593c:	21 97       	sbiw	r28, 0x01	; 1
    593e:	d1 f7       	brne	.-12     	; 0x5934 <_ZN3TFT5clearEiiiij+0x44>
void TFT::clear(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
    5940:	81 e0       	ldi	r24, 0x01	; 1
    5942:	a8 1a       	sub	r10, r24
    5944:	b1 08       	sbc	r11, r1
    5946:	91 f7       	brne	.-28     	; 0x592c <_ZN3TFT5clearEiiiij+0x3c>
    {
      exportLongData(colorValue);
    }
  }

}
    5948:	df 91       	pop	r29
    594a:	cf 91       	pop	r28
    594c:	1f 91       	pop	r17
    594e:	0f 91       	pop	r16
    5950:	ff 90       	pop	r15
    5952:	ef 90       	pop	r14
    5954:	df 90       	pop	r13
    5956:	cf 90       	pop	r12
    5958:	bf 90       	pop	r11
    595a:	af 90       	pop	r10
    595c:	9f 90       	pop	r9
    595e:	8f 90       	pop	r8
    5960:	08 95       	ret

00005962 <_ZN3TFT4drawEiiiiPKhjj>:
                Draw Bitmap
//----------------------------------------*/

void TFT::draw(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
  uint16_t color0, uint16_t color1)
{
    5962:	3f 92       	push	r3
    5964:	4f 92       	push	r4
    5966:	5f 92       	push	r5
    5968:	6f 92       	push	r6
    596a:	7f 92       	push	r7
    596c:	8f 92       	push	r8
    596e:	9f 92       	push	r9
    5970:	af 92       	push	r10
    5972:	bf 92       	push	r11
    5974:	cf 92       	push	r12
    5976:	df 92       	push	r13
    5978:	ef 92       	push	r14
    597a:	ff 92       	push	r15
    597c:	0f 93       	push	r16
    597e:	1f 93       	push	r17
    5980:	cf 93       	push	r28
    5982:	df 93       	push	r29
    5984:	cd b7       	in	r28, 0x3d	; 61
    5986:	de b7       	in	r29, 0x3e	; 62
    5988:	2a 97       	sbiw	r28, 0x0a	; 10
    598a:	0f b6       	in	r0, 0x3f	; 63
    598c:	f8 94       	cli
    598e:	de bf       	out	0x3e, r29	; 62
    5990:	0f be       	out	0x3f, r0	; 63
    5992:	cd bf       	out	0x3d, r28	; 61
    5994:	4c 01       	movw	r8, r24
    5996:	39 01       	movw	r6, r18
    5998:	1a 83       	std	Y+2, r17	; 0x02
    599a:	09 83       	std	Y+1, r16	; 0x01

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    599c:	04 0f       	add	r16, r20
    599e:	15 1f       	adc	r17, r21
    59a0:	01 50       	subi	r16, 0x01	; 1
    59a2:	11 09       	sbc	r17, r1
    59a4:	9b 01       	movw	r18, r22
    59a6:	26 0d       	add	r18, r6
    59a8:	37 1d       	adc	r19, r7
    59aa:	21 50       	subi	r18, 0x01	; 1
    59ac:	31 09       	sbc	r19, r1
    59ae:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    59b2:	89 81       	ldd	r24, Y+1	; 0x01
    59b4:	9a 81       	ldd	r25, Y+2	; 0x02
    59b6:	99 23       	and	r25, r25
    59b8:	0c f4       	brge	.+2      	; 0x59bc <_ZN3TFT4drawEiiiiPKhjj+0x5a>
    59ba:	01 96       	adiw	r24, 0x01	; 1
    59bc:	9c 01       	movw	r18, r24
    59be:	35 95       	asr	r19
    59c0:	27 95       	ror	r18
    59c2:	38 87       	std	Y+8, r19	; 0x08
    59c4:	2f 83       	std	Y+7, r18	; 0x07
    59c6:	12 16       	cp	r1, r18
    59c8:	13 06       	cpc	r1, r19
    59ca:	0c f0       	brlt	.+2      	; 0x59ce <_ZN3TFT4drawEiiiiPKhjj+0x6c>
    59cc:	5c c0       	rjmp	.+184    	; 0x5a86 <_ZN3TFT4drawEiiiiPKhjj+0x124>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 16); k++)
    59ce:	c3 01       	movw	r24, r6
    59d0:	99 23       	and	r25, r25
    59d2:	0c f4       	brge	.+2      	; 0x59d6 <_ZN3TFT4drawEiiiiPKhjj+0x74>
    59d4:	0f 96       	adiw	r24, 0x0f	; 15
    59d6:	fc 01       	movw	r30, r24
    59d8:	f5 95       	asr	r31
    59da:	e7 95       	ror	r30
    59dc:	f5 95       	asr	r31
    59de:	e7 95       	ror	r30
    59e0:	f5 95       	asr	r31
    59e2:	e7 95       	ror	r30
    59e4:	f5 95       	asr	r31
    59e6:	e7 95       	ror	r30
    59e8:	fc 83       	std	Y+4, r31	; 0x04
    59ea:	eb 83       	std	Y+3, r30	; 0x03
    59ec:	fe 83       	std	Y+6, r31	; 0x06
    59ee:	ed 83       	std	Y+5, r30	; 0x05
    59f0:	6e 2c       	mov	r6, r14
    59f2:	7f 2c       	mov	r7, r15
    59f4:	1a 82       	std	Y+2, r1	; 0x02
    59f6:	19 82       	std	Y+1, r1	; 0x01
    59f8:	68 94       	set
    59fa:	ee 24       	eor	r14, r14
    59fc:	e1 f8       	bld	r14, 1
    59fe:	f1 2c       	mov	r15, r1
    5a00:	4d 80       	ldd	r4, Y+5	; 0x05
    5a02:	5e 80       	ldd	r5, Y+6	; 0x06
    5a04:	46 0c       	add	r4, r6
    5a06:	57 1c       	adc	r5, r7
    5a08:	2b 81       	ldd	r18, Y+3	; 0x03
    5a0a:	3c 81       	ldd	r19, Y+4	; 0x04
    5a0c:	12 16       	cp	r1, r18
    5a0e:	13 06       	cpc	r1, r19
    5a10:	3c f5       	brge	.+78     	; 0x5a60 <_ZN3TFT4drawEiiiiPKhjj+0xfe>
    5a12:	83 01       	movw	r16, r6
      {

        data = pgm_read_byte(&bitmap[i * (width / 16) + k]);
    5a14:	f8 01       	movw	r30, r16
    5a16:	34 90       	lpm	r3, Z
    5a18:	28 e0       	ldi	r18, 0x08	; 8
    5a1a:	30 e0       	ldi	r19, 0x00	; 0
    5a1c:	3a 87       	std	Y+10, r19	; 0x0a
    5a1e:	29 87       	std	Y+9, r18	; 0x09
          temp = data >> 7;

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 0
    5a20:	33 20       	and	r3, r3
    5a22:	4c f4       	brge	.+18     	; 0x5a36 <_ZN3TFT4drawEiiiiPKhjj+0xd4>
              exportLongData(color0);
            }

            else                    //1Pixel = 1
            {
              exportLongData(color1);
    5a24:	b5 01       	movw	r22, r10
    5a26:	c4 01       	movw	r24, r8
    5a28:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5a2c:	b5 01       	movw	r22, r10
    5a2e:	c4 01       	movw	r24, r8
    5a30:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5a34:	08 c0       	rjmp	.+16     	; 0x5a46 <_ZN3TFT4drawEiiiiPKhjj+0xe4>
          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 0
            {
              exportLongData(color0);
    5a36:	b6 01       	movw	r22, r12
    5a38:	c4 01       	movw	r24, r8
    5a3a:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5a3e:	b6 01       	movw	r22, r12
    5a40:	c4 01       	movw	r24, r8
    5a42:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
              exportLongData(color1);
            }

          }

          data <<= 1;
    5a46:	33 0c       	add	r3, r3
    5a48:	89 85       	ldd	r24, Y+9	; 0x09
    5a4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    5a4c:	01 97       	sbiw	r24, 0x01	; 1
    5a4e:	9a 87       	std	Y+10, r25	; 0x0a
    5a50:	89 87       	std	Y+9, r24	; 0x09
      for (int k=0; k<(width / 16); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 16) + k]);

        for (int l=0; l<8; l++)
    5a52:	89 2b       	or	r24, r25
    5a54:	29 f7       	brne	.-54     	; 0x5a20 <_ZN3TFT4drawEiiiiPKhjj+0xbe>
    5a56:	0f 5f       	subi	r16, 0xFF	; 255
    5a58:	1f 4f       	sbci	r17, 0xFF	; 255

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 16); k++)
    5a5a:	04 15       	cp	r16, r4
    5a5c:	15 05       	cpc	r17, r5
    5a5e:	d1 f6       	brne	.-76     	; 0x5a14 <_ZN3TFT4drawEiiiiPKhjj+0xb2>
    5a60:	91 e0       	ldi	r25, 0x01	; 1
    5a62:	e9 1a       	sub	r14, r25
    5a64:	f1 08       	sbc	r15, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    5a66:	81 f6       	brne	.-96     	; 0x5a08 <_ZN3TFT4drawEiiiiPKhjj+0xa6>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    5a68:	e9 81       	ldd	r30, Y+1	; 0x01
    5a6a:	fa 81       	ldd	r31, Y+2	; 0x02
    5a6c:	31 96       	adiw	r30, 0x01	; 1
    5a6e:	fa 83       	std	Y+2, r31	; 0x02
    5a70:	e9 83       	std	Y+1, r30	; 0x01
    5a72:	2d 81       	ldd	r18, Y+5	; 0x05
    5a74:	3e 81       	ldd	r19, Y+6	; 0x06
    5a76:	62 0e       	add	r6, r18
    5a78:	73 1e       	adc	r7, r19
    5a7a:	8f 81       	ldd	r24, Y+7	; 0x07
    5a7c:	98 85       	ldd	r25, Y+8	; 0x08
    5a7e:	e8 17       	cp	r30, r24
    5a80:	f9 07       	cpc	r31, r25
    5a82:	09 f0       	breq	.+2      	; 0x5a86 <_ZN3TFT4drawEiiiiPKhjj+0x124>
    5a84:	b9 cf       	rjmp	.-142    	; 0x59f8 <_ZN3TFT4drawEiiiiPKhjj+0x96>

      }
    }
  }

}
    5a86:	2a 96       	adiw	r28, 0x0a	; 10
    5a88:	0f b6       	in	r0, 0x3f	; 63
    5a8a:	f8 94       	cli
    5a8c:	de bf       	out	0x3e, r29	; 62
    5a8e:	0f be       	out	0x3f, r0	; 63
    5a90:	cd bf       	out	0x3d, r28	; 61
    5a92:	df 91       	pop	r29
    5a94:	cf 91       	pop	r28
    5a96:	1f 91       	pop	r17
    5a98:	0f 91       	pop	r16
    5a9a:	ff 90       	pop	r15
    5a9c:	ef 90       	pop	r14
    5a9e:	df 90       	pop	r13
    5aa0:	cf 90       	pop	r12
    5aa2:	bf 90       	pop	r11
    5aa4:	af 90       	pop	r10
    5aa6:	9f 90       	pop	r9
    5aa8:	8f 90       	pop	r8
    5aaa:	7f 90       	pop	r7
    5aac:	6f 90       	pop	r6
    5aae:	5f 90       	pop	r5
    5ab0:	4f 90       	pop	r4
    5ab2:	3f 90       	pop	r3
    5ab4:	08 95       	ret

00005ab6 <_ZN3TFT4drawEiiiiPKhjjjj>:
                Draw Bitmap
//----------------------------------------*/

void TFT::draw(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
  uint16_t color0, uint16_t color1, uint16_t color2, uint16_t color3)
{
    5ab6:	2f 92       	push	r2
    5ab8:	3f 92       	push	r3
    5aba:	4f 92       	push	r4
    5abc:	5f 92       	push	r5
    5abe:	6f 92       	push	r6
    5ac0:	7f 92       	push	r7
    5ac2:	8f 92       	push	r8
    5ac4:	9f 92       	push	r9
    5ac6:	af 92       	push	r10
    5ac8:	bf 92       	push	r11
    5aca:	cf 92       	push	r12
    5acc:	df 92       	push	r13
    5ace:	ef 92       	push	r14
    5ad0:	ff 92       	push	r15
    5ad2:	0f 93       	push	r16
    5ad4:	1f 93       	push	r17
    5ad6:	cf 93       	push	r28
    5ad8:	df 93       	push	r29
    5ada:	cd b7       	in	r28, 0x3d	; 61
    5adc:	de b7       	in	r29, 0x3e	; 62
    5ade:	60 97       	sbiw	r28, 0x10	; 16
    5ae0:	0f b6       	in	r0, 0x3f	; 63
    5ae2:	f8 94       	cli
    5ae4:	de bf       	out	0x3e, r29	; 62
    5ae6:	0f be       	out	0x3f, r0	; 63
    5ae8:	cd bf       	out	0x3d, r28	; 61
    5aea:	98 8b       	std	Y+16, r25	; 0x10
    5aec:	8f 87       	std	Y+15, r24	; 0x0f
    5aee:	29 01       	movw	r4, r18
    5af0:	38 01       	movw	r6, r16
    5af2:	da 82       	std	Y+2, r13	; 0x02
    5af4:	c9 82       	std	Y+1, r12	; 0x01
    5af6:	ba 86       	std	Y+10, r11	; 0x0a
    5af8:	a9 86       	std	Y+9, r10	; 0x09
    5afa:	9c 86       	std	Y+12, r9	; 0x0c
    5afc:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    5afe:	8a 01       	movw	r16, r20
    5b00:	06 0d       	add	r16, r6
    5b02:	17 1d       	adc	r17, r7
    5b04:	01 50       	subi	r16, 0x01	; 1
    5b06:	11 09       	sbc	r17, r1
    5b08:	9b 01       	movw	r18, r22
    5b0a:	24 0d       	add	r18, r4
    5b0c:	35 1d       	adc	r19, r5
    5b0e:	21 50       	subi	r18, 0x01	; 1
    5b10:	31 09       	sbc	r19, r1
    5b12:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    5b16:	c3 01       	movw	r24, r6
    5b18:	99 23       	and	r25, r25
    5b1a:	0c f4       	brge	.+2      	; 0x5b1e <_ZN3TFT4drawEiiiiPKhjjjj+0x68>
    5b1c:	01 96       	adiw	r24, 0x01	; 1
    5b1e:	9c 01       	movw	r18, r24
    5b20:	35 95       	asr	r19
    5b22:	27 95       	ror	r18
    5b24:	3e 87       	std	Y+14, r19	; 0x0e
    5b26:	2d 87       	std	Y+13, r18	; 0x0d
    5b28:	12 16       	cp	r1, r18
    5b2a:	13 06       	cpc	r1, r19
    5b2c:	0c f0       	brlt	.+2      	; 0x5b30 <_ZN3TFT4drawEiiiiPKhjjjj+0x7a>
    5b2e:	7c c0       	rjmp	.+248    	; 0x5c28 <_ZN3TFT4drawEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5b30:	c2 01       	movw	r24, r4
    5b32:	99 23       	and	r25, r25
    5b34:	0c f4       	brge	.+2      	; 0x5b38 <_ZN3TFT4drawEiiiiPKhjjjj+0x82>
    5b36:	07 96       	adiw	r24, 0x07	; 7
    5b38:	fc 01       	movw	r30, r24
    5b3a:	f5 95       	asr	r31
    5b3c:	e7 95       	ror	r30
    5b3e:	f5 95       	asr	r31
    5b40:	e7 95       	ror	r30
    5b42:	f5 95       	asr	r31
    5b44:	e7 95       	ror	r30
    5b46:	fe 83       	std	Y+6, r31	; 0x06
    5b48:	ed 83       	std	Y+5, r30	; 0x05
    5b4a:	f8 87       	std	Y+8, r31	; 0x08
    5b4c:	ef 83       	std	Y+7, r30	; 0x07
    5b4e:	6e 2c       	mov	r6, r14
    5b50:	7f 2c       	mov	r7, r15
    5b52:	21 2c       	mov	r2, r1
    5b54:	31 2c       	mov	r3, r1
    5b56:	68 94       	set
    5b58:	aa 24       	eor	r10, r10
    5b5a:	a1 f8       	bld	r10, 1
    5b5c:	b1 2c       	mov	r11, r1
    5b5e:	8f 80       	ldd	r8, Y+7	; 0x07
    5b60:	98 84       	ldd	r9, Y+8	; 0x08
    5b62:	86 0c       	add	r8, r6
    5b64:	97 1c       	adc	r9, r7
    5b66:	7c 82       	std	Y+4, r7	; 0x04
    5b68:	6b 82       	std	Y+3, r6	; 0x03
    5b6a:	4f 84       	ldd	r4, Y+15	; 0x0f
    5b6c:	58 88       	ldd	r5, Y+16	; 0x10
    5b6e:	2d 81       	ldd	r18, Y+5	; 0x05
    5b70:	3e 81       	ldd	r19, Y+6	; 0x06
    5b72:	12 16       	cp	r1, r18
    5b74:	13 06       	cpc	r1, r19
    5b76:	0c f0       	brlt	.+2      	; 0x5b7a <_ZN3TFT4drawEiiiiPKhjjjj+0xc4>
    5b78:	43 c0       	rjmp	.+134    	; 0x5c00 <_ZN3TFT4drawEiiiiPKhjjjj+0x14a>
    5b7a:	eb 80       	ldd	r14, Y+3	; 0x03
    5b7c:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    5b7e:	f7 01       	movw	r30, r14
    5b80:	c4 90       	lpm	r12, Z
    5b82:	68 94       	set
    5b84:	66 24       	eor	r6, r6
    5b86:	62 f8       	bld	r6, 2
    5b88:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    5b8a:	dc 2c       	mov	r13, r12
    5b8c:	d6 94       	lsr	r13
    5b8e:	d6 94       	lsr	r13
    5b90:	d6 94       	lsr	r13
    5b92:	d6 94       	lsr	r13
    5b94:	d6 94       	lsr	r13
    5b96:	d6 94       	lsr	r13
    5b98:	02 e0       	ldi	r16, 0x02	; 2
    5b9a:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    5b9c:	d1 10       	cpse	r13, r1
    5b9e:	06 c0       	rjmp	.+12     	; 0x5bac <_ZN3TFT4drawEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0);
    5ba0:	69 81       	ldd	r22, Y+1	; 0x01
    5ba2:	7a 81       	ldd	r23, Y+2	; 0x02
    5ba4:	c2 01       	movw	r24, r4
    5ba6:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5baa:	1a c0       	rjmp	.+52     	; 0x5be0 <_ZN3TFT4drawEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    5bac:	f1 e0       	ldi	r31, 0x01	; 1
    5bae:	df 12       	cpse	r13, r31
    5bb0:	06 c0       	rjmp	.+12     	; 0x5bbe <_ZN3TFT4drawEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1);
    5bb2:	69 85       	ldd	r22, Y+9	; 0x09
    5bb4:	7a 85       	ldd	r23, Y+10	; 0x0a
    5bb6:	c2 01       	movw	r24, r4
    5bb8:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5bbc:	11 c0       	rjmp	.+34     	; 0x5be0 <_ZN3TFT4drawEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    5bbe:	22 e0       	ldi	r18, 0x02	; 2
    5bc0:	d2 12       	cpse	r13, r18
    5bc2:	06 c0       	rjmp	.+12     	; 0x5bd0 <_ZN3TFT4drawEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2);
    5bc4:	6b 85       	ldd	r22, Y+11	; 0x0b
    5bc6:	7c 85       	ldd	r23, Y+12	; 0x0c
    5bc8:	c2 01       	movw	r24, r4
    5bca:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5bce:	08 c0       	rjmp	.+16     	; 0x5be0 <_ZN3TFT4drawEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    5bd0:	33 e0       	ldi	r19, 0x03	; 3
    5bd2:	d3 12       	cpse	r13, r19
    5bd4:	05 c0       	rjmp	.+10     	; 0x5be0 <_ZN3TFT4drawEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3);
    5bd6:	6d a1       	ldd	r22, Y+37	; 0x25
    5bd8:	7e a1       	ldd	r23, Y+38	; 0x26
    5bda:	c2 01       	movw	r24, r4
    5bdc:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5be0:	01 50       	subi	r16, 0x01	; 1
    5be2:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    5be4:	d9 f6       	brne	.-74     	; 0x5b9c <_ZN3TFT4drawEiiiiPKhjjjj+0xe6>
              exportLongData(color3);
            }

          }

          data <<= 2;
    5be6:	cc 0c       	add	r12, r12
    5be8:	cc 0c       	add	r12, r12
    5bea:	81 e0       	ldi	r24, 0x01	; 1
    5bec:	68 1a       	sub	r6, r24
    5bee:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    5bf0:	61 f6       	brne	.-104    	; 0x5b8a <_ZN3TFT4drawEiiiiPKhjjjj+0xd4>
    5bf2:	9f ef       	ldi	r25, 0xFF	; 255
    5bf4:	e9 1a       	sub	r14, r25
    5bf6:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5bf8:	e8 14       	cp	r14, r8
    5bfa:	f9 04       	cpc	r15, r9
    5bfc:	09 f0       	breq	.+2      	; 0x5c00 <_ZN3TFT4drawEiiiiPKhjjjj+0x14a>
    5bfe:	bf cf       	rjmp	.-130    	; 0x5b7e <_ZN3TFT4drawEiiiiPKhjjjj+0xc8>
    5c00:	e1 e0       	ldi	r30, 0x01	; 1
    5c02:	ae 1a       	sub	r10, r30
    5c04:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    5c06:	09 f0       	breq	.+2      	; 0x5c0a <_ZN3TFT4drawEiiiiPKhjjjj+0x154>
    5c08:	b2 cf       	rjmp	.-156    	; 0x5b6e <_ZN3TFT4drawEiiiiPKhjjjj+0xb8>
    5c0a:	6b 80       	ldd	r6, Y+3	; 0x03
    5c0c:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    5c0e:	ff ef       	ldi	r31, 0xFF	; 255
    5c10:	2f 1a       	sub	r2, r31
    5c12:	3f 0a       	sbc	r3, r31
    5c14:	2f 81       	ldd	r18, Y+7	; 0x07
    5c16:	38 85       	ldd	r19, Y+8	; 0x08
    5c18:	62 0e       	add	r6, r18
    5c1a:	73 1e       	adc	r7, r19
    5c1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    5c1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5c20:	28 16       	cp	r2, r24
    5c22:	39 06       	cpc	r3, r25
    5c24:	09 f0       	breq	.+2      	; 0x5c28 <_ZN3TFT4drawEiiiiPKhjjjj+0x172>
    5c26:	97 cf       	rjmp	.-210    	; 0x5b56 <_ZN3TFT4drawEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    5c28:	60 96       	adiw	r28, 0x10	; 16
    5c2a:	0f b6       	in	r0, 0x3f	; 63
    5c2c:	f8 94       	cli
    5c2e:	de bf       	out	0x3e, r29	; 62
    5c30:	0f be       	out	0x3f, r0	; 63
    5c32:	cd bf       	out	0x3d, r28	; 61
    5c34:	df 91       	pop	r29
    5c36:	cf 91       	pop	r28
    5c38:	1f 91       	pop	r17
    5c3a:	0f 91       	pop	r16
    5c3c:	ff 90       	pop	r15
    5c3e:	ef 90       	pop	r14
    5c40:	df 90       	pop	r13
    5c42:	cf 90       	pop	r12
    5c44:	bf 90       	pop	r11
    5c46:	af 90       	pop	r10
    5c48:	9f 90       	pop	r9
    5c4a:	8f 90       	pop	r8
    5c4c:	7f 90       	pop	r7
    5c4e:	6f 90       	pop	r6
    5c50:	5f 90       	pop	r5
    5c52:	4f 90       	pop	r4
    5c54:	3f 90       	pop	r3
    5c56:	2f 90       	pop	r2
    5c58:	08 95       	ret

00005c5a <_ZN3TFT4drawEiiiiPA100_Khajjjj>:
            Draw 100bytes Bitmap
//----------------------------------------*/

void TFT::draw(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[100], int8_t tileSelection,
  uint16_t color0, uint16_t color1, uint16_t color2, uint16_t color3)
{
    5c5a:	2f 92       	push	r2
    5c5c:	3f 92       	push	r3
    5c5e:	4f 92       	push	r4
    5c60:	5f 92       	push	r5
    5c62:	6f 92       	push	r6
    5c64:	7f 92       	push	r7
    5c66:	8f 92       	push	r8
    5c68:	9f 92       	push	r9
    5c6a:	af 92       	push	r10
    5c6c:	bf 92       	push	r11
    5c6e:	cf 92       	push	r12
    5c70:	df 92       	push	r13
    5c72:	ef 92       	push	r14
    5c74:	ff 92       	push	r15
    5c76:	0f 93       	push	r16
    5c78:	1f 93       	push	r17
    5c7a:	cf 93       	push	r28
    5c7c:	df 93       	push	r29
    5c7e:	cd b7       	in	r28, 0x3d	; 61
    5c80:	de b7       	in	r29, 0x3e	; 62
    5c82:	2e 97       	sbiw	r28, 0x0e	; 14
    5c84:	0f b6       	in	r0, 0x3f	; 63
    5c86:	f8 94       	cli
    5c88:	de bf       	out	0x3e, r29	; 62
    5c8a:	0f be       	out	0x3f, r0	; 63
    5c8c:	cd bf       	out	0x3d, r28	; 61
    5c8e:	9e 87       	std	Y+14, r25	; 0x0e
    5c90:	8d 87       	std	Y+13, r24	; 0x0d
    5c92:	29 01       	movw	r4, r18
    5c94:	38 01       	movw	r6, r16
    5c96:	ba 82       	std	Y+2, r11	; 0x02
    5c98:	a9 82       	std	Y+1, r10	; 0x01
    5c9a:	9a 86       	std	Y+10, r9	; 0x0a
    5c9c:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    5c9e:	8a 01       	movw	r16, r20
    5ca0:	06 0d       	add	r16, r6
    5ca2:	17 1d       	adc	r17, r7
    5ca4:	01 50       	subi	r16, 0x01	; 1
    5ca6:	11 09       	sbc	r17, r1
    5ca8:	9b 01       	movw	r18, r22
    5caa:	24 0d       	add	r18, r4
    5cac:	35 1d       	adc	r19, r5
    5cae:	21 50       	subi	r18, 0x01	; 1
    5cb0:	31 09       	sbc	r19, r1
    5cb2:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    5cb6:	c3 01       	movw	r24, r6
    5cb8:	99 23       	and	r25, r25
    5cba:	0c f4       	brge	.+2      	; 0x5cbe <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x64>
    5cbc:	01 96       	adiw	r24, 0x01	; 1
    5cbe:	9c 01       	movw	r18, r24
    5cc0:	35 95       	asr	r19
    5cc2:	27 95       	ror	r18
    5cc4:	3c 87       	std	Y+12, r19	; 0x0c
    5cc6:	2b 87       	std	Y+11, r18	; 0x0b
    5cc8:	12 16       	cp	r1, r18
    5cca:	13 06       	cpc	r1, r19
    5ccc:	0c f0       	brlt	.+2      	; 0x5cd0 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x76>
    5cce:	81 c0       	rjmp	.+258    	; 0x5dd2 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5cd0:	c2 01       	movw	r24, r4
    5cd2:	99 23       	and	r25, r25
    5cd4:	0c f4       	brge	.+2      	; 0x5cd8 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x7e>
    5cd6:	07 96       	adiw	r24, 0x07	; 7
    5cd8:	fc 01       	movw	r30, r24
    5cda:	f5 95       	asr	r31
    5cdc:	e7 95       	ror	r30
    5cde:	f5 95       	asr	r31
    5ce0:	e7 95       	ror	r30
    5ce2:	f5 95       	asr	r31
    5ce4:	e7 95       	ror	r30
    5ce6:	fe 83       	std	Y+6, r31	; 0x06
    5ce8:	ed 83       	std	Y+5, r30	; 0x05
    5cea:	f8 87       	std	Y+8, r31	; 0x08
    5cec:	ef 83       	std	Y+7, r30	; 0x07
    5cee:	37 01       	movw	r6, r14
    5cf0:	fc 2d       	mov	r31, r12
    5cf2:	24 e6       	ldi	r18, 0x64	; 100
    5cf4:	f2 02       	muls	r31, r18
    5cf6:	60 0c       	add	r6, r0
    5cf8:	71 1c       	adc	r7, r1
    5cfa:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    5cfc:	21 2c       	mov	r2, r1
    5cfe:	31 2c       	mov	r3, r1
    5d00:	68 94       	set
    5d02:	aa 24       	eor	r10, r10
    5d04:	a1 f8       	bld	r10, 1
    5d06:	b1 2c       	mov	r11, r1
    5d08:	8f 80       	ldd	r8, Y+7	; 0x07
    5d0a:	98 84       	ldd	r9, Y+8	; 0x08
    5d0c:	86 0c       	add	r8, r6
    5d0e:	97 1c       	adc	r9, r7
    5d10:	7c 82       	std	Y+4, r7	; 0x04
    5d12:	6b 82       	std	Y+3, r6	; 0x03
    5d14:	4d 84       	ldd	r4, Y+13	; 0x0d
    5d16:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5d18:	8d 81       	ldd	r24, Y+5	; 0x05
    5d1a:	9e 81       	ldd	r25, Y+6	; 0x06
    5d1c:	18 16       	cp	r1, r24
    5d1e:	19 06       	cpc	r1, r25
    5d20:	0c f0       	brlt	.+2      	; 0x5d24 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xca>
    5d22:	43 c0       	rjmp	.+134    	; 0x5daa <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x150>
    5d24:	eb 80       	ldd	r14, Y+3	; 0x03
    5d26:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    5d28:	f7 01       	movw	r30, r14
    5d2a:	c4 90       	lpm	r12, Z
    5d2c:	68 94       	set
    5d2e:	66 24       	eor	r6, r6
    5d30:	62 f8       	bld	r6, 2
    5d32:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    5d34:	dc 2c       	mov	r13, r12
    5d36:	d6 94       	lsr	r13
    5d38:	d6 94       	lsr	r13
    5d3a:	d6 94       	lsr	r13
    5d3c:	d6 94       	lsr	r13
    5d3e:	d6 94       	lsr	r13
    5d40:	d6 94       	lsr	r13
    5d42:	02 e0       	ldi	r16, 0x02	; 2
    5d44:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    5d46:	d1 10       	cpse	r13, r1
    5d48:	06 c0       	rjmp	.+12     	; 0x5d56 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xfc>
            {
              exportLongData(color0);
    5d4a:	69 81       	ldd	r22, Y+1	; 0x01
    5d4c:	7a 81       	ldd	r23, Y+2	; 0x02
    5d4e:	c2 01       	movw	r24, r4
    5d50:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5d54:	1a c0       	rjmp	.+52     	; 0x5d8a <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    5d56:	f1 e0       	ldi	r31, 0x01	; 1
    5d58:	df 12       	cpse	r13, r31
    5d5a:	06 c0       	rjmp	.+12     	; 0x5d68 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x10e>
            {
              exportLongData(color1);
    5d5c:	69 85       	ldd	r22, Y+9	; 0x09
    5d5e:	7a 85       	ldd	r23, Y+10	; 0x0a
    5d60:	c2 01       	movw	r24, r4
    5d62:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5d66:	11 c0       	rjmp	.+34     	; 0x5d8a <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    5d68:	22 e0       	ldi	r18, 0x02	; 2
    5d6a:	d2 12       	cpse	r13, r18
    5d6c:	06 c0       	rjmp	.+12     	; 0x5d7a <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x120>
            {
              exportLongData(color2);
    5d6e:	6b a1       	ldd	r22, Y+35	; 0x23
    5d70:	7c a1       	ldd	r23, Y+36	; 0x24
    5d72:	c2 01       	movw	r24, r4
    5d74:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5d78:	08 c0       	rjmp	.+16     	; 0x5d8a <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    5d7a:	33 e0       	ldi	r19, 0x03	; 3
    5d7c:	d3 12       	cpse	r13, r19
    5d7e:	05 c0       	rjmp	.+10     	; 0x5d8a <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x130>
            {
              exportLongData(color3);
    5d80:	6d a1       	ldd	r22, Y+37	; 0x25
    5d82:	7e a1       	ldd	r23, Y+38	; 0x26
    5d84:	c2 01       	movw	r24, r4
    5d86:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5d8a:	01 50       	subi	r16, 0x01	; 1
    5d8c:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    5d8e:	d9 f6       	brne	.-74     	; 0x5d46 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xec>
              exportLongData(color3);
            }

          }

          data <<= 2;
    5d90:	cc 0c       	add	r12, r12
    5d92:	cc 0c       	add	r12, r12
    5d94:	81 e0       	ldi	r24, 0x01	; 1
    5d96:	68 1a       	sub	r6, r24
    5d98:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    5d9a:	61 f6       	brne	.-104    	; 0x5d34 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xda>
    5d9c:	9f ef       	ldi	r25, 0xFF	; 255
    5d9e:	e9 1a       	sub	r14, r25
    5da0:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5da2:	8e 14       	cp	r8, r14
    5da4:	9f 04       	cpc	r9, r15
    5da6:	09 f0       	breq	.+2      	; 0x5daa <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x150>
    5da8:	bf cf       	rjmp	.-130    	; 0x5d28 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xce>
    5daa:	e1 e0       	ldi	r30, 0x01	; 1
    5dac:	ae 1a       	sub	r10, r30
    5dae:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    5db0:	09 f0       	breq	.+2      	; 0x5db4 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x15a>
    5db2:	b2 cf       	rjmp	.-156    	; 0x5d18 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xbe>
    5db4:	6b 80       	ldd	r6, Y+3	; 0x03
    5db6:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    5db8:	ff ef       	ldi	r31, 0xFF	; 255
    5dba:	2f 1a       	sub	r2, r31
    5dbc:	3f 0a       	sbc	r3, r31
    5dbe:	2f 81       	ldd	r18, Y+7	; 0x07
    5dc0:	38 85       	ldd	r19, Y+8	; 0x08
    5dc2:	62 0e       	add	r6, r18
    5dc4:	73 1e       	adc	r7, r19
    5dc6:	8b 85       	ldd	r24, Y+11	; 0x0b
    5dc8:	9c 85       	ldd	r25, Y+12	; 0x0c
    5dca:	28 16       	cp	r2, r24
    5dcc:	39 06       	cpc	r3, r25
    5dce:	09 f0       	breq	.+2      	; 0x5dd2 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0x178>
    5dd0:	97 cf       	rjmp	.-210    	; 0x5d00 <_ZN3TFT4drawEiiiiPA100_Khajjjj+0xa6>

      }
    }
  }

}
    5dd2:	2e 96       	adiw	r28, 0x0e	; 14
    5dd4:	0f b6       	in	r0, 0x3f	; 63
    5dd6:	f8 94       	cli
    5dd8:	de bf       	out	0x3e, r29	; 62
    5dda:	0f be       	out	0x3f, r0	; 63
    5ddc:	cd bf       	out	0x3d, r28	; 61
    5dde:	df 91       	pop	r29
    5de0:	cf 91       	pop	r28
    5de2:	1f 91       	pop	r17
    5de4:	0f 91       	pop	r16
    5de6:	ff 90       	pop	r15
    5de8:	ef 90       	pop	r14
    5dea:	df 90       	pop	r13
    5dec:	cf 90       	pop	r12
    5dee:	bf 90       	pop	r11
    5df0:	af 90       	pop	r10
    5df2:	9f 90       	pop	r9
    5df4:	8f 90       	pop	r8
    5df6:	7f 90       	pop	r7
    5df8:	6f 90       	pop	r6
    5dfa:	5f 90       	pop	r5
    5dfc:	4f 90       	pop	r4
    5dfe:	3f 90       	pop	r3
    5e00:	2f 90       	pop	r2
    5e02:	08 95       	ret

00005e04 <_ZN3TFT4drawEiiiiPA120_Khajjjj>:
            Draw 120bytes Bitmap
//----------------------------------------*/

void TFT::draw(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[120], int8_t tileSelection,
  uint16_t color0, uint16_t color1, uint16_t color2, uint16_t color3)
{
    5e04:	2f 92       	push	r2
    5e06:	3f 92       	push	r3
    5e08:	4f 92       	push	r4
    5e0a:	5f 92       	push	r5
    5e0c:	6f 92       	push	r6
    5e0e:	7f 92       	push	r7
    5e10:	8f 92       	push	r8
    5e12:	9f 92       	push	r9
    5e14:	af 92       	push	r10
    5e16:	bf 92       	push	r11
    5e18:	cf 92       	push	r12
    5e1a:	df 92       	push	r13
    5e1c:	ef 92       	push	r14
    5e1e:	ff 92       	push	r15
    5e20:	0f 93       	push	r16
    5e22:	1f 93       	push	r17
    5e24:	cf 93       	push	r28
    5e26:	df 93       	push	r29
    5e28:	cd b7       	in	r28, 0x3d	; 61
    5e2a:	de b7       	in	r29, 0x3e	; 62
    5e2c:	2e 97       	sbiw	r28, 0x0e	; 14
    5e2e:	0f b6       	in	r0, 0x3f	; 63
    5e30:	f8 94       	cli
    5e32:	de bf       	out	0x3e, r29	; 62
    5e34:	0f be       	out	0x3f, r0	; 63
    5e36:	cd bf       	out	0x3d, r28	; 61
    5e38:	9e 87       	std	Y+14, r25	; 0x0e
    5e3a:	8d 87       	std	Y+13, r24	; 0x0d
    5e3c:	29 01       	movw	r4, r18
    5e3e:	38 01       	movw	r6, r16
    5e40:	ba 82       	std	Y+2, r11	; 0x02
    5e42:	a9 82       	std	Y+1, r10	; 0x01
    5e44:	9a 86       	std	Y+10, r9	; 0x0a
    5e46:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    5e48:	8a 01       	movw	r16, r20
    5e4a:	06 0d       	add	r16, r6
    5e4c:	17 1d       	adc	r17, r7
    5e4e:	01 50       	subi	r16, 0x01	; 1
    5e50:	11 09       	sbc	r17, r1
    5e52:	9b 01       	movw	r18, r22
    5e54:	24 0d       	add	r18, r4
    5e56:	35 1d       	adc	r19, r5
    5e58:	21 50       	subi	r18, 0x01	; 1
    5e5a:	31 09       	sbc	r19, r1
    5e5c:	0e 94 ff 2b 	call	0x57fe	; 0x57fe <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    5e60:	c3 01       	movw	r24, r6
    5e62:	99 23       	and	r25, r25
    5e64:	0c f4       	brge	.+2      	; 0x5e68 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x64>
    5e66:	01 96       	adiw	r24, 0x01	; 1
    5e68:	9c 01       	movw	r18, r24
    5e6a:	35 95       	asr	r19
    5e6c:	27 95       	ror	r18
    5e6e:	3c 87       	std	Y+12, r19	; 0x0c
    5e70:	2b 87       	std	Y+11, r18	; 0x0b
    5e72:	12 16       	cp	r1, r18
    5e74:	13 06       	cpc	r1, r19
    5e76:	0c f0       	brlt	.+2      	; 0x5e7a <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x76>
    5e78:	81 c0       	rjmp	.+258    	; 0x5f7c <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5e7a:	c2 01       	movw	r24, r4
    5e7c:	99 23       	and	r25, r25
    5e7e:	0c f4       	brge	.+2      	; 0x5e82 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x7e>
    5e80:	07 96       	adiw	r24, 0x07	; 7
    5e82:	fc 01       	movw	r30, r24
    5e84:	f5 95       	asr	r31
    5e86:	e7 95       	ror	r30
    5e88:	f5 95       	asr	r31
    5e8a:	e7 95       	ror	r30
    5e8c:	f5 95       	asr	r31
    5e8e:	e7 95       	ror	r30
    5e90:	fe 83       	std	Y+6, r31	; 0x06
    5e92:	ed 83       	std	Y+5, r30	; 0x05
    5e94:	f8 87       	std	Y+8, r31	; 0x08
    5e96:	ef 83       	std	Y+7, r30	; 0x07
    5e98:	37 01       	movw	r6, r14
    5e9a:	fc 2d       	mov	r31, r12
    5e9c:	28 e7       	ldi	r18, 0x78	; 120
    5e9e:	f2 02       	muls	r31, r18
    5ea0:	60 0c       	add	r6, r0
    5ea2:	71 1c       	adc	r7, r1
    5ea4:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    5ea6:	21 2c       	mov	r2, r1
    5ea8:	31 2c       	mov	r3, r1
    5eaa:	68 94       	set
    5eac:	aa 24       	eor	r10, r10
    5eae:	a1 f8       	bld	r10, 1
    5eb0:	b1 2c       	mov	r11, r1
    5eb2:	8f 80       	ldd	r8, Y+7	; 0x07
    5eb4:	98 84       	ldd	r9, Y+8	; 0x08
    5eb6:	86 0c       	add	r8, r6
    5eb8:	97 1c       	adc	r9, r7
    5eba:	7c 82       	std	Y+4, r7	; 0x04
    5ebc:	6b 82       	std	Y+3, r6	; 0x03
    5ebe:	4d 84       	ldd	r4, Y+13	; 0x0d
    5ec0:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5ec2:	8d 81       	ldd	r24, Y+5	; 0x05
    5ec4:	9e 81       	ldd	r25, Y+6	; 0x06
    5ec6:	18 16       	cp	r1, r24
    5ec8:	19 06       	cpc	r1, r25
    5eca:	0c f0       	brlt	.+2      	; 0x5ece <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xca>
    5ecc:	43 c0       	rjmp	.+134    	; 0x5f54 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x150>
    5ece:	eb 80       	ldd	r14, Y+3	; 0x03
    5ed0:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    5ed2:	f7 01       	movw	r30, r14
    5ed4:	c4 90       	lpm	r12, Z
    5ed6:	68 94       	set
    5ed8:	66 24       	eor	r6, r6
    5eda:	62 f8       	bld	r6, 2
    5edc:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    5ede:	dc 2c       	mov	r13, r12
    5ee0:	d6 94       	lsr	r13
    5ee2:	d6 94       	lsr	r13
    5ee4:	d6 94       	lsr	r13
    5ee6:	d6 94       	lsr	r13
    5ee8:	d6 94       	lsr	r13
    5eea:	d6 94       	lsr	r13
    5eec:	02 e0       	ldi	r16, 0x02	; 2
    5eee:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    5ef0:	d1 10       	cpse	r13, r1
    5ef2:	06 c0       	rjmp	.+12     	; 0x5f00 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xfc>
            {
              exportLongData(color0);
    5ef4:	69 81       	ldd	r22, Y+1	; 0x01
    5ef6:	7a 81       	ldd	r23, Y+2	; 0x02
    5ef8:	c2 01       	movw	r24, r4
    5efa:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5efe:	1a c0       	rjmp	.+52     	; 0x5f34 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    5f00:	f1 e0       	ldi	r31, 0x01	; 1
    5f02:	df 12       	cpse	r13, r31
    5f04:	06 c0       	rjmp	.+12     	; 0x5f12 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x10e>
            {
              exportLongData(color1);
    5f06:	69 85       	ldd	r22, Y+9	; 0x09
    5f08:	7a 85       	ldd	r23, Y+10	; 0x0a
    5f0a:	c2 01       	movw	r24, r4
    5f0c:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5f10:	11 c0       	rjmp	.+34     	; 0x5f34 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    5f12:	22 e0       	ldi	r18, 0x02	; 2
    5f14:	d2 12       	cpse	r13, r18
    5f16:	06 c0       	rjmp	.+12     	; 0x5f24 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x120>
            {
              exportLongData(color2);
    5f18:	6b a1       	ldd	r22, Y+35	; 0x23
    5f1a:	7c a1       	ldd	r23, Y+36	; 0x24
    5f1c:	c2 01       	movw	r24, r4
    5f1e:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5f22:	08 c0       	rjmp	.+16     	; 0x5f34 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    5f24:	33 e0       	ldi	r19, 0x03	; 3
    5f26:	d3 12       	cpse	r13, r19
    5f28:	05 c0       	rjmp	.+10     	; 0x5f34 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x130>
            {
              exportLongData(color3);
    5f2a:	6d a1       	ldd	r22, Y+37	; 0x25
    5f2c:	7e a1       	ldd	r23, Y+38	; 0x26
    5f2e:	c2 01       	movw	r24, r4
    5f30:	0e 94 6f 2b 	call	0x56de	; 0x56de <_ZN3SPI14exportLongDataEj>
    5f34:	01 50       	subi	r16, 0x01	; 1
    5f36:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    5f38:	d9 f6       	brne	.-74     	; 0x5ef0 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xec>
              exportLongData(color3);
            }

          }

          data <<= 2;
    5f3a:	cc 0c       	add	r12, r12
    5f3c:	cc 0c       	add	r12, r12
    5f3e:	81 e0       	ldi	r24, 0x01	; 1
    5f40:	68 1a       	sub	r6, r24
    5f42:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    5f44:	61 f6       	brne	.-104    	; 0x5ede <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xda>
    5f46:	9f ef       	ldi	r25, 0xFF	; 255
    5f48:	e9 1a       	sub	r14, r25
    5f4a:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    5f4c:	8e 14       	cp	r8, r14
    5f4e:	9f 04       	cpc	r9, r15
    5f50:	09 f0       	breq	.+2      	; 0x5f54 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x150>
    5f52:	bf cf       	rjmp	.-130    	; 0x5ed2 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xce>
    5f54:	e1 e0       	ldi	r30, 0x01	; 1
    5f56:	ae 1a       	sub	r10, r30
    5f58:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    5f5a:	09 f0       	breq	.+2      	; 0x5f5e <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x15a>
    5f5c:	b2 cf       	rjmp	.-156    	; 0x5ec2 <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xbe>
    5f5e:	6b 80       	ldd	r6, Y+3	; 0x03
    5f60:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    5f62:	ff ef       	ldi	r31, 0xFF	; 255
    5f64:	2f 1a       	sub	r2, r31
    5f66:	3f 0a       	sbc	r3, r31
    5f68:	2f 81       	ldd	r18, Y+7	; 0x07
    5f6a:	38 85       	ldd	r19, Y+8	; 0x08
    5f6c:	62 0e       	add	r6, r18
    5f6e:	73 1e       	adc	r7, r19
    5f70:	8b 85       	ldd	r24, Y+11	; 0x0b
    5f72:	9c 85       	ldd	r25, Y+12	; 0x0c
    5f74:	28 16       	cp	r2, r24
    5f76:	39 06       	cpc	r3, r25
    5f78:	09 f0       	breq	.+2      	; 0x5f7c <_ZN3TFT4drawEiiiiPA120_Khajjjj+0x178>
    5f7a:	97 cf       	rjmp	.-210    	; 0x5eaa <_ZN3TFT4drawEiiiiPA120_Khajjjj+0xa6>

      }
    }
  }

    5f7c:	2e 96       	adiw	r28, 0x0e	; 14
    5f7e:	0f b6       	in	r0, 0x3f	; 63
    5f80:	f8 94       	cli
    5f82:	de bf       	out	0x3e, r29	; 62
    5f84:	0f be       	out	0x3f, r0	; 63
    5f86:	cd bf       	out	0x3d, r28	; 61
    5f88:	df 91       	pop	r29
    5f8a:	cf 91       	pop	r28
    5f8c:	1f 91       	pop	r17
    5f8e:	0f 91       	pop	r16
    5f90:	ff 90       	pop	r15
    5f92:	ef 90       	pop	r14
    5f94:	df 90       	pop	r13
    5f96:	cf 90       	pop	r12
    5f98:	bf 90       	pop	r11
    5f9a:	af 90       	pop	r10
    5f9c:	9f 90       	pop	r9
    5f9e:	8f 90       	pop	r8
    5fa0:	7f 90       	pop	r7
    5fa2:	6f 90       	pop	r6
    5fa4:	5f 90       	pop	r5
    5fa6:	4f 90       	pop	r4
    5fa8:	3f 90       	pop	r3
    5faa:	2f 90       	pop	r2
    5fac:	08 95       	ret

00005fae <__udivmodsi4>:
    5fae:	a1 e2       	ldi	r26, 0x21	; 33
    5fb0:	1a 2e       	mov	r1, r26
    5fb2:	aa 1b       	sub	r26, r26
    5fb4:	bb 1b       	sub	r27, r27
    5fb6:	fd 01       	movw	r30, r26
    5fb8:	0d c0       	rjmp	.+26     	; 0x5fd4 <__udivmodsi4_ep>

00005fba <__udivmodsi4_loop>:
    5fba:	aa 1f       	adc	r26, r26
    5fbc:	bb 1f       	adc	r27, r27
    5fbe:	ee 1f       	adc	r30, r30
    5fc0:	ff 1f       	adc	r31, r31
    5fc2:	a2 17       	cp	r26, r18
    5fc4:	b3 07       	cpc	r27, r19
    5fc6:	e4 07       	cpc	r30, r20
    5fc8:	f5 07       	cpc	r31, r21
    5fca:	20 f0       	brcs	.+8      	; 0x5fd4 <__udivmodsi4_ep>
    5fcc:	a2 1b       	sub	r26, r18
    5fce:	b3 0b       	sbc	r27, r19
    5fd0:	e4 0b       	sbc	r30, r20
    5fd2:	f5 0b       	sbc	r31, r21

00005fd4 <__udivmodsi4_ep>:
    5fd4:	66 1f       	adc	r22, r22
    5fd6:	77 1f       	adc	r23, r23
    5fd8:	88 1f       	adc	r24, r24
    5fda:	99 1f       	adc	r25, r25
    5fdc:	1a 94       	dec	r1
    5fde:	69 f7       	brne	.-38     	; 0x5fba <__udivmodsi4_loop>
    5fe0:	60 95       	com	r22
    5fe2:	70 95       	com	r23
    5fe4:	80 95       	com	r24
    5fe6:	90 95       	com	r25
    5fe8:	9b 01       	movw	r18, r22
    5fea:	ac 01       	movw	r20, r24
    5fec:	bd 01       	movw	r22, r26
    5fee:	cf 01       	movw	r24, r30
    5ff0:	08 95       	ret

00005ff2 <__tablejump2__>:
    5ff2:	ee 0f       	add	r30, r30
    5ff4:	ff 1f       	adc	r31, r31
    5ff6:	05 90       	lpm	r0, Z+
    5ff8:	f4 91       	lpm	r31, Z
    5ffa:	e0 2d       	mov	r30, r0
    5ffc:	09 94       	ijmp

00005ffe <__muluhisi3>:
    5ffe:	0e 94 0a 30 	call	0x6014	; 0x6014 <__umulhisi3>
    6002:	a5 9f       	mul	r26, r21
    6004:	90 0d       	add	r25, r0
    6006:	b4 9f       	mul	r27, r20
    6008:	90 0d       	add	r25, r0
    600a:	a4 9f       	mul	r26, r20
    600c:	80 0d       	add	r24, r0
    600e:	91 1d       	adc	r25, r1
    6010:	11 24       	eor	r1, r1
    6012:	08 95       	ret

00006014 <__umulhisi3>:
    6014:	a2 9f       	mul	r26, r18
    6016:	b0 01       	movw	r22, r0
    6018:	b3 9f       	mul	r27, r19
    601a:	c0 01       	movw	r24, r0
    601c:	a3 9f       	mul	r26, r19
    601e:	70 0d       	add	r23, r0
    6020:	81 1d       	adc	r24, r1
    6022:	11 24       	eor	r1, r1
    6024:	91 1d       	adc	r25, r1
    6026:	b2 9f       	mul	r27, r18
    6028:	70 0d       	add	r23, r0
    602a:	81 1d       	adc	r24, r1
    602c:	11 24       	eor	r1, r1
    602e:	91 1d       	adc	r25, r1
    6030:	08 95       	ret

00006032 <eeprom_read_byte>:
    6032:	f9 99       	sbic	0x1f, 1	; 31
    6034:	fe cf       	rjmp	.-4      	; 0x6032 <eeprom_read_byte>
    6036:	92 bd       	out	0x22, r25	; 34
    6038:	81 bd       	out	0x21, r24	; 33
    603a:	f8 9a       	sbi	0x1f, 0	; 31
    603c:	99 27       	eor	r25, r25
    603e:	80 b5       	in	r24, 0x20	; 32
    6040:	08 95       	ret

00006042 <eeprom_read_word>:
    6042:	a8 e1       	ldi	r26, 0x18	; 24
    6044:	b0 e0       	ldi	r27, 0x00	; 0
    6046:	42 e0       	ldi	r20, 0x02	; 2
    6048:	50 e0       	ldi	r21, 0x00	; 0
    604a:	0c 94 41 30 	jmp	0x6082	; 0x6082 <eeprom_read_blraw>

0000604e <eeprom_update_byte>:
    604e:	26 2f       	mov	r18, r22

00006050 <eeprom_update_r18>:
    6050:	f9 99       	sbic	0x1f, 1	; 31
    6052:	fe cf       	rjmp	.-4      	; 0x6050 <eeprom_update_r18>
    6054:	92 bd       	out	0x22, r25	; 34
    6056:	81 bd       	out	0x21, r24	; 33
    6058:	f8 9a       	sbi	0x1f, 0	; 31
    605a:	01 97       	sbiw	r24, 0x01	; 1
    605c:	00 b4       	in	r0, 0x20	; 32
    605e:	02 16       	cp	r0, r18
    6060:	39 f0       	breq	.+14     	; 0x6070 <eeprom_update_r18+0x20>
    6062:	1f ba       	out	0x1f, r1	; 31
    6064:	20 bd       	out	0x20, r18	; 32
    6066:	0f b6       	in	r0, 0x3f	; 63
    6068:	f8 94       	cli
    606a:	fa 9a       	sbi	0x1f, 2	; 31
    606c:	f9 9a       	sbi	0x1f, 1	; 31
    606e:	0f be       	out	0x3f, r0	; 63
    6070:	08 95       	ret

00006072 <eeprom_update_word>:
    6072:	01 96       	adiw	r24, 0x01	; 1
    6074:	27 2f       	mov	r18, r23
    6076:	0e 94 28 30 	call	0x6050	; 0x6050 <eeprom_update_r18>
    607a:	0c 94 27 30 	jmp	0x604e	; 0x604e <eeprom_update_byte>

0000607e <eeprom_read_block>:
    607e:	dc 01       	movw	r26, r24
    6080:	cb 01       	movw	r24, r22

00006082 <eeprom_read_blraw>:
    6082:	fc 01       	movw	r30, r24
    6084:	f9 99       	sbic	0x1f, 1	; 31
    6086:	fe cf       	rjmp	.-4      	; 0x6084 <eeprom_read_blraw+0x2>
    6088:	06 c0       	rjmp	.+12     	; 0x6096 <eeprom_read_blraw+0x14>
    608a:	f2 bd       	out	0x22, r31	; 34
    608c:	e1 bd       	out	0x21, r30	; 33
    608e:	f8 9a       	sbi	0x1f, 0	; 31
    6090:	31 96       	adiw	r30, 0x01	; 1
    6092:	00 b4       	in	r0, 0x20	; 32
    6094:	0d 92       	st	X+, r0
    6096:	41 50       	subi	r20, 0x01	; 1
    6098:	50 40       	sbci	r21, 0x00	; 0
    609a:	b8 f7       	brcc	.-18     	; 0x608a <eeprom_read_blraw+0x8>
    609c:	08 95       	ret

0000609e <_exit>:
    609e:	f8 94       	cli

000060a0 <__stop_program>:
    60a0:	ff cf       	rjmp	.-2      	; 0x60a0 <__stop_program>
