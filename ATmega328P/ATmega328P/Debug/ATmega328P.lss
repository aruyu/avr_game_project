
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00003814  000038a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003814  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800108  00800108  000038b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000038b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000038e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00003920  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007547  00000000  00000000  00003b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000134a  00000000  00000000  0000b05f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001742  00000000  00000000  0000c3a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000778  00000000  00000000  0000daec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000efb  00000000  00000000  0000e264  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002abf  00000000  00000000  0000f15f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000248  00000000  00000000  00011c1e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 41 11 	jmp	0x2282	; 0x2282 <__ctors_end>
       4:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__vector_1>
       8:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
       c:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      10:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      14:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      18:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      1c:	0c 94 b6 11 	jmp	0x236c	; 0x236c <__vector_7>
      20:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      24:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      28:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      2c:	0c 94 9f 11 	jmp	0x233e	; 0x233e <__vector_11>
      30:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      34:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      38:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      3c:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      40:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      44:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      48:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      4c:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      50:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      54:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      58:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      5c:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      60:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>
      64:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	ff ff       	.word	0xffff	; ????
      6a:	ff ff       	.word	0xffff	; ????
      6c:	ff ff       	.word	0xffff	; ????
      6e:	ff ff       	.word	0xffff	; ????
      70:	ff ff       	.word	0xffff	; ????
      72:	ff ff       	.word	0xffff	; ????
      74:	ff ff       	.word	0xffff	; ????
      76:	ff ff       	.word	0xffff	; ????
      78:	ff ff       	.word	0xffff	; ????
      7a:	ff ff       	.word	0xffff	; ????
      7c:	ff ff       	.word	0xffff	; ????
      7e:	ff ff       	.word	0xffff	; ????
      80:	55 55       	subi	r21, 0x55	; 85
      82:	55 55       	subi	r21, 0x55	; 85
      84:	55 55       	subi	r21, 0x55	; 85
      86:	55 55       	subi	r21, 0x55	; 85
      88:	ff ff       	.word	0xffff	; ????
      8a:	ff ff       	.word	0xffff	; ????
      8c:	ff ff       	.word	0xffff	; ????
      8e:	ff ff       	.word	0xffff	; ????
      90:	55 55       	subi	r21, 0x55	; 85
      92:	55 55       	subi	r21, 0x55	; 85
      94:	55 55       	subi	r21, 0x55	; 85
      96:	55 55       	subi	r21, 0x55	; 85
      98:	55 55       	subi	r21, 0x55	; 85
      9a:	55 55       	subi	r21, 0x55	; 85
      9c:	55 55       	subi	r21, 0x55	; 85
      9e:	55 55       	subi	r21, 0x55	; 85
      a0:	ff ff       	.word	0xffff	; ????
      a2:	ff ff       	.word	0xffff	; ????
      a4:	ff ff       	.word	0xffff	; ????
      a6:	ff ff       	.word	0xffff	; ????
      a8:	55 55       	subi	r21, 0x55	; 85
      aa:	55 55       	subi	r21, 0x55	; 85
      ac:	55 55       	subi	r21, 0x55	; 85
      ae:	55 55       	subi	r21, 0x55	; 85
      b0:	55 55       	subi	r21, 0x55	; 85
      b2:	55 55       	subi	r21, 0x55	; 85
      b4:	55 55       	subi	r21, 0x55	; 85
      b6:	55 55       	subi	r21, 0x55	; 85
      b8:	55 55       	subi	r21, 0x55	; 85
      ba:	55 55       	subi	r21, 0x55	; 85
      bc:	55 55       	subi	r21, 0x55	; 85
      be:	55 55       	subi	r21, 0x55	; 85
      c0:	55 55       	subi	r21, 0x55	; 85
      c2:	55 55       	subi	r21, 0x55	; 85
      c4:	55 55       	subi	r21, 0x55	; 85
      c6:	55 55       	subi	r21, 0x55	; 85
      c8:	55 55       	subi	r21, 0x55	; 85
      ca:	55 55       	subi	r21, 0x55	; 85
      cc:	55 55       	subi	r21, 0x55	; 85
      ce:	55 55       	subi	r21, 0x55	; 85
      d0:	55 55       	subi	r21, 0x55	; 85
      d2:	55 55       	subi	r21, 0x55	; 85
      d4:	55 55       	subi	r21, 0x55	; 85
      d6:	55 55       	subi	r21, 0x55	; 85
      d8:	05 51       	subi	r16, 0x15	; 21
      da:	50 14       	cp	r5, r0
      dc:	55 15       	cp	r21, r5
      de:	05 14       	cp	r0, r5
      e0:	51 55       	subi	r21, 0x51	; 81
      e2:	54 55       	subi	r21, 0x54	; 84
      e4:	51 55       	subi	r21, 0x51	; 81
      e6:	45 51       	subi	r20, 0x15	; 21
	...
      f0:	15 15       	cp	r17, r5
      f2:	45 54       	subi	r20, 0x45	; 69
      f4:	55 45       	sbci	r21, 0x55	; 85
      f6:	54 51       	subi	r21, 0x14	; 20
	...
     100:	51 51       	subi	r21, 0x11	; 17
     102:	51 51       	subi	r21, 0x11	; 17
     104:	54 55       	subi	r21, 0x54	; 84
     106:	15 15       	cp	r17, r5
	...
     110:	45 14       	cp	r4, r5
     112:	51 45       	sbci	r21, 0x51	; 81
     114:	14 51       	subi	r17, 0x14	; 20
     116:	45 14       	cp	r4, r5
	...

00000158 <_ZL9titleMenu>:
     158:	20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
     180:	00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1a4:	00 00 00 40 00 00 00 00 00 00 00 00 00 00 02 00     ...@............
	...
     1c0:	00 00 80 00 00 00 00 00 00 00 00 00 01 50 00 00     .............P..
	...
     1e0:	00 00 00 40 00 00 00 00 00 00 00 01 00 00 00 00     ...@............
     1f0:	00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00     ...@............
	...
     21c:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     234:	00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     250:	01 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00     ................
	...
     274:	00 00 06 40 00 00 00 00 00 00 00 00 00 00 00 00     ...@............
	...
     294:	01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     2b8:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     2e0:	10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     2f0:	00 00 00 00 02 00 00 00 00 00 04 00 00 00 00 00     ................
     300:	00 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00     ................
	...
     338:	00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
     348:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     360:	00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     370:	00 00 00 00 06 40 00 00 00 00 00 00 00 00 00 00     .....@..........
     380:	00 00 00 00 00 00 01 65 00 00 00 00 00 00 00 00     .......e........
	...
     398:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3a8:	00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00     ................
	...
     3d0:	00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     400:	00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     410:	00 00 00 00 00 50 00 00 00 00 00 00 00 00 00 00     .....P..........
     420:	04 00 00 00 00 00 00 64 00 00 00 00 00 00 00 00     .......d........
	...
     438:	00 00 00 50 00 00 00 00 00 00 00 00 00 00 15 00     ...P............
     448:	00 00 00 00 00 10 00 00 00 00 80 00 00 00 00 00     ................
	...
     460:	00 00 00 02 00 00 00 00 00 00 00 00 04 00 00 00     ................
	...
     49c:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     4c8:	00 00 00 40 00 00 00 08 00 00 00 00 00 00 00 00     ...@............
     4d8:	00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00     ....@...........
	...
     550:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
     560:	10 00 00 00 00 00 00 00 00 00 00 40 00 00 00 00     ...........@....
	...
     590:	00 10 00 00 00 00 10 00 00 00 00 00 00 00 00 00     ................
	...
     5ac:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     5bc:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     5cc:	00 00 55 50 00 00 00 00 00 40 00 00 04 00 00 40     ..UP.....@.....@
     5dc:	00 01 00 00 00 00 01 00 00 10 00 01 00 00 00 00     ................
     5ec:	00 00 00 00 00 00 00 05 55 55 00 05 50 00 00 10     ........UU..P...
     5fc:	00 00 01 00 00 00 00 00 40 00 40 00 00 40 00 04     ........@.@..@..
     60c:	00 00 40 00 00 00 00 00 00 00 00 00 00 15 55 55     ..@...........UU
     61c:	40 55 55 00 00 04 04 00 00 40 00 00 00 00 10 00     @UU......@......
     62c:	10 01 00 10 10 01 10 00 00 00 00 00 00 00 00 00     ................
     63c:	00 00 00 55 55 55 51 55 55 40 00 01 01 00 00 00     ...UUUQUU@......
     64c:	00 00 00 00 04 04 04 00 00 04 04 00 44 00 04 00     ............D...
	...
     664:	00 55 55 55 55 55 55 40 00 00 40 40 40 00 00 00     .UUUUUU@..@@@...
     674:	00 00 01 01 11 00 10 01 01 00 11 00 01 00 00 10     ................
     684:	00 00 00 00 00 00 01 55 55 55 55 55 55 50 00 00     .......UUUUUUP..
     694:	10 10 10 00 00 00 04 04 00 40 44 40 04 00 40 00     .........@D@..@.
     6a4:	04 40 00 44 00 04 00 00 00 00 00 00 01 55 55 55     .@.D.........UUU
     6b4:	55 55 55 50 00 00 44 04 04 00 42 aa 01 01 01 10     UUUP..D...B.....
     6c4:	11 10 11 01 10 10 01 11 10 11 00 01 10 00 00 00     ................
     6d4:	00 00 01 55 55 55 55 55 55 50 15 40 11 11 01 00     ...UUUUUUP.@....
     6e4:	2a aa a0 40 40 44 04 44 04 40 44 04 04 44 44 04     *..@@D.D.@D..DD.
     6f4:	40 40 40 00 00 00 00 00 01 55 55 55 55 55 55 51     @@@......UUUUUUQ
     704:	55 54 44 44 44 40 aa aa a8 01 10 11 11 11 01 10     UTDDD@..........
     714:	11 01 01 11 11 01 10 10 00 00 00 00 00 00 14 55     ...............U
     724:	55 55 55 55 55 45 55 55 11 11 11 12 aa aa aa 04     UUUUUEUU........
     734:	44 04 44 44 44 44 04 44 44 44 44 44 44 44 40 00     D.DDDD.DDDDDDD@.
     744:	00 00 00 00 55 55 55 55 55 55 55 55 55 55 14 44     ....UUUUUUUUUU.D
     754:	4a a6 aa aa aa 91 11 11 11 11 11 11 11 11 11 11     J...............
     764:	11 11 11 11 00 00 00 00 00 00 55 55 55 55 55 55     ..........UUUUUU
     774:	55 5a a9 55 55 51 2a aa aa aa aa 84 44 44 44 54     UZ.UUQ*.....DDDT
     784:	44 44 54 44 44 44 44 44 44 44 40 00 00 00 00 00     DDTDDDDDDD@.....
     794:	55 55 55 55 55 55 55 aa aa 95 55 54 55 aa aa aa     UUUUUUU...UTU...
     7a4:	aa a1 15 11 11 15 51 15 15 11 11 11 11 11 11 11     ......Q.........
     7b4:	10 00 00 00 00 00 40 55 55 55 55 55 56 aa aa a5     ......@UUUUUV...
     7c4:	55 55 55 5a aa aa aa a4 45 44 54 45 54 45 45 44     UUUZ....EDTETEED
     7d4:	44 44 44 44 44 6a aa 00 00 00 00 00 00 05 55 55     DDDDDj........UU
     7e4:	55 55 56 aa aa a5 55 55 55 56 95 6a aa a5 11 51     UUV...UUUV.j...Q
     7f4:	15 11 55 11 51 51 11 11 11 11 12 aa aa a0 00 00     ..U.QQ..........
     804:	00 00 00 01 55 55 55 55 5a aa aa a9 55 55 55 56     ....UUUUZ...UUUV
     814:	55 5a aa a5 44 54 45 44 55 44 54 54 54 44 44 44     UZ..DTEDUDTTTDDD
     824:	4a aa a8 00 00 00 00 00 00 00 54 05 55 55 5a aa     J.........T.UUZ.
     834:	aa a9 a9 55 55 55 55 56 aa 95 51 55 11 55 55 55     ...UUUUV..QU.UUU
     844:	15 55 15 55 11 11 1a aa a0 00 00 00 00 00 00 00     .U.U............
     854:	40 00 55 55 5a aa aa aa aa 55 aa 55 55 56 aa aa     @.UUZ....U.UUV..
     864:	94 55 44 55 55 54 45 55 55 15 44 44 6a aa a0 00     .UDUUTEUU.DDj...
	...
     87c:	55 55 5a aa aa aa aa 9a aa a5 55 56 55 aa a9 15     UUZ.......UVU...
     88c:	55 15 55 55 51 55 55 55 51 11 2a a4 00 00 00 00     U.UUQUUUQ.*.....
     89c:	00 00 00 00 00 00 15 55 5a 55 aa aa aa aa aa a9     .......UZU......
     8ac:	55 55 55 6a aa 55 55 45 55 55 54 55 55 6a 94 44     UUUj.UUEUUTUUj.D
     8bc:	6a 90 00 00 00 00 02 aa 40 00 05 54 15 55 55 55     j.......@..T.UUU
     8cc:	5a a9 56 aa aa aa 55 55 55 5a aa 51 55 55 55 55     Z.V...UUUZ.QUUUU
     8dc:	55 15 56 aa a9 1a 95 50 00 00 00 00 2a aa 50 00     U.V....P....*.P.
     8ec:	55 55 55 55 55 55 56 95 55 6a aa aa 55 55 55 56     UUUUUUV.Uj..UUUV
     8fc:	aa 94 55 54 55 55 55 55 5a aa aa 69 55 40 00 00     ..UTUUUUZ..iU@..
     90c:	00 00 aa aa 54 01 55 55 55 55 55 55 56 55 55 5a     ....T.UUUUUUVUUZ
     91c:	aa aa 95 55 55 55 aa 95 15 55 15 55 55 51 5a aa     ...UUU...U.UUQZ.
     92c:	aa a9 55 40 00 00 00 00 aa aa 55 05 55 55 55 50     ..U@......U.UUUP
     93c:	00 15 55 55 55 56 aa aa 95 55 aa 95 aa 95 55 55     ..UUUV...U....UU
     94c:	55 95 55 54 6a aa aa a5 55 40 00 00 0a a8 aa aa     U.UTj...U@......
     95c:	55 00 15 55 55 00 00 01 55 55 55 56 55 aa 95 5a     U..UU...UUUVU..Z
     96c:	aa a9 aa 95 55 55 55 65 55 55 2a aa aa a5 55 40     ....UUUeUU*...U@
     97c:	00 00 aa aa aa aa 55 40 01 55 54 00 00 00 55 55     ......U@.UT...UU
     98c:	55 55 55 6a 95 6a aa aa aa 55 55 55 55 59 95 aa     UUUj.j...UUUUY..
     99c:	6a aa aa a5 55 50 00 02 aa aa aa aa 55 41 54 55     j...UP......UATU
     9ac:	54 00 00 00 15 01 55 55 55 6a 55 6a aa aa aa a5     T.....UUUjUj....
     9bc:	55 56 55 56 6a aa aa aa aa a5 55 50 00 02 aa aa     UVUVj.....UP....
     9cc:	aa aa 55 45 55 55 50 00 00 00 10 00 55 55 55 5a     ..UEUUP.....UUUZ
     9dc:	a5 6a aa aa aa a5 55 55 95 56 aa aa aa aa aa a5     .j....UU.V......
     9ec:	55 54 00 0a aa aa aa aa 55 55 55 00 50 00 00 00     UT......UUU.P...
     9fc:	00 15 55 55 55 aa aa 6a aa aa aa aa a9 55 55 aa     ..UUU..j.....UU.
     a0c:	aa aa aa aa aa a9 55 40 01 5a aa aa aa aa 55 55     ......U@.Z....UU
     a1c:	50 00 00 00 00 00 01 55 55 55 56 aa aa 9a aa 00     P......UUUV.....
     a2c:	0a aa aa 95 59 5a aa aa aa aa aa aa 55 00 15 5a     ....YZ......U..Z
     a3c:	aa aa aa aa 55 55 40 00 00 00 01 54 05 55 55 55     ....UU@....T.UUU
     a4c:	55 6a aa aa 80 00 00 2a aa a5 56 55 66 6a aa aa     Uj.....*..VUfj..
     a5c:	aa aa 54 00 55 5a aa aa aa aa 50 05 00 00 00 00     ..T.UZ....P.....
     a6c:	05 55 45 55 55 55 55 55 aa aa 00 00 00 02 aa a9     .UEUUUUU........
     a7c:	55 95 99 99 99 99 aa a9 55 50 55 5a aa aa aa a5     U.......UPUZ....
     a8c:	40 01 00 00 00 00 00 05 55 55 55 55 55 55 5a a8     @.......UUUUUUZ.
     a9c:	00 00 00 00 aa a9 59 65 66 66 66 6a aa a5 55 54     ......Yefffj..UT
     aac:	55 5a aa aa aa 95 00 00 00 00 00 00 00 00 55 55     UZ............UU
     abc:	55 55 55 55 56 a8 00 00 00 00 2a 55 55 99 99 aa     UUUUV.....*UU...
     acc:	a9 aa aa 95 55 55 55 56 aa aa aa 55 00 00 00 00     ....UUUV...U....
     adc:	00 00 00 00 14 05 55 55 55 55 55 a0 00 00 00 00     ......UUUUU.....
     aec:	25 55 55 56 66 aa aa aa aa 95 55 55 55 55 aa aa     %UUVf.....UUUU..
     afc:	aa 55 00 00 00 00 00 00 00 00 00 00 55 55 55 55     .U..........UUUU
     b0c:	00 20 00 00 00 00 05 55 55 55 9a aa aa aa aa 55     . .....UUU.....U
     b1c:	55 55 55 aa aa aa aa 55 00 00 00 00 00 00 00 00     UUU....U........
     b2c:	00 00 55 55 55 50 00 00 00 00 00 00 05 55 55 55     ..UUUP.......UUU
     b3c:	5a aa aa aa aa 55 55 55 5a aa aa aa aa 55 00 00     Z....UUUZ....U..
	...
     b54:	15 55 55 50 00 00 00 00 00 00 05 55 55 55 56 aa     .UUP.......UUUV.
     b64:	aa aa aa 55 55 55 6a aa aa aa aa 55 00 00 00 00     ...UUUj....U....
     b74:	00 00 00 00 55 40 15 55 55 54 00 00 00 00 00 00     ....U@.UUT......
     b84:	00 15 55 55 56 aa ff fa aa 55 55 55 aa aa aa aa     ..UUV....UUU....
     b94:	aa 95 00 00 00 00 00 00 00 05 55 54 15 55 55 55     ..........UT.UUU
     ba4:	00 00 00 00 00 40 00 01 55 55 55 af ff ff aa 55     .....@..UUU....U
     bb4:	55 55 aa aa aa aa aa a5 00 00 00 00 00 01 54 15     UU............T.
     bc4:	55 55 15 55 55 55 00 00 00 00 05 00 00 00 15 55     UU.UUU.........U
     bd4:	55 bf ff ff ea 95 55 56 aa aa aa aa 95 5a 00 00     U.....UV.....Z..
     be4:	00 00 00 15 55 55 55 55 55 55 55 55 40 00 00 55     ....UUUUUUUU@..U
     bf4:	14 00 00 00 15 55 55 ff ff ff fa 95 56 aa aa aa     .....UU.....V...
     c04:	aa a9 55 55 00 00 00 00 00 55 55 55 55 55 55 55     ..UU.....UUUUUUU
     c14:	55 55 40 00 05 55 54 00 00 00 05 55 55 ff ff ff     UU@..UT....UU...
     c24:	fa a5 6a aa aa aa aa a5 55 55 00 00 00 00 00 55     ..j.....UU.....U
     c34:	55 55 50 00 15 55 01 55 05 50 15 55 50 00 00 00     UUP..U.U.P.UP...
     c44:	05 55 55 ff ff ff fe bf aa aa aa a5 5a 95 55 55     .UU.........Z.UU
     c54:	00 00 00 00 01 55 55 55 00 00 05 50 00 15 15 54     .....UUU...P...T
     c64:	55 55 50 00 00 00 04 01 54 ff ff ff fe ff aa aa     UUP.....T.......
     c74:	aa 55 56 95 55 55 00 00 00 00 01 55 55 54 00 00     .UV.UU.....UUT..
     c84:	00 40 00 00 55 54 55 50 10 00 00 00 00 00 57 ff     .@..UTUP......W.
     c94:	ff ff ff ff aa aa a9 55 55 55 55 55 00 00 00 00     .......UUUUU....
     ca4:	01 40 05 54 00 00 00 00 00 00 15 55 55 00 00 00     .@.T.......UU...
     cb4:	00 00 00 00 55 55 3f ff ff ff aa aa aa a5 55 55     ....UU?.......UU
     cc4:	55 55 00 00 00 00 00 00 00 50 00 00 00 00 00 55     UU.......P.....U
     cd4:	45 55 55 00 00 00 00 00 00 55 15 55 53 ff ff ff     EUU......U.US...
     ce4:	ea aa aa a9 55 55 55 55 00 00 00 00 00 00 00 10     ....UUUU........
     cf4:	00 00 00 00 05 55 55 55 54 55 50 00 00 00 00 05     .....UUUTUP.....
     d04:	55 55 54 ff ff fa aa aa aa aa 55 55 55 6a 00 00     UUT.......UUUj..
	...
     d1c:	00 00 15 55 55 55 55 55 55 00 00 00 00 01 50 05     ...UUUUUU.....P.
     d2c:	55 3f ff ea aa aa aa aa 55 55 56 aa 00 00 00 00     U?......UUV.....
	...
     d44:	15 55 55 55 55 55 55 40 00 00 00 01 00 00 55 7f     .UUUUUU@......U.
     d54:	ff ea aa aa aa aa 55 55 56 aa 00 55 00 00 00 00     ......UUV..U....
     d64:	00 00 00 00 00 15 15 55 55 55 55 55 55 50 00 00     .......UUUUUUP..
     d74:	00 00 00 00 55 4c 55 6a aa aa aa a9 55 55 5a aa     ....ULUj....UUZ.
     d84:	05 55 50 00 00 00 00 00 00 00 00 00 55 55 55 55     .UP.........UUUU
     d94:	55 55 55 50 00 00 00 00 00 00 15 55 55 55 6a aa     UUUP.......UUUj.
     da4:	aa aa a5 55 5a aa 55 55 54 00 00 00 00 00 00 00     ...UZ.UUT.......
     db4:	00 00 05 55 55 55 55 55 55 54 00 00 00 00 00 00     ...UUUUUUT......
     dc4:	10 05 55 55 55 5a aa aa aa 55 5a aa 00 15 55 00     ..UUUZ...UZ...U.
     dd4:	55 40 00 00 00 15 40 00 01 55 55 55 55 55 55 54     U@....@..UUUUUUT
     de4:	05 40 00 00 00 00 00 00 01 55 55 aa aa a9 55 55     .@.......UU...UU
     df4:	5a aa 00 00 00 41 55 54 00 00 01 55 54 00 01 55     Z....AUT...UT..U
     e04:	55 55 55 55 55 54 55 54 00 00 00 00 00 00 2a aa     UUUUUTUT......*.
     e14:	aa aa aa 55 55 55 aa aa 00 00 00 00 15 55 00 00     ...UUU.......U..
     e24:	05 55 55 00 00 55 55 55 55 55 55 55 55 55 00 00     .UU..UUUUUUUUU..
     e34:	55 6a aa aa aa aa aa aa a9 55 55 5a aa aa 00 00     Uj.......UUZ....
     e44:	00 00 00 55 15 50 05 55 55 40 00 40 15 55 55 55     ...U.P.UU@.@.UUU
     e54:	55 55 55 55 55 55 55 5a a5 56 aa aa aa aa a5 55     UUUUUUUZ.V.....U
     e64:	55 6a aa aa 00 00 00 00 00 05 55 55 15 55 55 45     Uj........UU.UUE
     e74:	40 00 05 55 55 55 55 55 55 55 55 55 55 5a 55 55     @..UUUUUUUUUUZUU
     e84:	6a aa aa aa a5 55 55 a5 56 a5 00 00 00 00 00 00     j....UU.V.......
     e94:	15 55 15 55 55 55 54 00 01 55 55 55 55 55 55 55     .U.UUUT..UUUUUUU
     ea4:	55 55 55 59 55 55 5a aa aa aa 95 55 55 95 55 95     UUUYUUZ....UU.U.
     eb4:	00 00 00 00 00 00 00 55 55 55 55 55 55 05 51 55     .......UUUUUU.QU
     ec4:	55 55 55 55 55 55 55 55 55 55 55 55 56 aa aa aa     UUUUUUUUUUUUV...
     ed4:	95 55 55 55 55 55 00 00 00 00 00 00 00 00 15 50     .UUUUU.........P
     ee4:	00 01 55 15 54 55 55 55 55 55 55 55 55 55 55 55     ..U.TUUUUUUUUUUU
     ef4:	55 55 55 56 aa aa 95 55 55 55 55 55 00 00 00 00     UUUV...UUUUU....
	...
     f0c:	01 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     .UUUUUUUUUUUUUUU
     f1c:	55 55 6a a5 55 55 55 55 55 55 00 00 00 00 00 00     UUj.UUUUUU......
     f2c:	00 00 00 00 00 00 00 05 55 55 55 55 55 54 01 55     ........UUUUUT.U
     f3c:	55 55 55 55 55 55 55 55 5a 55 55 55 55 55 55 55     UUUUUUUUZUUUUUUU
	...
     f58:	00 00 05 55 55 55 55 00 00 00 15 55 50 15 55 55     ...UUUU....UP.UU
     f68:	55 55 59 55 55 55 55 55 55 55 00 00 00 00 00 00     UUYUUUUUUU......
	...
     f80:	00 01 55 55 00 00 00 00 00 05 40 01 55 55 55 55     ..UU......@.UUUU
     f90:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
     fa0:	55 55 55 55 55 55 55 55 55 55 55 56 aa aa aa aa     UUUUUUUUUUUV....
     fb0:	aa aa aa aa aa aa aa a5 55 55 55 55 55 55 55 55     ........UUUUUUUU
     fc0:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
     fd0:	55 55 5a 55 6a aa aa ab fa aa aa aa a5 55 55 55     UUZUj........UUU
     fe0:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
     ff0:	55 55 55 55 55 55 5a aa aa aa aa aa ab ff fe aa     UUUUUUZ.........
    1000:	aa aa aa aa aa a9 55 55 55 55 55 55 55 55 55 55     ......UUUUUUUUUU
    1010:	55 55 55 55 55 55 55 55 aa aa aa aa aa aa aa aa     UUUUUUUU........
    1020:	aa aa aa aa aa aa aa aa aa aa aa 95 55 55 55 55     ............UUUU
    1030:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 56     UUUUUUUUUUUUUUUV
    1040:	aa aa aa aa aa aa aa aa ab ff aa aa aa aa aa aa     ................
    1050:	aa aa aa aa aa aa 55 55 55 55 55 55 55 55 55 55     ......UUUUUUUUUU
    1060:	55 55 55 55 55 55 56 aa aa aa aa aa ab ff ff ff     UUUUUUV.........
    1070:	ff ea aa aa aa aa aa aa aa aa a9 55 55 55 55 55     ...........UUUUU
    1080:	55 55 55 55 55 55 55 5a a5 56 aa aa aa aa aa aa     UUUUUUUZ.V......
    1090:	aa aa aa aa ff ff fe aa aa aa aa aa aa aa aa a9     ................
    10a0:	55 55 55 55 55 55 55 55 55 55 5a aa aa aa aa aa     UUUUUUUUUUZ.....
    10b0:	aa aa aa aa aa aa aa aa aa ff ff ff ff ff ab fa     ................
    10c0:	aa aa aa aa aa aa aa aa 55 55 55 55 55 55 55 55     ........UUUUUUUU
    10d0:	55 56 aa aa aa aa aa aa aa aa aa aa aa aa aa aa     UV..............
    10e0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa 55 55     ..............UU
    10f0:	55 55 55 aa aa 95 55 aa aa aa aa aa aa aa aa aa     UUU...U.........
    1100:	aa aa aa bf ff ff ff ff fa aa aa aa aa aa aa aa     ................
    1110:	aa aa aa aa 55 55 56 aa aa aa aa aa aa aa aa aa     ....UUV.........
    1120:	aa aa aa aa aa aa af eb ff ff ff ff ff ff ff ff     ................
    1130:	ea aa aa aa aa aa aa aa aa aa aa 55 55 56 aa aa     ...........UUV..
    1140:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa ab ff     ................
    1150:	ff ff ea aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    1160:	aa a9 55 55 56 95 56 aa aa aa aa aa aa aa aa aa     ..UUV.V.........
    1170:	aa aa aa aa aa aa bf ff ff fa aa aa aa aa aa aa     ................
    1180:	aa aa aa aa aa aa 59 55 55 5a aa aa aa aa aa aa     ......YUUZ......
    1190:	aa aa aa aa aa aa aa aa aa aa aa aa aa bf ff ff     ................
    11a0:	ff fe aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    11b0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa bf ff     ................
    11c0:	ff ff ff ff ff ff fe aa aa aa aa aa aa aa aa aa     ................
    11d0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    11e0:	aa ff ff ff ff ff ff ff ff ff ff fe aa aa bf ff     ................
    11f0:	ff ff af aa aa aa aa aa                             ........

000011f8 <_ZL9fontASCII>:
    11f8:	00 30 00 00 10 00 00 00 00 00 00 00 00 00 00 00     .0..............
    1208:	00 78 6c 28 3c 66 20 30 18 30 54 18 00 00 00 06     .xl(<f 0.0T.....
    1218:	00 78 24 7c 60 0c 50 10 30 18 38 18 00 00 00 0c     .x$|`.P.0.8.....
    1228:	00 78 00 28 38 18 34 00 30 18 10 7e 00 7e 00 18     .x.(8.4.0..~.~..
    1238:	00 30 00 7c 0c 30 48 00 30 18 38 18 00 00 00 30     .0.|.0H.0.8....0
    1248:	00 00 00 28 78 66 34 00 18 30 54 18 00 00 00 60     ...(xf4..0T....`
    1258:	00 30 00 00 10 00 00 00 00 00 00 00 30 00 30 00     .0..........0.0.
	...
    1274:	10 00 00 00 38 18 fc fc 06 fe 7c fe 7c 7c 00 00     ....8.....|.||..
    1284:	00 00 00 7c 4c 38 06 06 c6 c0 c0 06 c6 c6 00 00     ...|L8..........
    1294:	18 00 30 c6 c6 18 06 3c c6 fc fc 06 7c c6 30 30     ..0....<....|.00
    12a4:	30 7c 18 06 c6 18 7c 06 c6 06 c6 0c c6 c6 00 00     0|....|.........
    12b4:	60 00 0c 06 c6 18 c0 06 c6 06 c6 18 c6 7e 00 00     `............~..
    12c4:	30 7c 18 3c 64 18 c0 06 fe 06 c6 30 c6 06 30 30     0|.<d......0..00
    12d4:	18 00 30 00 38 3c fe fc 06 fc 7c 30 7c 7c 00 10     ..0.8<....|0||..
    12e4:	00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 00     ...0............
    12f4:	00 00 00 00 7c 7c fc 7e fc fe fe 7c c6 3c 1e c6     ....||.~...|.<..
    1304:	c0 c6 c6 7c c6 c6 c6 c0 c6 c0 c0 c6 c6 18 06 c6     ...|............
    1314:	c0 ee e6 c6 c6 c6 c6 c0 c6 c0 c0 c0 c6 18 06 cc     ................
    1324:	c0 fe f6 c6 d6 c6 fc c0 c6 f8 fc de fe 18 06 f8     ................
    1334:	c0 d6 de c6 dc fe c6 c0 c6 c0 c0 c6 c6 18 06 cc     ................
    1344:	c0 c6 ce c6 c0 c6 c6 c0 c6 c0 c0 c6 c6 18 c6 c6     ................
    1354:	c0 c6 c6 c6 7c c6 fc 7e fc fe c0 7e c6 3c 7c c6     ....|..~...~.<|.
    1364:	fe c6 c6 7c 00 00 00 00 00 00 00 00 00 00 00 00     ...|............
    1374:	00 00 00 00 fc 7c fc 7e 7e c6 c6 c6 c6 66 fe 00     .....|.~~....f..
    1384:	00 00 00 00 c6 c6 c6 c0 18 c6 c6 c6 c6 66 06 38     .............f.8
    1394:	60 38 10 00 c6 c6 c6 c0 18 c6 c6 c6 6c 66 0c 30     `8..........lf.0
    13a4:	30 18 38 00 c6 c6 c6 7c 18 c6 c6 d6 38 3c 38 30     0.8....|....8<80
    13b4:	18 18 6c 00 fc de fc 06 18 c6 6c fe 6c 18 60 30     ..l.......l.l.`0
    13c4:	0c 18 44 00 c0 cc c6 06 18 c6 38 ee c6 18 c0 38     ..D.......8....8
    13d4:	06 38 00 00 c0 76 c6 fc 18 7c 10 c6 c6 18 fe 00     .8...v...|......
    13e4:	00 00 00 fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
    13f4:	00 00 00 00 00 00 c0 00 06 00 3e 00 c0 18 0c c0     ..........>.....
    1404:	38 00 00 00 60 7c fc 7e 7e 7c 60 7e c0 00 00 c6     8...`|.~~|`~....
    1414:	18 fc fc 7c 20 06 c6 c0 c6 c6 60 c6 fc 38 1c cc     ...| .....`..8..
    1424:	18 d6 c6 c6 00 7e c6 c0 c6 c6 fc c6 c6 18 0c f8     .....~..........
    1434:	18 d6 c6 c6 00 c6 c6 c0 c6 fc 60 c6 c6 18 0c cc     ..........`.....
    1444:	18 d6 c6 c6 00 c6 c6 c0 c6 c0 60 7e c6 18 0c c6     ..........`~....
    1454:	18 d6 c6 c6 00 7e fc 7e 7e 7c 60 06 c6 18 0c c6     .....~.~~|`.....
    1464:	18 d6 c6 7c 00 00 00 00 00 00 00 7c 00 00 78 00     ...|.......|..x.
	...
    147c:	18 00 00 00 00 00 00 00 00 00 00 00 fc 7e fc 7c     .............~.|
    148c:	18 c6 c6 d6 c6 c6 fe 38 10 38 00 00 c6 c6 c6 c0     .......8.8......
    149c:	7e c6 c6 d6 6c c6 0c 30 10 18 30 00 c6 c6 c0 7c     ~...l..0..0....|
    14ac:	18 c6 c6 d6 38 c6 38 60 10 0c 5a 00 c6 c6 c0 06     ....8.8`..Z.....
    14bc:	18 c6 6c d6 6c c6 60 30 10 18 0c 00 c6 c6 c0 06     ..l.l.`0........
    14cc:	18 c6 38 d6 c6 7e c0 38 10 38 00 00 fc 7e c0 7c     ..8..~.8.8...~.|
    14dc:	18 7e 10 7e c6 06 fe 00 00 00 00 00 c0 06 00 00     .~.~............
    14ec:	00 00 00 00 00 7c 00 00 00 00 00 00                 .....|......

000014f8 <_ZL9logoAtmel>:
    14f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1508:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1518:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
    1528:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
    1538:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1548:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    1558:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1568:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
    1578:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
    1588:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
    1598:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
    15a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15b8:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
    15c8:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15d8:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
    15e8:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
    15f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
    1608:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
    1618:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1628:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
    1638:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
    1648:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
    1658:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
    1668:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
    1678:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
    1688:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1698:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
    16a8:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
    16b8:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
    16c8:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
    16d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
    16e8:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
    16f8:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
    1708:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
    1718:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
    1728:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
    1738:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
    1748:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1758:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
    1768:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
    1778:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
    1788:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
    1798:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
    17a8:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
    17b8:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    17c8:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
    17d8:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
    17e8:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
    17f8:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
    1808:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
    1818:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
    1828:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
    1838:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
    1848:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
    1858:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1868:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
    1878:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1888:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
    1898:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
    18b8:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18c8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18d8:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
    18e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18f8:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
    1908:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1918:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
    1928:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
    1938:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1948:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
    1958:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
    1968:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
    1978:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
    1988:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1998:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
    19a8:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
    19b8:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
    19c8:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
    19d8:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
    19e8:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
    19f8:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
    1a08:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
    1a18:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
    1a28:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
    1a38:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
    1a48:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
    1a58:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
    1a68:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
    1a78:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
    1a88:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
    1a98:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
    1aa8:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
    1ab8:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
    1ac8:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
    1ad8:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
    1ae8:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
    1af8:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
    1b08:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
    1b18:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
    1b28:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
    1b38:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
    1b48:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
    1b58:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
    1b68:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1b78:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
    1b88:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
    1b98:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1ba8:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
    1bb8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bc8:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
    1bd8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1be8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bf8:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
    1c08:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00001c18 <_ZL8charDown>:
	...
    1c20:	00 00 00 3c 00 00 00 00 ff c0 00 00 00 fa bc 00     ...<............
    1c30:	00 00 3a ab 00 00 00 3a aa c0 00 00 ea aa b0 00     ..:....:........
    1c40:	00 ea aa b0 00 03 aa af ac 00 03 aa bf ac 00 03     ................
    1c50:	6a bf dc 00 03 5a ff dc 00 03 57 cf 1c 00 03 d7     j....Z....W.....
    1c60:	cf 3c 00 0e a4 ff d7 00 3a a9 00 57 00 ea a9 50     .<......:..W...P
    1c70:	55 c0 ea a9 50 55 c0 da a9 80 55 c0 e6 a9 80 57     U...PU....U....W
    1c80:	00 39 56 00 5c 00 0e a8 00 f0 00 03 f0 00 c0 00     .9V.\...........
    1c90:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1ca0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1cb0:	cc 00 00 00 00 30 00 00 00 00 00 00 00 00 03 c0     .....0..........
    1cc0:	00 00 00 0f fc 00 00 00 0f ab 00 00 00 03 aa c0     ................
    1cd0:	00 00 0e aa c0 00 00 3a aa b0 00 00 ea aa b0 00     .......:........
    1ce0:	03 aa aa ac 00 03 aa af ac 00 03 5a af ec 00 03     ...........Z....
    1cf0:	5a bf ec 00 00 d7 ff dc 00 00 37 cf 1c 00 00 d7     Z.........7.....
    1d00:	cf 3c 00 0f a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
    1d10:	55 c0 ea aa 50 57 00 da aa 60 5c 00 e5 55 80 5c     U...PW...`\..U.\
    1d20:	00 3a aa 00 70 00 0f f0 00 c0 00 00 30 00 c0 00     .:..p.......0...
    1d30:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1d40:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1d50:	cc 00 00 00 00 30 00 00 00 00 f0 00 00 00 03 fc     .....0..........
    1d60:	00 00 00 03 bc 00 00 00 0e ac 00 00 00 3a ab 00     .............:..
    1d70:	00 00 ea aa c0 00 00 ea aa c0 00 03 aa aa c0 00     ................
    1d80:	03 aa ab b0 00 03 6a af b0 00 00 da af ac 00 00     ......j.........
    1d90:	d6 ff 6c 00 00 d7 ff dc 00 00 37 cf 1c 00 0f d7     ..l.......7.....
    1da0:	cf 3f c0 3a a4 ff d5 70 ea a9 00 55 70 ea a9 50     .?.:...p...Up..P
    1db0:	55 70 da aa 50 55 c0 e6 aa 60 57 00 39 55 a0 7c     Up..PU...`W.9U.|
    1dc0:	00 0e aa 00 c0 00 03 f0 00 c0 00 00 30 00 c0 00     ............0...
    1dd0:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1de0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1df0:	cc 00 00 00 00 30 00 00 00 03 c0 00 00 00 0f f0     .....0..........
    1e00:	00 00 00 0f b0 00 00 00 0e b0 00 00 00 3a ac 00     .............:..
    1e10:	00 00 ea ab 00 00 00 ea ab 00 00 00 ea aa c0 00     ................
    1e20:	00 ea ae b0 00 00 ea af ac 00 00 ea bf ac 00 00     ................
    1e30:	da ff ac 00 00 da ff dc 00 03 57 cf 1c 00 03 d7     ..........W.....
    1e40:	cf 3c 00 0e a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
    1e50:	55 70 da aa 50 55 70 e6 aa 60 55 c0 39 6a 60 57     Up..PUp..`U.9j`W
    1e60:	00 0e 95 80 fc 00 03 ea 00 c0 00 00 30 00 c0 00     ............0...
    1e70:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1e80:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1e90:	cc 00 00 00 00 30 00 00                             .....0..

00001e98 <_ZL6charUp>:
    1e98:	00 3f f0 00 00 ea af 00 03 ab fe c0 03 af ff b0     .?..............
    1ea8:	0e af 3c b0 0e af 3c f0 0e 7f ff f0 0d 7f ff f0     ..<...<.........
    1eb8:	0d 73 fc f0 0d 74 00 f0 3d b5 41 f0 f5 b9 01 f0     .s...t..=.A.....
    1ec8:	fe ba 02 f0 3e 9a 00 6c 0e aa 00 ac 0e aa 00 6c     ....>..l.......l
    1ed8:	0e aa 00 30 0e aa 00 30 0e aa 00 70 0d aa 10 70     ...0...0...p...p
    1ee8:	0e 68 11 70 03 94 3d c0 00 e8 33 00 00 3c f0 00     .h.p..=...3..<..
    1ef8:	00 03 00 00 00 0f fc 00 00 fa ab 00 03 ab fe c0     ................
    1f08:	0e af ff b0 0e af 3c b0 0e bf 3c f0 0e 7f ff f0     ......<...<.....
    1f18:	0d 7f ff f0 0d 73 fc f0 0d 74 00 f0 0d b5 40 f0     .....s...t....@.
    1f28:	0d b5 01 f0 3d b9 02 f0 3e 9a 02 70 0e aa 00 b0     ....=...>..p....
    1f38:	0e aa 00 ac 0e aa 00 2c 0e aa 00 2c 0e aa 00 5c     .......,...,...\
    1f48:	0e aa 10 70 0d 68 31 70 0e 94 3d c0 03 e8 33 00     ...p.h1p..=...3.
    1f58:	00 3c f0 00 00 03 00 00 00 3f fc 00 00 ea ab 00     .<.......?......
    1f68:	03 ab fe c0 03 af ff b0 0e bf 3c f0 3a bf 3c f0     ..........<.:.<.
    1f78:	3a 7f ff f0 3a 7f ff f0 0d 73 fc f0 0d 74 00 f0     :...:....s...t..
    1f88:	0d 74 00 f0 0d b5 41 f0 0e b9 01 f0 0e ba 02 f0     .t....A.........
    1f98:	0e 9a 00 b0 0e aa 00 b0 0e aa 00 30 0e aa 00 30     ...........0...0
    1fa8:	0d aa 00 70 0e 6a 20 5c 0e 68 11 5c 03 94 3f 70     ...p.j \.h.\..?p
    1fb8:	00 e8 30 c0 00 3c f0 00 00 03 00 00 00 3f f0 00     ..0..<.......?..
    1fc8:	00 ea af 00 03 ab fe c0 03 af ff b0 0e af 3c f0     ..............<.
    1fd8:	0e af 3c f0 3a 7f ff f0 3a 7f ff f0 3a 73 fc f0     ..<.:...:...:s..
    1fe8:	3a 74 00 f0 3d b5 00 f0 3e b5 41 f0 0e ba 02 f0     :t..=...>.A.....
    1ff8:	0e 9a 02 70 0e aa 00 b0 0e aa 00 b0 0e aa 00 30     ...p...........0
    2008:	0e aa 00 30 0e aa 00 70 0d aa 20 70 0e 68 11 70     ...0...p.. p.h.p
    2018:	03 98 3f 70 00 e4 30 c0 00 38 f0 00 00 0f 00 00     ..?p..0..8......

00002028 <_ZL7charRun>:
    2028:	00 00 00 00 00 00 00 0f fc 00 00 f0 fa ab c0 03     ................
    2038:	ff aa aa b0 03 ea aa aa ac 00 fa aa aa fc 00 0d     ................
    2048:	6a af ff 00 0d 5d 5f ff 00 03 d7 ff 3c 00 00 35     j....]_.....<..5
    2058:	57 3c 00 00 f5 57 fc 00 03 aa 57 f0 00 3e aa 60     W<...W....W..>.`
    2068:	70 00 ea a9 80 70 03 aa a9 80 c0 0e aa 96 02 c0     p....p..........
    2078:	0e 95 68 07 00 39 6a 80 03 00 0e b5 50 03 00 03     ..h..9j.....P...
    2088:	cd 40 0c 00 00 00 00 ff c0 00 00 0f aa b0 00 00     .@..............
    2098:	3a aa ac 00 f3 ea aa fc 03 fe aa aa ff 03 ea aa     :...............
    20a8:	ab ff 00 f5 aa 9f fc 00 0d 55 5f 3c 00 03 f7 5f     .........U_<..._
    20b8:	3c 00 00 39 f7 f0 00 00 e9 54 70 00 03 aa 98 70     <..9.....Tp....p
    20c8:	00 0e aa 60 c0 00 3a aa 60 c0 00 ea a9 80 c0 03     ...`..:.`.......
    20d8:	aa a9 80 c0 0e aa 96 00 c0 39 55 68 c3 00 0e aa     .........9Uh....
    20e8:	83 3c 00 03 fc 0c 00 00 00 00 0f ff f0 00 00 3a     .<.............:
    20f8:	aa ac 00 00 ea aa ff 00 03 aa ab ff 00 3f aa ab     .............?..
    2108:	ff 00 fe aa af 3c 00 fa aa b7 3c 00 3d 55 d7 fc     .....<....<.=U..
    2118:	00 03 d5 d7 f0 00 03 a9 54 70 00 0e aa 60 b0 00     ........Tp...`..
    2128:	3a a9 80 b0 00 3a a6 02 b0 00 ea a6 02 c0 00 ea     :....:..........
    2138:	98 00 c0 00 ea 98 00 c0 03 95 58 f0 c0 00 ea a3     ..........X.....
    2148:	0c c0 00 3c 0c 03 00 00 03 30 00 00 00 00 ff ff     ...<.....0......
    2158:	c0 00 03 aa aa b0 00 0e aa aa ac 00 3a aa aa ff     ............:...
    2168:	00 ea aa af ff 03 e6 ab ff fc 03 fd 9f 57 3c 00     .............W<.
    2178:	ff 57 57 3c 00 0f a5 57 fc 00 3a a9 53 f0 00 ea     .WW<...W..:.S...
    2188:	a6 80 c0 03 aa 98 00 c0 03 aa 60 02 b0 0e a9 80     ..........`.....
    2198:	02 b0 0d a9 80 0a b0 0e 69 80 02 c0 03 95 80 03     ........i.......
    21a8:	00 00 ea 00 00 c0 00 3f 01 70 c0 00 00 ff cc 30     .......?.p.....0
    21b8:	00 03 ff fc 00 00 3e aa ab c0 03 ea aa aa b0 0f     ......>.........
    21c8:	aa aa aa ac 0f f6 aa ab ff 03 cd af af ff 00 03     ................
    21d8:	75 ff fc 00 00 d5 57 3c 00 00 d5 57 3c 00 03 e5     u.....W<...W<...
    21e8:	57 fc 00 3e a9 63 f0 03 ea a6 80 c0 0e aa 98 00     W..>.c..........
    21f8:	c0 3a aa 60 02 c0 36 a9 80 02 c0 39 a6 00 0a c0     .:.`..6....9....
    2208:	0e 56 40 0a c0 03 ab 50 03 00 00 fc c0 03 00 00     .V@....P........
    2218:	00 3a 83 00 00 00 00 00 00 00 00 0f fc 00 00 f0     .:..............
    2228:	fa ab c0 03 ff aa aa b0 03 ea aa aa ac 00 d6 aa     ................
    2238:	ab fc 00 3d 6a bf ff 00 0d 5d 5f ff 00 03 d7 fc     ...=j....]_.....
    2248:	fc 00 00 35 5c fc 00 00 f5 5f fc 00 03 a9 4f f0     ...5\...._....O.
    2258:	00 3e a9 80 70 00 ea a6 00 70 03 aa a6 00 70 0e     .>..p....p....p.
    2268:	aa 58 02 c0 0e 55 a0 0a c0 39 aa 00 03 00 0e b5     .X...U...9......
    2278:	50 03 00 03 cd 4c 0c 00                             P....L..

00002280 <__ctors_start>:
    2280:	db 11       	cpse	r29, r11

00002282 <__ctors_end>:
    2282:	11 24       	eor	r1, r1
    2284:	1f be       	out	0x3f, r1	; 63
    2286:	cf ef       	ldi	r28, 0xFF	; 255
    2288:	d8 e0       	ldi	r29, 0x08	; 8
    228a:	de bf       	out	0x3e, r29	; 62
    228c:	cd bf       	out	0x3d, r28	; 61

0000228e <__do_copy_data>:
    228e:	11 e0       	ldi	r17, 0x01	; 1
    2290:	a0 e0       	ldi	r26, 0x00	; 0
    2292:	b1 e0       	ldi	r27, 0x01	; 1
    2294:	e4 e1       	ldi	r30, 0x14	; 20
    2296:	f8 e3       	ldi	r31, 0x38	; 56
    2298:	02 c0       	rjmp	.+4      	; 0x229e <__do_copy_data+0x10>
    229a:	05 90       	lpm	r0, Z+
    229c:	0d 92       	st	X+, r0
    229e:	a8 30       	cpi	r26, 0x08	; 8
    22a0:	b1 07       	cpc	r27, r17
    22a2:	d9 f7       	brne	.-10     	; 0x229a <__do_copy_data+0xc>

000022a4 <__do_clear_bss>:
    22a4:	21 e0       	ldi	r18, 0x01	; 1
    22a6:	a8 e0       	ldi	r26, 0x08	; 8
    22a8:	b1 e0       	ldi	r27, 0x01	; 1
    22aa:	01 c0       	rjmp	.+2      	; 0x22ae <.do_clear_bss_start>

000022ac <.do_clear_bss_loop>:
    22ac:	1d 92       	st	X+, r1

000022ae <.do_clear_bss_start>:
    22ae:	ac 31       	cpi	r26, 0x1C	; 28
    22b0:	b2 07       	cpc	r27, r18
    22b2:	e1 f7       	brne	.-8      	; 0x22ac <.do_clear_bss_loop>

000022b4 <__do_global_ctors>:
    22b4:	11 e1       	ldi	r17, 0x11	; 17
    22b6:	c1 e4       	ldi	r28, 0x41	; 65
    22b8:	d1 e1       	ldi	r29, 0x11	; 17
    22ba:	04 c0       	rjmp	.+8      	; 0x22c4 <__do_global_ctors+0x10>
    22bc:	21 97       	sbiw	r28, 0x01	; 1
    22be:	fe 01       	movw	r30, r28
    22c0:	0e 94 02 1c 	call	0x3804	; 0x3804 <__tablejump2__>
    22c4:	c0 34       	cpi	r28, 0x40	; 64
    22c6:	d1 07       	cpc	r29, r17
    22c8:	c9 f7       	brne	.-14     	; 0x22bc <__do_global_ctors+0x8>
    22ca:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <main>
    22ce:	0c 94 08 1c 	jmp	0x3810	; 0x3810 <_exit>

000022d2 <__bad_interrupt>:
    22d2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000022d6 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
    22d6:	61 e0       	ldi	r22, 0x01	; 1
    22d8:	80 e0       	ldi	r24, 0x00	; 0
    22da:	0e 94 9f 16 	call	0x2d3e	; 0x2d3e <_ZN3MCU7Setting9beginPortEab>
  beginPin(D, 6);
    22de:	66 e0       	ldi	r22, 0x06	; 6
    22e0:	82 e0       	ldi	r24, 0x02	; 2
    22e2:	0e 94 72 16 	call	0x2ce4	; 0x2ce4 <_ZN3MCU7Setting8beginPinEaa>

  beginINT(0, DOWN);
    22e6:	61 e0       	ldi	r22, 0x01	; 1
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	0e 94 af 16 	call	0x2d5e	; 0x2d5e <_ZN3MCU7Setting8beginINTEaa>
  //beginINT(1, DOWN);
  beginTimer(1, COMP);
    22ee:	61 e0       	ldi	r22, 0x01	; 1
    22f0:	81 e0       	ldi	r24, 0x01	; 1
    22f2:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
    22f6:	61 e0       	ldi	r22, 0x01	; 1
    22f8:	82 e0       	ldi	r24, 0x02	; 2
    22fa:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
    22fe:	61 e0       	ldi	r22, 0x01	; 1
    2300:	83 e0       	ldi	r24, 0x03	; 3
    2302:	0e 94 21 17 	call	0x2e42	; 0x2e42 <_ZN3MCU7Setting8beginPWMEab>
  beginSPI();
    2306:	0e 94 b9 17 	call	0x2f72	; 0x2f72 <_ZN3MCU7Setting8beginSPIEv>
  sei();
    230a:	78 94       	sei

  TCCR0B = 0x00;
    230c:	15 bc       	out	0x25, r1	; 37

  game.title();
    230e:	88 e0       	ldi	r24, 0x08	; 8
    2310:	91 e0       	ldi	r25, 0x01	; 1
    2312:	0e 94 b4 13 	call	0x2768	; 0x2768 <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
    2316:	88 e0       	ldi	r24, 0x08	; 8
    2318:	91 e0       	ldi	r25, 0x01	; 1
    231a:	0e 94 8f 14 	call	0x291e	; 0x291e <_ZN4Game5startEv>
    231e:	fb cf       	rjmp	.-10     	; 0x2316 <main+0x40>

00002320 <__vector_1>:
---------------  MAIN END  ---------------
//========================================*/


ISR(INT0_vect)
{
    2320:	1f 92       	push	r1
    2322:	0f 92       	push	r0
    2324:	0f b6       	in	r0, 0x3f	; 63
    2326:	0f 92       	push	r0
    2328:	11 24       	eor	r1, r1
    232a:	8f 93       	push	r24
  SW::interrupt0 = ON;
    232c:	81 e0       	ldi	r24, 0x01	; 1
    232e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <_ZN2SW10interrupt0E>
}
    2332:	8f 91       	pop	r24
    2334:	0f 90       	pop	r0
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	0f 90       	pop	r0
    233a:	1f 90       	pop	r1
    233c:	18 95       	reti

0000233e <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
    233e:	1f 92       	push	r1
    2340:	0f 92       	push	r0
    2342:	0f b6       	in	r0, 0x3f	; 63
    2344:	0f 92       	push	r0
    2346:	11 24       	eor	r1, r1
    2348:	8f 93       	push	r24
    234a:	9f 93       	push	r25
  Frame::secondTime++;
    234c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <_ZN5Frame10secondTimeE>
    2350:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    2354:	01 96       	adiw	r24, 0x01	; 1
    2356:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    235a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <_ZN5Frame10secondTimeE>
}
    235e:	9f 91       	pop	r25
    2360:	8f 91       	pop	r24
    2362:	0f 90       	pop	r0
    2364:	0f be       	out	0x3f, r0	; 63
    2366:	0f 90       	pop	r0
    2368:	1f 90       	pop	r1
    236a:	18 95       	reti

0000236c <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
    236c:	1f 92       	push	r1
    236e:	0f 92       	push	r0
    2370:	0f b6       	in	r0, 0x3f	; 63
    2372:	0f 92       	push	r0
    2374:	11 24       	eor	r1, r1
    2376:	8f 93       	push	r24
    2378:	9f 93       	push	r25
    237a:	af 93       	push	r26
    237c:	bf 93       	push	r27
  Frame::presentTime++;
    237e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    2382:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2386:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    238a:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    238e:	01 96       	adiw	r24, 0x01	; 1
    2390:	a1 1d       	adc	r26, r1
    2392:	b1 1d       	adc	r27, r1
    2394:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <_ZN5Frame11presentTimeE>
    2398:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    239c:	a0 93 17 01 	sts	0x0117, r26	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    23a0:	b0 93 18 01 	sts	0x0118, r27	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
}
    23a4:	bf 91       	pop	r27
    23a6:	af 91       	pop	r26
    23a8:	9f 91       	pop	r25
    23aa:	8f 91       	pop	r24
    23ac:	0f 90       	pop	r0
    23ae:	0f be       	out	0x3f, r0	; 63
    23b0:	0f 90       	pop	r0
    23b2:	1f 90       	pop	r1
    23b4:	18 95       	reti

000023b6 <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    23b6:	e8 e0       	ldi	r30, 0x08	; 8
    23b8:	f1 e0       	ldi	r31, 0x01	; 1
    23ba:	80 ef       	ldi	r24, 0xF0	; 240
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	91 83       	std	Z+1, r25	; 0x01
    23c0:	80 83       	st	Z, r24
    23c2:	80 e4       	ldi	r24, 0x40	; 64
    23c4:	91 e0       	ldi	r25, 0x01	; 1
    23c6:	93 83       	std	Z+3, r25	; 0x03
    23c8:	82 83       	std	Z+2, r24	; 0x02
    23ca:	08 95       	ret

000023cc <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    23cc:	8f 92       	push	r8
    23ce:	9f 92       	push	r9
    23d0:	af 92       	push	r10
    23d2:	bf 92       	push	r11
    23d4:	cf 92       	push	r12
    23d6:	df 92       	push	r13
    23d8:	ef 92       	push	r14
    23da:	ff 92       	push	r15
    23dc:	0f 93       	push	r16
    23de:	1f 93       	push	r17
    23e0:	cf 93       	push	r28
    23e2:	df 93       	push	r29
    23e4:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
    23e6:	82 2f       	mov	r24, r18
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
    23ec:	9c 01       	movw	r18, r24
    23ee:	12 f4       	brpl	.+4      	; 0x23f4 <_ZN4Font11printLetterEiih+0x28>
    23f0:	21 5f       	subi	r18, 0xF1	; 241
    23f2:	3f 4f       	sbci	r19, 0xFF	; 255
    23f4:	49 01       	movw	r8, r18
    23f6:	95 94       	asr	r9
    23f8:	87 94       	ror	r8
    23fa:	95 94       	asr	r9
    23fc:	87 94       	ror	r8
    23fe:	95 94       	asr	r9
    2400:	87 94       	ror	r8
    2402:	95 94       	asr	r9
    2404:	87 94       	ror	r8
    2406:	96 94       	lsr	r9
    2408:	98 2c       	mov	r9, r8
    240a:	88 24       	eor	r8, r8
    240c:	97 94       	ror	r9
    240e:	87 94       	ror	r8
    2410:	8f 70       	andi	r24, 0x0F	; 15
    2412:	90 78       	andi	r25, 0x80	; 128
    2414:	99 23       	and	r25, r25
    2416:	24 f4       	brge	.+8      	; 0x2420 <_ZN4Font11printLetterEiih+0x54>
    2418:	01 97       	sbiw	r24, 0x01	; 1
    241a:	80 6f       	ori	r24, 0xF0	; 240
    241c:	9f 6f       	ori	r25, 0xFF	; 255
    241e:	01 96       	adiw	r24, 0x01	; 1
    2420:	88 0e       	add	r8, r24
    2422:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
    2424:	8a 01       	movw	r16, r20
    2426:	01 5f       	subi	r16, 0xF1	; 241
    2428:	1f 4f       	sbci	r17, 0xFF	; 255
    242a:	9b 01       	movw	r18, r22
    242c:	21 5f       	subi	r18, 0xF1	; 241
    242e:	3f 4f       	sbci	r19, 0xFF	; 255
    2430:	ce 01       	movw	r24, r28
    2432:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>
    2436:	54 01       	movw	r10, r8
    2438:	80 e8       	ldi	r24, 0x80	; 128
    243a:	88 0e       	add	r8, r24
    243c:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    243e:	68 94       	set
    2440:	cc 24       	eor	r12, r12
    2442:	c1 f8       	bld	r12, 1
    2444:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
    2446:	ec 81       	ldd	r30, Y+4	; 0x04
    2448:	fd 81       	ldd	r31, Y+5	; 0x05
    244a:	ea 0d       	add	r30, r10
    244c:	fb 1d       	adc	r31, r11
    244e:	14 91       	lpm	r17, Z
    2450:	68 94       	set
    2452:	ee 24       	eor	r14, r14
    2454:	e3 f8       	bld	r14, 3
    2456:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
    2458:	11 23       	and	r17, r17
    245a:	5c f4       	brge	.+22     	; 0x2472 <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
    245c:	68 85       	ldd	r22, Y+8	; 0x08
    245e:	79 85       	ldd	r23, Y+9	; 0x09
    2460:	ce 01       	movw	r24, r28
    2462:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    2466:	68 85       	ldd	r22, Y+8	; 0x08
    2468:	79 85       	ldd	r23, Y+9	; 0x09
    246a:	ce 01       	movw	r24, r28
    246c:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    2470:	0a c0       	rjmp	.+20     	; 0x2486 <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
    2472:	6e 81       	ldd	r22, Y+6	; 0x06
    2474:	7f 81       	ldd	r23, Y+7	; 0x07
    2476:	ce 01       	movw	r24, r28
    2478:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    247c:	6e 81       	ldd	r22, Y+6	; 0x06
    247e:	7f 81       	ldd	r23, Y+7	; 0x07
    2480:	ce 01       	movw	r24, r28
    2482:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
    2486:	11 0f       	add	r17, r17
    2488:	81 e0       	ldi	r24, 0x01	; 1
    248a:	e8 1a       	sub	r14, r24
    248c:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
    248e:	21 f7       	brne	.-56     	; 0x2458 <_ZN4Font11printLetterEiih+0x8c>
    2490:	81 e0       	ldi	r24, 0x01	; 1
    2492:	c8 1a       	sub	r12, r24
    2494:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    2496:	b9 f6       	brne	.-82     	; 0x2446 <_ZN4Font11printLetterEiih+0x7a>
    2498:	80 e1       	ldi	r24, 0x10	; 16
    249a:	a8 0e       	add	r10, r24
    249c:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
    249e:	a8 14       	cp	r10, r8
    24a0:	b9 04       	cpc	r11, r9
    24a2:	69 f6       	brne	.-102    	; 0x243e <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
    24a4:	df 91       	pop	r29
    24a6:	cf 91       	pop	r28
    24a8:	1f 91       	pop	r17
    24aa:	0f 91       	pop	r16
    24ac:	ff 90       	pop	r15
    24ae:	ef 90       	pop	r14
    24b0:	df 90       	pop	r13
    24b2:	cf 90       	pop	r12
    24b4:	bf 90       	pop	r11
    24b6:	af 90       	pop	r10
    24b8:	9f 90       	pop	r9
    24ba:	8f 90       	pop	r8
    24bc:	08 95       	ret

000024be <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
    24be:	cf 92       	push	r12
    24c0:	df 92       	push	r13
    24c2:	ef 92       	push	r14
    24c4:	ff 92       	push	r15
    24c6:	0f 93       	push	r16
    24c8:	1f 93       	push	r17
    24ca:	cf 93       	push	r28
    24cc:	df 93       	push	r29
    24ce:	7c 01       	movw	r14, r24
    24d0:	eb 01       	movw	r28, r22
    24d2:	6a 01       	movw	r12, r20
    24d4:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
    24d6:	20 81       	ld	r18, Z
    24d8:	22 23       	and	r18, r18
    24da:	71 f0       	breq	.+28     	; 0x24f8 <_ZN4Font5printEiiPKc+0x3a>
    24dc:	8f 01       	movw	r16, r30
    24de:	0f 5f       	subi	r16, 0xFF	; 255
    24e0:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
    24e2:	a6 01       	movw	r20, r12
    24e4:	be 01       	movw	r22, r28
    24e6:	c7 01       	movw	r24, r14
    24e8:	0e 94 e6 11 	call	0x23cc	; 0x23cc <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
    24ec:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
    24ee:	f8 01       	movw	r30, r16
    24f0:	21 91       	ld	r18, Z+
    24f2:	8f 01       	movw	r16, r30
    24f4:	21 11       	cpse	r18, r1
    24f6:	f5 cf       	rjmp	.-22     	; 0x24e2 <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

}
    24f8:	df 91       	pop	r29
    24fa:	cf 91       	pop	r28
    24fc:	1f 91       	pop	r17
    24fe:	0f 91       	pop	r16
    2500:	ff 90       	pop	r15
    2502:	ef 90       	pop	r14
    2504:	df 90       	pop	r13
    2506:	cf 90       	pop	r12
    2508:	08 95       	ret

0000250a <_ZN4Font5printEiim>:
/*----------------------------------------//
              Print Intager
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{
    250a:	2f 92       	push	r2
    250c:	3f 92       	push	r3
    250e:	4f 92       	push	r4
    2510:	5f 92       	push	r5
    2512:	6f 92       	push	r6
    2514:	7f 92       	push	r7
    2516:	8f 92       	push	r8
    2518:	9f 92       	push	r9
    251a:	af 92       	push	r10
    251c:	bf 92       	push	r11
    251e:	cf 92       	push	r12
    2520:	df 92       	push	r13
    2522:	ef 92       	push	r14
    2524:	ff 92       	push	r15
    2526:	0f 93       	push	r16
    2528:	1f 93       	push	r17
    252a:	cf 93       	push	r28
    252c:	df 93       	push	r29
    252e:	cd b7       	in	r28, 0x3d	; 61
    2530:	de b7       	in	r29, 0x3e	; 62
    2532:	27 97       	sbiw	r28, 0x07	; 7
    2534:	0f b6       	in	r0, 0x3f	; 63
    2536:	f8 94       	cli
    2538:	de bf       	out	0x3e, r29	; 62
    253a:	0f be       	out	0x3f, r0	; 63
    253c:	cd bf       	out	0x3d, r28	; 61
    253e:	9a 83       	std	Y+2, r25	; 0x02
    2540:	89 83       	std	Y+1, r24	; 0x01
    2542:	b6 2e       	mov	r11, r22
    2544:	a7 2e       	mov	r10, r23
    2546:	5c 83       	std	Y+4, r21	; 0x04
    2548:	4b 83       	std	Y+3, r20	; 0x03
    254a:	68 01       	movw	r12, r16
    254c:	79 01       	movw	r14, r18

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    254e:	0a 30       	cpi	r16, 0x0A	; 10
    2550:	11 05       	cpc	r17, r1
    2552:	21 05       	cpc	r18, r1
    2554:	31 05       	cpc	r19, r1
    2556:	88 f1       	brcs	.+98     	; 0x25ba <_ZN4Font5printEiim+0xb0>
    2558:	91 e0       	ldi	r25, 0x01	; 1
    255a:	9d 83       	std	Y+5, r25	; 0x05
    255c:	41 2c       	mov	r4, r1
    255e:	51 2c       	mov	r5, r1
    2560:	32 01       	movw	r6, r4
    2562:	43 94       	inc	r4
    2564:	09 c0       	rjmp	.+18     	; 0x2578 <_ZN4Font5printEiim+0x6e>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    2566:	9d 81       	ldd	r25, Y+5	; 0x05
    2568:	89 2f       	mov	r24, r25
    256a:	90 e0       	ldi	r25, 0x00	; 0
    256c:	9f 83       	std	Y+7, r25	; 0x07
    256e:	8e 83       	std	Y+6, r24	; 0x06
    2570:	18 16       	cp	r1, r24
    2572:	19 06       	cpc	r1, r25
    2574:	54 f1       	brlt	.+84     	; 0x25ca <_ZN4Font5printEiim+0xc0>
    2576:	57 c0       	rjmp	.+174    	; 0x2626 <_ZN4Font5printEiim+0x11c>
  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
  {
    digit++;
    2578:	8d 81       	ldd	r24, Y+5	; 0x05
    257a:	8f 5f       	subi	r24, 0xFF	; 255
    257c:	8d 83       	std	Y+5, r24	; 0x05
    placeValue *= 10;
    257e:	44 0c       	add	r4, r4
    2580:	55 1c       	adc	r5, r5
    2582:	66 1c       	adc	r6, r6
    2584:	77 1c       	adc	r7, r7
    2586:	d3 01       	movw	r26, r6
    2588:	c2 01       	movw	r24, r4
    258a:	88 0f       	add	r24, r24
    258c:	99 1f       	adc	r25, r25
    258e:	aa 1f       	adc	r26, r26
    2590:	bb 1f       	adc	r27, r27
    2592:	88 0f       	add	r24, r24
    2594:	99 1f       	adc	r25, r25
    2596:	aa 1f       	adc	r26, r26
    2598:	bb 1f       	adc	r27, r27
    259a:	48 0e       	add	r4, r24
    259c:	59 1e       	adc	r5, r25
    259e:	6a 1e       	adc	r6, r26
    25a0:	7b 1e       	adc	r7, r27
{

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    25a2:	c7 01       	movw	r24, r14
    25a4:	b6 01       	movw	r22, r12
    25a6:	a3 01       	movw	r20, r6
    25a8:	92 01       	movw	r18, r4
    25aa:	0e 94 cc 1b 	call	0x3798	; 0x3798 <__udivmodsi4>
    25ae:	2a 30       	cpi	r18, 0x0A	; 10
    25b0:	31 05       	cpc	r19, r1
    25b2:	41 05       	cpc	r20, r1
    25b4:	51 05       	cpc	r21, r1
    25b6:	00 f7       	brcc	.-64     	; 0x2578 <_ZN4Font5printEiim+0x6e>
    25b8:	d6 cf       	rjmp	.-84     	; 0x2566 <_ZN4Font5printEiim+0x5c>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    25ba:	81 e0       	ldi	r24, 0x01	; 1
    25bc:	90 e0       	ldi	r25, 0x00	; 0
    25be:	9f 83       	std	Y+7, r25	; 0x07
    25c0:	8e 83       	std	Y+6, r24	; 0x06
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{

  uint32_t placeValue = 1;
    25c2:	41 2c       	mov	r4, r1
    25c4:	51 2c       	mov	r5, r1
    25c6:	32 01       	movw	r6, r4
    25c8:	43 94       	inc	r4
    25ca:	0b 2d       	mov	r16, r11
    25cc:	1a 2d       	mov	r17, r10
    25ce:	a1 2c       	mov	r10, r1
    25d0:	b1 2c       	mov	r11, r1
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
  {
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    25d2:	c7 01       	movw	r24, r14
    25d4:	b6 01       	movw	r22, r12
    25d6:	a3 01       	movw	r20, r6
    25d8:	92 01       	movw	r18, r4
    25da:	0e 94 cc 1b 	call	0x3798	; 0x3798 <__udivmodsi4>
    25de:	26 2e       	mov	r2, r22
    25e0:	37 2e       	mov	r3, r23
    25e2:	88 2e       	mov	r8, r24
    25e4:	99 2e       	mov	r9, r25
    25e6:	20 5d       	subi	r18, 0xD0	; 208
    25e8:	4b 81       	ldd	r20, Y+3	; 0x03
    25ea:	5c 81       	ldd	r21, Y+4	; 0x04
    25ec:	b8 01       	movw	r22, r16
    25ee:	89 81       	ldd	r24, Y+1	; 0x01
    25f0:	9a 81       	ldd	r25, Y+2	; 0x02
    25f2:	0e 94 e6 11 	call	0x23cc	; 0x23cc <_ZN4Font11printLetterEiih>
    intager %= placeValue;
    25f6:	c2 2c       	mov	r12, r2
    25f8:	d3 2c       	mov	r13, r3
    25fa:	e8 2c       	mov	r14, r8
    25fc:	f9 2c       	mov	r15, r9
    placeValue /= 10;
    25fe:	c3 01       	movw	r24, r6
    2600:	b2 01       	movw	r22, r4
    2602:	2a e0       	ldi	r18, 0x0A	; 10
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	40 e0       	ldi	r20, 0x00	; 0
    2608:	50 e0       	ldi	r21, 0x00	; 0
    260a:	0e 94 cc 1b 	call	0x3798	; 0x3798 <__udivmodsi4>
    260e:	29 01       	movw	r4, r18
    2610:	3a 01       	movw	r6, r20
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    2612:	9f ef       	ldi	r25, 0xFF	; 255
    2614:	a9 1a       	sub	r10, r25
    2616:	b9 0a       	sbc	r11, r25
    2618:	00 5f       	subi	r16, 0xF0	; 240
    261a:	1f 4f       	sbci	r17, 0xFF	; 255
    261c:	8e 81       	ldd	r24, Y+6	; 0x06
    261e:	9f 81       	ldd	r25, Y+7	; 0x07
    2620:	a8 16       	cp	r10, r24
    2622:	b9 06       	cpc	r11, r25
    2624:	b4 f2       	brlt	.-84     	; 0x25d2 <_ZN4Font5printEiim+0xc8>
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    intager %= placeValue;
    placeValue /= 10;
  }

    2626:	27 96       	adiw	r28, 0x07	; 7
    2628:	0f b6       	in	r0, 0x3f	; 63
    262a:	f8 94       	cli
    262c:	de bf       	out	0x3e, r29	; 62
    262e:	0f be       	out	0x3f, r0	; 63
    2630:	cd bf       	out	0x3d, r28	; 61
    2632:	df 91       	pop	r29
    2634:	cf 91       	pop	r28
    2636:	1f 91       	pop	r17
    2638:	0f 91       	pop	r16
    263a:	ff 90       	pop	r15
    263c:	ef 90       	pop	r14
    263e:	df 90       	pop	r13
    2640:	cf 90       	pop	r12
    2642:	bf 90       	pop	r11
    2644:	af 90       	pop	r10
    2646:	9f 90       	pop	r9
    2648:	8f 90       	pop	r8
    264a:	7f 90       	pop	r7
    264c:	6f 90       	pop	r6
    264e:	5f 90       	pop	r5
    2650:	4f 90       	pop	r4
    2652:	3f 90       	pop	r3
    2654:	2f 90       	pop	r2
    2656:	08 95       	ret

00002658 <_ZN5Frame6updateEv>:
/*----------------------------------------//
              Update Frame
//----------------------------------------*/

void Frame::update(void)
{
    2658:	fc 01       	movw	r30, r24

  if (presentTime >= m_PastTick + 5)
    265a:	40 91 15 01 	lds	r20, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    265e:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2662:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    2666:	70 91 18 01 	lds	r23, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    266a:	80 81       	ld	r24, Z
    266c:	91 81       	ldd	r25, Z+1	; 0x01
    266e:	a2 81       	ldd	r26, Z+2	; 0x02
    2670:	b3 81       	ldd	r27, Z+3	; 0x03
    2672:	05 96       	adiw	r24, 0x05	; 5
    2674:	a1 1d       	adc	r26, r1
    2676:	b1 1d       	adc	r27, r1
    2678:	48 17       	cp	r20, r24
    267a:	59 07       	cpc	r21, r25
    267c:	6a 07       	cpc	r22, r26
    267e:	7b 07       	cpc	r23, r27
    2680:	70 f0       	brcs	.+28     	; 0x269e <_ZN5Frame6updateEv+0x46>
  {

    m_PastTick = presentTime;
    2682:	40 83       	st	Z, r20
    2684:	51 83       	std	Z+1, r21	; 0x01
    2686:	62 83       	std	Z+2, r22	; 0x02
    2688:	73 83       	std	Z+3, r23	; 0x03

    oneTick++;
    268a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <_ZN5Frame7oneTickE>
    268e:	8f 5f       	subi	r24, 0xFF	; 255

    if (oneTick == 2)
    2690:	82 30       	cpi	r24, 0x02	; 2
    2692:	19 f0       	breq	.+6      	; 0x269a <_ZN5Frame6updateEv+0x42>
  if (presentTime >= m_PastTick + 5)
  {

    m_PastTick = presentTime;

    oneTick++;
    2694:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <_ZN5Frame7oneTickE>
    2698:	02 c0       	rjmp	.+4      	; 0x269e <_ZN5Frame6updateEv+0x46>

    if (oneTick == 2)
    {
      oneTick = 0;
    269a:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <_ZN5Frame7oneTickE>
    }

  }

  if (presentTime >= m_PastFrame + 100)
    269e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    26a2:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    26a6:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    26aa:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    26ae:	44 81       	ldd	r20, Z+4	; 0x04
    26b0:	55 81       	ldd	r21, Z+5	; 0x05
    26b2:	66 81       	ldd	r22, Z+6	; 0x06
    26b4:	77 81       	ldd	r23, Z+7	; 0x07
    26b6:	4c 59       	subi	r20, 0x9C	; 156
    26b8:	5f 4f       	sbci	r21, 0xFF	; 255
    26ba:	6f 4f       	sbci	r22, 0xFF	; 255
    26bc:	7f 4f       	sbci	r23, 0xFF	; 255
    26be:	84 17       	cp	r24, r20
    26c0:	95 07       	cpc	r25, r21
    26c2:	a6 07       	cpc	r26, r22
    26c4:	b7 07       	cpc	r27, r23
    26c6:	b0 f0       	brcs	.+44     	; 0x26f4 <_ZN5Frame6updateEv+0x9c>
  {

    m_PastFrame = presentTime;
    26c8:	84 83       	std	Z+4, r24	; 0x04
    26ca:	95 83       	std	Z+5, r25	; 0x05
    26cc:	a6 83       	std	Z+6, r26	; 0x06
    26ce:	b7 83       	std	Z+7, r27	; 0x07

    fourFrames++;
    26d0:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    26d4:	3f 5f       	subi	r19, 0xFF	; 255
    26d6:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <_ZN5Frame10fourFramesE>
    sixFrames++;
    26da:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <_ZN5Frame9sixFramesE>
    26de:	2f 5f       	subi	r18, 0xFF	; 255
    26e0:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <_ZN5Frame9sixFramesE>

    if (fourFrames == 4)
    26e4:	34 30       	cpi	r19, 0x04	; 4
    26e6:	11 f4       	brne	.+4      	; 0x26ec <_ZN5Frame6updateEv+0x94>
    {
      fourFrames = 0;
    26e8:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
    26ec:	26 30       	cpi	r18, 0x06	; 6
    26ee:	11 f4       	brne	.+4      	; 0x26f4 <_ZN5Frame6updateEv+0x9c>
    {
      sixFrames = 0;
    26f0:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <_ZN5Frame9sixFramesE>
    }

  }

  if (presentTime >= m_PastBeat + 125)
    26f4:	40 85       	ldd	r20, Z+8	; 0x08
    26f6:	51 85       	ldd	r21, Z+9	; 0x09
    26f8:	62 85       	ldd	r22, Z+10	; 0x0a
    26fa:	73 85       	ldd	r23, Z+11	; 0x0b
    26fc:	43 58       	subi	r20, 0x83	; 131
    26fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2700:	6f 4f       	sbci	r22, 0xFF	; 255
    2702:	7f 4f       	sbci	r23, 0xFF	; 255
    2704:	84 17       	cp	r24, r20
    2706:	95 07       	cpc	r25, r21
    2708:	a6 07       	cpc	r26, r22
    270a:	b7 07       	cpc	r27, r23
    270c:	70 f0       	brcs	.+28     	; 0x272a <_ZN5Frame6updateEv+0xd2>
  {

    m_PastBeat = presentTime;
    270e:	80 87       	std	Z+8, r24	; 0x08
    2710:	91 87       	std	Z+9, r25	; 0x09
    2712:	a2 87       	std	Z+10, r26	; 0x0a
    2714:	b3 87       	std	Z+11, r27	; 0x0b

    sixteenBeats++;
    2716:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    271a:	8f 5f       	subi	r24, 0xFF	; 255

    if (sixteenBeats == 2)
    271c:	82 30       	cpi	r24, 0x02	; 2
    271e:	19 f0       	breq	.+6      	; 0x2726 <_ZN5Frame6updateEv+0xce>
  if (presentTime >= m_PastBeat + 125)
  {

    m_PastBeat = presentTime;

    sixteenBeats++;
    2720:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    2724:	08 95       	ret

    if (sixteenBeats == 2)
    {
      sixteenBeats = 0;
    2726:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    272a:	08 95       	ret

0000272c <_ZN5Frame4initEv>:
/*----------------------------------------//
                Reset Frame
//----------------------------------------*/

void Frame::init(void)
{
    272c:	fc 01       	movw	r30, r24
  m_PastTick = presentTime;
    272e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    2732:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2736:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    273a:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    273e:	80 83       	st	Z, r24
    2740:	91 83       	std	Z+1, r25	; 0x01
    2742:	a2 83       	std	Z+2, r26	; 0x02
    2744:	b3 83       	std	Z+3, r27	; 0x03
  m_PastFrame = presentTime;
    2746:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    274a:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    274e:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    2752:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    2756:	84 83       	std	Z+4, r24	; 0x04
    2758:	95 83       	std	Z+5, r25	; 0x05
    275a:	a6 83       	std	Z+6, r26	; 0x06
    275c:	b7 83       	std	Z+7, r27	; 0x07
  m_PastBeat = presentTime;
    275e:	80 87       	std	Z+8, r24	; 0x08
    2760:	91 87       	std	Z+9, r25	; 0x09
    2762:	a2 87       	std	Z+10, r26	; 0x0a
    2764:	b3 87       	std	Z+11, r27	; 0x0b
    2766:	08 95       	ret

00002768 <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
    2768:	5f 92       	push	r5
    276a:	6f 92       	push	r6
    276c:	7f 92       	push	r7
    276e:	8f 92       	push	r8
    2770:	9f 92       	push	r9
    2772:	af 92       	push	r10
    2774:	bf 92       	push	r11
    2776:	cf 92       	push	r12
    2778:	df 92       	push	r13
    277a:	ef 92       	push	r14
    277c:	ff 92       	push	r15
    277e:	0f 93       	push	r16
    2780:	1f 93       	push	r17
    2782:	cf 93       	push	r28
    2784:	df 93       	push	r29
    2786:	3c 01       	movw	r6, r24
  begin();
    2788:	0e 94 e2 17 	call	0x2fc4	; 0x2fc4 <_ZN3TFT5beginEv>
  setRotation(0);
    278c:	60 e0       	ldi	r22, 0x00	; 0
    278e:	c3 01       	movw	r24, r6
    2790:	0e 94 37 18 	call	0x306e	; 0x306e <_ZN3TFT11setRotationEa>
  fillScreen(WHITE);
    2794:	6f ef       	ldi	r22, 0xFF	; 255
    2796:	7f ef       	ldi	r23, 0xFF	; 255
    2798:	c3 01       	movw	r24, r6
    279a:	0e 94 93 18 	call	0x3126	; 0x3126 <_ZN3TFT10fillScreenEj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    279e:	2f ef       	ldi	r18, 0xFF	; 255
    27a0:	39 e6       	ldi	r19, 0x69	; 105
    27a2:	88 e1       	ldi	r24, 0x18	; 24
    27a4:	21 50       	subi	r18, 0x01	; 1
    27a6:	30 40       	sbci	r19, 0x00	; 0
    27a8:	80 40       	sbci	r24, 0x00	; 0
    27aa:	e1 f7       	brne	.-8      	; 0x27a4 <_ZN4Game5titleEv+0x3c>
    27ac:	00 c0       	rjmp	.+0      	; 0x27ae <_ZN4Game5titleEv+0x46>
    27ae:	00 00       	nop

  _delay_ms(500);
  drawBitmap(8, 70, 304, 96, logoAtmel, 2, BLACK, RED, BLUE, WHITE);
    27b0:	cf ef       	ldi	r28, 0xFF	; 255
    27b2:	cf 93       	push	r28
    27b4:	cf 93       	push	r28
    27b6:	1f 92       	push	r1
    27b8:	8f e1       	ldi	r24, 0x1F	; 31
    27ba:	8f 93       	push	r24
    27bc:	0f 2e       	mov	r0, r31
    27be:	81 2c       	mov	r8, r1
    27c0:	f8 ef       	ldi	r31, 0xF8	; 248
    27c2:	9f 2e       	mov	r9, r31
    27c4:	f0 2d       	mov	r31, r0
    27c6:	a1 2c       	mov	r10, r1
    27c8:	b1 2c       	mov	r11, r1
    27ca:	68 94       	set
    27cc:	cc 24       	eor	r12, r12
    27ce:	c1 f8       	bld	r12, 1
    27d0:	0f 2e       	mov	r0, r31
    27d2:	f8 ef       	ldi	r31, 0xF8	; 248
    27d4:	ef 2e       	mov	r14, r31
    27d6:	f4 e1       	ldi	r31, 0x14	; 20
    27d8:	ff 2e       	mov	r15, r31
    27da:	f0 2d       	mov	r31, r0
    27dc:	00 e6       	ldi	r16, 0x60	; 96
    27de:	10 e0       	ldi	r17, 0x00	; 0
    27e0:	20 e3       	ldi	r18, 0x30	; 48
    27e2:	31 e0       	ldi	r19, 0x01	; 1
    27e4:	46 e4       	ldi	r20, 0x46	; 70
    27e6:	50 e0       	ldi	r21, 0x00	; 0
    27e8:	68 e0       	ldi	r22, 0x08	; 8
    27ea:	70 e0       	ldi	r23, 0x00	; 0
    27ec:	c3 01       	movw	r24, r6
    27ee:	0e 94 11 19 	call	0x3222	; 0x3222 <_ZN3TFT10drawBitmapEiiiiPKhajjjj>
    27f2:	9f ef       	ldi	r25, 0xFF	; 255
    27f4:	eb e7       	ldi	r30, 0x7B	; 123
    27f6:	f2 e9       	ldi	r31, 0x92	; 146
    27f8:	91 50       	subi	r25, 0x01	; 1
    27fa:	e0 40       	sbci	r30, 0x00	; 0
    27fc:	f0 40       	sbci	r31, 0x00	; 0
    27fe:	e1 f7       	brne	.-8      	; 0x27f8 <_ZN4Game5titleEv+0x90>
    2800:	00 c0       	rjmp	.+0      	; 0x2802 <_ZN4Game5titleEv+0x9a>
    2802:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
    2804:	60 e0       	ldi	r22, 0x00	; 0
    2806:	70 e0       	ldi	r23, 0x00	; 0
    2808:	c3 01       	movw	r24, r6
    280a:	0e 94 93 18 	call	0x3126	; 0x3126 <_ZN3TFT10fillScreenEj>
  drawBitmap(8, 16, 304, 224, titleMenu, 2, BLACK, MAROON, RED, WHITE);
    280e:	cf 93       	push	r28
    2810:	cf 93       	push	r28
    2812:	88 ef       	ldi	r24, 0xF8	; 248
    2814:	8f 93       	push	r24
    2816:	1f 92       	push	r1
    2818:	0f 2e       	mov	r0, r31
    281a:	81 2c       	mov	r8, r1
    281c:	f8 e7       	ldi	r31, 0x78	; 120
    281e:	9f 2e       	mov	r9, r31
    2820:	f0 2d       	mov	r31, r0
    2822:	0f 2e       	mov	r0, r31
    2824:	f8 e5       	ldi	r31, 0x58	; 88
    2826:	ef 2e       	mov	r14, r31
    2828:	f1 e0       	ldi	r31, 0x01	; 1
    282a:	ff 2e       	mov	r15, r31
    282c:	f0 2d       	mov	r31, r0
    282e:	00 ee       	ldi	r16, 0xE0	; 224
    2830:	10 e0       	ldi	r17, 0x00	; 0
    2832:	20 e3       	ldi	r18, 0x30	; 48
    2834:	31 e0       	ldi	r19, 0x01	; 1
    2836:	40 e1       	ldi	r20, 0x10	; 16
    2838:	50 e0       	ldi	r21, 0x00	; 0
    283a:	68 e0       	ldi	r22, 0x08	; 8
    283c:	70 e0       	ldi	r23, 0x00	; 0
    283e:	c3 01       	movw	r24, r6
    2840:	0e 94 11 19 	call	0x3222	; 0x3222 <_ZN3TFT10drawBitmapEiiiiPKhajjjj>
    2844:	2f ef       	ldi	r18, 0xFF	; 255
    2846:	3c e2       	ldi	r19, 0x2C	; 44
    2848:	81 e3       	ldi	r24, 0x31	; 49
    284a:	91 e0       	ldi	r25, 0x01	; 1
    284c:	21 50       	subi	r18, 0x01	; 1
    284e:	30 40       	sbci	r19, 0x00	; 0
    2850:	80 40       	sbci	r24, 0x00	; 0
    2852:	90 40       	sbci	r25, 0x00	; 0
    2854:	d9 f7       	brne	.-10     	; 0x284c <_ZN4Game5titleEv+0xe4>
    2856:	00 c0       	rjmp	.+0      	; 0x2858 <_ZN4Game5titleEv+0xf0>
    2858:	00 00       	nop
  _delay_ms(7500);

  fillScreen(BLACK);
    285a:	60 e0       	ldi	r22, 0x00	; 0
    285c:	70 e0       	ldi	r23, 0x00	; 0
    285e:	c3 01       	movw	r24, r6
    2860:	0e 94 93 18 	call	0x3126	; 0x3126 <_ZN3TFT10fillScreenEj>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
    2864:	88 ef       	ldi	r24, 0xF8	; 248
    2866:	91 e1       	ldi	r25, 0x11	; 17
    2868:	f3 01       	movw	r30, r6
    286a:	95 83       	std	Z+5, r25	; 0x05
    286c:	84 83       	std	Z+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
    286e:	17 82       	std	Z+7, r1	; 0x07
    2870:	16 82       	std	Z+6, r1	; 0x06
    2872:	8f ef       	ldi	r24, 0xFF	; 255
    2874:	9f ef       	ldi	r25, 0xFF	; 255
    2876:	91 87       	std	Z+9, r25	; 0x09
    2878:	80 87       	std	Z+8, r24	; 0x08
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(16, 16, "Time:");
    287a:	21 e0       	ldi	r18, 0x01	; 1
    287c:	31 e0       	ldi	r19, 0x01	; 1
    287e:	40 e1       	ldi	r20, 0x10	; 16
    2880:	50 e0       	ldi	r21, 0x00	; 0
    2882:	60 e1       	ldi	r22, 0x10	; 16
    2884:	70 e0       	ldi	r23, 0x00	; 0
    2886:	c3 01       	movw	r24, r6
    2888:	0e 94 5f 12 	call	0x24be	; 0x24be <_ZN4Font5printEiiPKc>
    288c:	2d b7       	in	r18, 0x3d	; 61
    288e:	3e b7       	in	r19, 0x3e	; 62
    2890:	28 5f       	subi	r18, 0xF8	; 248
    2892:	3f 4f       	sbci	r19, 0xFF	; 255
    2894:	0f b6       	in	r0, 0x3f	; 63
    2896:	f8 94       	cli
    2898:	3e bf       	out	0x3e, r19	; 62
    289a:	0f be       	out	0x3f, r0	; 63
    289c:	2d bf       	out	0x3d, r18	; 61
    289e:	c0 e0       	ldi	r28, 0x00	; 0
    28a0:	d0 e0       	ldi	r29, 0x00	; 0

  for (int i=0; i<5; i++)
  {
    drawBitmap(64 * i, 180, 64, 60, groundTile, 2, BLACK, MAROON, RED, WHITE);
    28a2:	dd 24       	eor	r13, r13
    28a4:	da 94       	dec	r13
    28a6:	0f 2e       	mov	r0, r31
    28a8:	f8 ef       	ldi	r31, 0xF8	; 248
    28aa:	5f 2e       	mov	r5, r31
    28ac:	f0 2d       	mov	r31, r0
    28ae:	df 92       	push	r13
    28b0:	df 92       	push	r13
    28b2:	5f 92       	push	r5
    28b4:	1f 92       	push	r1
    28b6:	0f 2e       	mov	r0, r31
    28b8:	81 2c       	mov	r8, r1
    28ba:	f8 e7       	ldi	r31, 0x78	; 120
    28bc:	9f 2e       	mov	r9, r31
    28be:	f0 2d       	mov	r31, r0
    28c0:	a1 2c       	mov	r10, r1
    28c2:	b1 2c       	mov	r11, r1
    28c4:	68 94       	set
    28c6:	cc 24       	eor	r12, r12
    28c8:	c1 f8       	bld	r12, 1
    28ca:	0f 2e       	mov	r0, r31
    28cc:	f8 e6       	ldi	r31, 0x68	; 104
    28ce:	ef 2e       	mov	r14, r31
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	ff 2e       	mov	r15, r31
    28d4:	f0 2d       	mov	r31, r0
    28d6:	0c e3       	ldi	r16, 0x3C	; 60
    28d8:	10 e0       	ldi	r17, 0x00	; 0
    28da:	20 e4       	ldi	r18, 0x40	; 64
    28dc:	30 e0       	ldi	r19, 0x00	; 0
    28de:	44 eb       	ldi	r20, 0xB4	; 180
    28e0:	50 e0       	ldi	r21, 0x00	; 0
    28e2:	be 01       	movw	r22, r28
    28e4:	c3 01       	movw	r24, r6
    28e6:	0e 94 11 19 	call	0x3222	; 0x3222 <_ZN3TFT10drawBitmapEiiiiPKhajjjj>
    28ea:	c0 5c       	subi	r28, 0xC0	; 192
    28ec:	df 4f       	sbci	r29, 0xFF	; 255
  fillScreen(BLACK);
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(16, 16, "Time:");

  for (int i=0; i<5; i++)
    28ee:	0f 90       	pop	r0
    28f0:	0f 90       	pop	r0
    28f2:	0f 90       	pop	r0
    28f4:	0f 90       	pop	r0
    28f6:	c0 34       	cpi	r28, 0x40	; 64
    28f8:	31 e0       	ldi	r19, 0x01	; 1
    28fa:	d3 07       	cpc	r29, r19
    28fc:	c1 f6       	brne	.-80     	; 0x28ae <_ZN4Game5titleEv+0x146>
  {
    drawBitmap(64 * i, 180, 64, 60, groundTile, 2, BLACK, MAROON, RED, WHITE);
  }
}
    28fe:	df 91       	pop	r29
    2900:	cf 91       	pop	r28
    2902:	1f 91       	pop	r17
    2904:	0f 91       	pop	r16
    2906:	ff 90       	pop	r15
    2908:	ef 90       	pop	r14
    290a:	df 90       	pop	r13
    290c:	cf 90       	pop	r12
    290e:	bf 90       	pop	r11
    2910:	af 90       	pop	r10
    2912:	9f 90       	pop	r9
    2914:	8f 90       	pop	r8
    2916:	7f 90       	pop	r7
    2918:	6f 90       	pop	r6
    291a:	5f 90       	pop	r5
    291c:	08 95       	ret

0000291e <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
    291e:	cf 93       	push	r28
    2920:	df 93       	push	r29
    2922:	cd b7       	in	r28, 0x3d	; 61
    2924:	de b7       	in	r29, 0x3e	; 62
    2926:	66 97       	sbiw	r28, 0x16	; 22
    2928:	0f b6       	in	r0, 0x3f	; 63
    292a:	f8 94       	cli
    292c:	de bf       	out	0x3e, r29	; 62
    292e:	0f be       	out	0x3f, r0	; 63
    2930:	cd bf       	out	0x3d, r28	; 61
    2932:	7c 01       	movw	r14, r24
    2934:	2f ef       	ldi	r18, 0xFF	; 255
    2936:	81 ee       	ldi	r24, 0xE1	; 225
    2938:	94 e0       	ldi	r25, 0x04	; 4
    293a:	21 50       	subi	r18, 0x01	; 1
    293c:	80 40       	sbci	r24, 0x00	; 0
    293e:	90 40       	sbci	r25, 0x00	; 0
    2940:	e1 f7       	brne	.-8      	; 0x293a <_ZN4Game5startEv+0x1c>
    2942:	00 c0       	rjmp	.+0      	; 0x2944 <_ZN4Game5startEv+0x26>
    2944:	00 00       	nop
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    2946:	80 ef       	ldi	r24, 0xF0	; 240
    2948:	90 e0       	ldi	r25, 0x00	; 0
    294a:	9e 87       	std	Y+14, r25	; 0x0e
    294c:	8d 87       	std	Y+13, r24	; 0x0d
    294e:	80 e4       	ldi	r24, 0x40	; 64
    2950:	91 e0       	ldi	r25, 0x01	; 1
    2952:	98 8b       	std	Y+16, r25	; 0x10
    2954:	8f 87       	std	Y+15, r24	; 0x0f
  void running(void);
  void jumping(void);
  void dead(void);

public:
  Player() : TFT() { mIs_Up = false; mIs_Jump = false; mIs_Reset = false; }
    2956:	1e 8a       	std	Y+22, r1	; 0x16
    2958:	1d 8a       	std	Y+21, r1	; 0x15
    295a:	1c 8a       	std	Y+20, r1	; 0x14
  _delay_ms(100);

  Frame frame;
  Player user;

  Frame::secondTime = 0;
    295c:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    2960:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <_ZN5Frame10secondTimeE>
  frame.init();
    2964:	ce 01       	movw	r24, r28
    2966:	01 96       	adiw	r24, 0x01	; 1
    2968:	0e 94 96 13 	call	0x272c	; 0x272c <_ZN5Frame4initEv>

  while (1)
  {
    frame.update();
    296c:	ce 01       	movw	r24, r28
    296e:	01 96       	adiw	r24, 0x01	; 1
    2970:	0e 94 2c 13 	call	0x2658	; 0x2658 <_ZN5Frame6updateEv>
    user.startPlayer();
    2974:	ce 01       	movw	r24, r28
    2976:	0d 96       	adiw	r24, 0x0d	; 13
    2978:	0e 94 3f 16 	call	0x2c7e	; 0x2c7e <_ZN6Player11startPlayerEv>
    print(100, 16, Frame::secondTime);
    297c:	00 91 19 01 	lds	r16, 0x0119	; 0x800119 <_ZN5Frame10secondTimeE>
    2980:	10 91 1a 01 	lds	r17, 0x011A	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    2984:	20 e0       	ldi	r18, 0x00	; 0
    2986:	30 e0       	ldi	r19, 0x00	; 0
    2988:	40 e1       	ldi	r20, 0x10	; 16
    298a:	50 e0       	ldi	r21, 0x00	; 0
    298c:	64 e6       	ldi	r22, 0x64	; 100
    298e:	70 e0       	ldi	r23, 0x00	; 0
    2990:	c7 01       	movw	r24, r14
    2992:	0e 94 85 12 	call	0x250a	; 0x250a <_ZN4Font5printEiim>
    2996:	ea cf       	rjmp	.-44     	; 0x296c <_ZN4Game5startEv+0x4e>

00002998 <_ZN6Player7runningEv>:
/*----------------------------------------//
                Player Dead
//----------------------------------------*/

void Player::dead(void)
{
    2998:	5f 92       	push	r5
    299a:	6f 92       	push	r6
    299c:	7f 92       	push	r7
    299e:	8f 92       	push	r8
    29a0:	9f 92       	push	r9
    29a2:	af 92       	push	r10
    29a4:	bf 92       	push	r11
    29a6:	cf 92       	push	r12
    29a8:	df 92       	push	r13
    29aa:	ef 92       	push	r14
    29ac:	ff 92       	push	r15
    29ae:	0f 93       	push	r16
    29b0:	1f 93       	push	r17
    29b2:	cf 93       	push	r28
    29b4:	df 93       	push	r29
    29b6:	3c 01       	movw	r6, r24
    29b8:	c0 e0       	ldi	r28, 0x00	; 0
    29ba:	d0 e0       	ldi	r29, 0x00	; 0
    29bc:	dd 24       	eor	r13, r13
    29be:	da 94       	dec	r13
    29c0:	0f 2e       	mov	r0, r31
    29c2:	f8 ef       	ldi	r31, 0xF8	; 248
    29c4:	5f 2e       	mov	r5, r31
    29c6:	f0 2d       	mov	r31, r0
    29c8:	0f 2e       	mov	r0, r31
    29ca:	f8 e7       	ldi	r31, 0x78	; 120
    29cc:	bf 2e       	mov	r11, r31
    29ce:	f0 2d       	mov	r31, r0
    29d0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <_ZN5Frame9sixFramesE>
    29d4:	08 2e       	mov	r0, r24
    29d6:	00 0c       	add	r0, r0
    29d8:	99 0b       	sbc	r25, r25
    29da:	8c 17       	cp	r24, r28
    29dc:	9d 07       	cpc	r25, r29
    29de:	19 f5       	brne	.+70     	; 0x2a26 <_ZN6Player7runningEv+0x8e>
    29e0:	df 92       	push	r13
    29e2:	df 92       	push	r13
    29e4:	5f 92       	push	r5
    29e6:	1f 92       	push	r1
    29e8:	bf 92       	push	r11
    29ea:	1f 92       	push	r1
    29ec:	81 2c       	mov	r8, r1
    29ee:	91 2c       	mov	r9, r1
    29f0:	68 94       	set
    29f2:	aa 24       	eor	r10, r10
    29f4:	a1 f8       	bld	r10, 1
    29f6:	cc 2e       	mov	r12, r28
    29f8:	0f 2e       	mov	r0, r31
    29fa:	f8 e2       	ldi	r31, 0x28	; 40
    29fc:	ef 2e       	mov	r14, r31
    29fe:	f0 e2       	ldi	r31, 0x20	; 32
    2a00:	ff 2e       	mov	r15, r31
    2a02:	f0 2d       	mov	r31, r0
    2a04:	08 e2       	ldi	r16, 0x28	; 40
    2a06:	10 e0       	ldi	r17, 0x00	; 0
    2a08:	28 e2       	ldi	r18, 0x28	; 40
    2a0a:	30 e0       	ldi	r19, 0x00	; 0
    2a0c:	4c e8       	ldi	r20, 0x8C	; 140
    2a0e:	50 e0       	ldi	r21, 0x00	; 0
    2a10:	6c e3       	ldi	r22, 0x3C	; 60
    2a12:	70 e0       	ldi	r23, 0x00	; 0
    2a14:	c3 01       	movw	r24, r6
    2a16:	0e 94 f0 19 	call	0x33e0	; 0x33e0 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj>
    2a1a:	0f 90       	pop	r0
    2a1c:	0f 90       	pop	r0
    2a1e:	0f 90       	pop	r0
    2a20:	0f 90       	pop	r0
    2a22:	0f 90       	pop	r0
    2a24:	0f 90       	pop	r0
    2a26:	21 96       	adiw	r28, 0x01	; 1
    2a28:	c6 30       	cpi	r28, 0x06	; 6
    2a2a:	d1 05       	cpc	r29, r1
    2a2c:	89 f6       	brne	.-94     	; 0x29d0 <_ZN6Player7runningEv+0x38>
    2a2e:	df 91       	pop	r29
    2a30:	cf 91       	pop	r28
    2a32:	1f 91       	pop	r17
    2a34:	0f 91       	pop	r16
    2a36:	ff 90       	pop	r15
    2a38:	ef 90       	pop	r14
    2a3a:	df 90       	pop	r13
    2a3c:	cf 90       	pop	r12
    2a3e:	bf 90       	pop	r11
    2a40:	af 90       	pop	r10
    2a42:	9f 90       	pop	r9
    2a44:	8f 90       	pop	r8
    2a46:	7f 90       	pop	r7
    2a48:	6f 90       	pop	r6
    2a4a:	5f 90       	pop	r5
    2a4c:	08 95       	ret

00002a4e <_ZN6Player7jumpingEv>:
    2a4e:	2f 92       	push	r2
    2a50:	3f 92       	push	r3
    2a52:	4f 92       	push	r4
    2a54:	5f 92       	push	r5
    2a56:	6f 92       	push	r6
    2a58:	7f 92       	push	r7
    2a5a:	8f 92       	push	r8
    2a5c:	9f 92       	push	r9
    2a5e:	af 92       	push	r10
    2a60:	bf 92       	push	r11
    2a62:	cf 92       	push	r12
    2a64:	df 92       	push	r13
    2a66:	ef 92       	push	r14
    2a68:	ff 92       	push	r15
    2a6a:	0f 93       	push	r16
    2a6c:	1f 93       	push	r17
    2a6e:	cf 93       	push	r28
    2a70:	df 93       	push	r29
    2a72:	3c 01       	movw	r6, r24
    2a74:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <_ZN5Frame7oneTickE>
    2a78:	81 30       	cpi	r24, 0x01	; 1
    2a7a:	09 f0       	breq	.+2      	; 0x2a7e <_ZN6Player7jumpingEv+0x30>
    2a7c:	e7 c0       	rjmp	.+462    	; 0x2c4c <_ZN6Player7jumpingEv+0x1fe>
    2a7e:	f3 01       	movw	r30, r6
    2a80:	86 81       	ldd	r24, Z+6	; 0x06
    2a82:	82 33       	cpi	r24, 0x32	; 50
    2a84:	5c f0       	brlt	.+22     	; 0x2a9c <_ZN6Player7jumpingEv+0x4e>
    2a86:	95 81       	ldd	r25, Z+5	; 0x05
    2a88:	9f 5f       	subi	r25, 0xFF	; 255
    2a8a:	95 83       	std	Z+5, r25	; 0x05
    2a8c:	94 30       	cpi	r25, 0x04	; 4
    2a8e:	19 f0       	breq	.+6      	; 0x2a96 <_ZN6Player7jumpingEv+0x48>
    2a90:	86 50       	subi	r24, 0x06	; 6
    2a92:	86 83       	std	Z+6, r24	; 0x06
    2a94:	03 c0       	rjmp	.+6      	; 0x2a9c <_ZN6Player7jumpingEv+0x4e>
    2a96:	f3 01       	movw	r30, r6
    2a98:	11 86       	std	Z+9, r1	; 0x09
    2a9a:	08 c0       	rjmp	.+16     	; 0x2aac <_ZN6Player7jumpingEv+0x5e>
    2a9c:	f3 01       	movw	r30, r6
    2a9e:	81 85       	ldd	r24, Z+9	; 0x09
    2aa0:	88 23       	and	r24, r24
    2aa2:	21 f0       	breq	.+8      	; 0x2aac <_ZN6Player7jumpingEv+0x5e>
    2aa4:	86 81       	ldd	r24, Z+6	; 0x06
    2aa6:	8a 5f       	subi	r24, 0xFA	; 250
    2aa8:	86 83       	std	Z+6, r24	; 0x06
    2aaa:	2c c0       	rjmp	.+88     	; 0x2b04 <_ZN6Player7jumpingEv+0xb6>
    2aac:	f3 01       	movw	r30, r6
    2aae:	86 81       	ldd	r24, Z+6	; 0x06
    2ab0:	86 50       	subi	r24, 0x06	; 6
    2ab2:	86 83       	std	Z+6, r24	; 0x06
    2ab4:	18 16       	cp	r1, r24
    2ab6:	9c f0       	brlt	.+38     	; 0x2ade <_ZN6Player7jumpingEv+0x90>
    2ab8:	e1 2c       	mov	r14, r1
    2aba:	f1 2c       	mov	r15, r1
    2abc:	09 e1       	ldi	r16, 0x19	; 25
    2abe:	10 e0       	ldi	r17, 0x00	; 0
    2ac0:	28 e2       	ldi	r18, 0x28	; 40
    2ac2:	30 e0       	ldi	r19, 0x00	; 0
    2ac4:	43 e7       	ldi	r20, 0x73	; 115
    2ac6:	50 e0       	ldi	r21, 0x00	; 0
    2ac8:	6c e3       	ldi	r22, 0x3C	; 60
    2aca:	70 e0       	ldi	r23, 0x00	; 0
    2acc:	c3 01       	movw	r24, r6
    2ace:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <_ZN3TFT8fillRectEiiiij>
    2ad2:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <_ZN2SW10interrupt0E>
    2ad6:	f3 01       	movw	r30, r6
    2ad8:	10 86       	std	Z+8, r1	; 0x08
    2ada:	17 82       	std	Z+7, r1	; 0x07
    2adc:	bd c0       	rjmp	.+378    	; 0x2c58 <_ZN6Player7jumpingEv+0x20a>
    2ade:	c0 e0       	ldi	r28, 0x00	; 0
    2ae0:	d0 e0       	ldi	r29, 0x00	; 0
    2ae2:	0f 2e       	mov	r0, r31
    2ae4:	fa e7       	ldi	r31, 0x7A	; 122
    2ae6:	4f 2e       	mov	r4, r31
    2ae8:	51 2c       	mov	r5, r1
    2aea:	f0 2d       	mov	r31, r0
    2aec:	dd 24       	eor	r13, r13
    2aee:	da 94       	dec	r13
    2af0:	0f 2e       	mov	r0, r31
    2af2:	f8 ef       	ldi	r31, 0xF8	; 248
    2af4:	bf 2e       	mov	r11, r31
    2af6:	f0 2d       	mov	r31, r0
    2af8:	0f 2e       	mov	r0, r31
    2afa:	f2 e7       	ldi	r31, 0x72	; 114
    2afc:	2f 2e       	mov	r2, r31
    2afe:	31 2c       	mov	r3, r1
    2b00:	f0 2d       	mov	r31, r0
    2b02:	5b c0       	rjmp	.+182    	; 0x2bba <_ZN6Player7jumpingEv+0x16c>
    2b04:	c0 e0       	ldi	r28, 0x00	; 0
    2b06:	d0 e0       	ldi	r29, 0x00	; 0
    2b08:	0f 2e       	mov	r0, r31
    2b0a:	fa e7       	ldi	r31, 0x7A	; 122
    2b0c:	4f 2e       	mov	r4, r31
    2b0e:	51 2c       	mov	r5, r1
    2b10:	f0 2d       	mov	r31, r0
    2b12:	dd 24       	eor	r13, r13
    2b14:	da 94       	dec	r13
    2b16:	0f 2e       	mov	r0, r31
    2b18:	f8 ef       	ldi	r31, 0xF8	; 248
    2b1a:	bf 2e       	mov	r11, r31
    2b1c:	f0 2d       	mov	r31, r0
    2b1e:	0f 2e       	mov	r0, r31
    2b20:	fc ea       	ldi	r31, 0xAC	; 172
    2b22:	2f 2e       	mov	r2, r31
    2b24:	31 2c       	mov	r3, r1
    2b26:	f0 2d       	mov	r31, r0
    2b28:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    2b2c:	08 2e       	mov	r0, r24
    2b2e:	00 0c       	add	r0, r0
    2b30:	99 0b       	sbc	r25, r25
    2b32:	8c 17       	cp	r24, r28
    2b34:	9d 07       	cpc	r25, r29
    2b36:	d9 f5       	brne	.+118    	; 0x2bae <_ZN6Player7jumpingEv+0x160>
    2b38:	f3 01       	movw	r30, r6
    2b3a:	86 81       	ldd	r24, Z+6	; 0x06
    2b3c:	a2 01       	movw	r20, r4
    2b3e:	48 1b       	sub	r20, r24
    2b40:	51 09       	sbc	r21, r1
    2b42:	87 fd       	sbrc	r24, 7
    2b44:	53 95       	inc	r21
    2b46:	df 92       	push	r13
    2b48:	df 92       	push	r13
    2b4a:	bf 92       	push	r11
    2b4c:	1f 92       	push	r1
    2b4e:	f8 e7       	ldi	r31, 0x78	; 120
    2b50:	ff 93       	push	r31
    2b52:	1f 92       	push	r1
    2b54:	81 2c       	mov	r8, r1
    2b56:	91 2c       	mov	r9, r1
    2b58:	68 94       	set
    2b5a:	aa 24       	eor	r10, r10
    2b5c:	a1 f8       	bld	r10, 1
    2b5e:	cc 2e       	mov	r12, r28
    2b60:	0f 2e       	mov	r0, r31
    2b62:	f8 e9       	ldi	r31, 0x98	; 152
    2b64:	ef 2e       	mov	r14, r31
    2b66:	fe e1       	ldi	r31, 0x1E	; 30
    2b68:	ff 2e       	mov	r15, r31
    2b6a:	f0 2d       	mov	r31, r0
    2b6c:	02 e3       	ldi	r16, 0x32	; 50
    2b6e:	10 e0       	ldi	r17, 0x00	; 0
    2b70:	20 e2       	ldi	r18, 0x20	; 32
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	6c e3       	ldi	r22, 0x3C	; 60
    2b76:	70 e0       	ldi	r23, 0x00	; 0
    2b78:	c3 01       	movw	r24, r6
    2b7a:	0e 94 f0 19 	call	0x33e0	; 0x33e0 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj>
    2b7e:	f3 01       	movw	r30, r6
    2b80:	86 81       	ldd	r24, Z+6	; 0x06
    2b82:	a1 01       	movw	r20, r2
    2b84:	48 1b       	sub	r20, r24
    2b86:	51 09       	sbc	r21, r1
    2b88:	87 fd       	sbrc	r24, 7
    2b8a:	53 95       	inc	r21
    2b8c:	e1 2c       	mov	r14, r1
    2b8e:	f1 2c       	mov	r15, r1
    2b90:	08 e0       	ldi	r16, 0x08	; 8
    2b92:	10 e0       	ldi	r17, 0x00	; 0
    2b94:	20 e2       	ldi	r18, 0x20	; 32
    2b96:	30 e0       	ldi	r19, 0x00	; 0
    2b98:	6c e3       	ldi	r22, 0x3C	; 60
    2b9a:	70 e0       	ldi	r23, 0x00	; 0
    2b9c:	c3 01       	movw	r24, r6
    2b9e:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <_ZN3TFT8fillRectEiiiij>
    2ba2:	0f 90       	pop	r0
    2ba4:	0f 90       	pop	r0
    2ba6:	0f 90       	pop	r0
    2ba8:	0f 90       	pop	r0
    2baa:	0f 90       	pop	r0
    2bac:	0f 90       	pop	r0
    2bae:	21 96       	adiw	r28, 0x01	; 1
    2bb0:	c4 30       	cpi	r28, 0x04	; 4
    2bb2:	d1 05       	cpc	r29, r1
    2bb4:	09 f0       	breq	.+2      	; 0x2bb8 <_ZN6Player7jumpingEv+0x16a>
    2bb6:	b8 cf       	rjmp	.-144    	; 0x2b28 <_ZN6Player7jumpingEv+0xda>
    2bb8:	4f c0       	rjmp	.+158    	; 0x2c58 <_ZN6Player7jumpingEv+0x20a>
    2bba:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    2bbe:	08 2e       	mov	r0, r24
    2bc0:	00 0c       	add	r0, r0
    2bc2:	99 0b       	sbc	r25, r25
    2bc4:	8c 17       	cp	r24, r28
    2bc6:	9d 07       	cpc	r25, r29
    2bc8:	d9 f5       	brne	.+118    	; 0x2c40 <_ZN6Player7jumpingEv+0x1f2>
    2bca:	f3 01       	movw	r30, r6
    2bcc:	86 81       	ldd	r24, Z+6	; 0x06
    2bce:	a2 01       	movw	r20, r4
    2bd0:	48 1b       	sub	r20, r24
    2bd2:	51 09       	sbc	r21, r1
    2bd4:	87 fd       	sbrc	r24, 7
    2bd6:	53 95       	inc	r21
    2bd8:	df 92       	push	r13
    2bda:	df 92       	push	r13
    2bdc:	bf 92       	push	r11
    2bde:	1f 92       	push	r1
    2be0:	f8 e7       	ldi	r31, 0x78	; 120
    2be2:	ff 93       	push	r31
    2be4:	1f 92       	push	r1
    2be6:	81 2c       	mov	r8, r1
    2be8:	91 2c       	mov	r9, r1
    2bea:	68 94       	set
    2bec:	aa 24       	eor	r10, r10
    2bee:	a1 f8       	bld	r10, 1
    2bf0:	cc 2e       	mov	r12, r28
    2bf2:	0f 2e       	mov	r0, r31
    2bf4:	f8 e1       	ldi	r31, 0x18	; 24
    2bf6:	ef 2e       	mov	r14, r31
    2bf8:	fc e1       	ldi	r31, 0x1C	; 28
    2bfa:	ff 2e       	mov	r15, r31
    2bfc:	f0 2d       	mov	r31, r0
    2bfe:	00 e4       	ldi	r16, 0x40	; 64
    2c00:	10 e0       	ldi	r17, 0x00	; 0
    2c02:	28 e2       	ldi	r18, 0x28	; 40
    2c04:	30 e0       	ldi	r19, 0x00	; 0
    2c06:	6c e3       	ldi	r22, 0x3C	; 60
    2c08:	70 e0       	ldi	r23, 0x00	; 0
    2c0a:	c3 01       	movw	r24, r6
    2c0c:	0e 94 d4 1a 	call	0x35a8	; 0x35a8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj>
    2c10:	f3 01       	movw	r30, r6
    2c12:	86 81       	ldd	r24, Z+6	; 0x06
    2c14:	a1 01       	movw	r20, r2
    2c16:	48 1b       	sub	r20, r24
    2c18:	51 09       	sbc	r21, r1
    2c1a:	87 fd       	sbrc	r24, 7
    2c1c:	53 95       	inc	r21
    2c1e:	e1 2c       	mov	r14, r1
    2c20:	f1 2c       	mov	r15, r1
    2c22:	08 e0       	ldi	r16, 0x08	; 8
    2c24:	10 e0       	ldi	r17, 0x00	; 0
    2c26:	28 e2       	ldi	r18, 0x28	; 40
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	6c e3       	ldi	r22, 0x3C	; 60
    2c2c:	70 e0       	ldi	r23, 0x00	; 0
    2c2e:	c3 01       	movw	r24, r6
    2c30:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <_ZN3TFT8fillRectEiiiij>
    2c34:	0f 90       	pop	r0
    2c36:	0f 90       	pop	r0
    2c38:	0f 90       	pop	r0
    2c3a:	0f 90       	pop	r0
    2c3c:	0f 90       	pop	r0
    2c3e:	0f 90       	pop	r0
    2c40:	21 96       	adiw	r28, 0x01	; 1
    2c42:	c4 30       	cpi	r28, 0x04	; 4
    2c44:	d1 05       	cpc	r29, r1
    2c46:	09 f0       	breq	.+2      	; 0x2c4a <_ZN6Player7jumpingEv+0x1fc>
    2c48:	b8 cf       	rjmp	.-144    	; 0x2bba <_ZN6Player7jumpingEv+0x16c>
    2c4a:	06 c0       	rjmp	.+12     	; 0x2c58 <_ZN6Player7jumpingEv+0x20a>
    2c4c:	f3 01       	movw	r30, r6
    2c4e:	81 85       	ldd	r24, Z+9	; 0x09
    2c50:	88 23       	and	r24, r24
    2c52:	09 f4       	brne	.+2      	; 0x2c56 <_ZN6Player7jumpingEv+0x208>
    2c54:	44 cf       	rjmp	.-376    	; 0x2ade <_ZN6Player7jumpingEv+0x90>
    2c56:	56 cf       	rjmp	.-340    	; 0x2b04 <_ZN6Player7jumpingEv+0xb6>
    2c58:	df 91       	pop	r29
    2c5a:	cf 91       	pop	r28
    2c5c:	1f 91       	pop	r17
    2c5e:	0f 91       	pop	r16
    2c60:	ff 90       	pop	r15
    2c62:	ef 90       	pop	r14
    2c64:	df 90       	pop	r13
    2c66:	cf 90       	pop	r12
    2c68:	bf 90       	pop	r11
    2c6a:	af 90       	pop	r10
    2c6c:	9f 90       	pop	r9
    2c6e:	8f 90       	pop	r8
    2c70:	7f 90       	pop	r7
    2c72:	6f 90       	pop	r6
    2c74:	5f 90       	pop	r5
    2c76:	4f 90       	pop	r4
    2c78:	3f 90       	pop	r3
    2c7a:	2f 90       	pop	r2
    2c7c:	08 95       	ret

00002c7e <_ZN6Player11startPlayerEv>:
/*----------------------------------------//
                Start Player
//----------------------------------------*/

void Player::startPlayer(void)
{
    2c7e:	ef 92       	push	r14
    2c80:	ff 92       	push	r15
    2c82:	0f 93       	push	r16
    2c84:	1f 93       	push	r17
    2c86:	cf 93       	push	r28
    2c88:	df 93       	push	r29
    2c8a:	ec 01       	movw	r28, r24

  if (SW::interrupt0 == ON)
    2c8c:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_ZN2SW10interrupt0E>
    2c90:	88 23       	and	r24, r24
    2c92:	b9 f0       	breq	.+46     	; 0x2cc2 <_ZN6Player11startPlayerEv+0x44>
  {
    if (mIs_Reset == false)
    2c94:	8f 81       	ldd	r24, Y+7	; 0x07
    2c96:	81 11       	cpse	r24, r1
    2c98:	14 c0       	rjmp	.+40     	; 0x2cc2 <_ZN6Player11startPlayerEv+0x44>
    {
      fillRect(60, 140, 40, 40, BLACK);
    2c9a:	e1 2c       	mov	r14, r1
    2c9c:	f1 2c       	mov	r15, r1
    2c9e:	08 e2       	ldi	r16, 0x28	; 40
    2ca0:	10 e0       	ldi	r17, 0x00	; 0
    2ca2:	28 e2       	ldi	r18, 0x28	; 40
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	4c e8       	ldi	r20, 0x8C	; 140
    2ca8:	50 e0       	ldi	r21, 0x00	; 0
    2caa:	6c e3       	ldi	r22, 0x3C	; 60
    2cac:	70 e0       	ldi	r23, 0x00	; 0
    2cae:	ce 01       	movw	r24, r28
    2cb0:	0e 94 d8 18 	call	0x31b0	; 0x31b0 <_ZN3TFT8fillRectEiiiij>
      m_JumpTemp = 0;
    2cb4:	1d 82       	std	Y+5, r1	; 0x05
      m_JumpHeight = 0;
    2cb6:	1e 82       	std	Y+6, r1	; 0x06
      mIs_Up = true;
    2cb8:	81 e0       	ldi	r24, 0x01	; 1
    2cba:	89 87       	std	Y+9, r24	; 0x09
      mIs_Jump = true;
    2cbc:	88 87       	std	Y+8, r24	; 0x08
      mIs_Reset = true;
    2cbe:	8f 83       	std	Y+7, r24	; 0x07
    2cc0:	07 c0       	rjmp	.+14     	; 0x2cd0 <_ZN6Player11startPlayerEv+0x52>
    }
  }

  if (mIs_Jump == false)
    2cc2:	88 85       	ldd	r24, Y+8	; 0x08
    2cc4:	81 11       	cpse	r24, r1
    2cc6:	04 c0       	rjmp	.+8      	; 0x2cd0 <_ZN6Player11startPlayerEv+0x52>
  {
    running();
    2cc8:	ce 01       	movw	r24, r28
    2cca:	0e 94 cc 14 	call	0x2998	; 0x2998 <_ZN6Player7runningEv>
    2cce:	03 c0       	rjmp	.+6      	; 0x2cd6 <_ZN6Player11startPlayerEv+0x58>
  }
  
  else
  {
    jumping();
    2cd0:	ce 01       	movw	r24, r28
    2cd2:	0e 94 27 15 	call	0x2a4e	; 0x2a4e <_ZN6Player7jumpingEv>
  }

    2cd6:	df 91       	pop	r29
    2cd8:	cf 91       	pop	r28
    2cda:	1f 91       	pop	r17
    2cdc:	0f 91       	pop	r16
    2cde:	ff 90       	pop	r15
    2ce0:	ef 90       	pop	r14
    2ce2:	08 95       	ret

00002ce4 <_ZN3MCU7Setting8beginPinEaa>:
  }

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    2ce4:	81 30       	cpi	r24, 0x01	; 1
    2ce6:	89 f0       	breq	.+34     	; 0x2d0a <_ZN3MCU7Setting8beginPinEaa+0x26>
    2ce8:	82 30       	cpi	r24, 0x02	; 2
    2cea:	e1 f0       	breq	.+56     	; 0x2d24 <_ZN3MCU7Setting8beginPinEaa+0x40>
    2cec:	81 11       	cpse	r24, r1
    2cee:	26 c0       	rjmp	.+76     	; 0x2d3c <_ZN3MCU7Setting8beginPinEaa+0x58>
    2cf0:	24 b1       	in	r18, 0x04	; 4
    2cf2:	81 e0       	ldi	r24, 0x01	; 1
    2cf4:	90 e0       	ldi	r25, 0x00	; 0
    2cf6:	02 c0       	rjmp	.+4      	; 0x2cfc <_ZN3MCU7Setting8beginPinEaa+0x18>
    2cf8:	88 0f       	add	r24, r24
    2cfa:	99 1f       	adc	r25, r25
    2cfc:	6a 95       	dec	r22
    2cfe:	e2 f7       	brpl	.-8      	; 0x2cf8 <_ZN3MCU7Setting8beginPinEaa+0x14>
    2d00:	82 2b       	or	r24, r18
    2d02:	84 b9       	out	0x04, r24	; 4
    2d04:	85 b1       	in	r24, 0x05	; 5
    2d06:	85 b9       	out	0x05, r24	; 5
    2d08:	08 95       	ret
    2d0a:	27 b1       	in	r18, 0x07	; 7
    2d0c:	81 e0       	ldi	r24, 0x01	; 1
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	02 c0       	rjmp	.+4      	; 0x2d16 <_ZN3MCU7Setting8beginPinEaa+0x32>
    2d12:	88 0f       	add	r24, r24
    2d14:	99 1f       	adc	r25, r25
    2d16:	6a 95       	dec	r22
    2d18:	e2 f7       	brpl	.-8      	; 0x2d12 <_ZN3MCU7Setting8beginPinEaa+0x2e>
    2d1a:	82 2b       	or	r24, r18
    2d1c:	87 b9       	out	0x07, r24	; 7
    2d1e:	88 b1       	in	r24, 0x08	; 8
    2d20:	88 b9       	out	0x08, r24	; 8
    2d22:	08 95       	ret
    2d24:	2a b1       	in	r18, 0x0a	; 10
    2d26:	81 e0       	ldi	r24, 0x01	; 1
    2d28:	90 e0       	ldi	r25, 0x00	; 0
    2d2a:	02 c0       	rjmp	.+4      	; 0x2d30 <_ZN3MCU7Setting8beginPinEaa+0x4c>
    2d2c:	88 0f       	add	r24, r24
    2d2e:	99 1f       	adc	r25, r25
    2d30:	6a 95       	dec	r22
    2d32:	e2 f7       	brpl	.-8      	; 0x2d2c <_ZN3MCU7Setting8beginPinEaa+0x48>
    2d34:	82 2b       	or	r24, r18
    2d36:	8a b9       	out	0x0a, r24	; 10
    2d38:	8b b1       	in	r24, 0x0b	; 11
    2d3a:	8b b9       	out	0x0b, r24	; 11
    2d3c:	08 95       	ret

00002d3e <_ZN3MCU7Setting9beginPortEab>:
    2d3e:	61 95       	neg	r22
    2d40:	81 30       	cpi	r24, 0x01	; 1
    2d42:	39 f0       	breq	.+14     	; 0x2d52 <_ZN3MCU7Setting9beginPortEab+0x14>
    2d44:	82 30       	cpi	r24, 0x02	; 2
    2d46:	41 f0       	breq	.+16     	; 0x2d58 <_ZN3MCU7Setting9beginPortEab+0x1a>
    2d48:	81 11       	cpse	r24, r1
    2d4a:	08 c0       	rjmp	.+16     	; 0x2d5c <_ZN3MCU7Setting9beginPortEab+0x1e>
    2d4c:	64 b9       	out	0x04, r22	; 4
    2d4e:	15 b8       	out	0x05, r1	; 5
    2d50:	08 95       	ret
    2d52:	67 b9       	out	0x07, r22	; 7
    2d54:	18 b8       	out	0x08, r1	; 8
    2d56:	08 95       	ret
    2d58:	6a b9       	out	0x0a, r22	; 10
    2d5a:	1b b8       	out	0x0b, r1	; 11
    2d5c:	08 95       	ret

00002d5e <_ZN3MCU7Setting8beginINTEaa>:
    2d5e:	9d b3       	in	r25, 0x1d	; 29
    2d60:	21 e0       	ldi	r18, 0x01	; 1
    2d62:	30 e0       	ldi	r19, 0x00	; 0
    2d64:	02 c0       	rjmp	.+4      	; 0x2d6a <_ZN3MCU7Setting8beginINTEaa+0xc>
    2d66:	22 0f       	add	r18, r18
    2d68:	33 1f       	adc	r19, r19
    2d6a:	8a 95       	dec	r24
    2d6c:	e2 f7       	brpl	.-8      	; 0x2d66 <_ZN3MCU7Setting8beginINTEaa+0x8>
    2d6e:	29 2b       	or	r18, r25
    2d70:	2d bb       	out	0x1d, r18	; 29
    2d72:	61 30       	cpi	r22, 0x01	; 1
    2d74:	39 f0       	breq	.+14     	; 0x2d84 <_ZN3MCU7Setting8beginINTEaa+0x26>
    2d76:	62 30       	cpi	r22, 0x02	; 2
    2d78:	49 f0       	breq	.+18     	; 0x2d8c <_ZN3MCU7Setting8beginINTEaa+0x2e>
    2d7a:	61 11       	cpse	r22, r1
    2d7c:	0a c0       	rjmp	.+20     	; 0x2d92 <_ZN3MCU7Setting8beginINTEaa+0x34>
    2d7e:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d82:	08 95       	ret
    2d84:	8a e0       	ldi	r24, 0x0A	; 10
    2d86:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d8a:	08 95       	ret
    2d8c:	8f e0       	ldi	r24, 0x0F	; 15
    2d8e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d92:	08 95       	ret

00002d94 <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    2d94:	81 30       	cpi	r24, 0x01	; 1
    2d96:	99 f1       	breq	.+102    	; 0x2dfe <_ZN3MCU7Setting10beginTimerEab+0x6a>
    2d98:	82 30       	cpi	r24, 0x02	; 2
    2d9a:	b1 f0       	breq	.+44     	; 0x2dc8 <_ZN3MCU7Setting10beginTimerEab+0x34>
    2d9c:	81 11       	cpse	r24, r1
    2d9e:	50 c0       	rjmp	.+160    	; 0x2e40 <_ZN3MCU7Setting10beginTimerEab+0xac>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    2da0:	61 11       	cpse	r22, r1
    2da2:	08 c0       	rjmp	.+16     	; 0x2db4 <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    2da4:	81 e0       	ldi	r24, 0x01	; 1
    2da6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    2daa:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    2dac:	85 e0       	ldi	r24, 0x05	; 5
    2dae:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    2db0:	16 bc       	out	0x26, r1	; 38
    2db2:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    2db4:	82 e0       	ldi	r24, 0x02	; 2
    2db6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    2dba:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    2dbc:	85 e0       	ldi	r24, 0x05	; 5
    2dbe:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    2dc0:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    2dc2:	8f ef       	ldi	r24, 0xFF	; 255
    2dc4:	87 bd       	out	0x27, r24	; 39
    2dc6:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    2dc8:	61 11       	cpse	r22, r1
    2dca:	0b c0       	rjmp	.+22     	; 0x2de2 <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    2dcc:	81 e0       	ldi	r24, 0x01	; 1
    2dce:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    2dd2:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    2dd6:	84 e0       	ldi	r24, 0x04	; 4
    2dd8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    2ddc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2de0:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    2de2:	82 e0       	ldi	r24, 0x02	; 2
    2de4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    2de8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    2dec:	84 e0       	ldi	r24, 0x04	; 4
    2dee:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    2df2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    2df6:	89 ef       	ldi	r24, 0xF9	; 249
    2df8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2dfc:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    2dfe:	61 11       	cpse	r22, r1
    2e00:	0d c0       	rjmp	.+26     	; 0x2e1c <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    2e02:	81 e0       	ldi	r24, 0x01	; 1
    2e04:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, Normal Mode
    2e08:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x05;
    2e0c:	85 e0       	ldi	r24, 0x05	; 5
    2e0e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    2e12:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2e16:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2e1a:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    2e1c:	82 e0       	ldi	r24, 0x02	; 2
    2e1e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, CTC Mode
    2e22:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0D;
    2e26:	8d e0       	ldi	r24, 0x0D	; 13
    2e28:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    2e2c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2e30:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    2e34:	8d e3       	ldi	r24, 0x3D	; 61
    2e36:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    2e3a:	88 e0       	ldi	r24, 0x08	; 8
    2e3c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2e40:	08 95       	ret

00002e42 <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    2e42:	85 30       	cpi	r24, 0x05	; 5
    2e44:	09 f4       	brne	.+2      	; 0x2e48 <_ZN3MCU7Setting8beginPWMEab+0x6>
    2e46:	5d c0       	rjmp	.+186    	; 0x2f02 <_ZN3MCU7Setting8beginPWMEab+0xc0>
    2e48:	2c f4       	brge	.+10     	; 0x2e54 <_ZN3MCU7Setting8beginPWMEab+0x12>
    2e4a:	83 30       	cpi	r24, 0x03	; 3
    2e4c:	51 f0       	breq	.+20     	; 0x2e62 <_ZN3MCU7Setting8beginPWMEab+0x20>
    2e4e:	84 30       	cpi	r24, 0x04	; 4
    2e50:	c1 f0       	breq	.+48     	; 0x2e82 <_ZN3MCU7Setting8beginPWMEab+0x40>
    2e52:	08 95       	ret
    2e54:	87 30       	cpi	r24, 0x07	; 7
    2e56:	29 f1       	breq	.+74     	; 0x2ea2 <_ZN3MCU7Setting8beginPWMEab+0x60>
    2e58:	0c f4       	brge	.+2      	; 0x2e5c <_ZN3MCU7Setting8beginPWMEab+0x1a>
    2e5a:	6f c0       	rjmp	.+222    	; 0x2f3a <_ZN3MCU7Setting8beginPWMEab+0xf8>
    2e5c:	88 30       	cpi	r24, 0x08	; 8
    2e5e:	c9 f1       	breq	.+114    	; 0x2ed2 <_ZN3MCU7Setting8beginPWMEab+0x90>
    2e60:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    2e62:	61 11       	cpse	r22, r1
    2e64:	07 c0       	rjmp	.+14     	; 0x2e74 <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    2e66:	84 b5       	in	r24, 0x24	; 36
    2e68:	81 64       	ori	r24, 0x41	; 65
    2e6a:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2e6c:	8c e0       	ldi	r24, 0x0C	; 12
    2e6e:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e70:	16 bc       	out	0x26, r1	; 38
    2e72:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    2e74:	84 b5       	in	r24, 0x24	; 36
    2e76:	83 64       	ori	r24, 0x43	; 67
    2e78:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    2e7a:	8c e0       	ldi	r24, 0x0C	; 12
    2e7c:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e7e:	16 bc       	out	0x26, r1	; 38
    2e80:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    2e82:	61 11       	cpse	r22, r1
    2e84:	07 c0       	rjmp	.+14     	; 0x2e94 <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    2e86:	84 b5       	in	r24, 0x24	; 36
    2e88:	81 61       	ori	r24, 0x11	; 17
    2e8a:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2e8c:	8c e0       	ldi	r24, 0x0C	; 12
    2e8e:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e90:	16 bc       	out	0x26, r1	; 38
    2e92:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    2e94:	84 b5       	in	r24, 0x24	; 36
    2e96:	83 61       	ori	r24, 0x13	; 19
    2e98:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    2e9a:	8c e0       	ldi	r24, 0x0C	; 12
    2e9c:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e9e:	16 bc       	out	0x26, r1	; 38
    2ea0:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    2ea2:	61 11       	cpse	r22, r1
    2ea4:	0b c0       	rjmp	.+22     	; 0x2ebc <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    2ea6:	e0 eb       	ldi	r30, 0xB0	; 176
    2ea8:	f0 e0       	ldi	r31, 0x00	; 0
    2eaa:	80 81       	ld	r24, Z
    2eac:	81 68       	ori	r24, 0x81	; 129
    2eae:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    2eb0:	86 e0       	ldi	r24, 0x06	; 6
    2eb2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2eb6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2eba:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    2ebc:	e0 eb       	ldi	r30, 0xB0	; 176
    2ebe:	f0 e0       	ldi	r31, 0x00	; 0
    2ec0:	80 81       	ld	r24, Z
    2ec2:	83 68       	ori	r24, 0x83	; 131
    2ec4:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    2ec6:	86 e0       	ldi	r24, 0x06	; 6
    2ec8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2ecc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2ed0:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    2ed2:	61 11       	cpse	r22, r1
    2ed4:	0b c0       	rjmp	.+22     	; 0x2eec <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    2ed6:	e0 eb       	ldi	r30, 0xB0	; 176
    2ed8:	f0 e0       	ldi	r31, 0x00	; 0
    2eda:	80 81       	ld	r24, Z
    2edc:	81 62       	ori	r24, 0x21	; 33
    2ede:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    2ee0:	86 e0       	ldi	r24, 0x06	; 6
    2ee2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2ee6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2eea:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    2eec:	e0 eb       	ldi	r30, 0xB0	; 176
    2eee:	f0 e0       	ldi	r31, 0x00	; 0
    2ef0:	80 81       	ld	r24, Z
    2ef2:	83 62       	ori	r24, 0x23	; 35
    2ef4:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    2ef6:	86 e0       	ldi	r24, 0x06	; 6
    2ef8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2efc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2f00:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    2f02:	61 11       	cpse	r22, r1
    2f04:	0d c0       	rjmp	.+26     	; 0x2f20 <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    2f06:	e0 e8       	ldi	r30, 0x80	; 128
    2f08:	f0 e0       	ldi	r31, 0x00	; 0
    2f0a:	80 81       	ld	r24, Z
    2f0c:	83 68       	ori	r24, 0x83	; 131
    2f0e:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2f10:	84 e0       	ldi	r24, 0x04	; 4
    2f12:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f16:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f1a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f1e:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    2f20:	e0 e8       	ldi	r30, 0x80	; 128
    2f22:	f0 e0       	ldi	r31, 0x00	; 0
    2f24:	80 81       	ld	r24, Z
    2f26:	83 68       	ori	r24, 0x83	; 131
    2f28:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    2f2a:	8c e0       	ldi	r24, 0x0C	; 12
    2f2c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f30:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f34:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f38:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    2f3a:	61 11       	cpse	r22, r1
    2f3c:	0d c0       	rjmp	.+26     	; 0x2f58 <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2f3e:	e0 e8       	ldi	r30, 0x80	; 128
    2f40:	f0 e0       	ldi	r31, 0x00	; 0
    2f42:	80 81       	ld	r24, Z
    2f44:	83 62       	ori	r24, 0x23	; 35
    2f46:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2f48:	84 e0       	ldi	r24, 0x04	; 4
    2f4a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f4e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f52:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f56:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2f58:	e0 e8       	ldi	r30, 0x80	; 128
    2f5a:	f0 e0       	ldi	r31, 0x00	; 0
    2f5c:	80 81       	ld	r24, Z
    2f5e:	83 62       	ori	r24, 0x23	; 35
    2f60:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    2f62:	8c e0       	ldi	r24, 0x0C	; 12
    2f64:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f68:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f6c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f70:	08 95       	ret

00002f72 <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    2f72:	80 e5       	ldi	r24, 0x50	; 80
    2f74:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    2f76:	81 e0       	ldi	r24, 0x01	; 1
    2f78:	8d bd       	out	0x2d, r24	; 45
    2f7a:	08 95       	ret

00002f7c <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    2f7c:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    2f7e:	0d b4       	in	r0, 0x2d	; 45
    2f80:	07 fe       	sbrs	r0, 7
    2f82:	fd cf       	rjmp	.-6      	; 0x2f7e <_ZN3SPI7sendBitEh+0x2>
}
    2f84:	08 95       	ret

00002f86 <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    2f86:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    2f88:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    2f8a:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2f8e:	28 9a       	sbi	0x05, 0	; 5
    2f90:	08 95       	ret

00002f92 <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    2f92:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    2f94:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    2f96:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2f9a:	28 9a       	sbi	0x05, 0	; 5
    2f9c:	08 95       	ret

00002f9e <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    2f9e:	1f 93       	push	r17
    2fa0:	cf 93       	push	r28
    2fa2:	df 93       	push	r29
    2fa4:	ec 01       	movw	r28, r24
    2fa6:	16 2f       	mov	r17, r22
    2fa8:	67 2f       	mov	r22, r23
  RS_HIGH;
    2faa:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    2fac:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    2fae:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    2fb2:	61 2f       	mov	r22, r17
    2fb4:	ce 01       	movw	r24, r28
    2fb6:	0e 94 be 17 	call	0x2f7c	; 0x2f7c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2fba:	28 9a       	sbi	0x05, 0	; 5
}
    2fbc:	df 91       	pop	r29
    2fbe:	cf 91       	pop	r28
    2fc0:	1f 91       	pop	r17
    2fc2:	08 95       	ret

00002fc4 <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    2fc4:	cf 93       	push	r28
    2fc6:	df 93       	push	r29
    2fc8:	ec 01       	movw	r28, r24
  CS_HIGH;
    2fca:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    2fcc:	29 98       	cbi	0x05, 1	; 5
    2fce:	2f ef       	ldi	r18, 0xFF	; 255
    2fd0:	89 ef       	ldi	r24, 0xF9	; 249
    2fd2:	90 e0       	ldi	r25, 0x00	; 0
    2fd4:	21 50       	subi	r18, 0x01	; 1
    2fd6:	80 40       	sbci	r24, 0x00	; 0
    2fd8:	90 40       	sbci	r25, 0x00	; 0
    2fda:	e1 f7       	brne	.-8      	; 0x2fd4 <_ZN3TFT5beginEv+0x10>
    2fdc:	00 c0       	rjmp	.+0      	; 0x2fde <_ZN3TFT5beginEv+0x1a>
    2fde:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    2fe0:	29 9a       	sbi	0x05, 1	; 5
    2fe2:	2f ef       	ldi	r18, 0xFF	; 255
    2fe4:	89 e6       	ldi	r24, 0x69	; 105
    2fe6:	98 e1       	ldi	r25, 0x18	; 24
    2fe8:	21 50       	subi	r18, 0x01	; 1
    2fea:	80 40       	sbci	r24, 0x00	; 0
    2fec:	90 40       	sbci	r25, 0x00	; 0
    2fee:	e1 f7       	brne	.-8      	; 0x2fe8 <_ZN3TFT5beginEv+0x24>
    2ff0:	00 c0       	rjmp	.+0      	; 0x2ff2 <_ZN3TFT5beginEv+0x2e>
    2ff2:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    2ff4:	61 e0       	ldi	r22, 0x01	; 1
    2ff6:	ce 01       	movw	r24, r28
    2ff8:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
    2ffc:	2f ef       	ldi	r18, 0xFF	; 255
    2ffe:	89 ef       	ldi	r24, 0xF9	; 249
    3000:	90 e0       	ldi	r25, 0x00	; 0
    3002:	21 50       	subi	r18, 0x01	; 1
    3004:	80 40       	sbci	r24, 0x00	; 0
    3006:	90 40       	sbci	r25, 0x00	; 0
    3008:	e1 f7       	brne	.-8      	; 0x3002 <_ZN3TFT5beginEv+0x3e>
    300a:	00 c0       	rjmp	.+0      	; 0x300c <_ZN3TFT5beginEv+0x48>
    300c:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    300e:	60 ec       	ldi	r22, 0xC0	; 192
    3010:	ce 01       	movw	r24, r28
    3012:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    3016:	6b e2       	ldi	r22, 0x2B	; 43
    3018:	ce 01       	movw	r24, r28
    301a:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    301e:	66 e3       	ldi	r22, 0x36	; 54
    3020:	ce 01       	movw	r24, r28
    3022:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    3026:	68 e4       	ldi	r22, 0x48	; 72
    3028:	ce 01       	movw	r24, r28
    302a:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    302e:	6a e3       	ldi	r22, 0x3A	; 58
    3030:	ce 01       	movw	r24, r28
    3032:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    3036:	65 e5       	ldi	r22, 0x55	; 85
    3038:	ce 01       	movw	r24, r28
    303a:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    303e:	60 e2       	ldi	r22, 0x20	; 32
    3040:	ce 01       	movw	r24, r28
    3042:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    3046:	61 e1       	ldi	r22, 0x11	; 17
    3048:	ce 01       	movw	r24, r28
    304a:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
    304e:	2f ef       	ldi	r18, 0xFF	; 255
    3050:	8d ee       	ldi	r24, 0xED	; 237
    3052:	92 e0       	ldi	r25, 0x02	; 2
    3054:	21 50       	subi	r18, 0x01	; 1
    3056:	80 40       	sbci	r24, 0x00	; 0
    3058:	90 40       	sbci	r25, 0x00	; 0
    305a:	e1 f7       	brne	.-8      	; 0x3054 <_ZN3TFT5beginEv+0x90>
    305c:	00 c0       	rjmp	.+0      	; 0x305e <_ZN3TFT5beginEv+0x9a>
    305e:	00 00       	nop
  _delay_ms(60);

  exportCommand(0x29);  // Display ON (29h)
    3060:	69 e2       	ldi	r22, 0x29	; 41
    3062:	ce 01       	movw	r24, r28
    3064:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
}
    3068:	df 91       	pop	r29
    306a:	cf 91       	pop	r28
    306c:	08 95       	ret

0000306e <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    306e:	1f 93       	push	r17
    3070:	cf 93       	push	r28
    3072:	df 93       	push	r29
    3074:	ec 01       	movw	r28, r24
    3076:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    3078:	66 e3       	ldi	r22, 0x36	; 54
    307a:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>

  switch (rotation)
    307e:	11 30       	cpi	r17, 0x01	; 1
    3080:	89 f0       	breq	.+34     	; 0x30a4 <_ZN3TFT11setRotationEa+0x36>
    3082:	12 30       	cpi	r17, 0x02	; 2
    3084:	a1 f0       	breq	.+40     	; 0x30ae <_ZN3TFT11setRotationEa+0x40>
    3086:	11 11       	cpse	r17, r1
    3088:	16 c0       	rjmp	.+44     	; 0x30b6 <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    308a:	68 e2       	ldi	r22, 0x28	; 40
    308c:	ce 01       	movw	r24, r28
    308e:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>
    temp = m_Width;
    3092:	88 81       	ld	r24, Y
    3094:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    3096:	2a 81       	ldd	r18, Y+2	; 0x02
    3098:	3b 81       	ldd	r19, Y+3	; 0x03
    309a:	39 83       	std	Y+1, r19	; 0x01
    309c:	28 83       	st	Y, r18
    m_Height = temp;
    309e:	9b 83       	std	Y+3, r25	; 0x03
    30a0:	8a 83       	std	Y+2, r24	; 0x02
    break;
    30a2:	09 c0       	rjmp	.+18     	; 0x30b6 <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    30a4:	68 e4       	ldi	r22, 0x48	; 72
    30a6:	ce 01       	movw	r24, r28
    30a8:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>
    break;
    30ac:	04 c0       	rjmp	.+8      	; 0x30b6 <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    30ae:	68 e8       	ldi	r22, 0x88	; 136
    30b0:	ce 01       	movw	r24, r28
    30b2:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    30b6:	df 91       	pop	r29
    30b8:	cf 91       	pop	r28
    30ba:	1f 91       	pop	r17
    30bc:	08 95       	ret

000030be <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    30be:	af 92       	push	r10
    30c0:	bf 92       	push	r11
    30c2:	cf 92       	push	r12
    30c4:	df 92       	push	r13
    30c6:	ef 92       	push	r14
    30c8:	ff 92       	push	r15
    30ca:	0f 93       	push	r16
    30cc:	1f 93       	push	r17
    30ce:	cf 93       	push	r28
    30d0:	df 93       	push	r29
    30d2:	ec 01       	movw	r28, r24
    30d4:	5b 01       	movw	r10, r22
    30d6:	7a 01       	movw	r14, r20
    30d8:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    30da:	6a e2       	ldi	r22, 0x2A	; 42
    30dc:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    30e0:	b5 01       	movw	r22, r10
    30e2:	ce 01       	movw	r24, r28
    30e4:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    30e8:	b6 01       	movw	r22, r12
    30ea:	ce 01       	movw	r24, r28
    30ec:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    30f0:	6b e2       	ldi	r22, 0x2B	; 43
    30f2:	ce 01       	movw	r24, r28
    30f4:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    30f8:	b7 01       	movw	r22, r14
    30fa:	ce 01       	movw	r24, r28
    30fc:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    3100:	b8 01       	movw	r22, r16
    3102:	ce 01       	movw	r24, r28
    3104:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    3108:	6c e2       	ldi	r22, 0x2C	; 44
    310a:	ce 01       	movw	r24, r28
    310c:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <_ZN3SPI13exportCommandEh>
}
    3110:	df 91       	pop	r29
    3112:	cf 91       	pop	r28
    3114:	1f 91       	pop	r17
    3116:	0f 91       	pop	r16
    3118:	ff 90       	pop	r15
    311a:	ef 90       	pop	r14
    311c:	df 90       	pop	r13
    311e:	cf 90       	pop	r12
    3120:	bf 90       	pop	r11
    3122:	af 90       	pop	r10
    3124:	08 95       	ret

00003126 <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
                Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    3126:	cf 92       	push	r12
    3128:	df 92       	push	r13
    312a:	ef 92       	push	r14
    312c:	ff 92       	push	r15
    312e:	0f 93       	push	r16
    3130:	1f 93       	push	r17
    3132:	cf 93       	push	r28
    3134:	df 93       	push	r29
    3136:	7c 01       	movw	r14, r24
    3138:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    313a:	fc 01       	movw	r30, r24
    313c:	02 81       	ldd	r16, Z+2	; 0x02
    313e:	13 81       	ldd	r17, Z+3	; 0x03
    3140:	01 50       	subi	r16, 0x01	; 1
    3142:	11 09       	sbc	r17, r1
    3144:	20 81       	ld	r18, Z
    3146:	31 81       	ldd	r19, Z+1	; 0x01
    3148:	21 50       	subi	r18, 0x01	; 1
    314a:	31 09       	sbc	r19, r1
    314c:	40 e0       	ldi	r20, 0x00	; 0
    314e:	50 e0       	ldi	r21, 0x00	; 0
    3150:	60 e0       	ldi	r22, 0x00	; 0
    3152:	70 e0       	ldi	r23, 0x00	; 0
    3154:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    3158:	f7 01       	movw	r30, r14
    315a:	82 81       	ldd	r24, Z+2	; 0x02
    315c:	93 81       	ldd	r25, Z+3	; 0x03
    315e:	18 16       	cp	r1, r24
    3160:	19 06       	cpc	r1, r25
    3162:	ec f4       	brge	.+58     	; 0x319e <_ZN3TFT10fillScreenEj+0x78>
    3164:	00 e0       	ldi	r16, 0x00	; 0
    3166:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    3168:	f7 01       	movw	r30, r14
    316a:	80 81       	ld	r24, Z
    316c:	91 81       	ldd	r25, Z+1	; 0x01
    316e:	18 16       	cp	r1, r24
    3170:	19 06       	cpc	r1, r25
    3172:	6c f4       	brge	.+26     	; 0x318e <_ZN3TFT10fillScreenEj+0x68>
    3174:	c0 e0       	ldi	r28, 0x00	; 0
    3176:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    3178:	b6 01       	movw	r22, r12
    317a:	c7 01       	movw	r24, r14
    317c:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    3180:	21 96       	adiw	r28, 0x01	; 1
    3182:	f7 01       	movw	r30, r14
    3184:	80 81       	ld	r24, Z
    3186:	91 81       	ldd	r25, Z+1	; 0x01
    3188:	c8 17       	cp	r28, r24
    318a:	d9 07       	cpc	r29, r25
    318c:	ac f3       	brlt	.-22     	; 0x3178 <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    318e:	0f 5f       	subi	r16, 0xFF	; 255
    3190:	1f 4f       	sbci	r17, 0xFF	; 255
    3192:	f7 01       	movw	r30, r14
    3194:	82 81       	ldd	r24, Z+2	; 0x02
    3196:	93 81       	ldd	r25, Z+3	; 0x03
    3198:	08 17       	cp	r16, r24
    319a:	19 07       	cpc	r17, r25
    319c:	2c f3       	brlt	.-54     	; 0x3168 <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    319e:	df 91       	pop	r29
    31a0:	cf 91       	pop	r28
    31a2:	1f 91       	pop	r17
    31a4:	0f 91       	pop	r16
    31a6:	ff 90       	pop	r15
    31a8:	ef 90       	pop	r14
    31aa:	df 90       	pop	r13
    31ac:	cf 90       	pop	r12
    31ae:	08 95       	ret

000031b0 <_ZN3TFT8fillRectEiiiij>:
/*----------------------------------------//
                Fill Rect
//----------------------------------------*/

void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
    31b0:	8f 92       	push	r8
    31b2:	9f 92       	push	r9
    31b4:	af 92       	push	r10
    31b6:	bf 92       	push	r11
    31b8:	cf 92       	push	r12
    31ba:	df 92       	push	r13
    31bc:	ef 92       	push	r14
    31be:	ff 92       	push	r15
    31c0:	0f 93       	push	r16
    31c2:	1f 93       	push	r17
    31c4:	cf 93       	push	r28
    31c6:	df 93       	push	r29
    31c8:	6c 01       	movw	r12, r24
    31ca:	49 01       	movw	r8, r18
    31cc:	58 01       	movw	r10, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    31ce:	8a 01       	movw	r16, r20
    31d0:	0a 0d       	add	r16, r10
    31d2:	1b 1d       	adc	r17, r11
    31d4:	01 50       	subi	r16, 0x01	; 1
    31d6:	11 09       	sbc	r17, r1
    31d8:	9b 01       	movw	r18, r22
    31da:	28 0d       	add	r18, r8
    31dc:	39 1d       	adc	r19, r9
    31de:	21 50       	subi	r18, 0x01	; 1
    31e0:	31 09       	sbc	r19, r1
    31e2:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>

  for (int yPos=height; yPos>0; yPos--)
    31e6:	1a 14       	cp	r1, r10
    31e8:	1b 04       	cpc	r1, r11
    31ea:	74 f4       	brge	.+28     	; 0x3208 <_ZN3TFT8fillRectEiiiij+0x58>
  {
    for (int xPos=width; xPos>0; xPos--)
    31ec:	18 14       	cp	r1, r8
    31ee:	19 04       	cpc	r1, r9
    31f0:	3c f4       	brge	.+14     	; 0x3200 <_ZN3TFT8fillRectEiiiij+0x50>
    31f2:	e4 01       	movw	r28, r8
    {
      exportLongData(colorValue);
    31f4:	b7 01       	movw	r22, r14
    31f6:	c6 01       	movw	r24, r12
    31f8:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
  {
    for (int xPos=width; xPos>0; xPos--)
    31fc:	21 97       	sbiw	r28, 0x01	; 1
    31fe:	d1 f7       	brne	.-12     	; 0x31f4 <_ZN3TFT8fillRectEiiiij+0x44>
void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
    3200:	81 e0       	ldi	r24, 0x01	; 1
    3202:	a8 1a       	sub	r10, r24
    3204:	b1 08       	sbc	r11, r1
    3206:	91 f7       	brne	.-28     	; 0x31ec <_ZN3TFT8fillRectEiiiij+0x3c>
    {
      exportLongData(colorValue);
    }
  }

}
    3208:	df 91       	pop	r29
    320a:	cf 91       	pop	r28
    320c:	1f 91       	pop	r17
    320e:	0f 91       	pop	r16
    3210:	ff 90       	pop	r15
    3212:	ef 90       	pop	r14
    3214:	df 90       	pop	r13
    3216:	cf 90       	pop	r12
    3218:	bf 90       	pop	r11
    321a:	af 90       	pop	r10
    321c:	9f 90       	pop	r9
    321e:	8f 90       	pop	r8
    3220:	08 95       	ret

00003222 <_ZN3TFT10drawBitmapEiiiiPKhajjjj>:
                Draw Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
  int8_t multiple, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    3222:	2f 92       	push	r2
    3224:	3f 92       	push	r3
    3226:	4f 92       	push	r4
    3228:	5f 92       	push	r5
    322a:	6f 92       	push	r6
    322c:	7f 92       	push	r7
    322e:	8f 92       	push	r8
    3230:	9f 92       	push	r9
    3232:	af 92       	push	r10
    3234:	bf 92       	push	r11
    3236:	cf 92       	push	r12
    3238:	df 92       	push	r13
    323a:	ef 92       	push	r14
    323c:	ff 92       	push	r15
    323e:	0f 93       	push	r16
    3240:	1f 93       	push	r17
    3242:	cf 93       	push	r28
    3244:	df 93       	push	r29
    3246:	cd b7       	in	r28, 0x3d	; 61
    3248:	de b7       	in	r29, 0x3e	; 62
    324a:	62 97       	sbiw	r28, 0x12	; 18
    324c:	0f b6       	in	r0, 0x3f	; 63
    324e:	f8 94       	cli
    3250:	de bf       	out	0x3e, r29	; 62
    3252:	0f be       	out	0x3f, r0	; 63
    3254:	cd bf       	out	0x3d, r28	; 61
    3256:	3c 01       	movw	r6, r24
    3258:	38 8b       	std	Y+16, r19	; 0x10
    325a:	2f 87       	std	Y+15, r18	; 0x0f
    325c:	18 01       	movw	r2, r16
    325e:	fc 86       	std	Y+12, r15	; 0x0c
    3260:	eb 86       	std	Y+11, r14	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    3262:	8a 01       	movw	r16, r20
    3264:	02 0d       	add	r16, r2
    3266:	13 1d       	adc	r17, r3
    3268:	01 50       	subi	r16, 0x01	; 1
    326a:	11 09       	sbc	r17, r1
    326c:	26 0f       	add	r18, r22
    326e:	37 1f       	adc	r19, r23
    3270:	21 50       	subi	r18, 0x01	; 1
    3272:	31 09       	sbc	r19, r1
    3274:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / multiple); i++)
    3278:	4c 2c       	mov	r4, r12
    327a:	cc 0c       	add	r12, r12
    327c:	55 08       	sbc	r5, r5
    327e:	c1 01       	movw	r24, r2
    3280:	b2 01       	movw	r22, r4
    3282:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    3286:	7e 87       	std	Y+14, r23	; 0x0e
    3288:	6d 87       	std	Y+13, r22	; 0x0d
    328a:	16 16       	cp	r1, r22
    328c:	17 06       	cpc	r1, r23
    328e:	0c f0       	brlt	.+2      	; 0x3292 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x70>
    3290:	8e c0       	rjmp	.+284    	; 0x33ae <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x18c>
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3292:	92 01       	movw	r18, r4
    3294:	22 0f       	add	r18, r18
    3296:	33 1f       	adc	r19, r19
    3298:	22 0f       	add	r18, r18
    329a:	33 1f       	adc	r19, r19
    329c:	3a 8b       	std	Y+18, r19	; 0x12
    329e:	29 8b       	std	Y+17, r18	; 0x11
    32a0:	1e 82       	std	Y+6, r1	; 0x06
    32a2:	1d 82       	std	Y+5, r1	; 0x05
    32a4:	9a 82       	std	Y+2, r9	; 0x02
    32a6:	89 82       	std	Y+1, r8	; 0x01

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    32a8:	14 14       	cp	r1, r4
    32aa:	15 04       	cpc	r1, r5
    32ac:	0c f0       	brlt	.+2      	; 0x32b0 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x8e>
    32ae:	73 c0       	rjmp	.+230    	; 0x3396 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x174>
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    32b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    32b2:	98 89       	ldd	r25, Y+16	; 0x10
    32b4:	69 89       	ldd	r22, Y+17	; 0x11
    32b6:	7a 89       	ldd	r23, Y+18	; 0x12
    32b8:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    32bc:	7a 87       	std	Y+10, r23	; 0x0a
    32be:	69 87       	std	Y+9, r22	; 0x09
      {

        data = pgm_read_byte(&bitmap[i * (width / (4 * multiple)) + k]);
    32c0:	ed 81       	ldd	r30, Y+5	; 0x05
    32c2:	fe 81       	ldd	r31, Y+6	; 0x06
    32c4:	6e 9f       	mul	r22, r30
    32c6:	c0 01       	movw	r24, r0
    32c8:	6f 9f       	mul	r22, r31
    32ca:	90 0d       	add	r25, r0
    32cc:	7e 9f       	mul	r23, r30
    32ce:	90 0d       	add	r25, r0
    32d0:	11 24       	eor	r1, r1
    32d2:	98 87       	std	Y+8, r25	; 0x08
    32d4:	8f 83       	std	Y+7, r24	; 0x07
    32d6:	1c 82       	std	Y+4, r1	; 0x04
    32d8:	1b 82       	std	Y+3, r1	; 0x03
    32da:	1b 01       	movw	r2, r22
    32dc:	28 0e       	add	r2, r24
    32de:	39 1e       	adc	r3, r25
    32e0:	2b 85       	ldd	r18, Y+11	; 0x0b
    32e2:	3c 85       	ldd	r19, Y+12	; 0x0c
    32e4:	22 0e       	add	r2, r18
    32e6:	33 1e       	adc	r3, r19

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    32e8:	89 85       	ldd	r24, Y+9	; 0x09
    32ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    32ec:	18 16       	cp	r1, r24
    32ee:	19 06       	cpc	r1, r25
    32f0:	0c f0       	brlt	.+2      	; 0x32f4 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0xd2>
    32f2:	48 c0       	rjmp	.+144    	; 0x3384 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x162>
    32f4:	eb 84       	ldd	r14, Y+11	; 0x0b
    32f6:	fc 84       	ldd	r15, Y+12	; 0x0c
    32f8:	ef 81       	ldd	r30, Y+7	; 0x07
    32fa:	f8 85       	ldd	r31, Y+8	; 0x08
    32fc:	ee 0e       	add	r14, r30
    32fe:	ff 1e       	adc	r15, r31
      {

        data = pgm_read_byte(&bitmap[i * (width / (4 * multiple)) + k]);
    3300:	f7 01       	movw	r30, r14
    3302:	94 90       	lpm	r9, Z
    3304:	68 94       	set
    3306:	cc 24       	eor	r12, r12
    3308:	c2 f8       	bld	r12, 2
    330a:	d1 2c       	mov	r13, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    330c:	89 2c       	mov	r8, r9
    330e:	86 94       	lsr	r8
    3310:	86 94       	lsr	r8
    3312:	86 94       	lsr	r8
    3314:	86 94       	lsr	r8
    3316:	86 94       	lsr	r8
    3318:	86 94       	lsr	r8
    331a:	00 e0       	ldi	r16, 0x00	; 0
    331c:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<multiple; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    331e:	81 10       	cpse	r8, r1
    3320:	05 c0       	rjmp	.+10     	; 0x332c <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x10a>
            {
              exportLongData(color0Bit);
    3322:	b5 01       	movw	r22, r10
    3324:	c3 01       	movw	r24, r6
    3326:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    332a:	1a c0       	rjmp	.+52     	; 0x3360 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x13e>
            }

            else if (temp == 0x01)  //1Pixel = 01
    332c:	f1 e0       	ldi	r31, 0x01	; 1
    332e:	8f 12       	cpse	r8, r31
    3330:	06 c0       	rjmp	.+12     	; 0x333e <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x11c>
            {
              exportLongData(color1Bit);
    3332:	69 81       	ldd	r22, Y+1	; 0x01
    3334:	7a 81       	ldd	r23, Y+2	; 0x02
    3336:	c3 01       	movw	r24, r6
    3338:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    333c:	11 c0       	rjmp	.+34     	; 0x3360 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x13e>
            }

            else if (temp == 0x02)  //1Pixel = 10
    333e:	22 e0       	ldi	r18, 0x02	; 2
    3340:	82 12       	cpse	r8, r18
    3342:	06 c0       	rjmp	.+12     	; 0x3350 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x12e>
            {
              exportLongData(color2Bit);
    3344:	6f a1       	ldd	r22, Y+39	; 0x27
    3346:	78 a5       	ldd	r23, Y+40	; 0x28
    3348:	c3 01       	movw	r24, r6
    334a:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    334e:	08 c0       	rjmp	.+16     	; 0x3360 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x13e>
            }

            else if (temp == 0x03)  //1Pixel = 11
    3350:	33 e0       	ldi	r19, 0x03	; 3
    3352:	83 12       	cpse	r8, r19
    3354:	05 c0       	rjmp	.+10     	; 0x3360 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x13e>
            {
              exportLongData(color3Bit);
    3356:	69 a5       	ldd	r22, Y+41	; 0x29
    3358:	7a a5       	ldd	r23, Y+42	; 0x2a
    335a:	c3 01       	movw	r24, r6
    335c:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<multiple; m++)
    3360:	0f 5f       	subi	r16, 0xFF	; 255
    3362:	1f 4f       	sbci	r17, 0xFF	; 255
    3364:	04 15       	cp	r16, r4
    3366:	15 05       	cpc	r17, r5
    3368:	d1 f6       	brne	.-76     	; 0x331e <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0xfc>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    336a:	99 0c       	add	r9, r9
    336c:	99 0c       	add	r9, r9
    336e:	81 e0       	ldi	r24, 0x01	; 1
    3370:	c8 1a       	sub	r12, r24
    3372:	d1 08       	sbc	r13, r1
      for (int k=0; k<(width / (4 * multiple)); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / (4 * multiple)) + k]);

        for (int l=0; l<4; l++)
    3374:	59 f6       	brne	.-106    	; 0x330c <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0xea>
    3376:	9f ef       	ldi	r25, 0xFF	; 255
    3378:	e9 1a       	sub	r14, r25
    337a:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    337c:	2e 14       	cp	r2, r14
    337e:	3f 04       	cpc	r3, r15
    3380:	09 f0       	breq	.+2      	; 0x3384 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x162>
    3382:	be cf       	rjmp	.-132    	; 0x3300 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0xde>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    3384:	eb 81       	ldd	r30, Y+3	; 0x03
    3386:	fc 81       	ldd	r31, Y+4	; 0x04
    3388:	31 96       	adiw	r30, 0x01	; 1
    338a:	fc 83       	std	Y+4, r31	; 0x04
    338c:	eb 83       	std	Y+3, r30	; 0x03
    338e:	e4 15       	cp	r30, r4
    3390:	f5 05       	cpc	r31, r5
    3392:	09 f0       	breq	.+2      	; 0x3396 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x174>
    3394:	a9 cf       	rjmp	.-174    	; 0x32e8 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0xc6>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
    3396:	2d 81       	ldd	r18, Y+5	; 0x05
    3398:	3e 81       	ldd	r19, Y+6	; 0x06
    339a:	2f 5f       	subi	r18, 0xFF	; 255
    339c:	3f 4f       	sbci	r19, 0xFF	; 255
    339e:	3e 83       	std	Y+6, r19	; 0x06
    33a0:	2d 83       	std	Y+5, r18	; 0x05
    33a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    33a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    33a6:	28 17       	cp	r18, r24
    33a8:	39 07       	cpc	r19, r25
    33aa:	09 f0       	breq	.+2      	; 0x33ae <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x18c>
    33ac:	7d cf       	rjmp	.-262    	; 0x32a8 <_ZN3TFT10drawBitmapEiiiiPKhajjjj+0x86>

      }
    }
  }

}
    33ae:	62 96       	adiw	r28, 0x12	; 18
    33b0:	0f b6       	in	r0, 0x3f	; 63
    33b2:	f8 94       	cli
    33b4:	de bf       	out	0x3e, r29	; 62
    33b6:	0f be       	out	0x3f, r0	; 63
    33b8:	cd bf       	out	0x3d, r28	; 61
    33ba:	df 91       	pop	r29
    33bc:	cf 91       	pop	r28
    33be:	1f 91       	pop	r17
    33c0:	0f 91       	pop	r16
    33c2:	ff 90       	pop	r15
    33c4:	ef 90       	pop	r14
    33c6:	df 90       	pop	r13
    33c8:	cf 90       	pop	r12
    33ca:	bf 90       	pop	r11
    33cc:	af 90       	pop	r10
    33ce:	9f 90       	pop	r9
    33d0:	8f 90       	pop	r8
    33d2:	7f 90       	pop	r7
    33d4:	6f 90       	pop	r6
    33d6:	5f 90       	pop	r5
    33d8:	4f 90       	pop	r4
    33da:	3f 90       	pop	r3
    33dc:	2f 90       	pop	r2
    33de:	08 95       	ret

000033e0 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj>:
            Draw 100bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[100], int8_t tileSelection,
  int8_t multiple, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    33e0:	2f 92       	push	r2
    33e2:	3f 92       	push	r3
    33e4:	4f 92       	push	r4
    33e6:	5f 92       	push	r5
    33e8:	6f 92       	push	r6
    33ea:	7f 92       	push	r7
    33ec:	8f 92       	push	r8
    33ee:	9f 92       	push	r9
    33f0:	af 92       	push	r10
    33f2:	bf 92       	push	r11
    33f4:	cf 92       	push	r12
    33f6:	df 92       	push	r13
    33f8:	ef 92       	push	r14
    33fa:	ff 92       	push	r15
    33fc:	0f 93       	push	r16
    33fe:	1f 93       	push	r17
    3400:	cf 93       	push	r28
    3402:	df 93       	push	r29
    3404:	cd b7       	in	r28, 0x3d	; 61
    3406:	de b7       	in	r29, 0x3e	; 62
    3408:	60 97       	sbiw	r28, 0x10	; 16
    340a:	0f b6       	in	r0, 0x3f	; 63
    340c:	f8 94       	cli
    340e:	de bf       	out	0x3e, r29	; 62
    3410:	0f be       	out	0x3f, r0	; 63
    3412:	cd bf       	out	0x3d, r28	; 61
    3414:	3c 01       	movw	r6, r24
    3416:	3e 87       	std	Y+14, r19	; 0x0e
    3418:	2d 87       	std	Y+13, r18	; 0x0d
    341a:	18 01       	movw	r2, r16

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    341c:	8a 01       	movw	r16, r20
    341e:	02 0d       	add	r16, r2
    3420:	13 1d       	adc	r17, r3
    3422:	01 50       	subi	r16, 0x01	; 1
    3424:	11 09       	sbc	r17, r1
    3426:	26 0f       	add	r18, r22
    3428:	37 1f       	adc	r19, r23
    342a:	21 50       	subi	r18, 0x01	; 1
    342c:	31 09       	sbc	r19, r1
    342e:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / multiple); i++)
    3432:	4a 2c       	mov	r4, r10
    3434:	aa 0c       	add	r10, r10
    3436:	55 08       	sbc	r5, r5
    3438:	c1 01       	movw	r24, r2
    343a:	b2 01       	movw	r22, r4
    343c:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    3440:	7c 87       	std	Y+12, r23	; 0x0c
    3442:	6b 87       	std	Y+11, r22	; 0x0b
    3444:	16 16       	cp	r1, r22
    3446:	17 06       	cpc	r1, r23
    3448:	0c f0       	brlt	.+2      	; 0x344c <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x6c>
    344a:	95 c0       	rjmp	.+298    	; 0x3576 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x196>
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    344c:	92 01       	movw	r18, r4
    344e:	22 0f       	add	r18, r18
    3450:	33 1f       	adc	r19, r19
    3452:	22 0f       	add	r18, r18
    3454:	33 1f       	adc	r19, r19
    3456:	38 8b       	std	Y+16, r19	; 0x10
    3458:	2f 87       	std	Y+15, r18	; 0x0f
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    345a:	c7 01       	movw	r24, r14
    345c:	ec 2d       	mov	r30, r12
    345e:	f4 e6       	ldi	r31, 0x64	; 100
    3460:	ef 02       	muls	r30, r31
    3462:	80 0d       	add	r24, r0
    3464:	91 1d       	adc	r25, r1
    3466:	11 24       	eor	r1, r1
    3468:	9e 83       	std	Y+6, r25	; 0x06
    346a:	8d 83       	std	Y+5, r24	; 0x05
    346c:	1c 82       	std	Y+4, r1	; 0x04
    346e:	1b 82       	std	Y+3, r1	; 0x03

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    3470:	14 14       	cp	r1, r4
    3472:	15 04       	cpc	r1, r5
    3474:	0c f0       	brlt	.+2      	; 0x3478 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x98>
    3476:	73 c0       	rjmp	.+230    	; 0x355e <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x17e>
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3478:	8d 85       	ldd	r24, Y+13	; 0x0d
    347a:	9e 85       	ldd	r25, Y+14	; 0x0e
    347c:	6f 85       	ldd	r22, Y+15	; 0x0f
    347e:	78 89       	ldd	r23, Y+16	; 0x10
    3480:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    3484:	7a 87       	std	Y+10, r23	; 0x0a
    3486:	69 87       	std	Y+9, r22	; 0x09
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    3488:	8b 81       	ldd	r24, Y+3	; 0x03
    348a:	9c 81       	ldd	r25, Y+4	; 0x04
    348c:	68 9f       	mul	r22, r24
    348e:	90 01       	movw	r18, r0
    3490:	69 9f       	mul	r22, r25
    3492:	30 0d       	add	r19, r0
    3494:	78 9f       	mul	r23, r24
    3496:	30 0d       	add	r19, r0
    3498:	11 24       	eor	r1, r1
    349a:	38 87       	std	Y+8, r19	; 0x08
    349c:	2f 83       	std	Y+7, r18	; 0x07
    349e:	1a 82       	std	Y+2, r1	; 0x02
    34a0:	19 82       	std	Y+1, r1	; 0x01
    34a2:	5b 01       	movw	r10, r22
    34a4:	a2 0e       	add	r10, r18
    34a6:	b3 1e       	adc	r11, r19
    34a8:	ed 81       	ldd	r30, Y+5	; 0x05
    34aa:	fe 81       	ldd	r31, Y+6	; 0x06
    34ac:	ae 0e       	add	r10, r30
    34ae:	bf 1e       	adc	r11, r31

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    34b0:	29 85       	ldd	r18, Y+9	; 0x09
    34b2:	3a 85       	ldd	r19, Y+10	; 0x0a
    34b4:	12 16       	cp	r1, r18
    34b6:	13 06       	cpc	r1, r19
    34b8:	0c f0       	brlt	.+2      	; 0x34bc <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0xdc>
    34ba:	48 c0       	rjmp	.+144    	; 0x354c <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x16c>
    34bc:	ed 80       	ldd	r14, Y+5	; 0x05
    34be:	fe 80       	ldd	r15, Y+6	; 0x06
    34c0:	8f 81       	ldd	r24, Y+7	; 0x07
    34c2:	98 85       	ldd	r25, Y+8	; 0x08
    34c4:	e8 0e       	add	r14, r24
    34c6:	f9 1e       	adc	r15, r25
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    34c8:	f7 01       	movw	r30, r14
    34ca:	34 90       	lpm	r3, Z
    34cc:	68 94       	set
    34ce:	cc 24       	eor	r12, r12
    34d0:	c2 f8       	bld	r12, 2
    34d2:	d1 2c       	mov	r13, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    34d4:	23 2c       	mov	r2, r3
    34d6:	26 94       	lsr	r2
    34d8:	26 94       	lsr	r2
    34da:	26 94       	lsr	r2
    34dc:	26 94       	lsr	r2
    34de:	26 94       	lsr	r2
    34e0:	26 94       	lsr	r2
    34e2:	00 e0       	ldi	r16, 0x00	; 0
    34e4:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<multiple; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    34e6:	21 10       	cpse	r2, r1
    34e8:	05 c0       	rjmp	.+10     	; 0x34f4 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x114>
            {
              exportLongData(color0Bit);
    34ea:	b4 01       	movw	r22, r8
    34ec:	c3 01       	movw	r24, r6
    34ee:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    34f2:	1a c0       	rjmp	.+52     	; 0x3528 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x148>
            }

            else if (temp == 0x01)  //1Pixel = 01
    34f4:	f1 e0       	ldi	r31, 0x01	; 1
    34f6:	2f 12       	cpse	r2, r31
    34f8:	06 c0       	rjmp	.+12     	; 0x3506 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x126>
            {
              exportLongData(color1Bit);
    34fa:	6d a1       	ldd	r22, Y+37	; 0x25
    34fc:	7e a1       	ldd	r23, Y+38	; 0x26
    34fe:	c3 01       	movw	r24, r6
    3500:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    3504:	11 c0       	rjmp	.+34     	; 0x3528 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x148>
            }

            else if (temp == 0x02)  //1Pixel = 10
    3506:	22 e0       	ldi	r18, 0x02	; 2
    3508:	22 12       	cpse	r2, r18
    350a:	06 c0       	rjmp	.+12     	; 0x3518 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x138>
            {
              exportLongData(color2Bit);
    350c:	6f a1       	ldd	r22, Y+39	; 0x27
    350e:	78 a5       	ldd	r23, Y+40	; 0x28
    3510:	c3 01       	movw	r24, r6
    3512:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    3516:	08 c0       	rjmp	.+16     	; 0x3528 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x148>
            }

            else if (temp == 0x03)  //1Pixel = 11
    3518:	33 e0       	ldi	r19, 0x03	; 3
    351a:	23 12       	cpse	r2, r19
    351c:	05 c0       	rjmp	.+10     	; 0x3528 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x148>
            {
              exportLongData(color3Bit);
    351e:	69 a5       	ldd	r22, Y+41	; 0x29
    3520:	7a a5       	ldd	r23, Y+42	; 0x2a
    3522:	c3 01       	movw	r24, r6
    3524:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<multiple; m++)
    3528:	0f 5f       	subi	r16, 0xFF	; 255
    352a:	1f 4f       	sbci	r17, 0xFF	; 255
    352c:	04 15       	cp	r16, r4
    352e:	15 05       	cpc	r17, r5
    3530:	d1 f6       	brne	.-76     	; 0x34e6 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x106>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    3532:	33 0c       	add	r3, r3
    3534:	33 0c       	add	r3, r3
    3536:	81 e0       	ldi	r24, 0x01	; 1
    3538:	c8 1a       	sub	r12, r24
    353a:	d1 08       	sbc	r13, r1
      for (int k=0; k<(width / (4 * multiple)); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);

        for (int l=0; l<4; l++)
    353c:	59 f6       	brne	.-106    	; 0x34d4 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0xf4>
    353e:	9f ef       	ldi	r25, 0xFF	; 255
    3540:	e9 1a       	sub	r14, r25
    3542:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3544:	ae 14       	cp	r10, r14
    3546:	bf 04       	cpc	r11, r15
    3548:	09 f0       	breq	.+2      	; 0x354c <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x16c>
    354a:	be cf       	rjmp	.-132    	; 0x34c8 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0xe8>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    354c:	e9 81       	ldd	r30, Y+1	; 0x01
    354e:	fa 81       	ldd	r31, Y+2	; 0x02
    3550:	31 96       	adiw	r30, 0x01	; 1
    3552:	fa 83       	std	Y+2, r31	; 0x02
    3554:	e9 83       	std	Y+1, r30	; 0x01
    3556:	e4 15       	cp	r30, r4
    3558:	f5 05       	cpc	r31, r5
    355a:	09 f0       	breq	.+2      	; 0x355e <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x17e>
    355c:	a9 cf       	rjmp	.-174    	; 0x34b0 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0xd0>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
    355e:	2b 81       	ldd	r18, Y+3	; 0x03
    3560:	3c 81       	ldd	r19, Y+4	; 0x04
    3562:	2f 5f       	subi	r18, 0xFF	; 255
    3564:	3f 4f       	sbci	r19, 0xFF	; 255
    3566:	3c 83       	std	Y+4, r19	; 0x04
    3568:	2b 83       	std	Y+3, r18	; 0x03
    356a:	8b 85       	ldd	r24, Y+11	; 0x0b
    356c:	9c 85       	ldd	r25, Y+12	; 0x0c
    356e:	28 17       	cp	r18, r24
    3570:	39 07       	cpc	r19, r25
    3572:	09 f0       	breq	.+2      	; 0x3576 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x196>
    3574:	7d cf       	rjmp	.-262    	; 0x3470 <_ZN3TFT10drawBitmapEiiiiPA100_Khaajjjj+0x90>

      }
    }
  }

}
    3576:	60 96       	adiw	r28, 0x10	; 16
    3578:	0f b6       	in	r0, 0x3f	; 63
    357a:	f8 94       	cli
    357c:	de bf       	out	0x3e, r29	; 62
    357e:	0f be       	out	0x3f, r0	; 63
    3580:	cd bf       	out	0x3d, r28	; 61
    3582:	df 91       	pop	r29
    3584:	cf 91       	pop	r28
    3586:	1f 91       	pop	r17
    3588:	0f 91       	pop	r16
    358a:	ff 90       	pop	r15
    358c:	ef 90       	pop	r14
    358e:	df 90       	pop	r13
    3590:	cf 90       	pop	r12
    3592:	bf 90       	pop	r11
    3594:	af 90       	pop	r10
    3596:	9f 90       	pop	r9
    3598:	8f 90       	pop	r8
    359a:	7f 90       	pop	r7
    359c:	6f 90       	pop	r6
    359e:	5f 90       	pop	r5
    35a0:	4f 90       	pop	r4
    35a2:	3f 90       	pop	r3
    35a4:	2f 90       	pop	r2
    35a6:	08 95       	ret

000035a8 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj>:
            Draw 160bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap160(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[160], int8_t tileSelection,
  int8_t multiple, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    35a8:	2f 92       	push	r2
    35aa:	3f 92       	push	r3
    35ac:	4f 92       	push	r4
    35ae:	5f 92       	push	r5
    35b0:	6f 92       	push	r6
    35b2:	7f 92       	push	r7
    35b4:	8f 92       	push	r8
    35b6:	9f 92       	push	r9
    35b8:	af 92       	push	r10
    35ba:	bf 92       	push	r11
    35bc:	cf 92       	push	r12
    35be:	df 92       	push	r13
    35c0:	ef 92       	push	r14
    35c2:	ff 92       	push	r15
    35c4:	0f 93       	push	r16
    35c6:	1f 93       	push	r17
    35c8:	cf 93       	push	r28
    35ca:	df 93       	push	r29
    35cc:	cd b7       	in	r28, 0x3d	; 61
    35ce:	de b7       	in	r29, 0x3e	; 62
    35d0:	60 97       	sbiw	r28, 0x10	; 16
    35d2:	0f b6       	in	r0, 0x3f	; 63
    35d4:	f8 94       	cli
    35d6:	de bf       	out	0x3e, r29	; 62
    35d8:	0f be       	out	0x3f, r0	; 63
    35da:	cd bf       	out	0x3d, r28	; 61
    35dc:	3c 01       	movw	r6, r24
    35de:	3e 87       	std	Y+14, r19	; 0x0e
    35e0:	2d 87       	std	Y+13, r18	; 0x0d
    35e2:	18 01       	movw	r2, r16

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    35e4:	8a 01       	movw	r16, r20
    35e6:	02 0d       	add	r16, r2
    35e8:	13 1d       	adc	r17, r3
    35ea:	01 50       	subi	r16, 0x01	; 1
    35ec:	11 09       	sbc	r17, r1
    35ee:	26 0f       	add	r18, r22
    35f0:	37 1f       	adc	r19, r23
    35f2:	21 50       	subi	r18, 0x01	; 1
    35f4:	31 09       	sbc	r19, r1
    35f6:	0e 94 5f 18 	call	0x30be	; 0x30be <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / multiple); i++)
    35fa:	4a 2c       	mov	r4, r10
    35fc:	aa 0c       	add	r10, r10
    35fe:	55 08       	sbc	r5, r5
    3600:	c1 01       	movw	r24, r2
    3602:	b2 01       	movw	r22, r4
    3604:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    3608:	7c 87       	std	Y+12, r23	; 0x0c
    360a:	6b 87       	std	Y+11, r22	; 0x0b
    360c:	16 16       	cp	r1, r22
    360e:	17 06       	cpc	r1, r23
    3610:	0c f0       	brlt	.+2      	; 0x3614 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x6c>
    3612:	95 c0       	rjmp	.+298    	; 0x373e <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x196>
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3614:	92 01       	movw	r18, r4
    3616:	22 0f       	add	r18, r18
    3618:	33 1f       	adc	r19, r19
    361a:	22 0f       	add	r18, r18
    361c:	33 1f       	adc	r19, r19
    361e:	38 8b       	std	Y+16, r19	; 0x10
    3620:	2f 87       	std	Y+15, r18	; 0x0f
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    3622:	c7 01       	movw	r24, r14
    3624:	2c 2d       	mov	r18, r12
    3626:	30 ea       	ldi	r19, 0xA0	; 160
    3628:	23 03       	mulsu	r18, r19
    362a:	80 0d       	add	r24, r0
    362c:	91 1d       	adc	r25, r1
    362e:	11 24       	eor	r1, r1
    3630:	9e 83       	std	Y+6, r25	; 0x06
    3632:	8d 83       	std	Y+5, r24	; 0x05
    3634:	1c 82       	std	Y+4, r1	; 0x04
    3636:	1b 82       	std	Y+3, r1	; 0x03

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    3638:	14 14       	cp	r1, r4
    363a:	15 04       	cpc	r1, r5
    363c:	0c f0       	brlt	.+2      	; 0x3640 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x98>
    363e:	73 c0       	rjmp	.+230    	; 0x3726 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x17e>
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3640:	8d 85       	ldd	r24, Y+13	; 0x0d
    3642:	9e 85       	ldd	r25, Y+14	; 0x0e
    3644:	6f 85       	ldd	r22, Y+15	; 0x0f
    3646:	78 89       	ldd	r23, Y+16	; 0x10
    3648:	0e 94 b8 1b 	call	0x3770	; 0x3770 <__divmodhi4>
    364c:	7a 87       	std	Y+10, r23	; 0x0a
    364e:	69 87       	std	Y+9, r22	; 0x09
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    3650:	eb 81       	ldd	r30, Y+3	; 0x03
    3652:	fc 81       	ldd	r31, Y+4	; 0x04
    3654:	6e 9f       	mul	r22, r30
    3656:	c0 01       	movw	r24, r0
    3658:	6f 9f       	mul	r22, r31
    365a:	90 0d       	add	r25, r0
    365c:	7e 9f       	mul	r23, r30
    365e:	90 0d       	add	r25, r0
    3660:	11 24       	eor	r1, r1
    3662:	98 87       	std	Y+8, r25	; 0x08
    3664:	8f 83       	std	Y+7, r24	; 0x07
    3666:	1a 82       	std	Y+2, r1	; 0x02
    3668:	19 82       	std	Y+1, r1	; 0x01
    366a:	5b 01       	movw	r10, r22
    366c:	a8 0e       	add	r10, r24
    366e:	b9 1e       	adc	r11, r25
    3670:	2d 81       	ldd	r18, Y+5	; 0x05
    3672:	3e 81       	ldd	r19, Y+6	; 0x06
    3674:	a2 0e       	add	r10, r18
    3676:	b3 1e       	adc	r11, r19

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    3678:	89 85       	ldd	r24, Y+9	; 0x09
    367a:	9a 85       	ldd	r25, Y+10	; 0x0a
    367c:	18 16       	cp	r1, r24
    367e:	19 06       	cpc	r1, r25
    3680:	0c f0       	brlt	.+2      	; 0x3684 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0xdc>
    3682:	48 c0       	rjmp	.+144    	; 0x3714 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x16c>
    3684:	ed 80       	ldd	r14, Y+5	; 0x05
    3686:	fe 80       	ldd	r15, Y+6	; 0x06
    3688:	ef 81       	ldd	r30, Y+7	; 0x07
    368a:	f8 85       	ldd	r31, Y+8	; 0x08
    368c:	ee 0e       	add	r14, r30
    368e:	ff 1e       	adc	r15, r31
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);
    3690:	f7 01       	movw	r30, r14
    3692:	34 90       	lpm	r3, Z
    3694:	68 94       	set
    3696:	cc 24       	eor	r12, r12
    3698:	c2 f8       	bld	r12, 2
    369a:	d1 2c       	mov	r13, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    369c:	23 2c       	mov	r2, r3
    369e:	26 94       	lsr	r2
    36a0:	26 94       	lsr	r2
    36a2:	26 94       	lsr	r2
    36a4:	26 94       	lsr	r2
    36a6:	26 94       	lsr	r2
    36a8:	26 94       	lsr	r2
    36aa:	00 e0       	ldi	r16, 0x00	; 0
    36ac:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<multiple; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    36ae:	21 10       	cpse	r2, r1
    36b0:	05 c0       	rjmp	.+10     	; 0x36bc <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x114>
            {
              exportLongData(color0Bit);
    36b2:	b4 01       	movw	r22, r8
    36b4:	c3 01       	movw	r24, r6
    36b6:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    36ba:	1a c0       	rjmp	.+52     	; 0x36f0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x148>
            }

            else if (temp == 0x01)  //1Pixel = 01
    36bc:	f1 e0       	ldi	r31, 0x01	; 1
    36be:	2f 12       	cpse	r2, r31
    36c0:	06 c0       	rjmp	.+12     	; 0x36ce <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x126>
            {
              exportLongData(color1Bit);
    36c2:	6d a1       	ldd	r22, Y+37	; 0x25
    36c4:	7e a1       	ldd	r23, Y+38	; 0x26
    36c6:	c3 01       	movw	r24, r6
    36c8:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    36cc:	11 c0       	rjmp	.+34     	; 0x36f0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x148>
            }

            else if (temp == 0x02)  //1Pixel = 10
    36ce:	22 e0       	ldi	r18, 0x02	; 2
    36d0:	22 12       	cpse	r2, r18
    36d2:	06 c0       	rjmp	.+12     	; 0x36e0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x138>
            {
              exportLongData(color2Bit);
    36d4:	6f a1       	ldd	r22, Y+39	; 0x27
    36d6:	78 a5       	ldd	r23, Y+40	; 0x28
    36d8:	c3 01       	movw	r24, r6
    36da:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>
    36de:	08 c0       	rjmp	.+16     	; 0x36f0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x148>
            }

            else if (temp == 0x03)  //1Pixel = 11
    36e0:	33 e0       	ldi	r19, 0x03	; 3
    36e2:	23 12       	cpse	r2, r19
    36e4:	05 c0       	rjmp	.+10     	; 0x36f0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x148>
            {
              exportLongData(color3Bit);
    36e6:	69 a5       	ldd	r22, Y+41	; 0x29
    36e8:	7a a5       	ldd	r23, Y+42	; 0x2a
    36ea:	c3 01       	movw	r24, r6
    36ec:	0e 94 cf 17 	call	0x2f9e	; 0x2f9e <_ZN3SPI14exportLongDataEj>

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<multiple; m++)
    36f0:	0f 5f       	subi	r16, 0xFF	; 255
    36f2:	1f 4f       	sbci	r17, 0xFF	; 255
    36f4:	04 15       	cp	r16, r4
    36f6:	15 05       	cpc	r17, r5
    36f8:	d1 f6       	brne	.-76     	; 0x36ae <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x106>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    36fa:	33 0c       	add	r3, r3
    36fc:	33 0c       	add	r3, r3
    36fe:	81 e0       	ldi	r24, 0x01	; 1
    3700:	c8 1a       	sub	r12, r24
    3702:	d1 08       	sbc	r13, r1
      for (int k=0; k<(width / (4 * multiple)); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / (4 * multiple)) + k]);

        for (int l=0; l<4; l++)
    3704:	59 f6       	brne	.-106    	; 0x369c <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0xf4>
    3706:	9f ef       	ldi	r25, 0xFF	; 255
    3708:	e9 1a       	sub	r14, r25
    370a:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    {
      for (int k=0; k<(width / (4 * multiple)); k++)
    370c:	ae 14       	cp	r10, r14
    370e:	bf 04       	cpc	r11, r15
    3710:	09 f0       	breq	.+2      	; 0x3714 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x16c>
    3712:	be cf       	rjmp	.-132    	; 0x3690 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0xe8>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
  {
    for (int j=0; j<multiple; j++)
    3714:	e9 81       	ldd	r30, Y+1	; 0x01
    3716:	fa 81       	ldd	r31, Y+2	; 0x02
    3718:	31 96       	adiw	r30, 0x01	; 1
    371a:	fa 83       	std	Y+2, r31	; 0x02
    371c:	e9 83       	std	Y+1, r30	; 0x01
    371e:	e4 15       	cp	r30, r4
    3720:	f5 05       	cpc	r31, r5
    3722:	09 f0       	breq	.+2      	; 0x3726 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x17e>
    3724:	a9 cf       	rjmp	.-174    	; 0x3678 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0xd0>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / multiple); i++)
    3726:	2b 81       	ldd	r18, Y+3	; 0x03
    3728:	3c 81       	ldd	r19, Y+4	; 0x04
    372a:	2f 5f       	subi	r18, 0xFF	; 255
    372c:	3f 4f       	sbci	r19, 0xFF	; 255
    372e:	3c 83       	std	Y+4, r19	; 0x04
    3730:	2b 83       	std	Y+3, r18	; 0x03
    3732:	8b 85       	ldd	r24, Y+11	; 0x0b
    3734:	9c 85       	ldd	r25, Y+12	; 0x0c
    3736:	28 17       	cp	r18, r24
    3738:	39 07       	cpc	r19, r25
    373a:	09 f0       	breq	.+2      	; 0x373e <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x196>
    373c:	7d cf       	rjmp	.-262    	; 0x3638 <_ZN3TFT13drawBitmap160EiiiiPA160_Khaajjjj+0x90>

      }
    }
  }

    373e:	60 96       	adiw	r28, 0x10	; 16
    3740:	0f b6       	in	r0, 0x3f	; 63
    3742:	f8 94       	cli
    3744:	de bf       	out	0x3e, r29	; 62
    3746:	0f be       	out	0x3f, r0	; 63
    3748:	cd bf       	out	0x3d, r28	; 61
    374a:	df 91       	pop	r29
    374c:	cf 91       	pop	r28
    374e:	1f 91       	pop	r17
    3750:	0f 91       	pop	r16
    3752:	ff 90       	pop	r15
    3754:	ef 90       	pop	r14
    3756:	df 90       	pop	r13
    3758:	cf 90       	pop	r12
    375a:	bf 90       	pop	r11
    375c:	af 90       	pop	r10
    375e:	9f 90       	pop	r9
    3760:	8f 90       	pop	r8
    3762:	7f 90       	pop	r7
    3764:	6f 90       	pop	r6
    3766:	5f 90       	pop	r5
    3768:	4f 90       	pop	r4
    376a:	3f 90       	pop	r3
    376c:	2f 90       	pop	r2
    376e:	08 95       	ret

00003770 <__divmodhi4>:
    3770:	97 fb       	bst	r25, 7
    3772:	07 2e       	mov	r0, r23
    3774:	16 f4       	brtc	.+4      	; 0x377a <__divmodhi4+0xa>
    3776:	00 94       	com	r0
    3778:	07 d0       	rcall	.+14     	; 0x3788 <__divmodhi4_neg1>
    377a:	77 fd       	sbrc	r23, 7
    377c:	09 d0       	rcall	.+18     	; 0x3790 <__divmodhi4_neg2>
    377e:	0e 94 ee 1b 	call	0x37dc	; 0x37dc <__udivmodhi4>
    3782:	07 fc       	sbrc	r0, 7
    3784:	05 d0       	rcall	.+10     	; 0x3790 <__divmodhi4_neg2>
    3786:	3e f4       	brtc	.+14     	; 0x3796 <__divmodhi4_exit>

00003788 <__divmodhi4_neg1>:
    3788:	90 95       	com	r25
    378a:	81 95       	neg	r24
    378c:	9f 4f       	sbci	r25, 0xFF	; 255
    378e:	08 95       	ret

00003790 <__divmodhi4_neg2>:
    3790:	70 95       	com	r23
    3792:	61 95       	neg	r22
    3794:	7f 4f       	sbci	r23, 0xFF	; 255

00003796 <__divmodhi4_exit>:
    3796:	08 95       	ret

00003798 <__udivmodsi4>:
    3798:	a1 e2       	ldi	r26, 0x21	; 33
    379a:	1a 2e       	mov	r1, r26
    379c:	aa 1b       	sub	r26, r26
    379e:	bb 1b       	sub	r27, r27
    37a0:	fd 01       	movw	r30, r26
    37a2:	0d c0       	rjmp	.+26     	; 0x37be <__udivmodsi4_ep>

000037a4 <__udivmodsi4_loop>:
    37a4:	aa 1f       	adc	r26, r26
    37a6:	bb 1f       	adc	r27, r27
    37a8:	ee 1f       	adc	r30, r30
    37aa:	ff 1f       	adc	r31, r31
    37ac:	a2 17       	cp	r26, r18
    37ae:	b3 07       	cpc	r27, r19
    37b0:	e4 07       	cpc	r30, r20
    37b2:	f5 07       	cpc	r31, r21
    37b4:	20 f0       	brcs	.+8      	; 0x37be <__udivmodsi4_ep>
    37b6:	a2 1b       	sub	r26, r18
    37b8:	b3 0b       	sbc	r27, r19
    37ba:	e4 0b       	sbc	r30, r20
    37bc:	f5 0b       	sbc	r31, r21

000037be <__udivmodsi4_ep>:
    37be:	66 1f       	adc	r22, r22
    37c0:	77 1f       	adc	r23, r23
    37c2:	88 1f       	adc	r24, r24
    37c4:	99 1f       	adc	r25, r25
    37c6:	1a 94       	dec	r1
    37c8:	69 f7       	brne	.-38     	; 0x37a4 <__udivmodsi4_loop>
    37ca:	60 95       	com	r22
    37cc:	70 95       	com	r23
    37ce:	80 95       	com	r24
    37d0:	90 95       	com	r25
    37d2:	9b 01       	movw	r18, r22
    37d4:	ac 01       	movw	r20, r24
    37d6:	bd 01       	movw	r22, r26
    37d8:	cf 01       	movw	r24, r30
    37da:	08 95       	ret

000037dc <__udivmodhi4>:
    37dc:	aa 1b       	sub	r26, r26
    37de:	bb 1b       	sub	r27, r27
    37e0:	51 e1       	ldi	r21, 0x11	; 17
    37e2:	07 c0       	rjmp	.+14     	; 0x37f2 <__udivmodhi4_ep>

000037e4 <__udivmodhi4_loop>:
    37e4:	aa 1f       	adc	r26, r26
    37e6:	bb 1f       	adc	r27, r27
    37e8:	a6 17       	cp	r26, r22
    37ea:	b7 07       	cpc	r27, r23
    37ec:	10 f0       	brcs	.+4      	; 0x37f2 <__udivmodhi4_ep>
    37ee:	a6 1b       	sub	r26, r22
    37f0:	b7 0b       	sbc	r27, r23

000037f2 <__udivmodhi4_ep>:
    37f2:	88 1f       	adc	r24, r24
    37f4:	99 1f       	adc	r25, r25
    37f6:	5a 95       	dec	r21
    37f8:	a9 f7       	brne	.-22     	; 0x37e4 <__udivmodhi4_loop>
    37fa:	80 95       	com	r24
    37fc:	90 95       	com	r25
    37fe:	bc 01       	movw	r22, r24
    3800:	cd 01       	movw	r24, r26
    3802:	08 95       	ret

00003804 <__tablejump2__>:
    3804:	ee 0f       	add	r30, r30
    3806:	ff 1f       	adc	r31, r31
    3808:	05 90       	lpm	r0, Z+
    380a:	f4 91       	lpm	r31, Z
    380c:	e0 2d       	mov	r30, r0
    380e:	09 94       	ijmp

00003810 <_exit>:
    3810:	f8 94       	cli

00003812 <__stop_program>:
    3812:	ff cf       	rjmp	.-2      	; 0x3812 <__stop_program>
