
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00003754  000037e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003754  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800108  00800108  000037f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000037f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003820  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f8  00000000  00000000  00003860  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000754e  00000000  00000000  00003a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001343  00000000  00000000  0000afa6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001730  00000000  00000000  0000c2e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000754  00000000  00000000  0000da1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000eef  00000000  00000000  0000e170  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002afb  00000000  00000000  0000f05f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00011b5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 49 11 	jmp	0x2292	; 0x2292 <__ctors_end>
       4:	0c 94 98 11 	jmp	0x2330	; 0x2330 <__vector_1>
       8:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
       c:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      10:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      14:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      18:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      1c:	0c 94 be 11 	jmp	0x237c	; 0x237c <__vector_7>
      20:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      24:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      28:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      2c:	0c 94 a7 11 	jmp	0x234e	; 0x234e <__vector_11>
      30:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      34:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      38:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      3c:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      40:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      44:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      48:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      4c:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      50:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      54:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      58:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      5c:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      60:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>
      64:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	ff ff       	.word	0xffff	; ????
      6a:	ff ff       	.word	0xffff	; ????
      6c:	7f 77       	andi	r23, 0x7F	; 127
      6e:	ff 7f       	andi	r31, 0xFF	; 255
      70:	ff ff       	.word	0xffff	; ????
      72:	ff fd       	.word	0xfdff	; ????
      74:	fd cf       	rjmp	.-6      	; 0x70 <__trampolines_end+0x8>
      76:	fc ff       	.word	0xfffc	; ????
      78:	ff ff       	.word	0xffff	; ????
      7a:	ff 7f       	andi	r31, 0xFF	; 255
      7c:	f3 3f       	cpi	r31, 0xF3	; 243
      7e:	f7 ff       	sbrs	r31, 7
      80:	ff ff       	.word	0xffff	; ????
      82:	ff ff       	.word	0xffff	; ????
      84:	cd ff       	.word	0xffcd	; ????
      86:	ff ff       	.word	0xffff	; ????
      88:	ff ff       	.word	0xffff	; ????
      8a:	f7 ff       	sbrs	r31, 7
      8c:	37 ff       	sbrs	r19, 7
      8e:	ff ff       	.word	0xffff	; ????
      90:	ff f7       	brid	.-2      	; 0x90 <__trampolines_end+0x28>
      92:	df fd       	.word	0xfddf	; ????
      94:	ff ff       	.word	0xffff	; ????
      96:	7f ff       	.word	0xff7f	; ????
      98:	ff ff       	.word	0xffff	; ????
      9a:	7f f7       	brid	.-34     	; 0x7a <__trampolines_end+0x12>
      9c:	ff ff       	.word	0xffff	; ????
      9e:	ff fd       	.word	0xfdff	; ????
      a0:	ff fd       	.word	0xfdff	; ????
      a2:	f7 df       	rcall	.-18     	; 0x92 <__trampolines_end+0x2a>
      a4:	ff f7       	brid	.-2      	; 0xa4 <__trampolines_end+0x3c>
      a6:	ff f7       	brid	.-2      	; 0xa6 <__trampolines_end+0x3e>
      a8:	ff 73       	andi	r31, 0x3F	; 63
      aa:	df ff       	.word	0xffdf	; ????
      ac:	ff df       	rcall	.-2      	; 0xac <__trampolines_end+0x44>
      ae:	7f cd       	rjmp	.-1282   	; 0xfffffbae <__eeprom_end+0xff7efbae>
      b0:	fd cf       	rjmp	.-6      	; 0xac <__trampolines_end+0x44>
      b2:	37 ff       	sbrs	r19, 7
      b4:	7f 3d       	cpi	r23, 0xDF	; 223
      b6:	f7 77       	andi	r31, 0x77	; 119
      b8:	77 3c       	cpi	r23, 0xC7	; 199
      ba:	df 7f       	andi	r29, 0xFF	; 255
      bc:	fc f7       	brge	.-2      	; 0xbc <__trampolines_end+0x54>
      be:	dd df       	rcall	.-70     	; 0x7a <__trampolines_end+0x12>
      c0:	54 71       	andi	r21, 0x14	; 20
      c2:	55 5d       	subi	r21, 0xD5	; 213
      c4:	71 47       	sbci	r23, 0x71	; 113
      c6:	55 55       	subi	r21, 0x55	; 85
      c8:	55 c5       	rjmp	.+2730   	; 0xb74 <__stack+0x275>
      ca:	55 75       	andi	r21, 0x55	; 85
      cc:	c5 1c       	adc	r12, r5
      ce:	54 55       	subi	r21, 0x54	; 84
      d0:	55 15       	cp	r21, r5
      d2:	55 d7       	rcall	.+3754   	; 0xf7e <__stack+0x67f>
      d4:	14 71       	andi	r17, 0x14	; 20
      d6:	71 55       	subi	r23, 0x51	; 81
      d8:	54 55       	subi	r21, 0x54	; 84
      da:	45 54       	subi	r20, 0x45	; 69
      dc:	51 c5       	rjmp	.+2722   	; 0xb80 <__stack+0x281>
      de:	c5 15       	cp	r28, r5
      e0:	55 55       	subi	r21, 0x55	; 85
      e2:	51 51       	subi	r21, 0x11	; 17
      e4:	47 17       	cp	r20, r23
      e6:	15 54       	subi	r17, 0x45	; 69
      e8:	55 54       	subi	r21, 0x45	; 69
      ea:	45 55       	subi	r20, 0x55	; 85
      ec:	1c 44       	sbci	r17, 0x4C	; 76
      ee:	55 51       	subi	r21, 0x15	; 21
      f0:	15 51       	subi	r17, 0x15	; 21
      f2:	15 54       	subi	r17, 0x45	; 69
      f4:	51 11       	cpse	r21, r1
      f6:	54 44       	sbci	r21, 0x44	; 68
      f8:	55 44       	sbci	r21, 0x45	; 69
      fa:	45 51       	subi	r20, 0x15	; 21
      fc:	54 45       	sbci	r21, 0x54	; 84
      fe:	51 11       	cpse	r21, r1
     100:	55 11       	cpse	r21, r5
     102:	15 55       	subi	r17, 0x55	; 85
     104:	51 15       	cp	r21, r1
     106:	44 44       	sbci	r20, 0x44	; 68
     108:	54 44       	sbci	r21, 0x44	; 68
     10a:	55 54       	subi	r21, 0x45	; 69
     10c:	44 55       	subi	r20, 0x54	; 84
     10e:	11 11       	cpse	r17, r1
     110:	00 00       	nop
     112:	11 00       	.word	0x0011	; ????
     114:	00 10       	cpse	r0, r0
     116:	00 00       	nop
     118:	00 00       	nop
     11a:	44 00       	.word	0x0044	; ????
     11c:	00 40       	sbci	r16, 0x00	; 0
     11e:	00 10       	cpse	r0, r0
     120:	00 01       	movw	r0, r0
     122:	10 00       	.word	0x0010	; ????
     124:	01 00       	.word	0x0001	; ????
     126:	00 00       	nop
     128:	00 04       	cpc	r0, r0
     12a:	40 00       	.word	0x0040	; ????
     12c:	04 00       	.word	0x0004	; ????
     12e:	00 10       	cpse	r0, r0
     130:	00 01       	movw	r0, r0
     132:	00 04       	cpc	r0, r0
     134:	10 00       	.word	0x0010	; ????
     136:	04 41       	sbci	r16, 0x14	; 20
     138:	00 04       	cpc	r0, r0
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	11 04       	cpc	r1, r1
     140:	00 10       	cpse	r0, r0
     142:	00 40       	sbci	r16, 0x00	; 0
     144:	00 00       	nop
     146:	44 10       	cpse	r4, r4
     148:	00 00       	nop
     14a:	01 00       	.word	0x0001	; ????
     14c:	00 01       	movw	r0, r0
     14e:	10 40       	sbci	r17, 0x00	; 0
     150:	01 00       	.word	0x0001	; ????
     152:	04 00       	.word	0x0004	; ????
     154:	00 04       	cpc	r0, r0
     156:	41 00       	.word	0x0041	; ????
     158:	00 00       	nop
     15a:	00 00       	nop
     15c:	00 00       	nop
     15e:	04 00       	.word	0x0004	; ????
     160:	00 00       	nop
     162:	40 00       	.word	0x0040	; ????
     164:	00 40       	sbci	r16, 0x00	; 0
	...

00000168 <_ZL9titleMenu>:
     168:	20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
     190:	00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1b4:	00 00 00 40 00 00 00 00 00 00 00 00 00 00 02 00     ...@............
	...
     1d0:	00 00 80 00 00 00 00 00 00 00 00 00 01 50 00 00     .............P..
	...
     1f0:	00 00 00 40 00 00 00 00 00 00 00 01 00 00 00 00     ...@............
     200:	00 00 00 40 00 00 00 00 00 00 00 00 00 00 00 00     ...@............
	...
     22c:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     244:	00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     260:	01 00 00 00 00 00 00 00 00 00 00 00 05 00 00 00     ................
	...
     284:	00 00 06 40 00 00 00 00 00 00 00 00 00 00 00 00     ...@............
	...
     2a4:	01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00     ................
	...
     2c8:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     2f0:	10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     300:	00 00 00 00 02 00 00 00 00 00 04 00 00 00 00 00     ................
     310:	00 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00     ................
	...
     348:	00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
     358:	00 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00     ................
	...
     370:	00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     380:	00 00 00 00 06 40 00 00 00 00 00 00 00 00 00 00     .....@..........
     390:	00 00 00 00 00 00 01 65 00 00 00 00 00 00 00 00     .......e........
	...
     3a8:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3b8:	00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00     ................
	...
     3e0:	00 00 00 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     410:	00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     420:	00 00 00 00 00 50 00 00 00 00 00 00 00 00 00 00     .....P..........
     430:	04 00 00 00 00 00 00 64 00 00 00 00 00 00 00 00     .......d........
	...
     448:	00 00 00 50 00 00 00 00 00 00 00 00 00 00 15 00     ...P............
     458:	00 00 00 00 00 10 00 00 00 00 80 00 00 00 00 00     ................
	...
     470:	00 00 00 02 00 00 00 00 00 00 00 00 04 00 00 00     ................
	...
     4ac:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     4d8:	00 00 00 40 00 00 00 08 00 00 00 00 00 00 00 00     ...@............
     4e8:	00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00     ....@...........
	...
     560:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
     570:	10 00 00 00 00 00 00 00 00 00 00 40 00 00 00 00     ...........@....
	...
     5a0:	00 10 00 00 00 00 10 00 00 00 00 00 00 00 00 00     ................
	...
     5bc:	00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     5cc:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     5dc:	00 00 55 50 00 00 00 00 00 40 00 00 04 00 00 40     ..UP.....@.....@
     5ec:	00 01 00 00 00 00 01 00 00 10 00 01 00 00 00 00     ................
     5fc:	00 00 00 00 00 00 00 05 55 55 00 05 50 00 00 10     ........UU..P...
     60c:	00 00 01 00 00 00 00 00 40 00 40 00 00 40 00 04     ........@.@..@..
     61c:	00 00 40 00 00 00 00 00 00 00 00 00 00 15 55 55     ..@...........UU
     62c:	40 55 55 00 00 04 04 00 00 40 00 00 00 00 10 00     @UU......@......
     63c:	10 01 00 10 10 01 10 00 00 00 00 00 00 00 00 00     ................
     64c:	00 00 00 55 55 55 51 55 55 40 00 01 01 00 00 00     ...UUUQUU@......
     65c:	00 00 00 00 04 04 04 00 00 04 04 00 44 00 04 00     ............D...
	...
     674:	00 55 55 55 55 55 55 40 00 00 40 40 40 00 00 00     .UUUUUU@..@@@...
     684:	00 00 01 01 11 00 10 01 01 00 11 00 01 00 00 10     ................
     694:	00 00 00 00 00 00 01 55 55 55 55 55 55 50 00 00     .......UUUUUUP..
     6a4:	10 10 10 00 00 00 04 04 00 40 44 40 04 00 40 00     .........@D@..@.
     6b4:	04 40 00 44 00 04 00 00 00 00 00 00 01 55 55 55     .@.D.........UUU
     6c4:	55 55 55 50 00 00 44 04 04 00 42 aa 01 01 01 10     UUUP..D...B.....
     6d4:	11 10 11 01 10 10 01 11 10 11 00 01 10 00 00 00     ................
     6e4:	00 00 01 55 55 55 55 55 55 50 15 40 11 11 01 00     ...UUUUUUP.@....
     6f4:	2a aa a0 40 40 44 04 44 04 40 44 04 04 44 44 04     *..@@D.D.@D..DD.
     704:	40 40 40 00 00 00 00 00 01 55 55 55 55 55 55 51     @@@......UUUUUUQ
     714:	55 54 44 44 44 40 aa aa a8 01 10 11 11 11 01 10     UTDDD@..........
     724:	11 01 01 11 11 01 10 10 00 00 00 00 00 00 14 55     ...............U
     734:	55 55 55 55 55 45 55 55 11 11 11 12 aa aa aa 04     UUUUUEUU........
     744:	44 04 44 44 44 44 04 44 44 44 44 44 44 44 40 00     D.DDDD.DDDDDDD@.
     754:	00 00 00 00 55 55 55 55 55 55 55 55 55 55 14 44     ....UUUUUUUUUU.D
     764:	4a a6 aa aa aa 91 11 11 11 11 11 11 11 11 11 11     J...............
     774:	11 11 11 11 00 00 00 00 00 00 55 55 55 55 55 55     ..........UUUUUU
     784:	55 5a a9 55 55 51 2a aa aa aa aa 84 44 44 44 54     UZ.UUQ*.....DDDT
     794:	44 44 54 44 44 44 44 44 44 44 40 00 00 00 00 00     DDTDDDDDDD@.....
     7a4:	55 55 55 55 55 55 55 aa aa 95 55 54 55 aa aa aa     UUUUUUU...UTU...
     7b4:	aa a1 15 11 11 15 51 15 15 11 11 11 11 11 11 11     ......Q.........
     7c4:	10 00 00 00 00 00 40 55 55 55 55 55 56 aa aa a5     ......@UUUUUV...
     7d4:	55 55 55 5a aa aa aa a4 45 44 54 45 54 45 45 44     UUUZ....EDTETEED
     7e4:	44 44 44 44 44 6a aa 00 00 00 00 00 00 05 55 55     DDDDDj........UU
     7f4:	55 55 56 aa aa a5 55 55 55 56 95 6a aa a5 11 51     UUV...UUUV.j...Q
     804:	15 11 55 11 51 51 11 11 11 11 12 aa aa a0 00 00     ..U.QQ..........
     814:	00 00 00 01 55 55 55 55 5a aa aa a9 55 55 55 56     ....UUUUZ...UUUV
     824:	55 5a aa a5 44 54 45 44 55 44 54 54 54 44 44 44     UZ..DTEDUDTTTDDD
     834:	4a aa a8 00 00 00 00 00 00 00 54 05 55 55 5a aa     J.........T.UUZ.
     844:	aa a9 a9 55 55 55 55 56 aa 95 51 55 11 55 55 55     ...UUUUV..QU.UUU
     854:	15 55 15 55 11 11 1a aa a0 00 00 00 00 00 00 00     .U.U............
     864:	40 00 55 55 5a aa aa aa aa 55 aa 55 55 56 aa aa     @.UUZ....U.UUV..
     874:	94 55 44 55 55 54 45 55 55 15 44 44 6a aa a0 00     .UDUUTEUU.DDj...
	...
     88c:	55 55 5a aa aa aa aa 9a aa a5 55 56 55 aa a9 15     UUZ.......UVU...
     89c:	55 15 55 55 51 55 55 55 51 11 2a a4 00 00 00 00     U.UUQUUUQ.*.....
     8ac:	00 00 00 00 00 00 15 55 5a 55 aa aa aa aa aa a9     .......UZU......
     8bc:	55 55 55 6a aa 55 55 45 55 55 54 55 55 6a 94 44     UUUj.UUEUUTUUj.D
     8cc:	6a 90 00 00 00 00 02 aa 40 00 05 54 15 55 55 55     j.......@..T.UUU
     8dc:	5a a9 56 aa aa aa 55 55 55 5a aa 51 55 55 55 55     Z.V...UUUZ.QUUUU
     8ec:	55 15 56 aa a9 1a 95 50 00 00 00 00 2a aa 50 00     U.V....P....*.P.
     8fc:	55 55 55 55 55 55 56 95 55 6a aa aa 55 55 55 56     UUUUUUV.Uj..UUUV
     90c:	aa 94 55 54 55 55 55 55 5a aa aa 69 55 40 00 00     ..UTUUUUZ..iU@..
     91c:	00 00 aa aa 54 01 55 55 55 55 55 55 56 55 55 5a     ....T.UUUUUUVUUZ
     92c:	aa aa 95 55 55 55 aa 95 15 55 15 55 55 51 5a aa     ...UUU...U.UUQZ.
     93c:	aa a9 55 40 00 00 00 00 aa aa 55 05 55 55 55 50     ..U@......U.UUUP
     94c:	00 15 55 55 55 56 aa aa 95 55 aa 95 aa 95 55 55     ..UUUV...U....UU
     95c:	55 95 55 54 6a aa aa a5 55 40 00 00 0a a8 aa aa     U.UTj...U@......
     96c:	55 00 15 55 55 00 00 01 55 55 55 56 55 aa 95 5a     U..UU...UUUVU..Z
     97c:	aa a9 aa 95 55 55 55 65 55 55 2a aa aa a5 55 40     ....UUUeUU*...U@
     98c:	00 00 aa aa aa aa 55 40 01 55 54 00 00 00 55 55     ......U@.UT...UU
     99c:	55 55 55 6a 95 6a aa aa aa 55 55 55 55 59 95 aa     UUUj.j...UUUUY..
     9ac:	6a aa aa a5 55 50 00 02 aa aa aa aa 55 41 54 55     j...UP......UATU
     9bc:	54 00 00 00 15 01 55 55 55 6a 55 6a aa aa aa a5     T.....UUUjUj....
     9cc:	55 56 55 56 6a aa aa aa aa a5 55 50 00 02 aa aa     UVUVj.....UP....
     9dc:	aa aa 55 45 55 55 50 00 00 00 10 00 55 55 55 5a     ..UEUUP.....UUUZ
     9ec:	a5 6a aa aa aa a5 55 55 95 56 aa aa aa aa aa a5     .j....UU.V......
     9fc:	55 54 00 0a aa aa aa aa 55 55 55 00 50 00 00 00     UT......UUU.P...
     a0c:	00 15 55 55 55 aa aa 6a aa aa aa aa a9 55 55 aa     ..UUU..j.....UU.
     a1c:	aa aa aa aa aa a9 55 40 01 5a aa aa aa aa 55 55     ......U@.Z....UU
     a2c:	50 00 00 00 00 00 01 55 55 55 56 aa aa 9a aa 00     P......UUUV.....
     a3c:	0a aa aa 95 59 5a aa aa aa aa aa aa 55 00 15 5a     ....YZ......U..Z
     a4c:	aa aa aa aa 55 55 40 00 00 00 01 54 05 55 55 55     ....UU@....T.UUU
     a5c:	55 6a aa aa 80 00 00 2a aa a5 56 55 66 6a aa aa     Uj.....*..VUfj..
     a6c:	aa aa 54 00 55 5a aa aa aa aa 50 05 00 00 00 00     ..T.UZ....P.....
     a7c:	05 55 45 55 55 55 55 55 aa aa 00 00 00 02 aa a9     .UEUUUUU........
     a8c:	55 95 99 99 99 99 aa a9 55 50 55 5a aa aa aa a5     U.......UPUZ....
     a9c:	40 01 00 00 00 00 00 05 55 55 55 55 55 55 5a a8     @.......UUUUUUZ.
     aac:	00 00 00 00 aa a9 59 65 66 66 66 6a aa a5 55 54     ......Yefffj..UT
     abc:	55 5a aa aa aa 95 00 00 00 00 00 00 00 00 55 55     UZ............UU
     acc:	55 55 55 55 56 a8 00 00 00 00 2a 55 55 99 99 aa     UUUUV.....*UU...
     adc:	a9 aa aa 95 55 55 55 56 aa aa aa 55 00 00 00 00     ....UUUV...U....
     aec:	00 00 00 00 14 05 55 55 55 55 55 a0 00 00 00 00     ......UUUUU.....
     afc:	25 55 55 56 66 aa aa aa aa 95 55 55 55 55 aa aa     %UUVf.....UUUU..
     b0c:	aa 55 00 00 00 00 00 00 00 00 00 00 55 55 55 55     .U..........UUUU
     b1c:	00 20 00 00 00 00 05 55 55 55 9a aa aa aa aa 55     . .....UUU.....U
     b2c:	55 55 55 aa aa aa aa 55 00 00 00 00 00 00 00 00     UUU....U........
     b3c:	00 00 55 55 55 50 00 00 00 00 00 00 05 55 55 55     ..UUUP.......UUU
     b4c:	5a aa aa aa aa 55 55 55 5a aa aa aa aa 55 00 00     Z....UUUZ....U..
	...
     b64:	15 55 55 50 00 00 00 00 00 00 05 55 55 55 56 aa     .UUP.......UUUV.
     b74:	aa aa aa 55 55 55 6a aa aa aa aa 55 00 00 00 00     ...UUUj....U....
     b84:	00 00 00 00 55 40 15 55 55 54 00 00 00 00 00 00     ....U@.UUT......
     b94:	00 15 55 55 56 aa ff fa aa 55 55 55 aa aa aa aa     ..UUV....UUU....
     ba4:	aa 95 00 00 00 00 00 00 00 05 55 54 15 55 55 55     ..........UT.UUU
     bb4:	00 00 00 00 00 40 00 01 55 55 55 af ff ff aa 55     .....@..UUU....U
     bc4:	55 55 aa aa aa aa aa a5 00 00 00 00 00 01 54 15     UU............T.
     bd4:	55 55 15 55 55 55 00 00 00 00 05 00 00 00 15 55     UU.UUU.........U
     be4:	55 bf ff ff ea 95 55 56 aa aa aa aa 95 5a 00 00     U.....UV.....Z..
     bf4:	00 00 00 15 55 55 55 55 55 55 55 55 40 00 00 55     ....UUUUUUUU@..U
     c04:	14 00 00 00 15 55 55 ff ff ff fa 95 56 aa aa aa     .....UU.....V...
     c14:	aa a9 55 55 00 00 00 00 00 55 55 55 55 55 55 55     ..UU.....UUUUUUU
     c24:	55 55 40 00 05 55 54 00 00 00 05 55 55 ff ff ff     UU@..UT....UU...
     c34:	fa a5 6a aa aa aa aa a5 55 55 00 00 00 00 00 55     ..j.....UU.....U
     c44:	55 55 50 00 15 55 01 55 05 50 15 55 50 00 00 00     UUP..U.U.P.UP...
     c54:	05 55 55 ff ff ff fe bf aa aa aa a5 5a 95 55 55     .UU.........Z.UU
     c64:	00 00 00 00 01 55 55 55 00 00 05 50 00 15 15 54     .....UUU...P...T
     c74:	55 55 50 00 00 00 04 01 54 ff ff ff fe ff aa aa     UUP.....T.......
     c84:	aa 55 56 95 55 55 00 00 00 00 01 55 55 54 00 00     .UV.UU.....UUT..
     c94:	00 40 00 00 55 54 55 50 10 00 00 00 00 00 57 ff     .@..UTUP......W.
     ca4:	ff ff ff ff aa aa a9 55 55 55 55 55 00 00 00 00     .......UUUUU....
     cb4:	01 40 05 54 00 00 00 00 00 00 15 55 55 00 00 00     .@.T.......UU...
     cc4:	00 00 00 00 55 55 3f ff ff ff aa aa aa a5 55 55     ....UU?.......UU
     cd4:	55 55 00 00 00 00 00 00 00 50 00 00 00 00 00 55     UU.......P.....U
     ce4:	45 55 55 00 00 00 00 00 00 55 15 55 53 ff ff ff     EUU......U.US...
     cf4:	ea aa aa a9 55 55 55 55 00 00 00 00 00 00 00 10     ....UUUU........
     d04:	00 00 00 00 05 55 55 55 54 55 50 00 00 00 00 05     .....UUUTUP.....
     d14:	55 55 54 ff ff fa aa aa aa aa 55 55 55 6a 00 00     UUT.......UUUj..
	...
     d2c:	00 00 15 55 55 55 55 55 55 00 00 00 00 01 50 05     ...UUUUUU.....P.
     d3c:	55 3f ff ea aa aa aa aa 55 55 56 aa 00 00 00 00     U?......UUV.....
	...
     d54:	15 55 55 55 55 55 55 40 00 00 00 01 00 00 55 7f     .UUUUUU@......U.
     d64:	ff ea aa aa aa aa 55 55 56 aa 00 55 00 00 00 00     ......UUV..U....
     d74:	00 00 00 00 00 15 15 55 55 55 55 55 55 50 00 00     .......UUUUUUP..
     d84:	00 00 00 00 55 4c 55 6a aa aa aa a9 55 55 5a aa     ....ULUj....UUZ.
     d94:	05 55 50 00 00 00 00 00 00 00 00 00 55 55 55 55     .UP.........UUUU
     da4:	55 55 55 50 00 00 00 00 00 00 15 55 55 55 6a aa     UUUP.......UUUj.
     db4:	aa aa a5 55 5a aa 55 55 54 00 00 00 00 00 00 00     ...UZ.UUT.......
     dc4:	00 00 05 55 55 55 55 55 55 54 00 00 00 00 00 00     ...UUUUUUT......
     dd4:	10 05 55 55 55 5a aa aa aa 55 5a aa 00 15 55 00     ..UUUZ...UZ...U.
     de4:	55 40 00 00 00 15 40 00 01 55 55 55 55 55 55 54     U@....@..UUUUUUT
     df4:	05 40 00 00 00 00 00 00 01 55 55 aa aa a9 55 55     .@.......UU...UU
     e04:	5a aa 00 00 00 41 55 54 00 00 01 55 54 00 01 55     Z....AUT...UT..U
     e14:	55 55 55 55 55 54 55 54 00 00 00 00 00 00 2a aa     UUUUUTUT......*.
     e24:	aa aa aa 55 55 55 aa aa 00 00 00 00 15 55 00 00     ...UUU.......U..
     e34:	05 55 55 00 00 55 55 55 55 55 55 55 55 55 00 00     .UU..UUUUUUUUU..
     e44:	55 6a aa aa aa aa aa aa a9 55 55 5a aa aa 00 00     Uj.......UUZ....
     e54:	00 00 00 55 15 50 05 55 55 40 00 40 15 55 55 55     ...U.P.UU@.@.UUU
     e64:	55 55 55 55 55 55 55 5a a5 56 aa aa aa aa a5 55     UUUUUUUZ.V.....U
     e74:	55 6a aa aa 00 00 00 00 00 05 55 55 15 55 55 45     Uj........UU.UUE
     e84:	40 00 05 55 55 55 55 55 55 55 55 55 55 5a 55 55     @..UUUUUUUUUUZUU
     e94:	6a aa aa aa a5 55 55 a5 56 a5 00 00 00 00 00 00     j....UU.V.......
     ea4:	15 55 15 55 55 55 54 00 01 55 55 55 55 55 55 55     .U.UUUT..UUUUUUU
     eb4:	55 55 55 59 55 55 5a aa aa aa 95 55 55 95 55 95     UUUYUUZ....UU.U.
     ec4:	00 00 00 00 00 00 00 55 55 55 55 55 55 05 51 55     .......UUUUUU.QU
     ed4:	55 55 55 55 55 55 55 55 55 55 55 55 56 aa aa aa     UUUUUUUUUUUUV...
     ee4:	95 55 55 55 55 55 00 00 00 00 00 00 00 00 15 50     .UUUUU.........P
     ef4:	00 01 55 15 54 55 55 55 55 55 55 55 55 55 55 55     ..U.TUUUUUUUUUUU
     f04:	55 55 55 56 aa aa 95 55 55 55 55 55 00 00 00 00     UUUV...UUUUU....
	...
     f1c:	01 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     .UUUUUUUUUUUUUUU
     f2c:	55 55 6a a5 55 55 55 55 55 55 00 00 00 00 00 00     UUj.UUUUUU......
     f3c:	00 00 00 00 00 00 00 05 55 55 55 55 55 54 01 55     ........UUUUUT.U
     f4c:	55 55 55 55 55 55 55 55 5a 55 55 55 55 55 55 55     UUUUUUUUZUUUUUUU
	...
     f68:	00 00 05 55 55 55 55 00 00 00 15 55 50 15 55 55     ...UUUU....UP.UU
     f78:	55 55 59 55 55 55 55 55 55 55 00 00 00 00 00 00     UUYUUUUUUU......
	...
     f90:	00 01 55 55 00 00 00 00 00 05 40 01 55 55 55 55     ..UU......@.UUUU
     fa0:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
     fb0:	55 55 55 55 55 55 55 55 55 55 55 56 aa aa aa aa     UUUUUUUUUUUV....
     fc0:	aa aa aa aa aa aa aa a5 55 55 55 55 55 55 55 55     ........UUUUUUUU
     fd0:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
     fe0:	55 55 5a 55 6a aa aa ab fa aa aa aa a5 55 55 55     UUZUj........UUU
     ff0:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55     UUUUUUUUUUUUUUUU
    1000:	55 55 55 55 55 55 5a aa aa aa aa aa ab ff fe aa     UUUUUUZ.........
    1010:	aa aa aa aa aa a9 55 55 55 55 55 55 55 55 55 55     ......UUUUUUUUUU
    1020:	55 55 55 55 55 55 55 55 aa aa aa aa aa aa aa aa     UUUUUUUU........
    1030:	aa aa aa aa aa aa aa aa aa aa aa 95 55 55 55 55     ............UUUU
    1040:	55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 56     UUUUUUUUUUUUUUUV
    1050:	aa aa aa aa aa aa aa aa ab ff aa aa aa aa aa aa     ................
    1060:	aa aa aa aa aa aa 55 55 55 55 55 55 55 55 55 55     ......UUUUUUUUUU
    1070:	55 55 55 55 55 55 56 aa aa aa aa aa ab ff ff ff     UUUUUUV.........
    1080:	ff ea aa aa aa aa aa aa aa aa a9 55 55 55 55 55     ...........UUUUU
    1090:	55 55 55 55 55 55 55 5a a5 56 aa aa aa aa aa aa     UUUUUUUZ.V......
    10a0:	aa aa aa aa ff ff fe aa aa aa aa aa aa aa aa a9     ................
    10b0:	55 55 55 55 55 55 55 55 55 55 5a aa aa aa aa aa     UUUUUUUUUUZ.....
    10c0:	aa aa aa aa aa aa aa aa aa ff ff ff ff ff ab fa     ................
    10d0:	aa aa aa aa aa aa aa aa 55 55 55 55 55 55 55 55     ........UUUUUUUU
    10e0:	55 56 aa aa aa aa aa aa aa aa aa aa aa aa aa aa     UV..............
    10f0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa 55 55     ..............UU
    1100:	55 55 55 aa aa 95 55 aa aa aa aa aa aa aa aa aa     UUU...U.........
    1110:	aa aa aa bf ff ff ff ff fa aa aa aa aa aa aa aa     ................
    1120:	aa aa aa aa 55 55 56 aa aa aa aa aa aa aa aa aa     ....UUV.........
    1130:	aa aa aa aa aa aa af eb ff ff ff ff ff ff ff ff     ................
    1140:	ea aa aa aa aa aa aa aa aa aa aa 55 55 56 aa aa     ...........UUV..
    1150:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa ab ff     ................
    1160:	ff ff ea aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    1170:	aa a9 55 55 56 95 56 aa aa aa aa aa aa aa aa aa     ..UUV.V.........
    1180:	aa aa aa aa aa aa bf ff ff fa aa aa aa aa aa aa     ................
    1190:	aa aa aa aa aa aa 59 55 55 5a aa aa aa aa aa aa     ......YUUZ......
    11a0:	aa aa aa aa aa aa aa aa aa aa aa aa aa bf ff ff     ................
    11b0:	ff fe aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    11c0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa bf ff     ................
    11d0:	ff ff ff ff ff ff fe aa aa aa aa aa aa aa aa aa     ................
    11e0:	aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa aa     ................
    11f0:	aa ff ff ff ff ff ff ff ff ff ff fe aa aa bf ff     ................
    1200:	ff ff af aa aa aa aa aa                             ........

00001208 <_ZL9fontASCII>:
    1208:	00 30 00 00 10 00 00 00 00 00 00 00 00 00 00 00     .0..............
    1218:	00 78 6c 28 3c 66 20 30 18 30 54 18 00 00 00 06     .xl(<f 0.0T.....
    1228:	00 78 24 7c 60 0c 50 10 30 18 38 18 00 00 00 0c     .x$|`.P.0.8.....
    1238:	00 78 00 28 38 18 34 00 30 18 10 7e 00 7e 00 18     .x.(8.4.0..~.~..
    1248:	00 30 00 7c 0c 30 48 00 30 18 38 18 00 00 00 30     .0.|.0H.0.8....0
    1258:	00 00 00 28 78 66 34 00 18 30 54 18 00 00 00 60     ...(xf4..0T....`
    1268:	00 30 00 00 10 00 00 00 00 00 00 00 30 00 30 00     .0..........0.0.
	...
    1284:	10 00 00 00 38 18 fc fc 06 fe 7c fe 7c 7c 00 00     ....8.....|.||..
    1294:	00 00 00 7c 4c 38 06 06 c6 c0 c0 06 c6 c6 00 00     ...|L8..........
    12a4:	18 00 30 c6 c6 18 06 3c c6 fc fc 06 7c c6 30 30     ..0....<....|.00
    12b4:	30 7c 18 06 c6 18 7c 06 c6 06 c6 0c c6 c6 00 00     0|....|.........
    12c4:	60 00 0c 06 c6 18 c0 06 c6 06 c6 18 c6 7e 00 00     `............~..
    12d4:	30 7c 18 3c 64 18 c0 06 fe 06 c6 30 c6 06 30 30     0|.<d......0..00
    12e4:	18 00 30 00 38 3c fe fc 06 fc 7c 30 7c 7c 00 10     ..0.8<....|0||..
    12f4:	00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 00     ...0............
    1304:	00 00 00 00 7c 7c fc 7e fc fe fe 7c c6 3c 1e c6     ....||.~...|.<..
    1314:	c0 c6 c6 7c c6 c6 c6 c0 c6 c0 c0 c6 c6 18 06 c6     ...|............
    1324:	c0 ee e6 c6 c6 c6 c6 c0 c6 c0 c0 c0 c6 18 06 cc     ................
    1334:	c0 fe f6 c6 d6 c6 fc c0 c6 f8 fc de fe 18 06 f8     ................
    1344:	c0 d6 de c6 dc fe c6 c0 c6 c0 c0 c6 c6 18 06 cc     ................
    1354:	c0 c6 ce c6 c0 c6 c6 c0 c6 c0 c0 c6 c6 18 c6 c6     ................
    1364:	c0 c6 c6 c6 7c c6 fc 7e fc fe c0 7e c6 3c 7c c6     ....|..~...~.<|.
    1374:	fe c6 c6 7c 00 00 00 00 00 00 00 00 00 00 00 00     ...|............
    1384:	00 00 00 00 fc 7c fc 7e 7e c6 c6 c6 c6 66 fe 00     .....|.~~....f..
    1394:	00 00 00 00 c6 c6 c6 c0 18 c6 c6 c6 c6 66 06 38     .............f.8
    13a4:	60 38 10 00 c6 c6 c6 c0 18 c6 c6 c6 6c 66 0c 30     `8..........lf.0
    13b4:	30 18 38 00 c6 c6 c6 7c 18 c6 c6 d6 38 3c 38 30     0.8....|....8<80
    13c4:	18 18 6c 00 fc de fc 06 18 c6 6c fe 6c 18 60 30     ..l.......l.l.`0
    13d4:	0c 18 44 00 c0 cc c6 06 18 c6 38 ee c6 18 c0 38     ..D.......8....8
    13e4:	06 38 00 00 c0 76 c6 fc 18 7c 10 c6 c6 18 fe 00     .8...v...|......
    13f4:	00 00 00 fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1404:	00 00 00 00 00 00 c0 00 06 00 3e 00 c0 18 0c c0     ..........>.....
    1414:	38 00 00 00 60 7c fc 7e 7e 7c 60 7e c0 00 00 c6     8...`|.~~|`~....
    1424:	18 fc fc 7c 20 06 c6 c0 c6 c6 60 c6 fc 38 1c cc     ...| .....`..8..
    1434:	18 d6 c6 c6 00 7e c6 c0 c6 c6 fc c6 c6 18 0c f8     .....~..........
    1444:	18 d6 c6 c6 00 c6 c6 c0 c6 fc 60 c6 c6 18 0c cc     ..........`.....
    1454:	18 d6 c6 c6 00 c6 c6 c0 c6 c0 60 7e c6 18 0c c6     ..........`~....
    1464:	18 d6 c6 c6 00 7e fc 7e 7e 7c 60 06 c6 18 0c c6     .....~.~~|`.....
    1474:	18 d6 c6 7c 00 00 00 00 00 00 00 7c 00 00 78 00     ...|.......|..x.
	...
    148c:	18 00 00 00 00 00 00 00 00 00 00 00 fc 7e fc 7c     .............~.|
    149c:	18 c6 c6 d6 c6 c6 fe 38 10 38 00 00 c6 c6 c6 c0     .......8.8......
    14ac:	7e c6 c6 d6 6c c6 0c 30 10 18 30 00 c6 c6 c0 7c     ~...l..0..0....|
    14bc:	18 c6 c6 d6 38 c6 38 60 10 0c 5a 00 c6 c6 c0 06     ....8.8`..Z.....
    14cc:	18 c6 6c d6 6c c6 60 30 10 18 0c 00 c6 c6 c0 06     ..l.l.`0........
    14dc:	18 c6 38 d6 c6 7e c0 38 10 38 00 00 fc 7e c0 7c     ..8..~.8.8...~.|
    14ec:	18 7e 10 7e c6 06 fe 00 00 00 00 00 c0 06 00 00     .~.~............
    14fc:	00 00 00 00 00 7c 00 00 00 00 00 00                 .....|......

00001508 <_ZL9logoAtmel>:
    1508:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1518:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1528:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
    1538:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
    1548:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1558:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    1568:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1578:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
    1588:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
    1598:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
    15a8:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
    15b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15c8:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
    15d8:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15e8:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
    15f8:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
    1608:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
    1618:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
    1628:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1638:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
    1648:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
    1658:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
    1668:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
    1678:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
    1688:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
    1698:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    16a8:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
    16b8:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
    16c8:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
    16d8:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
    16e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
    16f8:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
    1708:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
    1718:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
    1728:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
    1738:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
    1748:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
    1758:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1768:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
    1778:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
    1788:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
    1798:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
    17a8:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
    17b8:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
    17c8:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    17d8:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
    17e8:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
    17f8:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
    1808:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
    1818:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
    1828:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
    1838:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
    1848:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
    1858:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
    1868:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1878:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
    1888:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1898:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
    18a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
    18c8:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18e8:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
    18f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1908:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
    1918:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1928:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
    1938:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
    1948:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1958:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
    1968:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
    1978:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
    1988:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
    1998:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    19a8:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
    19b8:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
    19c8:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
    19d8:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
    19e8:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
    19f8:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
    1a08:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
    1a18:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
    1a28:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
    1a38:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
    1a48:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
    1a58:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
    1a68:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
    1a78:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
    1a88:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
    1a98:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
    1aa8:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
    1ab8:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
    1ac8:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
    1ad8:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
    1ae8:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
    1af8:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
    1b08:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
    1b18:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
    1b28:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
    1b38:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
    1b48:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
    1b58:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
    1b68:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
    1b78:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1b88:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
    1b98:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
    1ba8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bb8:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
    1bc8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bd8:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
    1be8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bf8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1c08:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
    1c18:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00001c28 <_ZL8charDown>:
	...
    1c30:	00 00 00 3c 00 00 00 00 ff c0 00 00 00 fa bc 00     ...<............
    1c40:	00 00 3a ab 00 00 00 3a aa c0 00 00 ea aa b0 00     ..:....:........
    1c50:	00 ea aa b0 00 03 aa af ac 00 03 aa bf ac 00 03     ................
    1c60:	6a bf dc 00 03 5a ff dc 00 03 57 cf 1c 00 03 d7     j....Z....W.....
    1c70:	cf 3c 00 0e a4 ff d7 00 3a a9 00 57 00 ea a9 50     .<......:..W...P
    1c80:	55 c0 ea a9 50 55 c0 da a9 80 55 c0 e6 a9 80 57     U...PU....U....W
    1c90:	00 39 56 00 5c 00 0e a8 00 f0 00 03 f0 00 c0 00     .9V.\...........
    1ca0:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1cb0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1cc0:	cc 00 00 00 00 30 00 00 00 00 00 00 00 00 03 c0     .....0..........
    1cd0:	00 00 00 0f fc 00 00 00 0f ab 00 00 00 03 aa c0     ................
    1ce0:	00 00 0e aa c0 00 00 3a aa b0 00 00 ea aa b0 00     .......:........
    1cf0:	03 aa aa ac 00 03 aa af ac 00 03 5a af ec 00 03     ...........Z....
    1d00:	5a bf ec 00 00 d7 ff dc 00 00 37 cf 1c 00 00 d7     Z.........7.....
    1d10:	cf 3c 00 0f a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
    1d20:	55 c0 ea aa 50 57 00 da aa 60 5c 00 e5 55 80 5c     U...PW...`\..U.\
    1d30:	00 3a aa 00 70 00 0f f0 00 c0 00 00 30 00 c0 00     .:..p.......0...
    1d40:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1d50:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1d60:	cc 00 00 00 00 30 00 00 00 00 f0 00 00 00 03 fc     .....0..........
    1d70:	00 00 00 03 bc 00 00 00 0e ac 00 00 00 3a ab 00     .............:..
    1d80:	00 00 ea aa c0 00 00 ea aa c0 00 03 aa aa c0 00     ................
    1d90:	03 aa ab b0 00 03 6a af b0 00 00 da af ac 00 00     ......j.........
    1da0:	d6 ff 6c 00 00 d7 ff dc 00 00 37 cf 1c 00 0f d7     ..l.......7.....
    1db0:	cf 3f c0 3a a4 ff d5 70 ea a9 00 55 70 ea a9 50     .?.:...p...Up..P
    1dc0:	55 70 da aa 50 55 c0 e6 aa 60 57 00 39 55 a0 7c     Up..PU...`W.9U.|
    1dd0:	00 0e aa 00 c0 00 03 f0 00 c0 00 00 30 00 c0 00     ............0...
    1de0:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1df0:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1e00:	cc 00 00 00 00 30 00 00 00 03 c0 00 00 00 0f f0     .....0..........
    1e10:	00 00 00 0f b0 00 00 00 0e b0 00 00 00 3a ac 00     .............:..
    1e20:	00 00 ea ab 00 00 00 ea ab 00 00 00 ea aa c0 00     ................
    1e30:	00 ea ae b0 00 00 ea af ac 00 00 ea bf ac 00 00     ................
    1e40:	da ff ac 00 00 da ff dc 00 03 57 cf 1c 00 03 d7     ..........W.....
    1e50:	cf 3c 00 0e a4 ff d7 00 3a a9 00 55 c0 ea a9 50     .<......:..U...P
    1e60:	55 70 da aa 50 55 70 e6 aa 60 55 c0 39 6a 60 57     Up..PUp..`U.9j`W
    1e70:	00 0e 95 80 fc 00 03 ea 00 c0 00 00 30 00 c0 00     ............0...
    1e80:	00 0c 00 c0 00 00 03 c0 c0 00 00 00 c3 00 00 00     ................
    1e90:	00 c3 00 00 00 00 c3 00 00 00 00 cc 00 00 00 00     ................
    1ea0:	cc 00 00 00 00 30 00 00                             .....0..

00001ea8 <_ZL6charUp>:
    1ea8:	00 3f f0 00 00 ea af 00 03 ab fe c0 03 af ff b0     .?..............
    1eb8:	0e af 3c b0 0e af 3c f0 0e 7f ff f0 0d 7f ff f0     ..<...<.........
    1ec8:	0d 73 fc f0 0d 74 00 f0 3d b5 41 f0 f5 b9 01 f0     .s...t..=.A.....
    1ed8:	fe ba 02 f0 3e 9a 00 6c 0e aa 00 ac 0e aa 00 6c     ....>..l.......l
    1ee8:	0e aa 00 30 0e aa 00 30 0e aa 00 70 0d aa 10 70     ...0...0...p...p
    1ef8:	0e 68 11 70 03 94 3d c0 00 e8 33 00 00 3c f0 00     .h.p..=...3..<..
    1f08:	00 03 00 00 00 0f fc 00 00 fa ab 00 03 ab fe c0     ................
    1f18:	0e af ff b0 0e af 3c b0 0e bf 3c f0 0e 7f ff f0     ......<...<.....
    1f28:	0d 7f ff f0 0d 73 fc f0 0d 74 00 f0 0d b5 40 f0     .....s...t....@.
    1f38:	0d b5 01 f0 3d b9 02 f0 3e 9a 02 70 0e aa 00 b0     ....=...>..p....
    1f48:	0e aa 00 ac 0e aa 00 2c 0e aa 00 2c 0e aa 00 5c     .......,...,...\
    1f58:	0e aa 10 70 0d 68 31 70 0e 94 3d c0 03 e8 33 00     ...p.h1p..=...3.
    1f68:	00 3c f0 00 00 03 00 00 00 3f fc 00 00 ea ab 00     .<.......?......
    1f78:	03 ab fe c0 03 af ff b0 0e bf 3c f0 3a bf 3c f0     ..........<.:.<.
    1f88:	3a 7f ff f0 3a 7f ff f0 0d 73 fc f0 0d 74 00 f0     :...:....s...t..
    1f98:	0d 74 00 f0 0d b5 41 f0 0e b9 01 f0 0e ba 02 f0     .t....A.........
    1fa8:	0e 9a 00 b0 0e aa 00 b0 0e aa 00 30 0e aa 00 30     ...........0...0
    1fb8:	0d aa 00 70 0e 6a 20 5c 0e 68 11 5c 03 94 3f 70     ...p.j \.h.\..?p
    1fc8:	00 e8 30 c0 00 3c f0 00 00 03 00 00 00 3f f0 00     ..0..<.......?..
    1fd8:	00 ea af 00 03 ab fe c0 03 af ff b0 0e af 3c f0     ..............<.
    1fe8:	0e af 3c f0 3a 7f ff f0 3a 7f ff f0 3a 73 fc f0     ..<.:...:...:s..
    1ff8:	3a 74 00 f0 3d b5 00 f0 3e b5 41 f0 0e ba 02 f0     :t..=...>.A.....
    2008:	0e 9a 02 70 0e aa 00 b0 0e aa 00 b0 0e aa 00 30     ...p...........0
    2018:	0e aa 00 30 0e aa 00 70 0d aa 20 70 0e 68 11 70     ...0...p.. p.h.p
    2028:	03 98 3f 70 00 e4 30 c0 00 38 f0 00 00 0f 00 00     ..?p..0..8......

00002038 <_ZL7charRun>:
    2038:	00 00 00 00 00 00 00 0f fc 00 00 f0 fa ab c0 03     ................
    2048:	ff aa aa b0 03 ea aa aa ac 00 fa aa aa fc 00 0d     ................
    2058:	6a af ff 00 0d 5d 5f ff 00 03 d7 ff 3c 00 00 35     j....]_.....<..5
    2068:	57 3c 00 00 f5 57 fc 00 03 aa 57 f0 00 3e aa 60     W<...W....W..>.`
    2078:	70 00 ea a9 80 70 03 aa a9 80 c0 0e aa 96 02 c0     p....p..........
    2088:	0e 95 68 07 00 39 6a 80 03 00 0e b5 50 03 00 03     ..h..9j.....P...
    2098:	cd 40 0c 00 00 00 00 ff c0 00 00 0f aa b0 00 00     .@..............
    20a8:	3a aa ac 00 f3 ea aa fc 03 fe aa aa ff 03 ea aa     :...............
    20b8:	ab ff 00 f5 aa 9f fc 00 0d 55 5f 3c 00 03 f7 5f     .........U_<..._
    20c8:	3c 00 00 39 f7 f0 00 00 e9 54 70 00 03 aa 98 70     <..9.....Tp....p
    20d8:	00 0e aa 60 c0 00 3a aa 60 c0 00 ea a9 80 c0 03     ...`..:.`.......
    20e8:	aa a9 80 c0 0e aa 96 00 c0 39 55 68 c3 00 0e aa     .........9Uh....
    20f8:	83 3c 00 03 fc 0c 00 00 00 00 0f ff f0 00 00 3a     .<.............:
    2108:	aa ac 00 00 ea aa ff 00 03 aa ab ff 00 3f aa ab     .............?..
    2118:	ff 00 fe aa af 3c 00 fa aa b7 3c 00 3d 55 d7 fc     .....<....<.=U..
    2128:	00 03 d5 d7 f0 00 03 a9 54 70 00 0e aa 60 b0 00     ........Tp...`..
    2138:	3a a9 80 b0 00 3a a6 02 b0 00 ea a6 02 c0 00 ea     :....:..........
    2148:	98 00 c0 00 ea 98 00 c0 03 95 58 f0 c0 00 ea a3     ..........X.....
    2158:	0c c0 00 3c 0c 03 00 00 03 30 00 00 00 00 ff ff     ...<.....0......
    2168:	c0 00 03 aa aa b0 00 0e aa aa ac 00 3a aa aa ff     ............:...
    2178:	00 ea aa af ff 03 e6 ab ff fc 03 fd 9f 57 3c 00     .............W<.
    2188:	ff 57 57 3c 00 0f a5 57 fc 00 3a a9 53 f0 00 ea     .WW<...W..:.S...
    2198:	a6 80 c0 03 aa 98 00 c0 03 aa 60 02 b0 0e a9 80     ..........`.....
    21a8:	02 b0 0d a9 80 0a b0 0e 69 80 02 c0 03 95 80 03     ........i.......
    21b8:	00 00 ea 00 00 c0 00 3f 01 70 c0 00 00 ff cc 30     .......?.p.....0
    21c8:	00 03 ff fc 00 00 3e aa ab c0 03 ea aa aa b0 0f     ......>.........
    21d8:	aa aa aa ac 0f f6 aa ab ff 03 cd af af ff 00 03     ................
    21e8:	75 ff fc 00 00 d5 57 3c 00 00 d5 57 3c 00 03 e5     u.....W<...W<...
    21f8:	57 fc 00 3e a9 63 f0 03 ea a6 80 c0 0e aa 98 00     W..>.c..........
    2208:	c0 3a aa 60 02 c0 36 a9 80 02 c0 39 a6 00 0a c0     .:.`..6....9....
    2218:	0e 56 40 0a c0 03 ab 50 03 00 00 fc c0 03 00 00     .V@....P........
    2228:	00 3a 83 00 00 00 00 00 00 00 00 0f fc 00 00 f0     .:..............
    2238:	fa ab c0 03 ff aa aa b0 03 ea aa aa ac 00 d6 aa     ................
    2248:	ab fc 00 3d 6a bf ff 00 0d 5d 5f ff 00 03 d7 fc     ...=j....]_.....
    2258:	fc 00 00 35 5c fc 00 00 f5 5f fc 00 03 a9 4f f0     ...5\...._....O.
    2268:	00 3e a9 80 70 00 ea a6 00 70 03 aa a6 00 70 0e     .>..p....p....p.
    2278:	aa 58 02 c0 0e 55 a0 0a c0 39 aa 00 03 00 0e b5     .X...U...9......
    2288:	50 03 00 03 cd 4c 0c 00                             P....L..

00002290 <__ctors_start>:
    2290:	e3 11       	cpse	r30, r3

00002292 <__ctors_end>:
    2292:	11 24       	eor	r1, r1
    2294:	1f be       	out	0x3f, r1	; 63
    2296:	cf ef       	ldi	r28, 0xFF	; 255
    2298:	d8 e0       	ldi	r29, 0x08	; 8
    229a:	de bf       	out	0x3e, r29	; 62
    229c:	cd bf       	out	0x3d, r28	; 61

0000229e <__do_copy_data>:
    229e:	11 e0       	ldi	r17, 0x01	; 1
    22a0:	a0 e0       	ldi	r26, 0x00	; 0
    22a2:	b1 e0       	ldi	r27, 0x01	; 1
    22a4:	e4 e5       	ldi	r30, 0x54	; 84
    22a6:	f7 e3       	ldi	r31, 0x37	; 55
    22a8:	02 c0       	rjmp	.+4      	; 0x22ae <__do_copy_data+0x10>
    22aa:	05 90       	lpm	r0, Z+
    22ac:	0d 92       	st	X+, r0
    22ae:	a8 30       	cpi	r26, 0x08	; 8
    22b0:	b1 07       	cpc	r27, r17
    22b2:	d9 f7       	brne	.-10     	; 0x22aa <__do_copy_data+0xc>

000022b4 <__do_clear_bss>:
    22b4:	21 e0       	ldi	r18, 0x01	; 1
    22b6:	a8 e0       	ldi	r26, 0x08	; 8
    22b8:	b1 e0       	ldi	r27, 0x01	; 1
    22ba:	01 c0       	rjmp	.+2      	; 0x22be <.do_clear_bss_start>

000022bc <.do_clear_bss_loop>:
    22bc:	1d 92       	st	X+, r1

000022be <.do_clear_bss_start>:
    22be:	ac 31       	cpi	r26, 0x1C	; 28
    22c0:	b2 07       	cpc	r27, r18
    22c2:	e1 f7       	brne	.-8      	; 0x22bc <.do_clear_bss_loop>

000022c4 <__do_global_ctors>:
    22c4:	11 e1       	ldi	r17, 0x11	; 17
    22c6:	c9 e4       	ldi	r28, 0x49	; 73
    22c8:	d1 e1       	ldi	r29, 0x11	; 17
    22ca:	04 c0       	rjmp	.+8      	; 0x22d4 <__do_global_ctors+0x10>
    22cc:	21 97       	sbiw	r28, 0x01	; 1
    22ce:	fe 01       	movw	r30, r28
    22d0:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__tablejump2__>
    22d4:	c8 34       	cpi	r28, 0x48	; 72
    22d6:	d1 07       	cpc	r29, r17
    22d8:	c9 f7       	brne	.-14     	; 0x22cc <__do_global_ctors+0x8>
    22da:	0e 94 73 11 	call	0x22e6	; 0x22e6 <main>
    22de:	0c 94 a8 1b 	jmp	0x3750	; 0x3750 <_exit>

000022e2 <__bad_interrupt>:
    22e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000022e6 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
    22e6:	61 e0       	ldi	r22, 0x01	; 1
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	0e 94 92 16 	call	0x2d24	; 0x2d24 <_ZN3MCU7Setting9beginPortEab>
  beginPin(D, 6);
    22ee:	66 e0       	ldi	r22, 0x06	; 6
    22f0:	82 e0       	ldi	r24, 0x02	; 2
    22f2:	0e 94 65 16 	call	0x2cca	; 0x2cca <_ZN3MCU7Setting8beginPinEaa>

  beginINT(0, DOWN);
    22f6:	61 e0       	ldi	r22, 0x01	; 1
    22f8:	80 e0       	ldi	r24, 0x00	; 0
    22fa:	0e 94 a2 16 	call	0x2d44	; 0x2d44 <_ZN3MCU7Setting8beginINTEaa>
  //beginINT(1, DOWN);
  beginTimer(1, COMP);
    22fe:	61 e0       	ldi	r22, 0x01	; 1
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
    2306:	61 e0       	ldi	r22, 0x01	; 1
    2308:	82 e0       	ldi	r24, 0x02	; 2
    230a:	0e 94 bd 16 	call	0x2d7a	; 0x2d7a <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
    230e:	61 e0       	ldi	r22, 0x01	; 1
    2310:	83 e0       	ldi	r24, 0x03	; 3
    2312:	0e 94 14 17 	call	0x2e28	; 0x2e28 <_ZN3MCU7Setting8beginPWMEab>
  beginSPI();
    2316:	0e 94 ac 17 	call	0x2f58	; 0x2f58 <_ZN3MCU7Setting8beginSPIEv>
  sei();
    231a:	78 94       	sei

  TCCR0B = 0x00;
    231c:	15 bc       	out	0x25, r1	; 37

  game.title();
    231e:	88 e0       	ldi	r24, 0x08	; 8
    2320:	91 e0       	ldi	r25, 0x01	; 1
    2322:	0e 94 bc 13 	call	0x2778	; 0x2778 <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
    2326:	88 e0       	ldi	r24, 0x08	; 8
    2328:	91 e0       	ldi	r25, 0x01	; 1
    232a:	0e 94 94 14 	call	0x2928	; 0x2928 <_ZN4Game5startEv>
    232e:	fb cf       	rjmp	.-10     	; 0x2326 <main+0x40>

00002330 <__vector_1>:
---------------  MAIN END  ---------------
//========================================*/


ISR(INT0_vect)
{
    2330:	1f 92       	push	r1
    2332:	0f 92       	push	r0
    2334:	0f b6       	in	r0, 0x3f	; 63
    2336:	0f 92       	push	r0
    2338:	11 24       	eor	r1, r1
    233a:	8f 93       	push	r24
  SW::interrupt0 = ON;
    233c:	81 e0       	ldi	r24, 0x01	; 1
    233e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <_ZN2SW10interrupt0E>
}
    2342:	8f 91       	pop	r24
    2344:	0f 90       	pop	r0
    2346:	0f be       	out	0x3f, r0	; 63
    2348:	0f 90       	pop	r0
    234a:	1f 90       	pop	r1
    234c:	18 95       	reti

0000234e <__vector_11>:

ISR(TIMER1_COMPA_vect)
{
    234e:	1f 92       	push	r1
    2350:	0f 92       	push	r0
    2352:	0f b6       	in	r0, 0x3f	; 63
    2354:	0f 92       	push	r0
    2356:	11 24       	eor	r1, r1
    2358:	8f 93       	push	r24
    235a:	9f 93       	push	r25
  Frame::secondTime++;
    235c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <_ZN5Frame10secondTimeE>
    2360:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    2364:	01 96       	adiw	r24, 0x01	; 1
    2366:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    236a:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <_ZN5Frame10secondTimeE>
}
    236e:	9f 91       	pop	r25
    2370:	8f 91       	pop	r24
    2372:	0f 90       	pop	r0
    2374:	0f be       	out	0x3f, r0	; 63
    2376:	0f 90       	pop	r0
    2378:	1f 90       	pop	r1
    237a:	18 95       	reti

0000237c <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
    237c:	1f 92       	push	r1
    237e:	0f 92       	push	r0
    2380:	0f b6       	in	r0, 0x3f	; 63
    2382:	0f 92       	push	r0
    2384:	11 24       	eor	r1, r1
    2386:	8f 93       	push	r24
    2388:	9f 93       	push	r25
    238a:	af 93       	push	r26
    238c:	bf 93       	push	r27
  Frame::presentTime++;
    238e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    2392:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2396:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    239a:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    239e:	01 96       	adiw	r24, 0x01	; 1
    23a0:	a1 1d       	adc	r26, r1
    23a2:	b1 1d       	adc	r27, r1
    23a4:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <_ZN5Frame11presentTimeE>
    23a8:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    23ac:	a0 93 17 01 	sts	0x0117, r26	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    23b0:	b0 93 18 01 	sts	0x0118, r27	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
}
    23b4:	bf 91       	pop	r27
    23b6:	af 91       	pop	r26
    23b8:	9f 91       	pop	r25
    23ba:	8f 91       	pop	r24
    23bc:	0f 90       	pop	r0
    23be:	0f be       	out	0x3f, r0	; 63
    23c0:	0f 90       	pop	r0
    23c2:	1f 90       	pop	r1
    23c4:	18 95       	reti

000023c6 <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    23c6:	e8 e0       	ldi	r30, 0x08	; 8
    23c8:	f1 e0       	ldi	r31, 0x01	; 1
    23ca:	80 ef       	ldi	r24, 0xF0	; 240
    23cc:	90 e0       	ldi	r25, 0x00	; 0
    23ce:	91 83       	std	Z+1, r25	; 0x01
    23d0:	80 83       	st	Z, r24
    23d2:	80 e4       	ldi	r24, 0x40	; 64
    23d4:	91 e0       	ldi	r25, 0x01	; 1
    23d6:	93 83       	std	Z+3, r25	; 0x03
    23d8:	82 83       	std	Z+2, r24	; 0x02
    23da:	08 95       	ret

000023dc <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    23dc:	8f 92       	push	r8
    23de:	9f 92       	push	r9
    23e0:	af 92       	push	r10
    23e2:	bf 92       	push	r11
    23e4:	cf 92       	push	r12
    23e6:	df 92       	push	r13
    23e8:	ef 92       	push	r14
    23ea:	ff 92       	push	r15
    23ec:	0f 93       	push	r16
    23ee:	1f 93       	push	r17
    23f0:	cf 93       	push	r28
    23f2:	df 93       	push	r29
    23f4:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
    23f6:	82 2f       	mov	r24, r18
    23f8:	90 e0       	ldi	r25, 0x00	; 0
    23fa:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
    23fc:	9c 01       	movw	r18, r24
    23fe:	12 f4       	brpl	.+4      	; 0x2404 <_ZN4Font11printLetterEiih+0x28>
    2400:	21 5f       	subi	r18, 0xF1	; 241
    2402:	3f 4f       	sbci	r19, 0xFF	; 255
    2404:	49 01       	movw	r8, r18
    2406:	95 94       	asr	r9
    2408:	87 94       	ror	r8
    240a:	95 94       	asr	r9
    240c:	87 94       	ror	r8
    240e:	95 94       	asr	r9
    2410:	87 94       	ror	r8
    2412:	95 94       	asr	r9
    2414:	87 94       	ror	r8
    2416:	96 94       	lsr	r9
    2418:	98 2c       	mov	r9, r8
    241a:	88 24       	eor	r8, r8
    241c:	97 94       	ror	r9
    241e:	87 94       	ror	r8
    2420:	8f 70       	andi	r24, 0x0F	; 15
    2422:	90 78       	andi	r25, 0x80	; 128
    2424:	99 23       	and	r25, r25
    2426:	24 f4       	brge	.+8      	; 0x2430 <_ZN4Font11printLetterEiih+0x54>
    2428:	01 97       	sbiw	r24, 0x01	; 1
    242a:	80 6f       	ori	r24, 0xF0	; 240
    242c:	9f 6f       	ori	r25, 0xFF	; 255
    242e:	01 96       	adiw	r24, 0x01	; 1
    2430:	88 0e       	add	r8, r24
    2432:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
    2434:	8a 01       	movw	r16, r20
    2436:	01 5f       	subi	r16, 0xF1	; 241
    2438:	1f 4f       	sbci	r17, 0xFF	; 255
    243a:	9b 01       	movw	r18, r22
    243c:	21 5f       	subi	r18, 0xF1	; 241
    243e:	3f 4f       	sbci	r19, 0xFF	; 255
    2440:	ce 01       	movw	r24, r28
    2442:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>
    2446:	54 01       	movw	r10, r8
    2448:	80 e8       	ldi	r24, 0x80	; 128
    244a:	88 0e       	add	r8, r24
    244c:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
    244e:	68 94       	set
    2450:	cc 24       	eor	r12, r12
    2452:	c1 f8       	bld	r12, 1
    2454:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
    2456:	ec 81       	ldd	r30, Y+4	; 0x04
    2458:	fd 81       	ldd	r31, Y+5	; 0x05
    245a:	ea 0d       	add	r30, r10
    245c:	fb 1d       	adc	r31, r11
    245e:	14 91       	lpm	r17, Z
    2460:	68 94       	set
    2462:	ee 24       	eor	r14, r14
    2464:	e3 f8       	bld	r14, 3
    2466:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
    2468:	11 23       	and	r17, r17
    246a:	5c f4       	brge	.+22     	; 0x2482 <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
    246c:	68 85       	ldd	r22, Y+8	; 0x08
    246e:	79 85       	ldd	r23, Y+9	; 0x09
    2470:	ce 01       	movw	r24, r28
    2472:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    2476:	68 85       	ldd	r22, Y+8	; 0x08
    2478:	79 85       	ldd	r23, Y+9	; 0x09
    247a:	ce 01       	movw	r24, r28
    247c:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    2480:	0a c0       	rjmp	.+20     	; 0x2496 <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
    2482:	6e 81       	ldd	r22, Y+6	; 0x06
    2484:	7f 81       	ldd	r23, Y+7	; 0x07
    2486:	ce 01       	movw	r24, r28
    2488:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    248c:	6e 81       	ldd	r22, Y+6	; 0x06
    248e:	7f 81       	ldd	r23, Y+7	; 0x07
    2490:	ce 01       	movw	r24, r28
    2492:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
    2496:	11 0f       	add	r17, r17
    2498:	81 e0       	ldi	r24, 0x01	; 1
    249a:	e8 1a       	sub	r14, r24
    249c:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
    249e:	21 f7       	brne	.-56     	; 0x2468 <_ZN4Font11printLetterEiih+0x8c>
    24a0:	81 e0       	ldi	r24, 0x01	; 1
    24a2:	c8 1a       	sub	r12, r24
    24a4:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    24a6:	b9 f6       	brne	.-82     	; 0x2456 <_ZN4Font11printLetterEiih+0x7a>
    24a8:	80 e1       	ldi	r24, 0x10	; 16
    24aa:	a8 0e       	add	r10, r24
    24ac:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
    24ae:	a8 14       	cp	r10, r8
    24b0:	b9 04       	cpc	r11, r9
    24b2:	69 f6       	brne	.-102    	; 0x244e <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
    24b4:	df 91       	pop	r29
    24b6:	cf 91       	pop	r28
    24b8:	1f 91       	pop	r17
    24ba:	0f 91       	pop	r16
    24bc:	ff 90       	pop	r15
    24be:	ef 90       	pop	r14
    24c0:	df 90       	pop	r13
    24c2:	cf 90       	pop	r12
    24c4:	bf 90       	pop	r11
    24c6:	af 90       	pop	r10
    24c8:	9f 90       	pop	r9
    24ca:	8f 90       	pop	r8
    24cc:	08 95       	ret

000024ce <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
    24ce:	cf 92       	push	r12
    24d0:	df 92       	push	r13
    24d2:	ef 92       	push	r14
    24d4:	ff 92       	push	r15
    24d6:	0f 93       	push	r16
    24d8:	1f 93       	push	r17
    24da:	cf 93       	push	r28
    24dc:	df 93       	push	r29
    24de:	7c 01       	movw	r14, r24
    24e0:	eb 01       	movw	r28, r22
    24e2:	6a 01       	movw	r12, r20
    24e4:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
    24e6:	20 81       	ld	r18, Z
    24e8:	22 23       	and	r18, r18
    24ea:	71 f0       	breq	.+28     	; 0x2508 <_ZN4Font5printEiiPKc+0x3a>
    24ec:	8f 01       	movw	r16, r30
    24ee:	0f 5f       	subi	r16, 0xFF	; 255
    24f0:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
    24f2:	a6 01       	movw	r20, r12
    24f4:	be 01       	movw	r22, r28
    24f6:	c7 01       	movw	r24, r14
    24f8:	0e 94 ee 11 	call	0x23dc	; 0x23dc <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
    24fc:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
    24fe:	f8 01       	movw	r30, r16
    2500:	21 91       	ld	r18, Z+
    2502:	8f 01       	movw	r16, r30
    2504:	21 11       	cpse	r18, r1
    2506:	f5 cf       	rjmp	.-22     	; 0x24f2 <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

}
    2508:	df 91       	pop	r29
    250a:	cf 91       	pop	r28
    250c:	1f 91       	pop	r17
    250e:	0f 91       	pop	r16
    2510:	ff 90       	pop	r15
    2512:	ef 90       	pop	r14
    2514:	df 90       	pop	r13
    2516:	cf 90       	pop	r12
    2518:	08 95       	ret

0000251a <_ZN4Font5printEiim>:
/*----------------------------------------//
              Print Intager
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{
    251a:	2f 92       	push	r2
    251c:	3f 92       	push	r3
    251e:	4f 92       	push	r4
    2520:	5f 92       	push	r5
    2522:	6f 92       	push	r6
    2524:	7f 92       	push	r7
    2526:	8f 92       	push	r8
    2528:	9f 92       	push	r9
    252a:	af 92       	push	r10
    252c:	bf 92       	push	r11
    252e:	cf 92       	push	r12
    2530:	df 92       	push	r13
    2532:	ef 92       	push	r14
    2534:	ff 92       	push	r15
    2536:	0f 93       	push	r16
    2538:	1f 93       	push	r17
    253a:	cf 93       	push	r28
    253c:	df 93       	push	r29
    253e:	cd b7       	in	r28, 0x3d	; 61
    2540:	de b7       	in	r29, 0x3e	; 62
    2542:	27 97       	sbiw	r28, 0x07	; 7
    2544:	0f b6       	in	r0, 0x3f	; 63
    2546:	f8 94       	cli
    2548:	de bf       	out	0x3e, r29	; 62
    254a:	0f be       	out	0x3f, r0	; 63
    254c:	cd bf       	out	0x3d, r28	; 61
    254e:	9a 83       	std	Y+2, r25	; 0x02
    2550:	89 83       	std	Y+1, r24	; 0x01
    2552:	b6 2e       	mov	r11, r22
    2554:	a7 2e       	mov	r10, r23
    2556:	5c 83       	std	Y+4, r21	; 0x04
    2558:	4b 83       	std	Y+3, r20	; 0x03
    255a:	68 01       	movw	r12, r16
    255c:	79 01       	movw	r14, r18

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    255e:	0a 30       	cpi	r16, 0x0A	; 10
    2560:	11 05       	cpc	r17, r1
    2562:	21 05       	cpc	r18, r1
    2564:	31 05       	cpc	r19, r1
    2566:	88 f1       	brcs	.+98     	; 0x25ca <_ZN4Font5printEiim+0xb0>
    2568:	91 e0       	ldi	r25, 0x01	; 1
    256a:	9d 83       	std	Y+5, r25	; 0x05
    256c:	41 2c       	mov	r4, r1
    256e:	51 2c       	mov	r5, r1
    2570:	32 01       	movw	r6, r4
    2572:	43 94       	inc	r4
    2574:	09 c0       	rjmp	.+18     	; 0x2588 <_ZN4Font5printEiim+0x6e>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    2576:	9d 81       	ldd	r25, Y+5	; 0x05
    2578:	89 2f       	mov	r24, r25
    257a:	90 e0       	ldi	r25, 0x00	; 0
    257c:	9f 83       	std	Y+7, r25	; 0x07
    257e:	8e 83       	std	Y+6, r24	; 0x06
    2580:	18 16       	cp	r1, r24
    2582:	19 06       	cpc	r1, r25
    2584:	54 f1       	brlt	.+84     	; 0x25da <_ZN4Font5printEiim+0xc0>
    2586:	57 c0       	rjmp	.+174    	; 0x2636 <_ZN4Font5printEiim+0x11c>
  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
  {
    digit++;
    2588:	8d 81       	ldd	r24, Y+5	; 0x05
    258a:	8f 5f       	subi	r24, 0xFF	; 255
    258c:	8d 83       	std	Y+5, r24	; 0x05
    placeValue *= 10;
    258e:	44 0c       	add	r4, r4
    2590:	55 1c       	adc	r5, r5
    2592:	66 1c       	adc	r6, r6
    2594:	77 1c       	adc	r7, r7
    2596:	d3 01       	movw	r26, r6
    2598:	c2 01       	movw	r24, r4
    259a:	88 0f       	add	r24, r24
    259c:	99 1f       	adc	r25, r25
    259e:	aa 1f       	adc	r26, r26
    25a0:	bb 1f       	adc	r27, r27
    25a2:	88 0f       	add	r24, r24
    25a4:	99 1f       	adc	r25, r25
    25a6:	aa 1f       	adc	r26, r26
    25a8:	bb 1f       	adc	r27, r27
    25aa:	48 0e       	add	r4, r24
    25ac:	59 1e       	adc	r5, r25
    25ae:	6a 1e       	adc	r6, r26
    25b0:	7b 1e       	adc	r7, r27
{

  uint32_t placeValue = 1;
  uint8_t digit = 1;

  while ((intager / placeValue) > 9)
    25b2:	c7 01       	movw	r24, r14
    25b4:	b6 01       	movw	r22, r12
    25b6:	a3 01       	movw	r20, r6
    25b8:	92 01       	movw	r18, r4
    25ba:	0e 94 80 1b 	call	0x3700	; 0x3700 <__udivmodsi4>
    25be:	2a 30       	cpi	r18, 0x0A	; 10
    25c0:	31 05       	cpc	r19, r1
    25c2:	41 05       	cpc	r20, r1
    25c4:	51 05       	cpc	r21, r1
    25c6:	00 f7       	brcc	.-64     	; 0x2588 <_ZN4Font5printEiim+0x6e>
    25c8:	d6 cf       	rjmp	.-84     	; 0x2576 <_ZN4Font5printEiim+0x5c>
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    25ca:	81 e0       	ldi	r24, 0x01	; 1
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	9f 83       	std	Y+7, r25	; 0x07
    25d0:	8e 83       	std	Y+6, r24	; 0x06
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, uint32_t intager)
{

  uint32_t placeValue = 1;
    25d2:	41 2c       	mov	r4, r1
    25d4:	51 2c       	mov	r5, r1
    25d6:	32 01       	movw	r6, r4
    25d8:	43 94       	inc	r4
    25da:	0b 2d       	mov	r16, r11
    25dc:	1a 2d       	mov	r17, r10
    25de:	a1 2c       	mov	r10, r1
    25e0:	b1 2c       	mov	r11, r1
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
  {
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    25e2:	c7 01       	movw	r24, r14
    25e4:	b6 01       	movw	r22, r12
    25e6:	a3 01       	movw	r20, r6
    25e8:	92 01       	movw	r18, r4
    25ea:	0e 94 80 1b 	call	0x3700	; 0x3700 <__udivmodsi4>
    25ee:	26 2e       	mov	r2, r22
    25f0:	37 2e       	mov	r3, r23
    25f2:	88 2e       	mov	r8, r24
    25f4:	99 2e       	mov	r9, r25
    25f6:	20 5d       	subi	r18, 0xD0	; 208
    25f8:	4b 81       	ldd	r20, Y+3	; 0x03
    25fa:	5c 81       	ldd	r21, Y+4	; 0x04
    25fc:	b8 01       	movw	r22, r16
    25fe:	89 81       	ldd	r24, Y+1	; 0x01
    2600:	9a 81       	ldd	r25, Y+2	; 0x02
    2602:	0e 94 ee 11 	call	0x23dc	; 0x23dc <_ZN4Font11printLetterEiih>
    intager %= placeValue;
    2606:	c2 2c       	mov	r12, r2
    2608:	d3 2c       	mov	r13, r3
    260a:	e8 2c       	mov	r14, r8
    260c:	f9 2c       	mov	r15, r9
    placeValue /= 10;
    260e:	c3 01       	movw	r24, r6
    2610:	b2 01       	movw	r22, r4
    2612:	2a e0       	ldi	r18, 0x0A	; 10
    2614:	30 e0       	ldi	r19, 0x00	; 0
    2616:	40 e0       	ldi	r20, 0x00	; 0
    2618:	50 e0       	ldi	r21, 0x00	; 0
    261a:	0e 94 80 1b 	call	0x3700	; 0x3700 <__udivmodsi4>
    261e:	29 01       	movw	r4, r18
    2620:	3a 01       	movw	r6, r20
  {
    digit++;
    placeValue *= 10;
  }
  
  for (int i=0; i<digit; i++)
    2622:	9f ef       	ldi	r25, 0xFF	; 255
    2624:	a9 1a       	sub	r10, r25
    2626:	b9 0a       	sbc	r11, r25
    2628:	00 5f       	subi	r16, 0xF0	; 240
    262a:	1f 4f       	sbci	r17, 0xFF	; 255
    262c:	8e 81       	ldd	r24, Y+6	; 0x06
    262e:	9f 81       	ldd	r25, Y+7	; 0x07
    2630:	a8 16       	cp	r10, r24
    2632:	b9 06       	cpc	r11, r25
    2634:	b4 f2       	brlt	.-84     	; 0x25e2 <_ZN4Font5printEiim+0xc8>
    printLetter(xPos + (16 * i), yPos, (intager / placeValue) + 0x30);
    intager %= placeValue;
    placeValue /= 10;
  }

    2636:	27 96       	adiw	r28, 0x07	; 7
    2638:	0f b6       	in	r0, 0x3f	; 63
    263a:	f8 94       	cli
    263c:	de bf       	out	0x3e, r29	; 62
    263e:	0f be       	out	0x3f, r0	; 63
    2640:	cd bf       	out	0x3d, r28	; 61
    2642:	df 91       	pop	r29
    2644:	cf 91       	pop	r28
    2646:	1f 91       	pop	r17
    2648:	0f 91       	pop	r16
    264a:	ff 90       	pop	r15
    264c:	ef 90       	pop	r14
    264e:	df 90       	pop	r13
    2650:	cf 90       	pop	r12
    2652:	bf 90       	pop	r11
    2654:	af 90       	pop	r10
    2656:	9f 90       	pop	r9
    2658:	8f 90       	pop	r8
    265a:	7f 90       	pop	r7
    265c:	6f 90       	pop	r6
    265e:	5f 90       	pop	r5
    2660:	4f 90       	pop	r4
    2662:	3f 90       	pop	r3
    2664:	2f 90       	pop	r2
    2666:	08 95       	ret

00002668 <_ZN5Frame6updateEv>:
/*----------------------------------------//
              Update Frame
//----------------------------------------*/

void Frame::update(void)
{
    2668:	fc 01       	movw	r30, r24

  if (presentTime >= m_PastTick + 5)
    266a:	40 91 15 01 	lds	r20, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    266e:	50 91 16 01 	lds	r21, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2672:	60 91 17 01 	lds	r22, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    2676:	70 91 18 01 	lds	r23, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    267a:	80 81       	ld	r24, Z
    267c:	91 81       	ldd	r25, Z+1	; 0x01
    267e:	a2 81       	ldd	r26, Z+2	; 0x02
    2680:	b3 81       	ldd	r27, Z+3	; 0x03
    2682:	05 96       	adiw	r24, 0x05	; 5
    2684:	a1 1d       	adc	r26, r1
    2686:	b1 1d       	adc	r27, r1
    2688:	48 17       	cp	r20, r24
    268a:	59 07       	cpc	r21, r25
    268c:	6a 07       	cpc	r22, r26
    268e:	7b 07       	cpc	r23, r27
    2690:	70 f0       	brcs	.+28     	; 0x26ae <_ZN5Frame6updateEv+0x46>
  {

    m_PastTick = presentTime;
    2692:	40 83       	st	Z, r20
    2694:	51 83       	std	Z+1, r21	; 0x01
    2696:	62 83       	std	Z+2, r22	; 0x02
    2698:	73 83       	std	Z+3, r23	; 0x03

    oneTick++;
    269a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <_ZN5Frame7oneTickE>
    269e:	8f 5f       	subi	r24, 0xFF	; 255

    if (oneTick == 2)
    26a0:	82 30       	cpi	r24, 0x02	; 2
    26a2:	19 f0       	breq	.+6      	; 0x26aa <_ZN5Frame6updateEv+0x42>
  if (presentTime >= m_PastTick + 5)
  {

    m_PastTick = presentTime;

    oneTick++;
    26a4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <_ZN5Frame7oneTickE>
    26a8:	02 c0       	rjmp	.+4      	; 0x26ae <_ZN5Frame6updateEv+0x46>

    if (oneTick == 2)
    {
      oneTick = 0;
    26aa:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <_ZN5Frame7oneTickE>
    }

  }

  if (presentTime >= m_PastFrame + 100)
    26ae:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    26b2:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    26b6:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    26ba:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    26be:	44 81       	ldd	r20, Z+4	; 0x04
    26c0:	55 81       	ldd	r21, Z+5	; 0x05
    26c2:	66 81       	ldd	r22, Z+6	; 0x06
    26c4:	77 81       	ldd	r23, Z+7	; 0x07
    26c6:	4c 59       	subi	r20, 0x9C	; 156
    26c8:	5f 4f       	sbci	r21, 0xFF	; 255
    26ca:	6f 4f       	sbci	r22, 0xFF	; 255
    26cc:	7f 4f       	sbci	r23, 0xFF	; 255
    26ce:	84 17       	cp	r24, r20
    26d0:	95 07       	cpc	r25, r21
    26d2:	a6 07       	cpc	r26, r22
    26d4:	b7 07       	cpc	r27, r23
    26d6:	b0 f0       	brcs	.+44     	; 0x2704 <_ZN5Frame6updateEv+0x9c>
  {

    m_PastFrame = presentTime;
    26d8:	84 83       	std	Z+4, r24	; 0x04
    26da:	95 83       	std	Z+5, r25	; 0x05
    26dc:	a6 83       	std	Z+6, r26	; 0x06
    26de:	b7 83       	std	Z+7, r27	; 0x07

    fourFrames++;
    26e0:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    26e4:	3f 5f       	subi	r19, 0xFF	; 255
    26e6:	30 93 13 01 	sts	0x0113, r19	; 0x800113 <_ZN5Frame10fourFramesE>
    sixFrames++;
    26ea:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <_ZN5Frame9sixFramesE>
    26ee:	2f 5f       	subi	r18, 0xFF	; 255
    26f0:	20 93 12 01 	sts	0x0112, r18	; 0x800112 <_ZN5Frame9sixFramesE>

    if (fourFrames == 4)
    26f4:	34 30       	cpi	r19, 0x04	; 4
    26f6:	11 f4       	brne	.+4      	; 0x26fc <_ZN5Frame6updateEv+0x94>
    {
      fourFrames = 0;
    26f8:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
    26fc:	26 30       	cpi	r18, 0x06	; 6
    26fe:	11 f4       	brne	.+4      	; 0x2704 <_ZN5Frame6updateEv+0x9c>
    {
      sixFrames = 0;
    2700:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <_ZN5Frame9sixFramesE>
    }

  }

  if (presentTime >= m_PastBeat + 125)
    2704:	40 85       	ldd	r20, Z+8	; 0x08
    2706:	51 85       	ldd	r21, Z+9	; 0x09
    2708:	62 85       	ldd	r22, Z+10	; 0x0a
    270a:	73 85       	ldd	r23, Z+11	; 0x0b
    270c:	43 58       	subi	r20, 0x83	; 131
    270e:	5f 4f       	sbci	r21, 0xFF	; 255
    2710:	6f 4f       	sbci	r22, 0xFF	; 255
    2712:	7f 4f       	sbci	r23, 0xFF	; 255
    2714:	84 17       	cp	r24, r20
    2716:	95 07       	cpc	r25, r21
    2718:	a6 07       	cpc	r26, r22
    271a:	b7 07       	cpc	r27, r23
    271c:	70 f0       	brcs	.+28     	; 0x273a <_ZN5Frame6updateEv+0xd2>
  {

    m_PastBeat = presentTime;
    271e:	80 87       	std	Z+8, r24	; 0x08
    2720:	91 87       	std	Z+9, r25	; 0x09
    2722:	a2 87       	std	Z+10, r26	; 0x0a
    2724:	b3 87       	std	Z+11, r27	; 0x0b

    sixteenBeats++;
    2726:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    272a:	8f 5f       	subi	r24, 0xFF	; 255

    if (sixteenBeats == 2)
    272c:	82 30       	cpi	r24, 0x02	; 2
    272e:	19 f0       	breq	.+6      	; 0x2736 <_ZN5Frame6updateEv+0xce>
  if (presentTime >= m_PastBeat + 125)
  {

    m_PastBeat = presentTime;

    sixteenBeats++;
    2730:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    2734:	08 95       	ret

    if (sixteenBeats == 2)
    {
      sixteenBeats = 0;
    2736:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    273a:	08 95       	ret

0000273c <_ZN5Frame4initEv>:
/*----------------------------------------//
                Reset Frame
//----------------------------------------*/

void Frame::init(void)
{
    273c:	fc 01       	movw	r30, r24
  m_PastTick = presentTime;
    273e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    2742:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    2746:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    274a:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    274e:	80 83       	st	Z, r24
    2750:	91 83       	std	Z+1, r25	; 0x01
    2752:	a2 83       	std	Z+2, r26	; 0x02
    2754:	b3 83       	std	Z+3, r27	; 0x03
  m_PastFrame = presentTime;
    2756:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame11presentTimeE>
    275a:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE+0x1>
    275e:	a0 91 17 01 	lds	r26, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x2>
    2762:	b0 91 18 01 	lds	r27, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x3>
    2766:	84 83       	std	Z+4, r24	; 0x04
    2768:	95 83       	std	Z+5, r25	; 0x05
    276a:	a6 83       	std	Z+6, r26	; 0x06
    276c:	b7 83       	std	Z+7, r27	; 0x07
  m_PastBeat = presentTime;
    276e:	80 87       	std	Z+8, r24	; 0x08
    2770:	91 87       	std	Z+9, r25	; 0x09
    2772:	a2 87       	std	Z+10, r26	; 0x0a
    2774:	b3 87       	std	Z+11, r27	; 0x0b
    2776:	08 95       	ret

00002778 <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
    2778:	5f 92       	push	r5
    277a:	6f 92       	push	r6
    277c:	7f 92       	push	r7
    277e:	8f 92       	push	r8
    2780:	9f 92       	push	r9
    2782:	af 92       	push	r10
    2784:	bf 92       	push	r11
    2786:	cf 92       	push	r12
    2788:	df 92       	push	r13
    278a:	ef 92       	push	r14
    278c:	ff 92       	push	r15
    278e:	0f 93       	push	r16
    2790:	1f 93       	push	r17
    2792:	cf 93       	push	r28
    2794:	df 93       	push	r29
    2796:	3c 01       	movw	r6, r24
  begin();
    2798:	0e 94 d5 17 	call	0x2faa	; 0x2faa <_ZN3TFT5beginEv>
  setRotation(0);
    279c:	60 e0       	ldi	r22, 0x00	; 0
    279e:	c3 01       	movw	r24, r6
    27a0:	0e 94 2a 18 	call	0x3054	; 0x3054 <_ZN3TFT11setRotationEa>
  fillScreen(WHITE);
    27a4:	6f ef       	ldi	r22, 0xFF	; 255
    27a6:	7f ef       	ldi	r23, 0xFF	; 255
    27a8:	c3 01       	movw	r24, r6
    27aa:	0e 94 86 18 	call	0x310c	; 0x310c <_ZN3TFT10fillScreenEj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    27ae:	2f ef       	ldi	r18, 0xFF	; 255
    27b0:	89 e6       	ldi	r24, 0x69	; 105
    27b2:	98 e1       	ldi	r25, 0x18	; 24
    27b4:	21 50       	subi	r18, 0x01	; 1
    27b6:	80 40       	sbci	r24, 0x00	; 0
    27b8:	90 40       	sbci	r25, 0x00	; 0
    27ba:	e1 f7       	brne	.-8      	; 0x27b4 <_ZN4Game5titleEv+0x3c>
    27bc:	00 c0       	rjmp	.+0      	; 0x27be <_ZN4Game5titleEv+0x46>
    27be:	00 00       	nop

  _delay_ms(500);
  drawBitmap(8, 70, 304, 96, logoAtmel, BLACK, RED, BLUE, WHITE);
    27c0:	cf ef       	ldi	r28, 0xFF	; 255
    27c2:	cf 93       	push	r28
    27c4:	cf 93       	push	r28
    27c6:	0f 2e       	mov	r0, r31
    27c8:	ff e1       	ldi	r31, 0x1F	; 31
    27ca:	8f 2e       	mov	r8, r31
    27cc:	91 2c       	mov	r9, r1
    27ce:	f0 2d       	mov	r31, r0
    27d0:	0f 2e       	mov	r0, r31
    27d2:	a1 2c       	mov	r10, r1
    27d4:	f8 ef       	ldi	r31, 0xF8	; 248
    27d6:	bf 2e       	mov	r11, r31
    27d8:	f0 2d       	mov	r31, r0
    27da:	c1 2c       	mov	r12, r1
    27dc:	d1 2c       	mov	r13, r1
    27de:	0f 2e       	mov	r0, r31
    27e0:	f8 e0       	ldi	r31, 0x08	; 8
    27e2:	ef 2e       	mov	r14, r31
    27e4:	f5 e1       	ldi	r31, 0x15	; 21
    27e6:	ff 2e       	mov	r15, r31
    27e8:	f0 2d       	mov	r31, r0
    27ea:	00 e6       	ldi	r16, 0x60	; 96
    27ec:	10 e0       	ldi	r17, 0x00	; 0
    27ee:	20 e3       	ldi	r18, 0x30	; 48
    27f0:	31 e0       	ldi	r19, 0x01	; 1
    27f2:	46 e4       	ldi	r20, 0x46	; 70
    27f4:	50 e0       	ldi	r21, 0x00	; 0
    27f6:	68 e0       	ldi	r22, 0x08	; 8
    27f8:	70 e0       	ldi	r23, 0x00	; 0
    27fa:	c3 01       	movw	r24, r6
    27fc:	0e 94 04 19 	call	0x3208	; 0x3208 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
    2800:	ef ef       	ldi	r30, 0xFF	; 255
    2802:	fb e7       	ldi	r31, 0x7B	; 123
    2804:	22 e9       	ldi	r18, 0x92	; 146
    2806:	e1 50       	subi	r30, 0x01	; 1
    2808:	f0 40       	sbci	r31, 0x00	; 0
    280a:	20 40       	sbci	r18, 0x00	; 0
    280c:	e1 f7       	brne	.-8      	; 0x2806 <_ZN4Game5titleEv+0x8e>
    280e:	00 c0       	rjmp	.+0      	; 0x2810 <_ZN4Game5titleEv+0x98>
    2810:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
    2812:	60 e0       	ldi	r22, 0x00	; 0
    2814:	70 e0       	ldi	r23, 0x00	; 0
    2816:	c3 01       	movw	r24, r6
    2818:	0e 94 86 18 	call	0x310c	; 0x310c <_ZN3TFT10fillScreenEj>
  drawBitmap(8, 16, 304, 224, titleMenu, BLACK, MAROON, RED, WHITE);
    281c:	cf 93       	push	r28
    281e:	cf 93       	push	r28
    2820:	0f 2e       	mov	r0, r31
    2822:	81 2c       	mov	r8, r1
    2824:	f8 ef       	ldi	r31, 0xF8	; 248
    2826:	9f 2e       	mov	r9, r31
    2828:	f0 2d       	mov	r31, r0
    282a:	0f 2e       	mov	r0, r31
    282c:	a1 2c       	mov	r10, r1
    282e:	f8 e7       	ldi	r31, 0x78	; 120
    2830:	bf 2e       	mov	r11, r31
    2832:	f0 2d       	mov	r31, r0
    2834:	0f 2e       	mov	r0, r31
    2836:	f8 e6       	ldi	r31, 0x68	; 104
    2838:	ef 2e       	mov	r14, r31
    283a:	f1 e0       	ldi	r31, 0x01	; 1
    283c:	ff 2e       	mov	r15, r31
    283e:	f0 2d       	mov	r31, r0
    2840:	00 ee       	ldi	r16, 0xE0	; 224
    2842:	10 e0       	ldi	r17, 0x00	; 0
    2844:	20 e3       	ldi	r18, 0x30	; 48
    2846:	31 e0       	ldi	r19, 0x01	; 1
    2848:	40 e1       	ldi	r20, 0x10	; 16
    284a:	50 e0       	ldi	r21, 0x00	; 0
    284c:	68 e0       	ldi	r22, 0x08	; 8
    284e:	70 e0       	ldi	r23, 0x00	; 0
    2850:	c3 01       	movw	r24, r6
    2852:	0e 94 04 19 	call	0x3208	; 0x3208 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
    2856:	8f ef       	ldi	r24, 0xFF	; 255
    2858:	93 e2       	ldi	r25, 0x23	; 35
    285a:	e4 ef       	ldi	r30, 0xF4	; 244
    285c:	81 50       	subi	r24, 0x01	; 1
    285e:	90 40       	sbci	r25, 0x00	; 0
    2860:	e0 40       	sbci	r30, 0x00	; 0
    2862:	e1 f7       	brne	.-8      	; 0x285c <_ZN4Game5titleEv+0xe4>
    2864:	00 c0       	rjmp	.+0      	; 0x2866 <_ZN4Game5titleEv+0xee>
    2866:	00 00       	nop
    2868:	ff ef       	ldi	r31, 0xFF	; 255
    286a:	23 e2       	ldi	r18, 0x23	; 35
    286c:	84 ef       	ldi	r24, 0xF4	; 244
    286e:	f1 50       	subi	r31, 0x01	; 1
    2870:	20 40       	sbci	r18, 0x00	; 0
    2872:	80 40       	sbci	r24, 0x00	; 0
    2874:	e1 f7       	brne	.-8      	; 0x286e <_ZN4Game5titleEv+0xf6>
    2876:	00 c0       	rjmp	.+0      	; 0x2878 <_ZN4Game5titleEv+0x100>
    2878:	00 00       	nop
  _delay_ms(5000);
  _delay_ms(5000);

  fillScreen(BLACK);
    287a:	60 e0       	ldi	r22, 0x00	; 0
    287c:	70 e0       	ldi	r23, 0x00	; 0
    287e:	c3 01       	movw	r24, r6
    2880:	0e 94 86 18 	call	0x310c	; 0x310c <_ZN3TFT10fillScreenEj>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
    2884:	88 e0       	ldi	r24, 0x08	; 8
    2886:	92 e1       	ldi	r25, 0x12	; 18
    2888:	f3 01       	movw	r30, r6
    288a:	95 83       	std	Z+5, r25	; 0x05
    288c:	84 83       	std	Z+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
    288e:	17 82       	std	Z+7, r1	; 0x07
    2890:	16 82       	std	Z+6, r1	; 0x06
    2892:	8f ef       	ldi	r24, 0xFF	; 255
    2894:	9f ef       	ldi	r25, 0xFF	; 255
    2896:	91 87       	std	Z+9, r25	; 0x09
    2898:	80 87       	std	Z+8, r24	; 0x08
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(16, 16, "Time:");
    289a:	21 e0       	ldi	r18, 0x01	; 1
    289c:	31 e0       	ldi	r19, 0x01	; 1
    289e:	40 e1       	ldi	r20, 0x10	; 16
    28a0:	50 e0       	ldi	r21, 0x00	; 0
    28a2:	60 e1       	ldi	r22, 0x10	; 16
    28a4:	70 e0       	ldi	r23, 0x00	; 0
    28a6:	c3 01       	movw	r24, r6
    28a8:	0e 94 67 12 	call	0x24ce	; 0x24ce <_ZN4Font5printEiiPKc>
    28ac:	0f 90       	pop	r0
    28ae:	0f 90       	pop	r0
    28b0:	0f 90       	pop	r0
    28b2:	0f 90       	pop	r0
    28b4:	c0 e0       	ldi	r28, 0x00	; 0
    28b6:	d0 e0       	ldi	r29, 0x00	; 0
  //fillRect(0, 180, 320, 60, WHITE);
  for (int i=0; i<5; i++)
  {
    drawBitmap(64 * i, 176, 64, 64, groundTile, BLACK, MAROON, RED, WHITE);
    28b8:	55 24       	eor	r5, r5
    28ba:	5a 94       	dec	r5
    28bc:	5f 92       	push	r5
    28be:	5f 92       	push	r5
    28c0:	0f 2e       	mov	r0, r31
    28c2:	81 2c       	mov	r8, r1
    28c4:	f8 ef       	ldi	r31, 0xF8	; 248
    28c6:	9f 2e       	mov	r9, r31
    28c8:	f0 2d       	mov	r31, r0
    28ca:	0f 2e       	mov	r0, r31
    28cc:	a1 2c       	mov	r10, r1
    28ce:	f8 e7       	ldi	r31, 0x78	; 120
    28d0:	bf 2e       	mov	r11, r31
    28d2:	f0 2d       	mov	r31, r0
    28d4:	c1 2c       	mov	r12, r1
    28d6:	d1 2c       	mov	r13, r1
    28d8:	0f 2e       	mov	r0, r31
    28da:	f8 e6       	ldi	r31, 0x68	; 104
    28dc:	ef 2e       	mov	r14, r31
    28de:	f0 e0       	ldi	r31, 0x00	; 0
    28e0:	ff 2e       	mov	r15, r31
    28e2:	f0 2d       	mov	r31, r0
    28e4:	00 e4       	ldi	r16, 0x40	; 64
    28e6:	10 e0       	ldi	r17, 0x00	; 0
    28e8:	20 e4       	ldi	r18, 0x40	; 64
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	40 eb       	ldi	r20, 0xB0	; 176
    28ee:	50 e0       	ldi	r21, 0x00	; 0
    28f0:	be 01       	movw	r22, r28
    28f2:	c3 01       	movw	r24, r6
    28f4:	0e 94 04 19 	call	0x3208	; 0x3208 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
    28f8:	c0 5c       	subi	r28, 0xC0	; 192
    28fa:	df 4f       	sbci	r29, 0xFF	; 255
  fillScreen(BLACK);
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(16, 16, "Time:");
  //fillRect(0, 180, 320, 60, WHITE);
  for (int i=0; i<5; i++)
    28fc:	0f 90       	pop	r0
    28fe:	0f 90       	pop	r0
    2900:	c0 34       	cpi	r28, 0x40	; 64
    2902:	f1 e0       	ldi	r31, 0x01	; 1
    2904:	df 07       	cpc	r29, r31
    2906:	d1 f6       	brne	.-76     	; 0x28bc <_ZN4Game5titleEv+0x144>
  {
    drawBitmap(64 * i, 176, 64, 64, groundTile, BLACK, MAROON, RED, WHITE);
  }
}
    2908:	df 91       	pop	r29
    290a:	cf 91       	pop	r28
    290c:	1f 91       	pop	r17
    290e:	0f 91       	pop	r16
    2910:	ff 90       	pop	r15
    2912:	ef 90       	pop	r14
    2914:	df 90       	pop	r13
    2916:	cf 90       	pop	r12
    2918:	bf 90       	pop	r11
    291a:	af 90       	pop	r10
    291c:	9f 90       	pop	r9
    291e:	8f 90       	pop	r8
    2920:	7f 90       	pop	r7
    2922:	6f 90       	pop	r6
    2924:	5f 90       	pop	r5
    2926:	08 95       	ret

00002928 <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
    2928:	cf 93       	push	r28
    292a:	df 93       	push	r29
    292c:	cd b7       	in	r28, 0x3d	; 61
    292e:	de b7       	in	r29, 0x3e	; 62
    2930:	66 97       	sbiw	r28, 0x16	; 22
    2932:	0f b6       	in	r0, 0x3f	; 63
    2934:	f8 94       	cli
    2936:	de bf       	out	0x3e, r29	; 62
    2938:	0f be       	out	0x3f, r0	; 63
    293a:	cd bf       	out	0x3d, r28	; 61
    293c:	7c 01       	movw	r14, r24
    293e:	2f ef       	ldi	r18, 0xFF	; 255
    2940:	81 ee       	ldi	r24, 0xE1	; 225
    2942:	94 e0       	ldi	r25, 0x04	; 4
    2944:	21 50       	subi	r18, 0x01	; 1
    2946:	80 40       	sbci	r24, 0x00	; 0
    2948:	90 40       	sbci	r25, 0x00	; 0
    294a:	e1 f7       	brne	.-8      	; 0x2944 <_ZN4Game5startEv+0x1c>
    294c:	00 c0       	rjmp	.+0      	; 0x294e <_ZN4Game5startEv+0x26>
    294e:	00 00       	nop
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    2950:	80 ef       	ldi	r24, 0xF0	; 240
    2952:	90 e0       	ldi	r25, 0x00	; 0
    2954:	9e 87       	std	Y+14, r25	; 0x0e
    2956:	8d 87       	std	Y+13, r24	; 0x0d
    2958:	80 e4       	ldi	r24, 0x40	; 64
    295a:	91 e0       	ldi	r25, 0x01	; 1
    295c:	98 8b       	std	Y+16, r25	; 0x10
    295e:	8f 87       	std	Y+15, r24	; 0x0f
  void running(void);
  void jumping(void);
  void dead(void);

public:
  Player() : TFT() { mIs_Up = false; mIs_Jump = false; mIs_Reset = false;  }
    2960:	1e 8a       	std	Y+22, r1	; 0x16
    2962:	1d 8a       	std	Y+21, r1	; 0x15
    2964:	1c 8a       	std	Y+20, r1	; 0x14
  _delay_ms(100);

  Frame frame;
  Player user;

  Frame::secondTime = 0;
    2966:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    296a:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <_ZN5Frame10secondTimeE>
  frame.init();
    296e:	ce 01       	movw	r24, r28
    2970:	01 96       	adiw	r24, 0x01	; 1
    2972:	0e 94 9e 13 	call	0x273c	; 0x273c <_ZN5Frame4initEv>

  while (1)
  {
    frame.update();
    2976:	ce 01       	movw	r24, r28
    2978:	01 96       	adiw	r24, 0x01	; 1
    297a:	0e 94 34 13 	call	0x2668	; 0x2668 <_ZN5Frame6updateEv>
    user.startPlayer();
    297e:	ce 01       	movw	r24, r28
    2980:	0d 96       	adiw	r24, 0x0d	; 13
    2982:	0e 94 32 16 	call	0x2c64	; 0x2c64 <_ZN6Player11startPlayerEv>
    print(100, 16, Frame::secondTime);
    2986:	00 91 19 01 	lds	r16, 0x0119	; 0x800119 <_ZN5Frame10secondTimeE>
    298a:	10 91 1a 01 	lds	r17, 0x011A	; 0x80011a <_ZN5Frame10secondTimeE+0x1>
    298e:	20 e0       	ldi	r18, 0x00	; 0
    2990:	30 e0       	ldi	r19, 0x00	; 0
    2992:	40 e1       	ldi	r20, 0x10	; 16
    2994:	50 e0       	ldi	r21, 0x00	; 0
    2996:	64 e6       	ldi	r22, 0x64	; 100
    2998:	70 e0       	ldi	r23, 0x00	; 0
    299a:	c7 01       	movw	r24, r14
    299c:	0e 94 8d 12 	call	0x251a	; 0x251a <_ZN4Font5printEiim>
    29a0:	ea cf       	rjmp	.-44     	; 0x2976 <_ZN4Game5startEv+0x4e>

000029a2 <_ZN6Player7runningEv>:
/*----------------------------------------//
                Player Dead
//----------------------------------------*/

void Player::dead(void)
{
    29a2:	5f 92       	push	r5
    29a4:	6f 92       	push	r6
    29a6:	7f 92       	push	r7
    29a8:	8f 92       	push	r8
    29aa:	9f 92       	push	r9
    29ac:	af 92       	push	r10
    29ae:	bf 92       	push	r11
    29b0:	cf 92       	push	r12
    29b2:	df 92       	push	r13
    29b4:	ef 92       	push	r14
    29b6:	ff 92       	push	r15
    29b8:	0f 93       	push	r16
    29ba:	1f 93       	push	r17
    29bc:	cf 93       	push	r28
    29be:	df 93       	push	r29
    29c0:	3c 01       	movw	r6, r24
    29c2:	c0 e0       	ldi	r28, 0x00	; 0
    29c4:	d0 e0       	ldi	r29, 0x00	; 0
    29c6:	dd 24       	eor	r13, r13
    29c8:	da 94       	dec	r13
    29ca:	0f 2e       	mov	r0, r31
    29cc:	f8 ef       	ldi	r31, 0xF8	; 248
    29ce:	5f 2e       	mov	r5, r31
    29d0:	f0 2d       	mov	r31, r0
    29d2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <_ZN5Frame9sixFramesE>
    29d6:	08 2e       	mov	r0, r24
    29d8:	00 0c       	add	r0, r0
    29da:	99 0b       	sbc	r25, r25
    29dc:	8c 17       	cp	r24, r28
    29de:	9d 07       	cpc	r25, r29
    29e0:	09 f5       	brne	.+66     	; 0x2a24 <_ZN6Player7runningEv+0x82>
    29e2:	df 92       	push	r13
    29e4:	df 92       	push	r13
    29e6:	5f 92       	push	r5
    29e8:	1f 92       	push	r1
    29ea:	0f 2e       	mov	r0, r31
    29ec:	81 2c       	mov	r8, r1
    29ee:	f8 e7       	ldi	r31, 0x78	; 120
    29f0:	9f 2e       	mov	r9, r31
    29f2:	f0 2d       	mov	r31, r0
    29f4:	a1 2c       	mov	r10, r1
    29f6:	b1 2c       	mov	r11, r1
    29f8:	cc 2e       	mov	r12, r28
    29fa:	0f 2e       	mov	r0, r31
    29fc:	f8 e3       	ldi	r31, 0x38	; 56
    29fe:	ef 2e       	mov	r14, r31
    2a00:	f0 e2       	ldi	r31, 0x20	; 32
    2a02:	ff 2e       	mov	r15, r31
    2a04:	f0 2d       	mov	r31, r0
    2a06:	08 e2       	ldi	r16, 0x28	; 40
    2a08:	10 e0       	ldi	r17, 0x00	; 0
    2a0a:	28 e2       	ldi	r18, 0x28	; 40
    2a0c:	30 e0       	ldi	r19, 0x00	; 0
    2a0e:	48 e8       	ldi	r20, 0x88	; 136
    2a10:	50 e0       	ldi	r21, 0x00	; 0
    2a12:	6c e3       	ldi	r22, 0x3C	; 60
    2a14:	70 e0       	ldi	r23, 0x00	; 0
    2a16:	c3 01       	movw	r24, r6
    2a18:	0e 94 d6 19 	call	0x33ac	; 0x33ac <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>
    2a1c:	0f 90       	pop	r0
    2a1e:	0f 90       	pop	r0
    2a20:	0f 90       	pop	r0
    2a22:	0f 90       	pop	r0
    2a24:	21 96       	adiw	r28, 0x01	; 1
    2a26:	c6 30       	cpi	r28, 0x06	; 6
    2a28:	d1 05       	cpc	r29, r1
    2a2a:	99 f6       	brne	.-90     	; 0x29d2 <_ZN6Player7runningEv+0x30>
    2a2c:	df 91       	pop	r29
    2a2e:	cf 91       	pop	r28
    2a30:	1f 91       	pop	r17
    2a32:	0f 91       	pop	r16
    2a34:	ff 90       	pop	r15
    2a36:	ef 90       	pop	r14
    2a38:	df 90       	pop	r13
    2a3a:	cf 90       	pop	r12
    2a3c:	bf 90       	pop	r11
    2a3e:	af 90       	pop	r10
    2a40:	9f 90       	pop	r9
    2a42:	8f 90       	pop	r8
    2a44:	7f 90       	pop	r7
    2a46:	6f 90       	pop	r6
    2a48:	5f 90       	pop	r5
    2a4a:	08 95       	ret

00002a4c <_ZN6Player7jumpingEv>:
    2a4c:	2f 92       	push	r2
    2a4e:	3f 92       	push	r3
    2a50:	4f 92       	push	r4
    2a52:	5f 92       	push	r5
    2a54:	6f 92       	push	r6
    2a56:	7f 92       	push	r7
    2a58:	8f 92       	push	r8
    2a5a:	9f 92       	push	r9
    2a5c:	af 92       	push	r10
    2a5e:	bf 92       	push	r11
    2a60:	cf 92       	push	r12
    2a62:	df 92       	push	r13
    2a64:	ef 92       	push	r14
    2a66:	ff 92       	push	r15
    2a68:	0f 93       	push	r16
    2a6a:	1f 93       	push	r17
    2a6c:	cf 93       	push	r28
    2a6e:	df 93       	push	r29
    2a70:	3c 01       	movw	r6, r24
    2a72:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <_ZN5Frame7oneTickE>
    2a76:	81 30       	cpi	r24, 0x01	; 1
    2a78:	09 f0       	breq	.+2      	; 0x2a7c <_ZN6Player7jumpingEv+0x30>
    2a7a:	db c0       	rjmp	.+438    	; 0x2c32 <_ZN6Player7jumpingEv+0x1e6>
    2a7c:	f3 01       	movw	r30, r6
    2a7e:	86 81       	ldd	r24, Z+6	; 0x06
    2a80:	82 33       	cpi	r24, 0x32	; 50
    2a82:	5c f0       	brlt	.+22     	; 0x2a9a <_ZN6Player7jumpingEv+0x4e>
    2a84:	95 81       	ldd	r25, Z+5	; 0x05
    2a86:	9f 5f       	subi	r25, 0xFF	; 255
    2a88:	95 83       	std	Z+5, r25	; 0x05
    2a8a:	94 30       	cpi	r25, 0x04	; 4
    2a8c:	19 f0       	breq	.+6      	; 0x2a94 <_ZN6Player7jumpingEv+0x48>
    2a8e:	86 50       	subi	r24, 0x06	; 6
    2a90:	86 83       	std	Z+6, r24	; 0x06
    2a92:	03 c0       	rjmp	.+6      	; 0x2a9a <_ZN6Player7jumpingEv+0x4e>
    2a94:	f3 01       	movw	r30, r6
    2a96:	11 86       	std	Z+9, r1	; 0x09
    2a98:	08 c0       	rjmp	.+16     	; 0x2aaa <_ZN6Player7jumpingEv+0x5e>
    2a9a:	f3 01       	movw	r30, r6
    2a9c:	81 85       	ldd	r24, Z+9	; 0x09
    2a9e:	88 23       	and	r24, r24
    2aa0:	21 f0       	breq	.+8      	; 0x2aaa <_ZN6Player7jumpingEv+0x5e>
    2aa2:	86 81       	ldd	r24, Z+6	; 0x06
    2aa4:	8a 5f       	subi	r24, 0xFA	; 250
    2aa6:	86 83       	std	Z+6, r24	; 0x06
    2aa8:	28 c0       	rjmp	.+80     	; 0x2afa <_ZN6Player7jumpingEv+0xae>
    2aaa:	f3 01       	movw	r30, r6
    2aac:	86 81       	ldd	r24, Z+6	; 0x06
    2aae:	86 50       	subi	r24, 0x06	; 6
    2ab0:	86 83       	std	Z+6, r24	; 0x06
    2ab2:	18 16       	cp	r1, r24
    2ab4:	9c f0       	brlt	.+38     	; 0x2adc <_ZN6Player7jumpingEv+0x90>
    2ab6:	e1 2c       	mov	r14, r1
    2ab8:	f1 2c       	mov	r15, r1
    2aba:	09 e1       	ldi	r16, 0x19	; 25
    2abc:	10 e0       	ldi	r17, 0x00	; 0
    2abe:	28 e2       	ldi	r18, 0x28	; 40
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	4f e6       	ldi	r20, 0x6F	; 111
    2ac4:	50 e0       	ldi	r21, 0x00	; 0
    2ac6:	6c e3       	ldi	r22, 0x3C	; 60
    2ac8:	70 e0       	ldi	r23, 0x00	; 0
    2aca:	c3 01       	movw	r24, r6
    2acc:	0e 94 cb 18 	call	0x3196	; 0x3196 <_ZN3TFT8fillRectEiiiij>
    2ad0:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <_ZN2SW10interrupt0E>
    2ad4:	f3 01       	movw	r30, r6
    2ad6:	10 86       	std	Z+8, r1	; 0x08
    2ad8:	17 82       	std	Z+7, r1	; 0x07
    2ada:	b1 c0       	rjmp	.+354    	; 0x2c3e <_ZN6Player7jumpingEv+0x1f2>
    2adc:	c0 e0       	ldi	r28, 0x00	; 0
    2ade:	d0 e0       	ldi	r29, 0x00	; 0
    2ae0:	0f 2e       	mov	r0, r31
    2ae2:	f6 e7       	ldi	r31, 0x76	; 118
    2ae4:	4f 2e       	mov	r4, r31
    2ae6:	51 2c       	mov	r5, r1
    2ae8:	f0 2d       	mov	r31, r0
    2aea:	dd 24       	eor	r13, r13
    2aec:	da 94       	dec	r13
    2aee:	0f 2e       	mov	r0, r31
    2af0:	fe e6       	ldi	r31, 0x6E	; 110
    2af2:	2f 2e       	mov	r2, r31
    2af4:	31 2c       	mov	r3, r1
    2af6:	f0 2d       	mov	r31, r0
    2af8:	55 c0       	rjmp	.+170    	; 0x2ba4 <_ZN6Player7jumpingEv+0x158>
    2afa:	c0 e0       	ldi	r28, 0x00	; 0
    2afc:	d0 e0       	ldi	r29, 0x00	; 0
    2afe:	0f 2e       	mov	r0, r31
    2b00:	f6 e7       	ldi	r31, 0x76	; 118
    2b02:	4f 2e       	mov	r4, r31
    2b04:	51 2c       	mov	r5, r1
    2b06:	f0 2d       	mov	r31, r0
    2b08:	dd 24       	eor	r13, r13
    2b0a:	da 94       	dec	r13
    2b0c:	0f 2e       	mov	r0, r31
    2b0e:	f8 ea       	ldi	r31, 0xA8	; 168
    2b10:	2f 2e       	mov	r2, r31
    2b12:	31 2c       	mov	r3, r1
    2b14:	f0 2d       	mov	r31, r0
    2b16:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    2b1a:	08 2e       	mov	r0, r24
    2b1c:	00 0c       	add	r0, r0
    2b1e:	99 0b       	sbc	r25, r25
    2b20:	8c 17       	cp	r24, r28
    2b22:	9d 07       	cpc	r25, r29
    2b24:	c9 f5       	brne	.+114    	; 0x2b98 <_ZN6Player7jumpingEv+0x14c>
    2b26:	f3 01       	movw	r30, r6
    2b28:	86 81       	ldd	r24, Z+6	; 0x06
    2b2a:	a2 01       	movw	r20, r4
    2b2c:	48 1b       	sub	r20, r24
    2b2e:	51 09       	sbc	r21, r1
    2b30:	87 fd       	sbrc	r24, 7
    2b32:	53 95       	inc	r21
    2b34:	df 92       	push	r13
    2b36:	df 92       	push	r13
    2b38:	f8 ef       	ldi	r31, 0xF8	; 248
    2b3a:	ff 93       	push	r31
    2b3c:	1f 92       	push	r1
    2b3e:	0f 2e       	mov	r0, r31
    2b40:	81 2c       	mov	r8, r1
    2b42:	f8 e7       	ldi	r31, 0x78	; 120
    2b44:	9f 2e       	mov	r9, r31
    2b46:	f0 2d       	mov	r31, r0
    2b48:	a1 2c       	mov	r10, r1
    2b4a:	b1 2c       	mov	r11, r1
    2b4c:	cc 2e       	mov	r12, r28
    2b4e:	0f 2e       	mov	r0, r31
    2b50:	f8 ea       	ldi	r31, 0xA8	; 168
    2b52:	ef 2e       	mov	r14, r31
    2b54:	fe e1       	ldi	r31, 0x1E	; 30
    2b56:	ff 2e       	mov	r15, r31
    2b58:	f0 2d       	mov	r31, r0
    2b5a:	02 e3       	ldi	r16, 0x32	; 50
    2b5c:	10 e0       	ldi	r17, 0x00	; 0
    2b5e:	20 e2       	ldi	r18, 0x20	; 32
    2b60:	30 e0       	ldi	r19, 0x00	; 0
    2b62:	6c e3       	ldi	r22, 0x3C	; 60
    2b64:	70 e0       	ldi	r23, 0x00	; 0
    2b66:	c3 01       	movw	r24, r6
    2b68:	0e 94 d6 19 	call	0x33ac	; 0x33ac <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>
    2b6c:	f3 01       	movw	r30, r6
    2b6e:	86 81       	ldd	r24, Z+6	; 0x06
    2b70:	a1 01       	movw	r20, r2
    2b72:	48 1b       	sub	r20, r24
    2b74:	51 09       	sbc	r21, r1
    2b76:	87 fd       	sbrc	r24, 7
    2b78:	53 95       	inc	r21
    2b7a:	e1 2c       	mov	r14, r1
    2b7c:	f1 2c       	mov	r15, r1
    2b7e:	08 e0       	ldi	r16, 0x08	; 8
    2b80:	10 e0       	ldi	r17, 0x00	; 0
    2b82:	20 e2       	ldi	r18, 0x20	; 32
    2b84:	30 e0       	ldi	r19, 0x00	; 0
    2b86:	6c e3       	ldi	r22, 0x3C	; 60
    2b88:	70 e0       	ldi	r23, 0x00	; 0
    2b8a:	c3 01       	movw	r24, r6
    2b8c:	0e 94 cb 18 	call	0x3196	; 0x3196 <_ZN3TFT8fillRectEiiiij>
    2b90:	0f 90       	pop	r0
    2b92:	0f 90       	pop	r0
    2b94:	0f 90       	pop	r0
    2b96:	0f 90       	pop	r0
    2b98:	21 96       	adiw	r28, 0x01	; 1
    2b9a:	c4 30       	cpi	r28, 0x04	; 4
    2b9c:	d1 05       	cpc	r29, r1
    2b9e:	09 f0       	breq	.+2      	; 0x2ba2 <_ZN6Player7jumpingEv+0x156>
    2ba0:	ba cf       	rjmp	.-140    	; 0x2b16 <_ZN6Player7jumpingEv+0xca>
    2ba2:	4d c0       	rjmp	.+154    	; 0x2c3e <_ZN6Player7jumpingEv+0x1f2>
    2ba4:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_ZN5Frame10fourFramesE>
    2ba8:	08 2e       	mov	r0, r24
    2baa:	00 0c       	add	r0, r0
    2bac:	99 0b       	sbc	r25, r25
    2bae:	8c 17       	cp	r24, r28
    2bb0:	9d 07       	cpc	r25, r29
    2bb2:	c9 f5       	brne	.+114    	; 0x2c26 <_ZN6Player7jumpingEv+0x1da>
    2bb4:	f3 01       	movw	r30, r6
    2bb6:	86 81       	ldd	r24, Z+6	; 0x06
    2bb8:	a2 01       	movw	r20, r4
    2bba:	48 1b       	sub	r20, r24
    2bbc:	51 09       	sbc	r21, r1
    2bbe:	87 fd       	sbrc	r24, 7
    2bc0:	53 95       	inc	r21
    2bc2:	df 92       	push	r13
    2bc4:	df 92       	push	r13
    2bc6:	f8 ef       	ldi	r31, 0xF8	; 248
    2bc8:	ff 93       	push	r31
    2bca:	1f 92       	push	r1
    2bcc:	0f 2e       	mov	r0, r31
    2bce:	81 2c       	mov	r8, r1
    2bd0:	f8 e7       	ldi	r31, 0x78	; 120
    2bd2:	9f 2e       	mov	r9, r31
    2bd4:	f0 2d       	mov	r31, r0
    2bd6:	a1 2c       	mov	r10, r1
    2bd8:	b1 2c       	mov	r11, r1
    2bda:	cc 2e       	mov	r12, r28
    2bdc:	0f 2e       	mov	r0, r31
    2bde:	f8 e2       	ldi	r31, 0x28	; 40
    2be0:	ef 2e       	mov	r14, r31
    2be2:	fc e1       	ldi	r31, 0x1C	; 28
    2be4:	ff 2e       	mov	r15, r31
    2be6:	f0 2d       	mov	r31, r0
    2be8:	00 e4       	ldi	r16, 0x40	; 64
    2bea:	10 e0       	ldi	r17, 0x00	; 0
    2bec:	28 e2       	ldi	r18, 0x28	; 40
    2bee:	30 e0       	ldi	r19, 0x00	; 0
    2bf0:	6c e3       	ldi	r22, 0x3C	; 60
    2bf2:	70 e0       	ldi	r23, 0x00	; 0
    2bf4:	c3 01       	movw	r24, r6
    2bf6:	0e 94 ab 1a 	call	0x3556	; 0x3556 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj>
    2bfa:	f3 01       	movw	r30, r6
    2bfc:	86 81       	ldd	r24, Z+6	; 0x06
    2bfe:	a1 01       	movw	r20, r2
    2c00:	48 1b       	sub	r20, r24
    2c02:	51 09       	sbc	r21, r1
    2c04:	87 fd       	sbrc	r24, 7
    2c06:	53 95       	inc	r21
    2c08:	e1 2c       	mov	r14, r1
    2c0a:	f1 2c       	mov	r15, r1
    2c0c:	08 e0       	ldi	r16, 0x08	; 8
    2c0e:	10 e0       	ldi	r17, 0x00	; 0
    2c10:	28 e2       	ldi	r18, 0x28	; 40
    2c12:	30 e0       	ldi	r19, 0x00	; 0
    2c14:	6c e3       	ldi	r22, 0x3C	; 60
    2c16:	70 e0       	ldi	r23, 0x00	; 0
    2c18:	c3 01       	movw	r24, r6
    2c1a:	0e 94 cb 18 	call	0x3196	; 0x3196 <_ZN3TFT8fillRectEiiiij>
    2c1e:	0f 90       	pop	r0
    2c20:	0f 90       	pop	r0
    2c22:	0f 90       	pop	r0
    2c24:	0f 90       	pop	r0
    2c26:	21 96       	adiw	r28, 0x01	; 1
    2c28:	c4 30       	cpi	r28, 0x04	; 4
    2c2a:	d1 05       	cpc	r29, r1
    2c2c:	09 f0       	breq	.+2      	; 0x2c30 <_ZN6Player7jumpingEv+0x1e4>
    2c2e:	ba cf       	rjmp	.-140    	; 0x2ba4 <_ZN6Player7jumpingEv+0x158>
    2c30:	06 c0       	rjmp	.+12     	; 0x2c3e <_ZN6Player7jumpingEv+0x1f2>
    2c32:	f3 01       	movw	r30, r6
    2c34:	81 85       	ldd	r24, Z+9	; 0x09
    2c36:	88 23       	and	r24, r24
    2c38:	09 f4       	brne	.+2      	; 0x2c3c <_ZN6Player7jumpingEv+0x1f0>
    2c3a:	50 cf       	rjmp	.-352    	; 0x2adc <_ZN6Player7jumpingEv+0x90>
    2c3c:	5e cf       	rjmp	.-324    	; 0x2afa <_ZN6Player7jumpingEv+0xae>
    2c3e:	df 91       	pop	r29
    2c40:	cf 91       	pop	r28
    2c42:	1f 91       	pop	r17
    2c44:	0f 91       	pop	r16
    2c46:	ff 90       	pop	r15
    2c48:	ef 90       	pop	r14
    2c4a:	df 90       	pop	r13
    2c4c:	cf 90       	pop	r12
    2c4e:	bf 90       	pop	r11
    2c50:	af 90       	pop	r10
    2c52:	9f 90       	pop	r9
    2c54:	8f 90       	pop	r8
    2c56:	7f 90       	pop	r7
    2c58:	6f 90       	pop	r6
    2c5a:	5f 90       	pop	r5
    2c5c:	4f 90       	pop	r4
    2c5e:	3f 90       	pop	r3
    2c60:	2f 90       	pop	r2
    2c62:	08 95       	ret

00002c64 <_ZN6Player11startPlayerEv>:
/*----------------------------------------//
                Start Player
//----------------------------------------*/

void Player::startPlayer(void)
{
    2c64:	ef 92       	push	r14
    2c66:	ff 92       	push	r15
    2c68:	0f 93       	push	r16
    2c6a:	1f 93       	push	r17
    2c6c:	cf 93       	push	r28
    2c6e:	df 93       	push	r29
    2c70:	ec 01       	movw	r28, r24

  if (SW::interrupt0 == ON)
    2c72:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_ZN2SW10interrupt0E>
    2c76:	88 23       	and	r24, r24
    2c78:	b9 f0       	breq	.+46     	; 0x2ca8 <_ZN6Player11startPlayerEv+0x44>
  {
    if (mIs_Reset == false)
    2c7a:	8f 81       	ldd	r24, Y+7	; 0x07
    2c7c:	81 11       	cpse	r24, r1
    2c7e:	14 c0       	rjmp	.+40     	; 0x2ca8 <_ZN6Player11startPlayerEv+0x44>
    {
      fillRect(60, 136, 40, 40, BLACK);
    2c80:	e1 2c       	mov	r14, r1
    2c82:	f1 2c       	mov	r15, r1
    2c84:	08 e2       	ldi	r16, 0x28	; 40
    2c86:	10 e0       	ldi	r17, 0x00	; 0
    2c88:	28 e2       	ldi	r18, 0x28	; 40
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	48 e8       	ldi	r20, 0x88	; 136
    2c8e:	50 e0       	ldi	r21, 0x00	; 0
    2c90:	6c e3       	ldi	r22, 0x3C	; 60
    2c92:	70 e0       	ldi	r23, 0x00	; 0
    2c94:	ce 01       	movw	r24, r28
    2c96:	0e 94 cb 18 	call	0x3196	; 0x3196 <_ZN3TFT8fillRectEiiiij>
      m_JumpTemp = 0;
    2c9a:	1d 82       	std	Y+5, r1	; 0x05
      m_JumpHeight = 0;
    2c9c:	1e 82       	std	Y+6, r1	; 0x06
      mIs_Up = true;
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	89 87       	std	Y+9, r24	; 0x09
      mIs_Jump = true;
    2ca2:	88 87       	std	Y+8, r24	; 0x08
      mIs_Reset = true;
    2ca4:	8f 83       	std	Y+7, r24	; 0x07
    2ca6:	07 c0       	rjmp	.+14     	; 0x2cb6 <_ZN6Player11startPlayerEv+0x52>
    }
  }
  

  if (mIs_Jump == false)
    2ca8:	88 85       	ldd	r24, Y+8	; 0x08
    2caa:	81 11       	cpse	r24, r1
    2cac:	04 c0       	rjmp	.+8      	; 0x2cb6 <_ZN6Player11startPlayerEv+0x52>
  {
    running();
    2cae:	ce 01       	movw	r24, r28
    2cb0:	0e 94 d1 14 	call	0x29a2	; 0x29a2 <_ZN6Player7runningEv>
    2cb4:	03 c0       	rjmp	.+6      	; 0x2cbc <_ZN6Player11startPlayerEv+0x58>
  }
  
  else
  {
    jumping();
    2cb6:	ce 01       	movw	r24, r28
    2cb8:	0e 94 26 15 	call	0x2a4c	; 0x2a4c <_ZN6Player7jumpingEv>
  }

    2cbc:	df 91       	pop	r29
    2cbe:	cf 91       	pop	r28
    2cc0:	1f 91       	pop	r17
    2cc2:	0f 91       	pop	r16
    2cc4:	ff 90       	pop	r15
    2cc6:	ef 90       	pop	r14
    2cc8:	08 95       	ret

00002cca <_ZN3MCU7Setting8beginPinEaa>:
  }

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    2cca:	81 30       	cpi	r24, 0x01	; 1
    2ccc:	89 f0       	breq	.+34     	; 0x2cf0 <_ZN3MCU7Setting8beginPinEaa+0x26>
    2cce:	82 30       	cpi	r24, 0x02	; 2
    2cd0:	e1 f0       	breq	.+56     	; 0x2d0a <_ZN3MCU7Setting8beginPinEaa+0x40>
    2cd2:	81 11       	cpse	r24, r1
    2cd4:	26 c0       	rjmp	.+76     	; 0x2d22 <_ZN3MCU7Setting8beginPinEaa+0x58>
    2cd6:	24 b1       	in	r18, 0x04	; 4
    2cd8:	81 e0       	ldi	r24, 0x01	; 1
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	02 c0       	rjmp	.+4      	; 0x2ce2 <_ZN3MCU7Setting8beginPinEaa+0x18>
    2cde:	88 0f       	add	r24, r24
    2ce0:	99 1f       	adc	r25, r25
    2ce2:	6a 95       	dec	r22
    2ce4:	e2 f7       	brpl	.-8      	; 0x2cde <_ZN3MCU7Setting8beginPinEaa+0x14>
    2ce6:	82 2b       	or	r24, r18
    2ce8:	84 b9       	out	0x04, r24	; 4
    2cea:	85 b1       	in	r24, 0x05	; 5
    2cec:	85 b9       	out	0x05, r24	; 5
    2cee:	08 95       	ret
    2cf0:	27 b1       	in	r18, 0x07	; 7
    2cf2:	81 e0       	ldi	r24, 0x01	; 1
    2cf4:	90 e0       	ldi	r25, 0x00	; 0
    2cf6:	02 c0       	rjmp	.+4      	; 0x2cfc <_ZN3MCU7Setting8beginPinEaa+0x32>
    2cf8:	88 0f       	add	r24, r24
    2cfa:	99 1f       	adc	r25, r25
    2cfc:	6a 95       	dec	r22
    2cfe:	e2 f7       	brpl	.-8      	; 0x2cf8 <_ZN3MCU7Setting8beginPinEaa+0x2e>
    2d00:	82 2b       	or	r24, r18
    2d02:	87 b9       	out	0x07, r24	; 7
    2d04:	88 b1       	in	r24, 0x08	; 8
    2d06:	88 b9       	out	0x08, r24	; 8
    2d08:	08 95       	ret
    2d0a:	2a b1       	in	r18, 0x0a	; 10
    2d0c:	81 e0       	ldi	r24, 0x01	; 1
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	02 c0       	rjmp	.+4      	; 0x2d16 <_ZN3MCU7Setting8beginPinEaa+0x4c>
    2d12:	88 0f       	add	r24, r24
    2d14:	99 1f       	adc	r25, r25
    2d16:	6a 95       	dec	r22
    2d18:	e2 f7       	brpl	.-8      	; 0x2d12 <_ZN3MCU7Setting8beginPinEaa+0x48>
    2d1a:	82 2b       	or	r24, r18
    2d1c:	8a b9       	out	0x0a, r24	; 10
    2d1e:	8b b1       	in	r24, 0x0b	; 11
    2d20:	8b b9       	out	0x0b, r24	; 11
    2d22:	08 95       	ret

00002d24 <_ZN3MCU7Setting9beginPortEab>:
    2d24:	61 95       	neg	r22
    2d26:	81 30       	cpi	r24, 0x01	; 1
    2d28:	39 f0       	breq	.+14     	; 0x2d38 <_ZN3MCU7Setting9beginPortEab+0x14>
    2d2a:	82 30       	cpi	r24, 0x02	; 2
    2d2c:	41 f0       	breq	.+16     	; 0x2d3e <_ZN3MCU7Setting9beginPortEab+0x1a>
    2d2e:	81 11       	cpse	r24, r1
    2d30:	08 c0       	rjmp	.+16     	; 0x2d42 <_ZN3MCU7Setting9beginPortEab+0x1e>
    2d32:	64 b9       	out	0x04, r22	; 4
    2d34:	15 b8       	out	0x05, r1	; 5
    2d36:	08 95       	ret
    2d38:	67 b9       	out	0x07, r22	; 7
    2d3a:	18 b8       	out	0x08, r1	; 8
    2d3c:	08 95       	ret
    2d3e:	6a b9       	out	0x0a, r22	; 10
    2d40:	1b b8       	out	0x0b, r1	; 11
    2d42:	08 95       	ret

00002d44 <_ZN3MCU7Setting8beginINTEaa>:
    2d44:	9d b3       	in	r25, 0x1d	; 29
    2d46:	21 e0       	ldi	r18, 0x01	; 1
    2d48:	30 e0       	ldi	r19, 0x00	; 0
    2d4a:	02 c0       	rjmp	.+4      	; 0x2d50 <_ZN3MCU7Setting8beginINTEaa+0xc>
    2d4c:	22 0f       	add	r18, r18
    2d4e:	33 1f       	adc	r19, r19
    2d50:	8a 95       	dec	r24
    2d52:	e2 f7       	brpl	.-8      	; 0x2d4c <_ZN3MCU7Setting8beginINTEaa+0x8>
    2d54:	29 2b       	or	r18, r25
    2d56:	2d bb       	out	0x1d, r18	; 29
    2d58:	61 30       	cpi	r22, 0x01	; 1
    2d5a:	39 f0       	breq	.+14     	; 0x2d6a <_ZN3MCU7Setting8beginINTEaa+0x26>
    2d5c:	62 30       	cpi	r22, 0x02	; 2
    2d5e:	49 f0       	breq	.+18     	; 0x2d72 <_ZN3MCU7Setting8beginINTEaa+0x2e>
    2d60:	61 11       	cpse	r22, r1
    2d62:	0a c0       	rjmp	.+20     	; 0x2d78 <_ZN3MCU7Setting8beginINTEaa+0x34>
    2d64:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d68:	08 95       	ret
    2d6a:	8a e0       	ldi	r24, 0x0A	; 10
    2d6c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d70:	08 95       	ret
    2d72:	8f e0       	ldi	r24, 0x0F	; 15
    2d74:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2d78:	08 95       	ret

00002d7a <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    2d7a:	81 30       	cpi	r24, 0x01	; 1
    2d7c:	99 f1       	breq	.+102    	; 0x2de4 <_ZN3MCU7Setting10beginTimerEab+0x6a>
    2d7e:	82 30       	cpi	r24, 0x02	; 2
    2d80:	b1 f0       	breq	.+44     	; 0x2dae <_ZN3MCU7Setting10beginTimerEab+0x34>
    2d82:	81 11       	cpse	r24, r1
    2d84:	50 c0       	rjmp	.+160    	; 0x2e26 <_ZN3MCU7Setting10beginTimerEab+0xac>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    2d86:	61 11       	cpse	r22, r1
    2d88:	08 c0       	rjmp	.+16     	; 0x2d9a <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    2d8a:	81 e0       	ldi	r24, 0x01	; 1
    2d8c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    2d90:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    2d92:	85 e0       	ldi	r24, 0x05	; 5
    2d94:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    2d96:	16 bc       	out	0x26, r1	; 38
    2d98:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    2d9a:	82 e0       	ldi	r24, 0x02	; 2
    2d9c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    2da0:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    2da2:	85 e0       	ldi	r24, 0x05	; 5
    2da4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    2da6:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    2da8:	8f ef       	ldi	r24, 0xFF	; 255
    2daa:	87 bd       	out	0x27, r24	; 39
    2dac:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    2dae:	61 11       	cpse	r22, r1
    2db0:	0b c0       	rjmp	.+22     	; 0x2dc8 <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    2db2:	81 e0       	ldi	r24, 0x01	; 1
    2db4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    2db8:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    2dbc:	84 e0       	ldi	r24, 0x04	; 4
    2dbe:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    2dc2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2dc6:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    2dc8:	82 e0       	ldi	r24, 0x02	; 2
    2dca:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    2dce:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    2dd2:	84 e0       	ldi	r24, 0x04	; 4
    2dd4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    2dd8:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    2ddc:	89 ef       	ldi	r24, 0xF9	; 249
    2dde:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2de2:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    2de4:	61 11       	cpse	r22, r1
    2de6:	0d c0       	rjmp	.+26     	; 0x2e02 <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    2de8:	81 e0       	ldi	r24, 0x01	; 1
    2dea:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, Normal Mode
    2dee:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x05;
    2df2:	85 e0       	ldi	r24, 0x05	; 5
    2df4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    2df8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2dfc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2e00:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    2e02:	82 e0       	ldi	r24, 0x02	; 2
    2e04:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, CTC Mode
    2e08:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0D;
    2e0c:	8d e0       	ldi	r24, 0x0D	; 13
    2e0e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    2e12:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2e16:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    2e1a:	8d e3       	ldi	r24, 0x3D	; 61
    2e1c:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    2e20:	88 e0       	ldi	r24, 0x08	; 8
    2e22:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2e26:	08 95       	ret

00002e28 <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    2e28:	85 30       	cpi	r24, 0x05	; 5
    2e2a:	09 f4       	brne	.+2      	; 0x2e2e <_ZN3MCU7Setting8beginPWMEab+0x6>
    2e2c:	5d c0       	rjmp	.+186    	; 0x2ee8 <_ZN3MCU7Setting8beginPWMEab+0xc0>
    2e2e:	2c f4       	brge	.+10     	; 0x2e3a <_ZN3MCU7Setting8beginPWMEab+0x12>
    2e30:	83 30       	cpi	r24, 0x03	; 3
    2e32:	51 f0       	breq	.+20     	; 0x2e48 <_ZN3MCU7Setting8beginPWMEab+0x20>
    2e34:	84 30       	cpi	r24, 0x04	; 4
    2e36:	c1 f0       	breq	.+48     	; 0x2e68 <_ZN3MCU7Setting8beginPWMEab+0x40>
    2e38:	08 95       	ret
    2e3a:	87 30       	cpi	r24, 0x07	; 7
    2e3c:	29 f1       	breq	.+74     	; 0x2e88 <_ZN3MCU7Setting8beginPWMEab+0x60>
    2e3e:	0c f4       	brge	.+2      	; 0x2e42 <_ZN3MCU7Setting8beginPWMEab+0x1a>
    2e40:	6f c0       	rjmp	.+222    	; 0x2f20 <_ZN3MCU7Setting8beginPWMEab+0xf8>
    2e42:	88 30       	cpi	r24, 0x08	; 8
    2e44:	c9 f1       	breq	.+114    	; 0x2eb8 <_ZN3MCU7Setting8beginPWMEab+0x90>
    2e46:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    2e48:	61 11       	cpse	r22, r1
    2e4a:	07 c0       	rjmp	.+14     	; 0x2e5a <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    2e4c:	84 b5       	in	r24, 0x24	; 36
    2e4e:	81 64       	ori	r24, 0x41	; 65
    2e50:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2e52:	8c e0       	ldi	r24, 0x0C	; 12
    2e54:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e56:	16 bc       	out	0x26, r1	; 38
    2e58:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    2e5a:	84 b5       	in	r24, 0x24	; 36
    2e5c:	83 64       	ori	r24, 0x43	; 67
    2e5e:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    2e60:	8c e0       	ldi	r24, 0x0C	; 12
    2e62:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e64:	16 bc       	out	0x26, r1	; 38
    2e66:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    2e68:	61 11       	cpse	r22, r1
    2e6a:	07 c0       	rjmp	.+14     	; 0x2e7a <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    2e6c:	84 b5       	in	r24, 0x24	; 36
    2e6e:	81 61       	ori	r24, 0x11	; 17
    2e70:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2e72:	8c e0       	ldi	r24, 0x0C	; 12
    2e74:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e76:	16 bc       	out	0x26, r1	; 38
    2e78:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    2e7a:	84 b5       	in	r24, 0x24	; 36
    2e7c:	83 61       	ori	r24, 0x13	; 19
    2e7e:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    2e80:	8c e0       	ldi	r24, 0x0C	; 12
    2e82:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2e84:	16 bc       	out	0x26, r1	; 38
    2e86:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    2e88:	61 11       	cpse	r22, r1
    2e8a:	0b c0       	rjmp	.+22     	; 0x2ea2 <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    2e8c:	e0 eb       	ldi	r30, 0xB0	; 176
    2e8e:	f0 e0       	ldi	r31, 0x00	; 0
    2e90:	80 81       	ld	r24, Z
    2e92:	81 68       	ori	r24, 0x81	; 129
    2e94:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    2e96:	86 e0       	ldi	r24, 0x06	; 6
    2e98:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2e9c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2ea0:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    2ea2:	e0 eb       	ldi	r30, 0xB0	; 176
    2ea4:	f0 e0       	ldi	r31, 0x00	; 0
    2ea6:	80 81       	ld	r24, Z
    2ea8:	83 68       	ori	r24, 0x83	; 131
    2eaa:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    2eac:	86 e0       	ldi	r24, 0x06	; 6
    2eae:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2eb2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2eb6:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    2eb8:	61 11       	cpse	r22, r1
    2eba:	0b c0       	rjmp	.+22     	; 0x2ed2 <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    2ebc:	e0 eb       	ldi	r30, 0xB0	; 176
    2ebe:	f0 e0       	ldi	r31, 0x00	; 0
    2ec0:	80 81       	ld	r24, Z
    2ec2:	81 62       	ori	r24, 0x21	; 33
    2ec4:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    2ec6:	86 e0       	ldi	r24, 0x06	; 6
    2ec8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2ecc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2ed0:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    2ed2:	e0 eb       	ldi	r30, 0xB0	; 176
    2ed4:	f0 e0       	ldi	r31, 0x00	; 0
    2ed6:	80 81       	ld	r24, Z
    2ed8:	83 62       	ori	r24, 0x23	; 35
    2eda:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    2edc:	86 e0       	ldi	r24, 0x06	; 6
    2ede:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2ee2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2ee6:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    2ee8:	61 11       	cpse	r22, r1
    2eea:	0d c0       	rjmp	.+26     	; 0x2f06 <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    2eec:	e0 e8       	ldi	r30, 0x80	; 128
    2eee:	f0 e0       	ldi	r31, 0x00	; 0
    2ef0:	80 81       	ld	r24, Z
    2ef2:	83 68       	ori	r24, 0x83	; 131
    2ef4:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2ef6:	84 e0       	ldi	r24, 0x04	; 4
    2ef8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2efc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f00:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f04:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    2f06:	e0 e8       	ldi	r30, 0x80	; 128
    2f08:	f0 e0       	ldi	r31, 0x00	; 0
    2f0a:	80 81       	ld	r24, Z
    2f0c:	83 68       	ori	r24, 0x83	; 131
    2f0e:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    2f10:	8c e0       	ldi	r24, 0x0C	; 12
    2f12:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f16:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f1a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f1e:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    2f20:	61 11       	cpse	r22, r1
    2f22:	0d c0       	rjmp	.+26     	; 0x2f3e <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2f24:	e0 e8       	ldi	r30, 0x80	; 128
    2f26:	f0 e0       	ldi	r31, 0x00	; 0
    2f28:	80 81       	ld	r24, Z
    2f2a:	83 62       	ori	r24, 0x23	; 35
    2f2c:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2f2e:	84 e0       	ldi	r24, 0x04	; 4
    2f30:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f34:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f38:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f3c:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2f3e:	e0 e8       	ldi	r30, 0x80	; 128
    2f40:	f0 e0       	ldi	r31, 0x00	; 0
    2f42:	80 81       	ld	r24, Z
    2f44:	83 62       	ori	r24, 0x23	; 35
    2f46:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    2f48:	8c e0       	ldi	r24, 0x0C	; 12
    2f4a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2f4e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2f52:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2f56:	08 95       	ret

00002f58 <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    2f58:	80 e5       	ldi	r24, 0x50	; 80
    2f5a:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    2f5c:	81 e0       	ldi	r24, 0x01	; 1
    2f5e:	8d bd       	out	0x2d, r24	; 45
    2f60:	08 95       	ret

00002f62 <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    2f62:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    2f64:	0d b4       	in	r0, 0x2d	; 45
    2f66:	07 fe       	sbrs	r0, 7
    2f68:	fd cf       	rjmp	.-6      	; 0x2f64 <_ZN3SPI7sendBitEh+0x2>
}
    2f6a:	08 95       	ret

00002f6c <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    2f6c:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    2f6e:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    2f70:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2f74:	28 9a       	sbi	0x05, 0	; 5
    2f76:	08 95       	ret

00002f78 <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    2f78:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    2f7a:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    2f7c:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2f80:	28 9a       	sbi	0x05, 0	; 5
    2f82:	08 95       	ret

00002f84 <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    2f84:	1f 93       	push	r17
    2f86:	cf 93       	push	r28
    2f88:	df 93       	push	r29
    2f8a:	ec 01       	movw	r28, r24
    2f8c:	16 2f       	mov	r17, r22
    2f8e:	67 2f       	mov	r22, r23
  RS_HIGH;
    2f90:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    2f92:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    2f94:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    2f98:	61 2f       	mov	r22, r17
    2f9a:	ce 01       	movw	r24, r28
    2f9c:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    2fa0:	28 9a       	sbi	0x05, 0	; 5
}
    2fa2:	df 91       	pop	r29
    2fa4:	cf 91       	pop	r28
    2fa6:	1f 91       	pop	r17
    2fa8:	08 95       	ret

00002faa <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    2faa:	cf 93       	push	r28
    2fac:	df 93       	push	r29
    2fae:	ec 01       	movw	r28, r24
  CS_HIGH;
    2fb0:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    2fb2:	29 98       	cbi	0x05, 1	; 5
    2fb4:	2f ef       	ldi	r18, 0xFF	; 255
    2fb6:	89 ef       	ldi	r24, 0xF9	; 249
    2fb8:	90 e0       	ldi	r25, 0x00	; 0
    2fba:	21 50       	subi	r18, 0x01	; 1
    2fbc:	80 40       	sbci	r24, 0x00	; 0
    2fbe:	90 40       	sbci	r25, 0x00	; 0
    2fc0:	e1 f7       	brne	.-8      	; 0x2fba <_ZN3TFT5beginEv+0x10>
    2fc2:	00 c0       	rjmp	.+0      	; 0x2fc4 <_ZN3TFT5beginEv+0x1a>
    2fc4:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    2fc6:	29 9a       	sbi	0x05, 1	; 5
    2fc8:	2f ef       	ldi	r18, 0xFF	; 255
    2fca:	89 e6       	ldi	r24, 0x69	; 105
    2fcc:	98 e1       	ldi	r25, 0x18	; 24
    2fce:	21 50       	subi	r18, 0x01	; 1
    2fd0:	80 40       	sbci	r24, 0x00	; 0
    2fd2:	90 40       	sbci	r25, 0x00	; 0
    2fd4:	e1 f7       	brne	.-8      	; 0x2fce <_ZN3TFT5beginEv+0x24>
    2fd6:	00 c0       	rjmp	.+0      	; 0x2fd8 <_ZN3TFT5beginEv+0x2e>
    2fd8:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    2fda:	61 e0       	ldi	r22, 0x01	; 1
    2fdc:	ce 01       	movw	r24, r28
    2fde:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
    2fe2:	2f ef       	ldi	r18, 0xFF	; 255
    2fe4:	89 ef       	ldi	r24, 0xF9	; 249
    2fe6:	90 e0       	ldi	r25, 0x00	; 0
    2fe8:	21 50       	subi	r18, 0x01	; 1
    2fea:	80 40       	sbci	r24, 0x00	; 0
    2fec:	90 40       	sbci	r25, 0x00	; 0
    2fee:	e1 f7       	brne	.-8      	; 0x2fe8 <_ZN3TFT5beginEv+0x3e>
    2ff0:	00 c0       	rjmp	.+0      	; 0x2ff2 <_ZN3TFT5beginEv+0x48>
    2ff2:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    2ff4:	60 ec       	ldi	r22, 0xC0	; 192
    2ff6:	ce 01       	movw	r24, r28
    2ff8:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    2ffc:	6b e2       	ldi	r22, 0x2B	; 43
    2ffe:	ce 01       	movw	r24, r28
    3000:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    3004:	66 e3       	ldi	r22, 0x36	; 54
    3006:	ce 01       	movw	r24, r28
    3008:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    300c:	68 e4       	ldi	r22, 0x48	; 72
    300e:	ce 01       	movw	r24, r28
    3010:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    3014:	6a e3       	ldi	r22, 0x3A	; 58
    3016:	ce 01       	movw	r24, r28
    3018:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    301c:	65 e5       	ldi	r22, 0x55	; 85
    301e:	ce 01       	movw	r24, r28
    3020:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    3024:	60 e2       	ldi	r22, 0x20	; 32
    3026:	ce 01       	movw	r24, r28
    3028:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    302c:	61 e1       	ldi	r22, 0x11	; 17
    302e:	ce 01       	movw	r24, r28
    3030:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
    3034:	2f ef       	ldi	r18, 0xFF	; 255
    3036:	8d ee       	ldi	r24, 0xED	; 237
    3038:	92 e0       	ldi	r25, 0x02	; 2
    303a:	21 50       	subi	r18, 0x01	; 1
    303c:	80 40       	sbci	r24, 0x00	; 0
    303e:	90 40       	sbci	r25, 0x00	; 0
    3040:	e1 f7       	brne	.-8      	; 0x303a <_ZN3TFT5beginEv+0x90>
    3042:	00 c0       	rjmp	.+0      	; 0x3044 <_ZN3TFT5beginEv+0x9a>
    3044:	00 00       	nop
  _delay_ms(60);

  exportCommand(0x29);  // Display ON (29h)
    3046:	69 e2       	ldi	r22, 0x29	; 41
    3048:	ce 01       	movw	r24, r28
    304a:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
}
    304e:	df 91       	pop	r29
    3050:	cf 91       	pop	r28
    3052:	08 95       	ret

00003054 <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    3054:	1f 93       	push	r17
    3056:	cf 93       	push	r28
    3058:	df 93       	push	r29
    305a:	ec 01       	movw	r28, r24
    305c:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    305e:	66 e3       	ldi	r22, 0x36	; 54
    3060:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>

  switch (rotation)
    3064:	11 30       	cpi	r17, 0x01	; 1
    3066:	89 f0       	breq	.+34     	; 0x308a <_ZN3TFT11setRotationEa+0x36>
    3068:	12 30       	cpi	r17, 0x02	; 2
    306a:	a1 f0       	breq	.+40     	; 0x3094 <_ZN3TFT11setRotationEa+0x40>
    306c:	11 11       	cpse	r17, r1
    306e:	16 c0       	rjmp	.+44     	; 0x309c <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    3070:	68 e2       	ldi	r22, 0x28	; 40
    3072:	ce 01       	movw	r24, r28
    3074:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>
    temp = m_Width;
    3078:	88 81       	ld	r24, Y
    307a:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    307c:	2a 81       	ldd	r18, Y+2	; 0x02
    307e:	3b 81       	ldd	r19, Y+3	; 0x03
    3080:	39 83       	std	Y+1, r19	; 0x01
    3082:	28 83       	st	Y, r18
    m_Height = temp;
    3084:	9b 83       	std	Y+3, r25	; 0x03
    3086:	8a 83       	std	Y+2, r24	; 0x02
    break;
    3088:	09 c0       	rjmp	.+18     	; 0x309c <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    308a:	68 e4       	ldi	r22, 0x48	; 72
    308c:	ce 01       	movw	r24, r28
    308e:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>
    break;
    3092:	04 c0       	rjmp	.+8      	; 0x309c <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    3094:	68 e8       	ldi	r22, 0x88	; 136
    3096:	ce 01       	movw	r24, r28
    3098:	0e 94 bc 17 	call	0x2f78	; 0x2f78 <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    309c:	df 91       	pop	r29
    309e:	cf 91       	pop	r28
    30a0:	1f 91       	pop	r17
    30a2:	08 95       	ret

000030a4 <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    30a4:	af 92       	push	r10
    30a6:	bf 92       	push	r11
    30a8:	cf 92       	push	r12
    30aa:	df 92       	push	r13
    30ac:	ef 92       	push	r14
    30ae:	ff 92       	push	r15
    30b0:	0f 93       	push	r16
    30b2:	1f 93       	push	r17
    30b4:	cf 93       	push	r28
    30b6:	df 93       	push	r29
    30b8:	ec 01       	movw	r28, r24
    30ba:	5b 01       	movw	r10, r22
    30bc:	7a 01       	movw	r14, r20
    30be:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    30c0:	6a e2       	ldi	r22, 0x2A	; 42
    30c2:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    30c6:	b5 01       	movw	r22, r10
    30c8:	ce 01       	movw	r24, r28
    30ca:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    30ce:	b6 01       	movw	r22, r12
    30d0:	ce 01       	movw	r24, r28
    30d2:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    30d6:	6b e2       	ldi	r22, 0x2B	; 43
    30d8:	ce 01       	movw	r24, r28
    30da:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    30de:	b7 01       	movw	r22, r14
    30e0:	ce 01       	movw	r24, r28
    30e2:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    30e6:	b8 01       	movw	r22, r16
    30e8:	ce 01       	movw	r24, r28
    30ea:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    30ee:	6c e2       	ldi	r22, 0x2C	; 44
    30f0:	ce 01       	movw	r24, r28
    30f2:	0e 94 b6 17 	call	0x2f6c	; 0x2f6c <_ZN3SPI13exportCommandEh>
}
    30f6:	df 91       	pop	r29
    30f8:	cf 91       	pop	r28
    30fa:	1f 91       	pop	r17
    30fc:	0f 91       	pop	r16
    30fe:	ff 90       	pop	r15
    3100:	ef 90       	pop	r14
    3102:	df 90       	pop	r13
    3104:	cf 90       	pop	r12
    3106:	bf 90       	pop	r11
    3108:	af 90       	pop	r10
    310a:	08 95       	ret

0000310c <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
                Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    310c:	cf 92       	push	r12
    310e:	df 92       	push	r13
    3110:	ef 92       	push	r14
    3112:	ff 92       	push	r15
    3114:	0f 93       	push	r16
    3116:	1f 93       	push	r17
    3118:	cf 93       	push	r28
    311a:	df 93       	push	r29
    311c:	7c 01       	movw	r14, r24
    311e:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    3120:	fc 01       	movw	r30, r24
    3122:	02 81       	ldd	r16, Z+2	; 0x02
    3124:	13 81       	ldd	r17, Z+3	; 0x03
    3126:	01 50       	subi	r16, 0x01	; 1
    3128:	11 09       	sbc	r17, r1
    312a:	20 81       	ld	r18, Z
    312c:	31 81       	ldd	r19, Z+1	; 0x01
    312e:	21 50       	subi	r18, 0x01	; 1
    3130:	31 09       	sbc	r19, r1
    3132:	40 e0       	ldi	r20, 0x00	; 0
    3134:	50 e0       	ldi	r21, 0x00	; 0
    3136:	60 e0       	ldi	r22, 0x00	; 0
    3138:	70 e0       	ldi	r23, 0x00	; 0
    313a:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    313e:	f7 01       	movw	r30, r14
    3140:	82 81       	ldd	r24, Z+2	; 0x02
    3142:	93 81       	ldd	r25, Z+3	; 0x03
    3144:	18 16       	cp	r1, r24
    3146:	19 06       	cpc	r1, r25
    3148:	ec f4       	brge	.+58     	; 0x3184 <_ZN3TFT10fillScreenEj+0x78>
    314a:	00 e0       	ldi	r16, 0x00	; 0
    314c:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    314e:	f7 01       	movw	r30, r14
    3150:	80 81       	ld	r24, Z
    3152:	91 81       	ldd	r25, Z+1	; 0x01
    3154:	18 16       	cp	r1, r24
    3156:	19 06       	cpc	r1, r25
    3158:	6c f4       	brge	.+26     	; 0x3174 <_ZN3TFT10fillScreenEj+0x68>
    315a:	c0 e0       	ldi	r28, 0x00	; 0
    315c:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    315e:	b6 01       	movw	r22, r12
    3160:	c7 01       	movw	r24, r14
    3162:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    3166:	21 96       	adiw	r28, 0x01	; 1
    3168:	f7 01       	movw	r30, r14
    316a:	80 81       	ld	r24, Z
    316c:	91 81       	ldd	r25, Z+1	; 0x01
    316e:	c8 17       	cp	r28, r24
    3170:	d9 07       	cpc	r29, r25
    3172:	ac f3       	brlt	.-22     	; 0x315e <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    3174:	0f 5f       	subi	r16, 0xFF	; 255
    3176:	1f 4f       	sbci	r17, 0xFF	; 255
    3178:	f7 01       	movw	r30, r14
    317a:	82 81       	ldd	r24, Z+2	; 0x02
    317c:	93 81       	ldd	r25, Z+3	; 0x03
    317e:	08 17       	cp	r16, r24
    3180:	19 07       	cpc	r17, r25
    3182:	2c f3       	brlt	.-54     	; 0x314e <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    3184:	df 91       	pop	r29
    3186:	cf 91       	pop	r28
    3188:	1f 91       	pop	r17
    318a:	0f 91       	pop	r16
    318c:	ff 90       	pop	r15
    318e:	ef 90       	pop	r14
    3190:	df 90       	pop	r13
    3192:	cf 90       	pop	r12
    3194:	08 95       	ret

00003196 <_ZN3TFT8fillRectEiiiij>:
/*----------------------------------------//
                Fill Rect
//----------------------------------------*/

void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
    3196:	8f 92       	push	r8
    3198:	9f 92       	push	r9
    319a:	af 92       	push	r10
    319c:	bf 92       	push	r11
    319e:	cf 92       	push	r12
    31a0:	df 92       	push	r13
    31a2:	ef 92       	push	r14
    31a4:	ff 92       	push	r15
    31a6:	0f 93       	push	r16
    31a8:	1f 93       	push	r17
    31aa:	cf 93       	push	r28
    31ac:	df 93       	push	r29
    31ae:	6c 01       	movw	r12, r24
    31b0:	49 01       	movw	r8, r18
    31b2:	58 01       	movw	r10, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    31b4:	8a 01       	movw	r16, r20
    31b6:	0a 0d       	add	r16, r10
    31b8:	1b 1d       	adc	r17, r11
    31ba:	01 50       	subi	r16, 0x01	; 1
    31bc:	11 09       	sbc	r17, r1
    31be:	9b 01       	movw	r18, r22
    31c0:	28 0d       	add	r18, r8
    31c2:	39 1d       	adc	r19, r9
    31c4:	21 50       	subi	r18, 0x01	; 1
    31c6:	31 09       	sbc	r19, r1
    31c8:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>

  for (int yPos=height; yPos>0; yPos--)
    31cc:	1a 14       	cp	r1, r10
    31ce:	1b 04       	cpc	r1, r11
    31d0:	74 f4       	brge	.+28     	; 0x31ee <_ZN3TFT8fillRectEiiiij+0x58>
  {
    for (int xPos=width; xPos>0; xPos--)
    31d2:	18 14       	cp	r1, r8
    31d4:	19 04       	cpc	r1, r9
    31d6:	3c f4       	brge	.+14     	; 0x31e6 <_ZN3TFT8fillRectEiiiij+0x50>
    31d8:	e4 01       	movw	r28, r8
    {
      exportLongData(colorValue);
    31da:	b7 01       	movw	r22, r14
    31dc:	c6 01       	movw	r24, r12
    31de:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
  {
    for (int xPos=width; xPos>0; xPos--)
    31e2:	21 97       	sbiw	r28, 0x01	; 1
    31e4:	d1 f7       	brne	.-12     	; 0x31da <_ZN3TFT8fillRectEiiiij+0x44>
void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
    31e6:	81 e0       	ldi	r24, 0x01	; 1
    31e8:	a8 1a       	sub	r10, r24
    31ea:	b1 08       	sbc	r11, r1
    31ec:	91 f7       	brne	.-28     	; 0x31d2 <_ZN3TFT8fillRectEiiiij+0x3c>
    {
      exportLongData(colorValue);
    }
  }

}
    31ee:	df 91       	pop	r29
    31f0:	cf 91       	pop	r28
    31f2:	1f 91       	pop	r17
    31f4:	0f 91       	pop	r16
    31f6:	ff 90       	pop	r15
    31f8:	ef 90       	pop	r14
    31fa:	df 90       	pop	r13
    31fc:	cf 90       	pop	r12
    31fe:	bf 90       	pop	r11
    3200:	af 90       	pop	r10
    3202:	9f 90       	pop	r9
    3204:	8f 90       	pop	r8
    3206:	08 95       	ret

00003208 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>:
            Draw Doubled Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    3208:	2f 92       	push	r2
    320a:	3f 92       	push	r3
    320c:	4f 92       	push	r4
    320e:	5f 92       	push	r5
    3210:	6f 92       	push	r6
    3212:	7f 92       	push	r7
    3214:	8f 92       	push	r8
    3216:	9f 92       	push	r9
    3218:	af 92       	push	r10
    321a:	bf 92       	push	r11
    321c:	cf 92       	push	r12
    321e:	df 92       	push	r13
    3220:	ef 92       	push	r14
    3222:	ff 92       	push	r15
    3224:	0f 93       	push	r16
    3226:	1f 93       	push	r17
    3228:	cf 93       	push	r28
    322a:	df 93       	push	r29
    322c:	cd b7       	in	r28, 0x3d	; 61
    322e:	de b7       	in	r29, 0x3e	; 62
    3230:	60 97       	sbiw	r28, 0x10	; 16
    3232:	0f b6       	in	r0, 0x3f	; 63
    3234:	f8 94       	cli
    3236:	de bf       	out	0x3e, r29	; 62
    3238:	0f be       	out	0x3f, r0	; 63
    323a:	cd bf       	out	0x3d, r28	; 61
    323c:	98 8b       	std	Y+16, r25	; 0x10
    323e:	8f 87       	std	Y+15, r24	; 0x0f
    3240:	29 01       	movw	r4, r18
    3242:	38 01       	movw	r6, r16
    3244:	da 82       	std	Y+2, r13	; 0x02
    3246:	c9 82       	std	Y+1, r12	; 0x01
    3248:	ba 86       	std	Y+10, r11	; 0x0a
    324a:	a9 86       	std	Y+9, r10	; 0x09
    324c:	9c 86       	std	Y+12, r9	; 0x0c
    324e:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    3250:	8a 01       	movw	r16, r20
    3252:	06 0d       	add	r16, r6
    3254:	17 1d       	adc	r17, r7
    3256:	01 50       	subi	r16, 0x01	; 1
    3258:	11 09       	sbc	r17, r1
    325a:	9b 01       	movw	r18, r22
    325c:	24 0d       	add	r18, r4
    325e:	35 1d       	adc	r19, r5
    3260:	21 50       	subi	r18, 0x01	; 1
    3262:	31 09       	sbc	r19, r1
    3264:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    3268:	c3 01       	movw	r24, r6
    326a:	99 23       	and	r25, r25
    326c:	0c f4       	brge	.+2      	; 0x3270 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x68>
    326e:	01 96       	adiw	r24, 0x01	; 1
    3270:	9c 01       	movw	r18, r24
    3272:	35 95       	asr	r19
    3274:	27 95       	ror	r18
    3276:	3e 87       	std	Y+14, r19	; 0x0e
    3278:	2d 87       	std	Y+13, r18	; 0x0d
    327a:	12 16       	cp	r1, r18
    327c:	13 06       	cpc	r1, r19
    327e:	0c f0       	brlt	.+2      	; 0x3282 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x7a>
    3280:	7c c0       	rjmp	.+248    	; 0x337a <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    3282:	c2 01       	movw	r24, r4
    3284:	99 23       	and	r25, r25
    3286:	0c f4       	brge	.+2      	; 0x328a <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x82>
    3288:	07 96       	adiw	r24, 0x07	; 7
    328a:	fc 01       	movw	r30, r24
    328c:	f5 95       	asr	r31
    328e:	e7 95       	ror	r30
    3290:	f5 95       	asr	r31
    3292:	e7 95       	ror	r30
    3294:	f5 95       	asr	r31
    3296:	e7 95       	ror	r30
    3298:	fe 83       	std	Y+6, r31	; 0x06
    329a:	ed 83       	std	Y+5, r30	; 0x05
    329c:	f8 87       	std	Y+8, r31	; 0x08
    329e:	ef 83       	std	Y+7, r30	; 0x07
    32a0:	6e 2c       	mov	r6, r14
    32a2:	7f 2c       	mov	r7, r15
    32a4:	21 2c       	mov	r2, r1
    32a6:	31 2c       	mov	r3, r1
    32a8:	68 94       	set
    32aa:	aa 24       	eor	r10, r10
    32ac:	a1 f8       	bld	r10, 1
    32ae:	b1 2c       	mov	r11, r1
    32b0:	8f 80       	ldd	r8, Y+7	; 0x07
    32b2:	98 84       	ldd	r9, Y+8	; 0x08
    32b4:	86 0c       	add	r8, r6
    32b6:	97 1c       	adc	r9, r7
    32b8:	7c 82       	std	Y+4, r7	; 0x04
    32ba:	6b 82       	std	Y+3, r6	; 0x03
    32bc:	4f 84       	ldd	r4, Y+15	; 0x0f
    32be:	58 88       	ldd	r5, Y+16	; 0x10
    32c0:	2d 81       	ldd	r18, Y+5	; 0x05
    32c2:	3e 81       	ldd	r19, Y+6	; 0x06
    32c4:	12 16       	cp	r1, r18
    32c6:	13 06       	cpc	r1, r19
    32c8:	0c f0       	brlt	.+2      	; 0x32cc <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc4>
    32ca:	43 c0       	rjmp	.+134    	; 0x3352 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    32cc:	eb 80       	ldd	r14, Y+3	; 0x03
    32ce:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    32d0:	f7 01       	movw	r30, r14
    32d2:	c4 90       	lpm	r12, Z
    32d4:	68 94       	set
    32d6:	66 24       	eor	r6, r6
    32d8:	62 f8       	bld	r6, 2
    32da:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    32dc:	dc 2c       	mov	r13, r12
    32de:	d6 94       	lsr	r13
    32e0:	d6 94       	lsr	r13
    32e2:	d6 94       	lsr	r13
    32e4:	d6 94       	lsr	r13
    32e6:	d6 94       	lsr	r13
    32e8:	d6 94       	lsr	r13
    32ea:	02 e0       	ldi	r16, 0x02	; 2
    32ec:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    32ee:	d1 10       	cpse	r13, r1
    32f0:	06 c0       	rjmp	.+12     	; 0x32fe <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0Bit);
    32f2:	69 81       	ldd	r22, Y+1	; 0x01
    32f4:	7a 81       	ldd	r23, Y+2	; 0x02
    32f6:	c2 01       	movw	r24, r4
    32f8:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    32fc:	1a c0       	rjmp	.+52     	; 0x3332 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    32fe:	f1 e0       	ldi	r31, 0x01	; 1
    3300:	df 12       	cpse	r13, r31
    3302:	06 c0       	rjmp	.+12     	; 0x3310 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1Bit);
    3304:	69 85       	ldd	r22, Y+9	; 0x09
    3306:	7a 85       	ldd	r23, Y+10	; 0x0a
    3308:	c2 01       	movw	r24, r4
    330a:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    330e:	11 c0       	rjmp	.+34     	; 0x3332 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    3310:	22 e0       	ldi	r18, 0x02	; 2
    3312:	d2 12       	cpse	r13, r18
    3314:	06 c0       	rjmp	.+12     	; 0x3322 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2Bit);
    3316:	6b 85       	ldd	r22, Y+11	; 0x0b
    3318:	7c 85       	ldd	r23, Y+12	; 0x0c
    331a:	c2 01       	movw	r24, r4
    331c:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3320:	08 c0       	rjmp	.+16     	; 0x3332 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    3322:	33 e0       	ldi	r19, 0x03	; 3
    3324:	d3 12       	cpse	r13, r19
    3326:	05 c0       	rjmp	.+10     	; 0x3332 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3Bit);
    3328:	6d a1       	ldd	r22, Y+37	; 0x25
    332a:	7e a1       	ldd	r23, Y+38	; 0x26
    332c:	c2 01       	movw	r24, r4
    332e:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3332:	01 50       	subi	r16, 0x01	; 1
    3334:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    3336:	d9 f6       	brne	.-74     	; 0x32ee <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xe6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    3338:	cc 0c       	add	r12, r12
    333a:	cc 0c       	add	r12, r12
    333c:	81 e0       	ldi	r24, 0x01	; 1
    333e:	68 1a       	sub	r6, r24
    3340:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    3342:	61 f6       	brne	.-104    	; 0x32dc <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xd4>
    3344:	9f ef       	ldi	r25, 0xFF	; 255
    3346:	e9 1a       	sub	r14, r25
    3348:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    334a:	e8 14       	cp	r14, r8
    334c:	f9 04       	cpc	r15, r9
    334e:	09 f0       	breq	.+2      	; 0x3352 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    3350:	bf cf       	rjmp	.-130    	; 0x32d0 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc8>
    3352:	e1 e0       	ldi	r30, 0x01	; 1
    3354:	ae 1a       	sub	r10, r30
    3356:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    3358:	09 f0       	breq	.+2      	; 0x335c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x154>
    335a:	b2 cf       	rjmp	.-156    	; 0x32c0 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xb8>
    335c:	6b 80       	ldd	r6, Y+3	; 0x03
    335e:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    3360:	ff ef       	ldi	r31, 0xFF	; 255
    3362:	2f 1a       	sub	r2, r31
    3364:	3f 0a       	sbc	r3, r31
    3366:	2f 81       	ldd	r18, Y+7	; 0x07
    3368:	38 85       	ldd	r19, Y+8	; 0x08
    336a:	62 0e       	add	r6, r18
    336c:	73 1e       	adc	r7, r19
    336e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3370:	9e 85       	ldd	r25, Y+14	; 0x0e
    3372:	28 16       	cp	r2, r24
    3374:	39 06       	cpc	r3, r25
    3376:	09 f0       	breq	.+2      	; 0x337a <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
    3378:	97 cf       	rjmp	.-210    	; 0x32a8 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    337a:	60 96       	adiw	r28, 0x10	; 16
    337c:	0f b6       	in	r0, 0x3f	; 63
    337e:	f8 94       	cli
    3380:	de bf       	out	0x3e, r29	; 62
    3382:	0f be       	out	0x3f, r0	; 63
    3384:	cd bf       	out	0x3d, r28	; 61
    3386:	df 91       	pop	r29
    3388:	cf 91       	pop	r28
    338a:	1f 91       	pop	r17
    338c:	0f 91       	pop	r16
    338e:	ff 90       	pop	r15
    3390:	ef 90       	pop	r14
    3392:	df 90       	pop	r13
    3394:	cf 90       	pop	r12
    3396:	bf 90       	pop	r11
    3398:	af 90       	pop	r10
    339a:	9f 90       	pop	r9
    339c:	8f 90       	pop	r8
    339e:	7f 90       	pop	r7
    33a0:	6f 90       	pop	r6
    33a2:	5f 90       	pop	r5
    33a4:	4f 90       	pop	r4
    33a6:	3f 90       	pop	r3
    33a8:	2f 90       	pop	r2
    33aa:	08 95       	ret

000033ac <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj>:
            Draw 100bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[100], int8_t tileSelection,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    33ac:	2f 92       	push	r2
    33ae:	3f 92       	push	r3
    33b0:	4f 92       	push	r4
    33b2:	5f 92       	push	r5
    33b4:	6f 92       	push	r6
    33b6:	7f 92       	push	r7
    33b8:	8f 92       	push	r8
    33ba:	9f 92       	push	r9
    33bc:	af 92       	push	r10
    33be:	bf 92       	push	r11
    33c0:	cf 92       	push	r12
    33c2:	df 92       	push	r13
    33c4:	ef 92       	push	r14
    33c6:	ff 92       	push	r15
    33c8:	0f 93       	push	r16
    33ca:	1f 93       	push	r17
    33cc:	cf 93       	push	r28
    33ce:	df 93       	push	r29
    33d0:	cd b7       	in	r28, 0x3d	; 61
    33d2:	de b7       	in	r29, 0x3e	; 62
    33d4:	2e 97       	sbiw	r28, 0x0e	; 14
    33d6:	0f b6       	in	r0, 0x3f	; 63
    33d8:	f8 94       	cli
    33da:	de bf       	out	0x3e, r29	; 62
    33dc:	0f be       	out	0x3f, r0	; 63
    33de:	cd bf       	out	0x3d, r28	; 61
    33e0:	9e 87       	std	Y+14, r25	; 0x0e
    33e2:	8d 87       	std	Y+13, r24	; 0x0d
    33e4:	29 01       	movw	r4, r18
    33e6:	38 01       	movw	r6, r16
    33e8:	ba 82       	std	Y+2, r11	; 0x02
    33ea:	a9 82       	std	Y+1, r10	; 0x01
    33ec:	9a 86       	std	Y+10, r9	; 0x0a
    33ee:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    33f0:	8a 01       	movw	r16, r20
    33f2:	06 0d       	add	r16, r6
    33f4:	17 1d       	adc	r17, r7
    33f6:	01 50       	subi	r16, 0x01	; 1
    33f8:	11 09       	sbc	r17, r1
    33fa:	9b 01       	movw	r18, r22
    33fc:	24 0d       	add	r18, r4
    33fe:	35 1d       	adc	r19, r5
    3400:	21 50       	subi	r18, 0x01	; 1
    3402:	31 09       	sbc	r19, r1
    3404:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    3408:	c3 01       	movw	r24, r6
    340a:	99 23       	and	r25, r25
    340c:	0c f4       	brge	.+2      	; 0x3410 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x64>
    340e:	01 96       	adiw	r24, 0x01	; 1
    3410:	9c 01       	movw	r18, r24
    3412:	35 95       	asr	r19
    3414:	27 95       	ror	r18
    3416:	3c 87       	std	Y+12, r19	; 0x0c
    3418:	2b 87       	std	Y+11, r18	; 0x0b
    341a:	12 16       	cp	r1, r18
    341c:	13 06       	cpc	r1, r19
    341e:	0c f0       	brlt	.+2      	; 0x3422 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x76>
    3420:	81 c0       	rjmp	.+258    	; 0x3524 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    3422:	c2 01       	movw	r24, r4
    3424:	99 23       	and	r25, r25
    3426:	0c f4       	brge	.+2      	; 0x342a <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x7e>
    3428:	07 96       	adiw	r24, 0x07	; 7
    342a:	fc 01       	movw	r30, r24
    342c:	f5 95       	asr	r31
    342e:	e7 95       	ror	r30
    3430:	f5 95       	asr	r31
    3432:	e7 95       	ror	r30
    3434:	f5 95       	asr	r31
    3436:	e7 95       	ror	r30
    3438:	fe 83       	std	Y+6, r31	; 0x06
    343a:	ed 83       	std	Y+5, r30	; 0x05
    343c:	f8 87       	std	Y+8, r31	; 0x08
    343e:	ef 83       	std	Y+7, r30	; 0x07
    3440:	37 01       	movw	r6, r14
    3442:	fc 2d       	mov	r31, r12
    3444:	24 e6       	ldi	r18, 0x64	; 100
    3446:	f2 02       	muls	r31, r18
    3448:	60 0c       	add	r6, r0
    344a:	71 1c       	adc	r7, r1
    344c:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    344e:	21 2c       	mov	r2, r1
    3450:	31 2c       	mov	r3, r1
    3452:	68 94       	set
    3454:	aa 24       	eor	r10, r10
    3456:	a1 f8       	bld	r10, 1
    3458:	b1 2c       	mov	r11, r1
    345a:	8f 80       	ldd	r8, Y+7	; 0x07
    345c:	98 84       	ldd	r9, Y+8	; 0x08
    345e:	86 0c       	add	r8, r6
    3460:	97 1c       	adc	r9, r7
    3462:	7c 82       	std	Y+4, r7	; 0x04
    3464:	6b 82       	std	Y+3, r6	; 0x03
    3466:	4d 84       	ldd	r4, Y+13	; 0x0d
    3468:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    346a:	8d 81       	ldd	r24, Y+5	; 0x05
    346c:	9e 81       	ldd	r25, Y+6	; 0x06
    346e:	18 16       	cp	r1, r24
    3470:	19 06       	cpc	r1, r25
    3472:	0c f0       	brlt	.+2      	; 0x3476 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xca>
    3474:	43 c0       	rjmp	.+134    	; 0x34fc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x150>
    3476:	eb 80       	ldd	r14, Y+3	; 0x03
    3478:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    347a:	f7 01       	movw	r30, r14
    347c:	c4 90       	lpm	r12, Z
    347e:	68 94       	set
    3480:	66 24       	eor	r6, r6
    3482:	62 f8       	bld	r6, 2
    3484:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    3486:	dc 2c       	mov	r13, r12
    3488:	d6 94       	lsr	r13
    348a:	d6 94       	lsr	r13
    348c:	d6 94       	lsr	r13
    348e:	d6 94       	lsr	r13
    3490:	d6 94       	lsr	r13
    3492:	d6 94       	lsr	r13
    3494:	02 e0       	ldi	r16, 0x02	; 2
    3496:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    3498:	d1 10       	cpse	r13, r1
    349a:	06 c0       	rjmp	.+12     	; 0x34a8 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xfc>
            {
              exportLongData(color0Bit);
    349c:	69 81       	ldd	r22, Y+1	; 0x01
    349e:	7a 81       	ldd	r23, Y+2	; 0x02
    34a0:	c2 01       	movw	r24, r4
    34a2:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    34a6:	1a c0       	rjmp	.+52     	; 0x34dc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    34a8:	f1 e0       	ldi	r31, 0x01	; 1
    34aa:	df 12       	cpse	r13, r31
    34ac:	06 c0       	rjmp	.+12     	; 0x34ba <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x10e>
            {
              exportLongData(color1Bit);
    34ae:	69 85       	ldd	r22, Y+9	; 0x09
    34b0:	7a 85       	ldd	r23, Y+10	; 0x0a
    34b2:	c2 01       	movw	r24, r4
    34b4:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    34b8:	11 c0       	rjmp	.+34     	; 0x34dc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    34ba:	22 e0       	ldi	r18, 0x02	; 2
    34bc:	d2 12       	cpse	r13, r18
    34be:	06 c0       	rjmp	.+12     	; 0x34cc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x120>
            {
              exportLongData(color2Bit);
    34c0:	6b a1       	ldd	r22, Y+35	; 0x23
    34c2:	7c a1       	ldd	r23, Y+36	; 0x24
    34c4:	c2 01       	movw	r24, r4
    34c6:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    34ca:	08 c0       	rjmp	.+16     	; 0x34dc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    34cc:	33 e0       	ldi	r19, 0x03	; 3
    34ce:	d3 12       	cpse	r13, r19
    34d0:	05 c0       	rjmp	.+10     	; 0x34dc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x130>
            {
              exportLongData(color3Bit);
    34d2:	6d a1       	ldd	r22, Y+37	; 0x25
    34d4:	7e a1       	ldd	r23, Y+38	; 0x26
    34d6:	c2 01       	movw	r24, r4
    34d8:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    34dc:	01 50       	subi	r16, 0x01	; 1
    34de:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    34e0:	d9 f6       	brne	.-74     	; 0x3498 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xec>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    34e2:	cc 0c       	add	r12, r12
    34e4:	cc 0c       	add	r12, r12
    34e6:	81 e0       	ldi	r24, 0x01	; 1
    34e8:	68 1a       	sub	r6, r24
    34ea:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    34ec:	61 f6       	brne	.-104    	; 0x3486 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xda>
    34ee:	9f ef       	ldi	r25, 0xFF	; 255
    34f0:	e9 1a       	sub	r14, r25
    34f2:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    34f4:	8e 14       	cp	r8, r14
    34f6:	9f 04       	cpc	r9, r15
    34f8:	09 f0       	breq	.+2      	; 0x34fc <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x150>
    34fa:	bf cf       	rjmp	.-130    	; 0x347a <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xce>
    34fc:	e1 e0       	ldi	r30, 0x01	; 1
    34fe:	ae 1a       	sub	r10, r30
    3500:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    3502:	09 f0       	breq	.+2      	; 0x3506 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x15a>
    3504:	b2 cf       	rjmp	.-156    	; 0x346a <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xbe>
    3506:	6b 80       	ldd	r6, Y+3	; 0x03
    3508:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    350a:	ff ef       	ldi	r31, 0xFF	; 255
    350c:	2f 1a       	sub	r2, r31
    350e:	3f 0a       	sbc	r3, r31
    3510:	2f 81       	ldd	r18, Y+7	; 0x07
    3512:	38 85       	ldd	r19, Y+8	; 0x08
    3514:	62 0e       	add	r6, r18
    3516:	73 1e       	adc	r7, r19
    3518:	8b 85       	ldd	r24, Y+11	; 0x0b
    351a:	9c 85       	ldd	r25, Y+12	; 0x0c
    351c:	28 16       	cp	r2, r24
    351e:	39 06       	cpc	r3, r25
    3520:	09 f0       	breq	.+2      	; 0x3524 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0x178>
    3522:	97 cf       	rjmp	.-210    	; 0x3452 <_ZN3TFT10drawBitmapEiiiiPA100_Khajjjj+0xa6>

      }
    }
  }

}
    3524:	2e 96       	adiw	r28, 0x0e	; 14
    3526:	0f b6       	in	r0, 0x3f	; 63
    3528:	f8 94       	cli
    352a:	de bf       	out	0x3e, r29	; 62
    352c:	0f be       	out	0x3f, r0	; 63
    352e:	cd bf       	out	0x3d, r28	; 61
    3530:	df 91       	pop	r29
    3532:	cf 91       	pop	r28
    3534:	1f 91       	pop	r17
    3536:	0f 91       	pop	r16
    3538:	ff 90       	pop	r15
    353a:	ef 90       	pop	r14
    353c:	df 90       	pop	r13
    353e:	cf 90       	pop	r12
    3540:	bf 90       	pop	r11
    3542:	af 90       	pop	r10
    3544:	9f 90       	pop	r9
    3546:	8f 90       	pop	r8
    3548:	7f 90       	pop	r7
    354a:	6f 90       	pop	r6
    354c:	5f 90       	pop	r5
    354e:	4f 90       	pop	r4
    3550:	3f 90       	pop	r3
    3552:	2f 90       	pop	r2
    3554:	08 95       	ret

00003556 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj>:
            Draw 160bytes Bitmap
//----------------------------------------*/

void TFT::drawBitmap160(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const unsigned char (*bitmap)[160], int8_t tileSelection,
    uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    3556:	2f 92       	push	r2
    3558:	3f 92       	push	r3
    355a:	4f 92       	push	r4
    355c:	5f 92       	push	r5
    355e:	6f 92       	push	r6
    3560:	7f 92       	push	r7
    3562:	8f 92       	push	r8
    3564:	9f 92       	push	r9
    3566:	af 92       	push	r10
    3568:	bf 92       	push	r11
    356a:	cf 92       	push	r12
    356c:	df 92       	push	r13
    356e:	ef 92       	push	r14
    3570:	ff 92       	push	r15
    3572:	0f 93       	push	r16
    3574:	1f 93       	push	r17
    3576:	cf 93       	push	r28
    3578:	df 93       	push	r29
    357a:	cd b7       	in	r28, 0x3d	; 61
    357c:	de b7       	in	r29, 0x3e	; 62
    357e:	2e 97       	sbiw	r28, 0x0e	; 14
    3580:	0f b6       	in	r0, 0x3f	; 63
    3582:	f8 94       	cli
    3584:	de bf       	out	0x3e, r29	; 62
    3586:	0f be       	out	0x3f, r0	; 63
    3588:	cd bf       	out	0x3d, r28	; 61
    358a:	9e 87       	std	Y+14, r25	; 0x0e
    358c:	8d 87       	std	Y+13, r24	; 0x0d
    358e:	29 01       	movw	r4, r18
    3590:	38 01       	movw	r6, r16
    3592:	ba 82       	std	Y+2, r11	; 0x02
    3594:	a9 82       	std	Y+1, r10	; 0x01
    3596:	9a 86       	std	Y+10, r9	; 0x0a
    3598:	89 86       	std	Y+9, r8	; 0x09

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    359a:	8a 01       	movw	r16, r20
    359c:	06 0d       	add	r16, r6
    359e:	17 1d       	adc	r17, r7
    35a0:	01 50       	subi	r16, 0x01	; 1
    35a2:	11 09       	sbc	r17, r1
    35a4:	9b 01       	movw	r18, r22
    35a6:	24 0d       	add	r18, r4
    35a8:	35 1d       	adc	r19, r5
    35aa:	21 50       	subi	r18, 0x01	; 1
    35ac:	31 09       	sbc	r19, r1
    35ae:	0e 94 52 18 	call	0x30a4	; 0x30a4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    35b2:	c3 01       	movw	r24, r6
    35b4:	99 23       	and	r25, r25
    35b6:	0c f4       	brge	.+2      	; 0x35ba <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x64>
    35b8:	01 96       	adiw	r24, 0x01	; 1
    35ba:	9c 01       	movw	r18, r24
    35bc:	35 95       	asr	r19
    35be:	27 95       	ror	r18
    35c0:	3c 87       	std	Y+12, r19	; 0x0c
    35c2:	2b 87       	std	Y+11, r18	; 0x0b
    35c4:	12 16       	cp	r1, r18
    35c6:	13 06       	cpc	r1, r19
    35c8:	0c f0       	brlt	.+2      	; 0x35cc <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x76>
    35ca:	81 c0       	rjmp	.+258    	; 0x36ce <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x178>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    35cc:	c2 01       	movw	r24, r4
    35ce:	99 23       	and	r25, r25
    35d0:	0c f4       	brge	.+2      	; 0x35d4 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x7e>
    35d2:	07 96       	adiw	r24, 0x07	; 7
    35d4:	fc 01       	movw	r30, r24
    35d6:	f5 95       	asr	r31
    35d8:	e7 95       	ror	r30
    35da:	f5 95       	asr	r31
    35dc:	e7 95       	ror	r30
    35de:	f5 95       	asr	r31
    35e0:	e7 95       	ror	r30
    35e2:	fe 83       	std	Y+6, r31	; 0x06
    35e4:	ed 83       	std	Y+5, r30	; 0x05
    35e6:	f8 87       	std	Y+8, r31	; 0x08
    35e8:	ef 83       	std	Y+7, r30	; 0x07
    35ea:	37 01       	movw	r6, r14
    35ec:	2c 2d       	mov	r18, r12
    35ee:	30 ea       	ldi	r19, 0xA0	; 160
    35f0:	23 03       	mulsu	r18, r19
    35f2:	60 0c       	add	r6, r0
    35f4:	71 1c       	adc	r7, r1
    35f6:	11 24       	eor	r1, r1
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    35f8:	21 2c       	mov	r2, r1
    35fa:	31 2c       	mov	r3, r1
    35fc:	68 94       	set
    35fe:	aa 24       	eor	r10, r10
    3600:	a1 f8       	bld	r10, 1
    3602:	b1 2c       	mov	r11, r1
    3604:	8f 80       	ldd	r8, Y+7	; 0x07
    3606:	98 84       	ldd	r9, Y+8	; 0x08
    3608:	86 0c       	add	r8, r6
    360a:	97 1c       	adc	r9, r7
    360c:	7c 82       	std	Y+4, r7	; 0x04
    360e:	6b 82       	std	Y+3, r6	; 0x03
    3610:	4d 84       	ldd	r4, Y+13	; 0x0d
    3612:	5e 84       	ldd	r5, Y+14	; 0x0e

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    3614:	8d 81       	ldd	r24, Y+5	; 0x05
    3616:	9e 81       	ldd	r25, Y+6	; 0x06
    3618:	18 16       	cp	r1, r24
    361a:	19 06       	cpc	r1, r25
    361c:	0c f0       	brlt	.+2      	; 0x3620 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xca>
    361e:	43 c0       	rjmp	.+134    	; 0x36a6 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x150>
    3620:	eb 80       	ldd	r14, Y+3	; 0x03
    3622:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);
    3624:	f7 01       	movw	r30, r14
    3626:	c4 90       	lpm	r12, Z
    3628:	68 94       	set
    362a:	66 24       	eor	r6, r6
    362c:	62 f8       	bld	r6, 2
    362e:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    3630:	dc 2c       	mov	r13, r12
    3632:	d6 94       	lsr	r13
    3634:	d6 94       	lsr	r13
    3636:	d6 94       	lsr	r13
    3638:	d6 94       	lsr	r13
    363a:	d6 94       	lsr	r13
    363c:	d6 94       	lsr	r13
    363e:	02 e0       	ldi	r16, 0x02	; 2
    3640:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    3642:	d1 10       	cpse	r13, r1
    3644:	06 c0       	rjmp	.+12     	; 0x3652 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xfc>
            {
              exportLongData(color0Bit);
    3646:	69 81       	ldd	r22, Y+1	; 0x01
    3648:	7a 81       	ldd	r23, Y+2	; 0x02
    364a:	c2 01       	movw	r24, r4
    364c:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3650:	1a c0       	rjmp	.+52     	; 0x3686 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x01)  //1Pixel = 01
    3652:	f1 e0       	ldi	r31, 0x01	; 1
    3654:	df 12       	cpse	r13, r31
    3656:	06 c0       	rjmp	.+12     	; 0x3664 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x10e>
            {
              exportLongData(color1Bit);
    3658:	69 85       	ldd	r22, Y+9	; 0x09
    365a:	7a 85       	ldd	r23, Y+10	; 0x0a
    365c:	c2 01       	movw	r24, r4
    365e:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3662:	11 c0       	rjmp	.+34     	; 0x3686 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x02)  //1Pixel = 10
    3664:	22 e0       	ldi	r18, 0x02	; 2
    3666:	d2 12       	cpse	r13, r18
    3668:	06 c0       	rjmp	.+12     	; 0x3676 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x120>
            {
              exportLongData(color2Bit);
    366a:	6b a1       	ldd	r22, Y+35	; 0x23
    366c:	7c a1       	ldd	r23, Y+36	; 0x24
    366e:	c2 01       	movw	r24, r4
    3670:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3674:	08 c0       	rjmp	.+16     	; 0x3686 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            }

            else if (temp == 0x03)  //1Pixel = 11
    3676:	33 e0       	ldi	r19, 0x03	; 3
    3678:	d3 12       	cpse	r13, r19
    367a:	05 c0       	rjmp	.+10     	; 0x3686 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x130>
            {
              exportLongData(color3Bit);
    367c:	6d a1       	ldd	r22, Y+37	; 0x25
    367e:	7e a1       	ldd	r23, Y+38	; 0x26
    3680:	c2 01       	movw	r24, r4
    3682:	0e 94 c2 17 	call	0x2f84	; 0x2f84 <_ZN3SPI14exportLongDataEj>
    3686:	01 50       	subi	r16, 0x01	; 1
    3688:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    368a:	d9 f6       	brne	.-74     	; 0x3642 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xec>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    368c:	cc 0c       	add	r12, r12
    368e:	cc 0c       	add	r12, r12
    3690:	81 e0       	ldi	r24, 0x01	; 1
    3692:	68 1a       	sub	r6, r24
    3694:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    3696:	61 f6       	brne	.-104    	; 0x3630 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xda>
    3698:	9f ef       	ldi	r25, 0xFF	; 255
    369a:	e9 1a       	sub	r14, r25
    369c:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    369e:	8e 14       	cp	r8, r14
    36a0:	9f 04       	cpc	r9, r15
    36a2:	09 f0       	breq	.+2      	; 0x36a6 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x150>
    36a4:	bf cf       	rjmp	.-130    	; 0x3624 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xce>
    36a6:	e1 e0       	ldi	r30, 0x01	; 1
    36a8:	ae 1a       	sub	r10, r30
    36aa:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    36ac:	09 f0       	breq	.+2      	; 0x36b0 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x15a>
    36ae:	b2 cf       	rjmp	.-156    	; 0x3614 <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xbe>
    36b0:	6b 80       	ldd	r6, Y+3	; 0x03
    36b2:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    36b4:	ff ef       	ldi	r31, 0xFF	; 255
    36b6:	2f 1a       	sub	r2, r31
    36b8:	3f 0a       	sbc	r3, r31
    36ba:	2f 81       	ldd	r18, Y+7	; 0x07
    36bc:	38 85       	ldd	r19, Y+8	; 0x08
    36be:	62 0e       	add	r6, r18
    36c0:	73 1e       	adc	r7, r19
    36c2:	8b 85       	ldd	r24, Y+11	; 0x0b
    36c4:	9c 85       	ldd	r25, Y+12	; 0x0c
    36c6:	28 16       	cp	r2, r24
    36c8:	39 06       	cpc	r3, r25
    36ca:	09 f0       	breq	.+2      	; 0x36ce <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0x178>
    36cc:	97 cf       	rjmp	.-210    	; 0x35fc <_ZN3TFT13drawBitmap160EiiiiPA160_Khajjjj+0xa6>

      }
    }
  }

    36ce:	2e 96       	adiw	r28, 0x0e	; 14
    36d0:	0f b6       	in	r0, 0x3f	; 63
    36d2:	f8 94       	cli
    36d4:	de bf       	out	0x3e, r29	; 62
    36d6:	0f be       	out	0x3f, r0	; 63
    36d8:	cd bf       	out	0x3d, r28	; 61
    36da:	df 91       	pop	r29
    36dc:	cf 91       	pop	r28
    36de:	1f 91       	pop	r17
    36e0:	0f 91       	pop	r16
    36e2:	ff 90       	pop	r15
    36e4:	ef 90       	pop	r14
    36e6:	df 90       	pop	r13
    36e8:	cf 90       	pop	r12
    36ea:	bf 90       	pop	r11
    36ec:	af 90       	pop	r10
    36ee:	9f 90       	pop	r9
    36f0:	8f 90       	pop	r8
    36f2:	7f 90       	pop	r7
    36f4:	6f 90       	pop	r6
    36f6:	5f 90       	pop	r5
    36f8:	4f 90       	pop	r4
    36fa:	3f 90       	pop	r3
    36fc:	2f 90       	pop	r2
    36fe:	08 95       	ret

00003700 <__udivmodsi4>:
    3700:	a1 e2       	ldi	r26, 0x21	; 33
    3702:	1a 2e       	mov	r1, r26
    3704:	aa 1b       	sub	r26, r26
    3706:	bb 1b       	sub	r27, r27
    3708:	fd 01       	movw	r30, r26
    370a:	0d c0       	rjmp	.+26     	; 0x3726 <__udivmodsi4_ep>

0000370c <__udivmodsi4_loop>:
    370c:	aa 1f       	adc	r26, r26
    370e:	bb 1f       	adc	r27, r27
    3710:	ee 1f       	adc	r30, r30
    3712:	ff 1f       	adc	r31, r31
    3714:	a2 17       	cp	r26, r18
    3716:	b3 07       	cpc	r27, r19
    3718:	e4 07       	cpc	r30, r20
    371a:	f5 07       	cpc	r31, r21
    371c:	20 f0       	brcs	.+8      	; 0x3726 <__udivmodsi4_ep>
    371e:	a2 1b       	sub	r26, r18
    3720:	b3 0b       	sbc	r27, r19
    3722:	e4 0b       	sbc	r30, r20
    3724:	f5 0b       	sbc	r31, r21

00003726 <__udivmodsi4_ep>:
    3726:	66 1f       	adc	r22, r22
    3728:	77 1f       	adc	r23, r23
    372a:	88 1f       	adc	r24, r24
    372c:	99 1f       	adc	r25, r25
    372e:	1a 94       	dec	r1
    3730:	69 f7       	brne	.-38     	; 0x370c <__udivmodsi4_loop>
    3732:	60 95       	com	r22
    3734:	70 95       	com	r23
    3736:	80 95       	com	r24
    3738:	90 95       	com	r25
    373a:	9b 01       	movw	r18, r22
    373c:	ac 01       	movw	r20, r24
    373e:	bd 01       	movw	r22, r26
    3740:	cf 01       	movw	r24, r30
    3742:	08 95       	ret

00003744 <__tablejump2__>:
    3744:	ee 0f       	add	r30, r30
    3746:	ff 1f       	adc	r31, r31
    3748:	05 90       	lpm	r0, Z+
    374a:	f4 91       	lpm	r31, Z
    374c:	e0 2d       	mov	r30, r0
    374e:	09 94       	ijmp

00003750 <_exit>:
    3750:	f8 94       	cli

00003752 <__stop_program>:
    3752:	ff cf       	rjmp	.-2      	; 0x3752 <__stop_program>
