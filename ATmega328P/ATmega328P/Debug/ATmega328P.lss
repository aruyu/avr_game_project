
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000027f6  0000288a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800102  00800102  0000288c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000288c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000028bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  000028fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006781  00000000  00000000  00002a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001098  00000000  00000000  00009215  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000134b  00000000  00000000  0000a2ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000544  00000000  00000000  0000b5f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000e59  00000000  00000000  0000bb3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f8e  00000000  00000000  0000c995  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000168  00000000  00000000  0000e923  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 05 0e 	jmp	0x1c0a	; 0x1c0a <__ctors_end>
       4:	0c 94 b0 0e 	jmp	0x1d60	; 0x1d60 <__vector_1>
       8:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
       c:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      10:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      14:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      18:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      1c:	0c 94 8b 0e 	jmp	0x1d16	; 0x1d16 <__vector_7>
      20:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      24:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      28:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      2c:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__vector_11>
      30:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      34:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      38:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      3c:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      40:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      44:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      48:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      4c:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      50:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      54:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      58:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      5c:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      60:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>
      64:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 20       	and	r0, r0
	...
      92:	00 00       	nop
      94:	00 02       	muls	r16, r16
	...
      ba:	00 00       	nop
      bc:	40 00       	.word	0x0040	; ????
	...
      c6:	00 02       	muls	r16, r16
	...
      d4:	00 00       	nop
      d6:	00 80       	ld	r0, Z
	...
      e0:	00 00       	nop
      e2:	00 01       	movw	r0, r0
      e4:	50 00       	.word	0x0050	; ????
	...
      fa:	40 00       	.word	0x0040	; ????
      fc:	00 00       	nop
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	01 00       	.word	0x0001	; ????
	...
     10c:	40 00       	.word	0x0040	; ????
	...
     136:	00 00       	nop
     138:	00 01       	movw	r0, r0
	...
     14e:	00 00       	nop
     150:	00 05       	cpc	r16, r0
	...
     16a:	00 00       	nop
     16c:	00 01       	movw	r0, r0
	...
     176:	00 00       	nop
     178:	00 05       	cpc	r16, r0
	...
     192:	00 00       	nop
     194:	00 06       	cpc	r0, r16
     196:	40 00       	.word	0x0040	; ????
	...
     1b4:	00 01       	movw	r0, r0
     1b6:	00 00       	nop
     1b8:	00 00       	nop
     1ba:	00 00       	nop
     1bc:	00 01       	movw	r0, r0
	...
     1ce:	20 00       	.word	0x0020	; ????
	...
     1dc:	00 04       	cpc	r0, r0
	...
     202:	00 00       	nop
     204:	00 10       	cpse	r0, r0
	...
     216:	00 00       	nop
     218:	00 02       	muls	r16, r16
     21a:	00 00       	nop
     21c:	00 00       	nop
     21e:	00 00       	nop
     220:	00 04       	cpc	r0, r0
	...
     22a:	00 00       	nop
     22c:	00 80       	ld	r0, Z
	...
     262:	00 00       	nop
     264:	10 00       	.word	0x0010	; ????
	...
     276:	00 00       	nop
     278:	00 01       	movw	r0, r0
	...
     28a:	00 00       	nop
     28c:	10 00       	.word	0x0010	; ????
	...
     29e:	00 00       	nop
     2a0:	00 06       	cpc	r0, r16
     2a2:	40 00       	.word	0x0040	; ????
	...
     2b0:	00 00       	nop
     2b2:	00 01       	movw	r0, r0
     2b4:	65 00       	.word	0x0065	; ????
	...
     2c6:	00 00       	nop
     2c8:	00 01       	movw	r0, r0
	...
     2da:	00 00       	nop
     2dc:	10 00       	.word	0x0010	; ????
	...
     2ea:	00 00       	nop
     2ec:	00 0f       	add	r16, r16
     2ee:	ff ff       	.word	0xffff	; ????
     2f0:	f0 0f       	add	r31, r16
     2f2:	ff ff       	.word	0xffff	; ????
     2f4:	ff 0f       	add	r31, r31
     2f6:	ff ff       	.word	0xffff	; ????
     2f8:	f0 00       	.word	0x00f0	; ????
     2fa:	00 3f       	cpi	r16, 0xF0	; 240
     2fc:	c0 03       	fmuls	r20, r16
     2fe:	fc 03       	fmulsu	r23, r20
     300:	ff ff       	.word	0xffff	; ????
     302:	c0 03       	fmuls	r20, r16
     304:	ff ff       	.word	0xffff	; ????
     306:	c0 3f       	cpi	r28, 0xF0	; 240
     308:	ff ff       	.word	0xffff	; ????
     30a:	c0 00       	.word	0x00c0	; ????
	...
     314:	00 0f       	add	r16, r16
     316:	ff ff       	.word	0xffff	; ????
     318:	f0 0f       	add	r31, r16
     31a:	ff ff       	.word	0xffff	; ????
     31c:	ff 0f       	add	r31, r31
     31e:	ff ff       	.word	0xffff	; ????
     320:	f0 00       	.word	0x00f0	; ????
     322:	00 3f       	cpi	r16, 0xF0	; 240
     324:	c0 03       	fmuls	r20, r16
     326:	fc 03       	fmulsu	r23, r20
     328:	ff ff       	.word	0xffff	; ????
     32a:	c0 03       	fmuls	r20, r16
     32c:	ff ff       	.word	0xffff	; ????
     32e:	c0 3f       	cpi	r28, 0xF0	; 240
     330:	ff ff       	.word	0xffff	; ????
     332:	c0 00       	.word	0x00c0	; ????
     334:	10 00       	.word	0x0010	; ????
     336:	00 00       	nop
     338:	00 00       	nop
     33a:	00 00       	nop
     33c:	00 0f       	add	r16, r16
     33e:	f0 00       	.word	0x00f0	; ????
     340:	ff 0f       	add	r31, r31
     342:	f0 00       	.word	0x00f0	; ????
     344:	00 0f       	add	r16, r16
     346:	f0 00       	.word	0x00f0	; ????
     348:	ff 00       	.word	0x00ff	; ????
     34a:	50 3f       	cpi	r21, 0xF0	; 240
     34c:	c0 03       	fmuls	r20, r16
     34e:	fc 3f       	cpi	r31, 0xFC	; 252
     350:	c0 03       	fmuls	r20, r16
     352:	fc 3f       	cpi	r31, 0xFC	; 252
     354:	c0 07       	cpc	r28, r16
     356:	fc 3f       	cpi	r31, 0xFC	; 252
     358:	c0 03       	fmuls	r20, r16
     35a:	fc 00       	.word	0x00fc	; ????
     35c:	64 00       	.word	0x0064	; ????
     35e:	00 00       	nop
     360:	00 00       	nop
     362:	00 00       	nop
     364:	00 0f       	add	r16, r16
     366:	f0 00       	.word	0x00f0	; ????
     368:	ff 0f       	add	r31, r31
     36a:	f0 00       	.word	0x00f0	; ????
     36c:	00 0f       	add	r16, r16
     36e:	f0 00       	.word	0x00f0	; ????
     370:	ff 00       	.word	0x00ff	; ????
     372:	50 3f       	cpi	r21, 0xF0	; 240
     374:	c0 03       	fmuls	r20, r16
     376:	fc 3f       	cpi	r31, 0xFC	; 252
     378:	c0 03       	fmuls	r20, r16
     37a:	fc 3f       	cpi	r31, 0xFC	; 252
     37c:	c0 17       	cp	r28, r16
     37e:	fc 3f       	cpi	r31, 0xFC	; 252
     380:	c0 03       	fmuls	r20, r16
     382:	fc 00       	.word	0x00fc	; ????
     384:	10 00       	.word	0x0010	; ????
     386:	00 00       	nop
     388:	00 00       	nop
     38a:	00 80       	ld	r0, Z
     38c:	00 0f       	add	r16, r16
     38e:	f0 00       	.word	0x00f0	; ????
     390:	ff 0f       	add	r31, r31
     392:	f0 00       	.word	0x00f0	; ????
     394:	00 0f       	add	r16, r16
     396:	f0 00       	.word	0x00f0	; ????
     398:	ff 00       	.word	0x00ff	; ????
     39a:	00 3f       	cpi	r16, 0xF0	; 240
     39c:	c2 03       	fmuls	r20, r18
     39e:	fc 3f       	cpi	r31, 0xFC	; 252
     3a0:	c0 03       	fmuls	r20, r16
     3a2:	fc 3f       	cpi	r31, 0xFC	; 252
     3a4:	c0 07       	cpc	r28, r16
     3a6:	fc 3f       	cpi	r31, 0xFC	; 252
     3a8:	c0 03       	fmuls	r20, r16
     3aa:	fc 00       	.word	0x00fc	; ????
	...
     3b4:	00 0f       	add	r16, r16
     3b6:	f0 00       	.word	0x00f0	; ????
     3b8:	ff 0f       	add	r31, r31
     3ba:	f0 00       	.word	0x00f0	; ????
     3bc:	00 0f       	add	r16, r16
     3be:	f0 00       	.word	0x00f0	; ????
     3c0:	ff 00       	.word	0x00ff	; ????
     3c2:	00 3f       	cpi	r16, 0xF0	; 240
     3c4:	c0 03       	fmuls	r20, r16
     3c6:	fc 3f       	cpi	r31, 0xFC	; 252
     3c8:	c0 03       	fmuls	r20, r16
     3ca:	fc 3f       	cpi	r31, 0xFC	; 252
     3cc:	c0 03       	fmuls	r20, r16
     3ce:	fc 3f       	cpi	r31, 0xFC	; 252
     3d0:	c0 03       	fmuls	r20, r16
     3d2:	fc 00       	.word	0x00fc	; ????
	...
     3dc:	80 0f       	add	r24, r16
     3de:	f0 00       	.word	0x00f0	; ????
     3e0:	ff 0f       	add	r31, r31
     3e2:	ff ff       	.word	0xffff	; ????
     3e4:	00 0f       	add	r16, r16
     3e6:	f0 00       	.word	0x00f0	; ????
     3e8:	ff 00       	.word	0x00ff	; ????
     3ea:	00 3f       	cpi	r16, 0xF0	; 240
     3ec:	ff ff       	.word	0xffff	; ????
     3ee:	fc 3f       	cpi	r31, 0xFC	; 252
     3f0:	c0 03       	fmuls	r20, r16
     3f2:	fc 3f       	cpi	r31, 0xFC	; 252
     3f4:	c0 03       	fmuls	r20, r16
     3f6:	fc 3f       	cpi	r31, 0xFC	; 252
     3f8:	c0 03       	fmuls	r20, r16
     3fa:	fc 00       	.word	0x00fc	; ????
	...
     404:	00 0f       	add	r16, r16
     406:	f0 00       	.word	0x00f0	; ????
     408:	ff 0f       	add	r31, r31
     40a:	ff ff       	.word	0xffff	; ????
     40c:	00 0f       	add	r16, r16
     40e:	f8 00       	.word	0x00f8	; ????
     410:	ff 00       	.word	0x00ff	; ????
     412:	00 3f       	cpi	r16, 0xF0	; 240
     414:	ff ff       	.word	0xffff	; ????
     416:	fc 3f       	cpi	r31, 0xFC	; 252
     418:	c0 03       	fmuls	r20, r16
     41a:	fc 7f       	andi	r31, 0xFC	; 252
     41c:	c0 03       	fmuls	r20, r16
     41e:	fc 3f       	cpi	r31, 0xFC	; 252
     420:	c0 03       	fmuls	r20, r16
     422:	fc 00       	.word	0x00fc	; ????
	...
     42c:	00 0f       	add	r16, r16
     42e:	ff ff       	.word	0xffff	; ????
     430:	f0 0f       	add	r31, r16
     432:	f0 00       	.word	0x00f0	; ????
     434:	00 0f       	add	r16, r16
     436:	f0 00       	.word	0x00f0	; ????
     438:	ff 00       	.word	0x00ff	; ????
     43a:	00 3f       	cpi	r16, 0xF0	; 240
     43c:	c0 03       	fmuls	r20, r16
     43e:	fc 3f       	cpi	r31, 0xFC	; 252
     440:	c0 03       	fmuls	r20, r16
     442:	fc 3f       	cpi	r31, 0xFC	; 252
     444:	c0 03       	fmuls	r20, r16
     446:	fc 3f       	cpi	r31, 0xFC	; 252
     448:	c0 03       	fmuls	r20, r16
     44a:	fc 00       	.word	0x00fc	; ????
	...
     454:	00 0f       	add	r16, r16
     456:	ff ff       	.word	0xffff	; ????
     458:	f0 0f       	add	r31, r16
     45a:	f0 00       	.word	0x00f0	; ????
     45c:	00 0f       	add	r16, r16
     45e:	f0 00       	.word	0x00f0	; ????
     460:	ff 00       	.word	0x00ff	; ????
     462:	00 3f       	cpi	r16, 0xF0	; 240
     464:	c0 03       	fmuls	r20, r16
     466:	fc 3f       	cpi	r31, 0xFC	; 252
     468:	c0 03       	fmuls	r20, r16
     46a:	fc 3f       	cpi	r31, 0xFC	; 252
     46c:	c0 03       	fmuls	r20, r16
     46e:	fc 3f       	cpi	r31, 0xFC	; 252
     470:	c0 03       	fmuls	r20, r16
     472:	fc 00       	.word	0x00fc	; ????
	...
     47c:	00 0f       	add	r16, r16
     47e:	f0 00       	.word	0x00f0	; ????
     480:	ff 0f       	add	r31, r31
     482:	f0 00       	.word	0x00f0	; ????
     484:	00 0f       	add	r16, r16
     486:	f0 00       	.word	0x00f0	; ????
     488:	ff 00       	.word	0x00ff	; ????
     48a:	00 3f       	cpi	r16, 0xF0	; 240
     48c:	c0 03       	fmuls	r20, r16
     48e:	fc 3f       	cpi	r31, 0xFC	; 252
     490:	c0 03       	fmuls	r20, r16
     492:	fc 3f       	cpi	r31, 0xFC	; 252
     494:	c0 03       	fmuls	r20, r16
     496:	fc 3f       	cpi	r31, 0xFC	; 252
     498:	c4 03       	fmuls	r20, r20
     49a:	fc 00       	.word	0x00fc	; ????
	...
     4a4:	00 0f       	add	r16, r16
     4a6:	f0 10       	cpse	r15, r0
     4a8:	ff 0f       	add	r31, r31
     4aa:	f0 00       	.word	0x00f0	; ????
     4ac:	00 0f       	add	r16, r16
     4ae:	f0 00       	.word	0x00f0	; ????
     4b0:	ff 00       	.word	0x00ff	; ????
     4b2:	40 3f       	cpi	r20, 0xF0	; 240
     4b4:	c0 03       	fmuls	r20, r16
     4b6:	fc 3f       	cpi	r31, 0xFC	; 252
     4b8:	c0 03       	fmuls	r20, r16
     4ba:	fc 3f       	cpi	r31, 0xFC	; 252
     4bc:	c0 03       	fmuls	r20, r16
     4be:	fc 3f       	cpi	r31, 0xFC	; 252
     4c0:	c0 03       	fmuls	r20, r16
     4c2:	fc 00       	.word	0x00fc	; ????
	...
     4cc:	00 0f       	add	r16, r16
     4ce:	f0 00       	.word	0x00f0	; ????
     4d0:	ff 0f       	add	r31, r31
     4d2:	ff ff       	.word	0xffff	; ????
     4d4:	ff 0f       	add	r31, r31
     4d6:	ff ff       	.word	0xffff	; ????
     4d8:	f0 00       	.word	0x00f0	; ????
     4da:	10 3f       	cpi	r17, 0xF0	; 240
     4dc:	c0 03       	fmuls	r20, r16
     4de:	fc 13       	cpse	r31, r28
     4e0:	ff ff       	.word	0xffff	; ????
     4e2:	c0 03       	fmuls	r20, r16
     4e4:	ff ff       	.word	0xffff	; ????
     4e6:	c0 3f       	cpi	r28, 0xF0	; 240
     4e8:	ff ff       	.word	0xffff	; ????
     4ea:	c0 00       	.word	0x00c0	; ????
	...
     4f4:	00 0f       	add	r16, r16
     4f6:	f0 00       	.word	0x00f0	; ????
     4f8:	ff 0f       	add	r31, r31
     4fa:	ff ff       	.word	0xffff	; ????
     4fc:	ff 0f       	add	r31, r31
     4fe:	ff ff       	.word	0xffff	; ????
     500:	f0 00       	.word	0x00f0	; ????
     502:	00 3f       	cpi	r16, 0xF0	; 240
     504:	c0 03       	fmuls	r20, r16
     506:	fc 07       	cpc	r31, r28
     508:	ff ff       	.word	0xffff	; ????
     50a:	c0 03       	fmuls	r20, r16
     50c:	ff ff       	.word	0xffff	; ????
     50e:	c0 3f       	cpi	r28, 0xF0	; 240
     510:	ff ff       	.word	0xffff	; ????
     512:	c0 00       	.word	0x00c0	; ????
     514:	00 00       	nop
     516:	00 10       	cpse	r0, r0
     518:	00 00       	nop
     51a:	00 55       	subi	r16, 0x50	; 80
     51c:	50 00       	.word	0x0050	; ????
     51e:	00 00       	nop
     520:	00 00       	nop
     522:	40 00       	.word	0x0040	; ????
     524:	00 04       	cpc	r0, r0
     526:	00 00       	nop
     528:	40 00       	.word	0x0040	; ????
     52a:	01 00       	.word	0x0001	; ????
     52c:	00 00       	nop
     52e:	00 01       	movw	r0, r0
     530:	00 00       	nop
     532:	10 00       	.word	0x0010	; ????
     534:	01 00       	.word	0x0001	; ????
	...
     542:	05 55       	subi	r16, 0x55	; 85
     544:	55 00       	.word	0x0055	; ????
     546:	05 50       	subi	r16, 0x05	; 5
     548:	00 00       	nop
     54a:	10 00       	.word	0x0010	; ????
     54c:	00 01       	movw	r0, r0
     54e:	00 00       	nop
     550:	00 00       	nop
     552:	00 40       	sbci	r16, 0x00	; 0
     554:	00 40       	sbci	r16, 0x00	; 0
     556:	00 00       	nop
     558:	40 00       	.word	0x0040	; ????
     55a:	04 00       	.word	0x0004	; ????
     55c:	00 40       	sbci	r16, 0x00	; 0
	...
     56a:	15 55       	subi	r17, 0x55	; 85
     56c:	55 40       	sbci	r21, 0x05	; 5
     56e:	55 55       	subi	r21, 0x55	; 85
     570:	00 00       	nop
     572:	04 04       	cpc	r0, r4
     574:	00 00       	nop
     576:	40 00       	.word	0x0040	; ????
     578:	00 00       	nop
     57a:	00 10       	cpse	r0, r0
     57c:	00 10       	cpse	r0, r0
     57e:	01 00       	.word	0x0001	; ????
     580:	10 10       	cpse	r1, r0
     582:	01 10       	cpse	r0, r1
	...
     590:	00 00       	nop
     592:	55 55       	subi	r21, 0x55	; 85
     594:	55 51       	subi	r21, 0x15	; 21
     596:	55 55       	subi	r21, 0x55	; 85
     598:	40 00       	.word	0x0040	; ????
     59a:	01 01       	movw	r0, r2
     59c:	00 00       	nop
     59e:	00 00       	nop
     5a0:	00 00       	nop
     5a2:	00 04       	cpc	r0, r0
     5a4:	04 04       	cpc	r0, r4
     5a6:	00 00       	nop
     5a8:	04 04       	cpc	r0, r4
     5aa:	00 44       	sbci	r16, 0x40	; 64
     5ac:	00 04       	cpc	r0, r0
	...
     5ba:	55 55       	subi	r21, 0x55	; 85
     5bc:	55 55       	subi	r21, 0x55	; 85
     5be:	55 55       	subi	r21, 0x55	; 85
     5c0:	40 00       	.word	0x0040	; ????
     5c2:	00 40       	sbci	r16, 0x00	; 0
     5c4:	40 40       	sbci	r20, 0x00	; 0
     5c6:	00 00       	nop
     5c8:	00 00       	nop
     5ca:	00 01       	movw	r0, r0
     5cc:	01 11       	cpse	r16, r1
     5ce:	00 10       	cpse	r0, r0
     5d0:	01 01       	movw	r0, r2
     5d2:	00 11       	cpse	r16, r0
     5d4:	00 01       	movw	r0, r0
     5d6:	00 00       	nop
     5d8:	10 00       	.word	0x0010	; ????
     5da:	00 00       	nop
     5dc:	00 00       	nop
     5de:	00 00       	nop
     5e0:	00 01       	movw	r0, r0
     5e2:	55 55       	subi	r21, 0x55	; 85
     5e4:	55 55       	subi	r21, 0x55	; 85
     5e6:	55 55       	subi	r21, 0x55	; 85
     5e8:	50 00       	.word	0x0050	; ????
     5ea:	00 10       	cpse	r0, r0
     5ec:	10 3f       	cpi	r17, 0xF0	; 240
     5ee:	fc 00       	.word	0x00fc	; ????
     5f0:	00 04       	cpc	r0, r0
     5f2:	04 00       	.word	0x0004	; ????
     5f4:	40 4f       	sbci	r20, 0xF0	; 240
     5f6:	40 04       	cpc	r4, r0
     5f8:	00 40       	sbci	r16, 0x00	; 0
     5fa:	00 04       	cpc	r0, r0
     5fc:	40 00       	.word	0x0040	; ????
     5fe:	44 00       	.word	0x0044	; ????
     600:	04 00       	.word	0x0004	; ????
     602:	00 00       	nop
     604:	00 00       	nop
     606:	00 00       	nop
     608:	00 01       	movw	r0, r0
     60a:	55 55       	subi	r21, 0x55	; 85
     60c:	55 55       	subi	r21, 0x55	; 85
     60e:	55 55       	subi	r21, 0x55	; 85
     610:	50 00       	.word	0x0050	; ????
     612:	00 44       	sbci	r16, 0x40	; 64
     614:	04 3c       	cpi	r16, 0xC4	; 196
     616:	0f 7e       	andi	r16, 0xEF	; 239
     618:	af 3f       	cpi	r26, 0xFF	; 255
     61a:	fd 3f       	cpi	r31, 0xFD	; 253
     61c:	fc 11       	cpse	r31, r12
     61e:	1f ff       	.word	0xff1f	; ????
     620:	03 ff       	sbrs	r16, 3
     622:	d0 01       	movw	r26, r0
     624:	11 10       	cpse	r1, r1
     626:	11 00       	.word	0x0011	; ????
     628:	01 10       	cpse	r0, r1
     62a:	00 00       	nop
     62c:	00 00       	nop
     62e:	00 00       	nop
     630:	50 01       	movw	r10, r0
     632:	55 55       	subi	r21, 0x55	; 85
     634:	55 55       	subi	r21, 0x55	; 85
     636:	55 55       	subi	r21, 0x55	; 85
     638:	50 15       	cp	r21, r0
     63a:	40 11       	cpse	r20, r0
     63c:	11 3d       	cpi	r17, 0xD1	; 209
     63e:	0f 3e       	cpi	r16, 0xEF	; 239
     640:	af bc       	out	0x2f, r10	; 47
     642:	4f 7c       	andi	r20, 0xCF	; 207
     644:	4f 3f       	cpi	r20, 0xFF	; 255
     646:	4f 07       	cpc	r20, r31
     648:	cf 47       	sbci	r28, 0x7F	; 127
     64a:	c4 04       	cpc	r12, r4
     64c:	44 44       	sbci	r20, 0x44	; 68
     64e:	04 40       	sbci	r16, 0x04	; 4
     650:	40 40       	sbci	r20, 0x00	; 0
     652:	00 00       	nop
     654:	00 00       	nop
     656:	00 00       	nop
     658:	54 01       	movw	r10, r8
     65a:	55 55       	subi	r21, 0x55	; 85
     65c:	55 55       	subi	r21, 0x55	; 85
     65e:	55 55       	subi	r21, 0x55	; 85
     660:	51 55       	subi	r21, 0x51	; 81
     662:	54 44       	sbci	r21, 0x44	; 68
     664:	44 7c       	andi	r20, 0xC4	; 196
     666:	4f be       	out	0x3f, r4	; 63
     668:	af bc       	out	0x2f, r10	; 47
     66a:	0f 3c       	cpi	r16, 0xCF	; 207
     66c:	1f 1f       	adc	r17, r31
     66e:	1f 03       	fmul	r17, r23
     670:	df 13       	cpse	r29, r31
     672:	c1 01       	movw	r24, r2
     674:	11 11       	cpse	r17, r1
     676:	01 10       	cpse	r0, r1
     678:	10 00       	.word	0x0010	; ????
     67a:	00 00       	nop
     67c:	00 00       	nop
     67e:	00 00       	nop
     680:	55 14       	cp	r5, r5
     682:	55 55       	subi	r21, 0x55	; 85
     684:	55 55       	subi	r21, 0x55	; 85
     686:	55 55       	subi	r21, 0x55	; 85
     688:	45 55       	subi	r20, 0x55	; 85
     68a:	55 11       	cpse	r21, r5
     68c:	11 3f       	cpi	r17, 0xF1	; 241
     68e:	fe be       	out	0x3e, r15	; 62
     690:	af be       	out	0x3f, r10	; 63
     692:	0f 7c       	andi	r16, 0xCF	; 207
     694:	0f 4f       	sbci	r16, 0xFF	; 255
     696:	4f 47       	sbci	r20, 0x7F	; 127
     698:	cf 07       	cpc	r28, r31
     69a:	c4 44       	sbci	r28, 0x44	; 68
     69c:	44 44       	sbci	r20, 0x44	; 68
     69e:	44 44       	sbci	r20, 0x44	; 68
     6a0:	44 40       	sbci	r20, 0x04	; 4
     6a2:	00 00       	nop
     6a4:	00 00       	nop
     6a6:	00 00       	nop
     6a8:	55 55       	subi	r21, 0x55	; 85
     6aa:	55 55       	subi	r21, 0x55	; 85
     6ac:	55 55       	subi	r21, 0x55	; 85
     6ae:	55 55       	subi	r21, 0x55	; 85
     6b0:	55 55       	subi	r21, 0x55	; 85
     6b2:	55 14       	cp	r5, r5
     6b4:	44 7e       	andi	r20, 0xE4	; 228
     6b6:	af be       	out	0x3f, r10	; 63
     6b8:	af be       	out	0x3f, r10	; 63
     6ba:	9f 3d       	cpi	r25, 0xDF	; 223
     6bc:	1f 1f       	adc	r17, r31
     6be:	1f 13       	cpse	r17, r31
     6c0:	d3 ff       	sbrs	r29, 3
     6c2:	d1 11       	cpse	r29, r1
     6c4:	11 11       	cpse	r17, r1
     6c6:	11 11       	cpse	r17, r1
     6c8:	11 00       	.word	0x0011	; ????
     6ca:	00 00       	nop
     6cc:	00 00       	nop
     6ce:	00 00       	nop
     6d0:	55 55       	subi	r21, 0x55	; 85
     6d2:	55 55       	subi	r21, 0x55	; 85
     6d4:	55 55       	subi	r21, 0x55	; 85
     6d6:	55 55       	subi	r21, 0x55	; 85
     6d8:	5a a9       	ldd	r21, Y+50	; 0x32
     6da:	55 55       	subi	r21, 0x55	; 85
     6dc:	51 3e       	cpi	r21, 0xE1	; 225
     6de:	af af       	std	Y+63, r26	; 0x3f
     6e0:	ff be       	out	0x3f, r15	; 63
     6e2:	8f 7c       	andi	r24, 0xCF	; 207
     6e4:	4f 4f       	sbci	r20, 0xFF	; 255
     6e6:	5f 47       	sbci	r21, 0x7F	; 127
     6e8:	c4 57       	subi	r28, 0x74	; 116
     6ea:	c4 44       	sbci	r28, 0x44	; 68
     6ec:	44 44       	sbci	r20, 0x44	; 68
     6ee:	44 44       	sbci	r20, 0x44	; 68
     6f0:	44 40       	sbci	r20, 0x04	; 4
     6f2:	00 00       	nop
     6f4:	00 00       	nop
     6f6:	00 00       	nop
     6f8:	55 55       	subi	r21, 0x55	; 85
     6fa:	55 55       	subi	r21, 0x55	; 85
     6fc:	55 55       	subi	r21, 0x55	; 85
     6fe:	55 55       	subi	r21, 0x55	; 85
     700:	aa aa       	std	Y+50, r10	; 0x32
     702:	95 55       	subi	r25, 0x55	; 85
     704:	54 55       	subi	r21, 0x54	; 84
     706:	aa aa       	std	Y+50, r10	; 0x32
     708:	aa aa       	std	Y+50, r10	; 0x32
     70a:	a1 15       	cp	r26, r1
     70c:	11 11       	cpse	r17, r1
     70e:	15 51       	subi	r17, 0x15	; 21
     710:	17 ff       	sbrs	r17, 7
     712:	11 11       	cpse	r17, r1
     714:	11 11       	cpse	r17, r1
     716:	11 11       	cpse	r17, r1
     718:	11 10       	cpse	r1, r1
     71a:	00 00       	nop
     71c:	00 00       	nop
     71e:	00 00       	nop
     720:	55 40       	sbci	r21, 0x05	; 5
     722:	55 55       	subi	r21, 0x55	; 85
     724:	55 55       	subi	r21, 0x55	; 85
     726:	55 56       	subi	r21, 0x65	; 101
     728:	aa aa       	std	Y+50, r10	; 0x32
     72a:	a5 55       	subi	r26, 0x55	; 85
     72c:	55 55       	subi	r21, 0x55	; 85
     72e:	5a aa       	std	Y+50, r5	; 0x32
     730:	aa aa       	std	Y+50, r10	; 0x32
     732:	a4 45       	sbci	r26, 0x54	; 84
     734:	44 54       	subi	r20, 0x44	; 68
     736:	45 54       	subi	r20, 0x45	; 69
     738:	45 45       	sbci	r20, 0x55	; 85
     73a:	44 44       	sbci	r20, 0x44	; 68
     73c:	44 44       	sbci	r20, 0x44	; 68
     73e:	44 44       	sbci	r20, 0x44	; 68
     740:	6a aa       	std	Y+50, r6	; 0x32
     742:	00 00       	nop
     744:	00 00       	nop
     746:	00 00       	nop
     748:	55 00       	.word	0x0055	; ????
     74a:	05 55       	subi	r16, 0x55	; 85
     74c:	55 55       	subi	r21, 0x55	; 85
     74e:	55 56       	subi	r21, 0x65	; 101
     750:	aa aa       	std	Y+50, r10	; 0x32
     752:	a5 55       	subi	r26, 0x55	; 85
     754:	55 55       	subi	r21, 0x55	; 85
     756:	56 95       	lsr	r21
     758:	6a aa       	std	Y+50, r6	; 0x32
     75a:	a5 11       	cpse	r26, r5
     75c:	51 15       	cp	r21, r1
     75e:	11 55       	subi	r17, 0x51	; 81
     760:	11 51       	subi	r17, 0x11	; 17
     762:	51 11       	cpse	r21, r1
     764:	11 11       	cpse	r17, r1
     766:	11 12       	cpse	r1, r17
     768:	aa aa       	std	Y+50, r10	; 0x32
     76a:	a0 00       	.word	0x00a0	; ????
     76c:	00 00       	nop
     76e:	00 00       	nop
     770:	54 00       	.word	0x0054	; ????
     772:	01 55       	subi	r16, 0x51	; 81
     774:	55 55       	subi	r21, 0x55	; 85
     776:	55 5a       	subi	r21, 0xA5	; 165
     778:	aa aa       	std	Y+50, r10	; 0x32
     77a:	a9 55       	subi	r26, 0x59	; 89
     77c:	55 55       	subi	r21, 0x55	; 85
     77e:	56 55       	subi	r21, 0x56	; 86
     780:	5a aa       	std	Y+50, r5	; 0x32
     782:	a5 44       	sbci	r26, 0x45	; 69
     784:	54 45       	sbci	r21, 0x54	; 84
     786:	44 55       	subi	r20, 0x54	; 84
     788:	44 54       	subi	r20, 0x44	; 68
     78a:	54 54       	subi	r21, 0x44	; 68
     78c:	44 44       	sbci	r20, 0x44	; 68
     78e:	44 4a       	sbci	r20, 0xA4	; 164
     790:	aa a8       	ldd	r10, Y+50	; 0x32
     792:	00 00       	nop
     794:	00 00       	nop
     796:	00 00       	nop
     798:	50 00       	.word	0x0050	; ????
     79a:	00 54       	subi	r16, 0x40	; 64
     79c:	05 55       	subi	r16, 0x55	; 85
     79e:	55 5a       	subi	r21, 0xA5	; 165
     7a0:	aa aa       	std	Y+50, r10	; 0x32
     7a2:	a9 a9       	ldd	r26, Y+49	; 0x31
     7a4:	55 55       	subi	r21, 0x55	; 85
     7a6:	55 55       	subi	r21, 0x55	; 85
     7a8:	56 aa       	std	Z+54, r5	; 0x36
     7aa:	95 51       	subi	r25, 0x15	; 21
     7ac:	55 11       	cpse	r21, r5
     7ae:	55 55       	subi	r21, 0x55	; 85
     7b0:	55 15       	cp	r21, r5
     7b2:	55 15       	cp	r21, r5
     7b4:	55 11       	cpse	r21, r5
     7b6:	11 1a       	sub	r1, r17
     7b8:	aa a0       	ldd	r10, Y+34	; 0x22
     7ba:	00 00       	nop
     7bc:	00 00       	nop
     7be:	00 00       	nop
     7c0:	40 00       	.word	0x0040	; ????
     7c2:	00 40       	sbci	r16, 0x00	; 0
     7c4:	00 55       	subi	r16, 0x50	; 80
     7c6:	55 5a       	subi	r21, 0xA5	; 165
     7c8:	aa aa       	std	Y+50, r10	; 0x32
     7ca:	aa aa       	std	Y+50, r10	; 0x32
     7cc:	55 aa       	std	Z+53, r5	; 0x35
     7ce:	55 55       	subi	r21, 0x55	; 85
     7d0:	56 aa       	std	Z+54, r5	; 0x36
     7d2:	aa 94       	dec	r10
     7d4:	55 44       	sbci	r21, 0x45	; 69
     7d6:	55 55       	subi	r21, 0x55	; 85
     7d8:	54 45       	sbci	r21, 0x54	; 84
     7da:	55 55       	subi	r21, 0x55	; 85
     7dc:	15 44       	sbci	r17, 0x45	; 69
     7de:	44 6a       	ori	r20, 0xA4	; 164
     7e0:	aa a0       	ldd	r10, Y+34	; 0x22
     7e2:	00 00       	nop
     7e4:	00 00       	nop
     7e6:	00 00       	nop
     7e8:	50 00       	.word	0x0050	; ????
     7ea:	00 00       	nop
     7ec:	00 55       	subi	r16, 0x50	; 80
     7ee:	55 5a       	subi	r21, 0xA5	; 165
     7f0:	aa aa       	std	Y+50, r10	; 0x32
     7f2:	aa aa       	std	Y+50, r10	; 0x32
     7f4:	9a aa       	std	Y+50, r9	; 0x32
     7f6:	a5 55       	subi	r26, 0x55	; 85
     7f8:	56 55       	subi	r21, 0x56	; 86
     7fa:	aa a9       	ldd	r26, Y+50	; 0x32
     7fc:	15 55       	subi	r17, 0x55	; 85
     7fe:	15 55       	subi	r17, 0x55	; 85
     800:	55 51       	subi	r21, 0x15	; 21
     802:	55 55       	subi	r21, 0x55	; 85
     804:	55 51       	subi	r21, 0x15	; 21
     806:	11 2a       	or	r1, r17
     808:	a4 00       	.word	0x00a4	; ????
     80a:	00 00       	nop
     80c:	00 00       	nop
     80e:	00 00       	nop
     810:	55 00       	.word	0x0055	; ????
     812:	00 00       	nop
     814:	00 15       	cp	r16, r0
     816:	55 5a       	subi	r21, 0xA5	; 165
     818:	55 aa       	std	Z+53, r5	; 0x35
     81a:	aa aa       	std	Y+50, r10	; 0x32
     81c:	aa aa       	std	Y+50, r10	; 0x32
     81e:	a9 55       	subi	r26, 0x59	; 89
     820:	55 55       	subi	r21, 0x55	; 85
     822:	6a aa       	std	Y+50, r6	; 0x32
     824:	55 55       	subi	r21, 0x55	; 85
     826:	45 55       	subi	r20, 0x55	; 85
     828:	55 54       	subi	r21, 0x45	; 69
     82a:	55 55       	subi	r21, 0x55	; 85
     82c:	6a 94       	dec	r6
     82e:	44 6a       	ori	r20, 0xA4	; 164
     830:	90 00       	.word	0x0090	; ????
     832:	00 00       	nop
     834:	00 02       	muls	r16, r16
     836:	aa a8       	ldd	r10, Y+50	; 0x32
     838:	55 40       	sbci	r21, 0x05	; 5
     83a:	00 05       	cpc	r16, r0
     83c:	54 15       	cp	r21, r4
     83e:	55 55       	subi	r21, 0x55	; 85
     840:	55 5a       	subi	r21, 0xA5	; 165
     842:	a9 56       	subi	r26, 0x69	; 105
     844:	aa aa       	std	Y+50, r10	; 0x32
     846:	aa 55       	subi	r26, 0x5A	; 90
     848:	55 55       	subi	r21, 0x55	; 85
     84a:	5a aa       	std	Y+50, r5	; 0x32
     84c:	51 55       	subi	r21, 0x51	; 81
     84e:	55 55       	subi	r21, 0x55	; 85
     850:	55 55       	subi	r21, 0x55	; 85
     852:	15 56       	subi	r17, 0x65	; 101
     854:	aa a9       	ldd	r26, Y+50	; 0x32
     856:	1a 95       	dec	r17
     858:	50 00       	.word	0x0050	; ????
     85a:	00 00       	nop
     85c:	00 2a       	or	r0, r16
     85e:	aa aa       	std	Y+50, r10	; 0x32
     860:	55 50       	subi	r21, 0x05	; 5
     862:	00 55       	subi	r16, 0x50	; 80
     864:	55 55       	subi	r21, 0x55	; 85
     866:	55 55       	subi	r21, 0x55	; 85
     868:	55 56       	subi	r21, 0x65	; 101
     86a:	95 55       	subi	r25, 0x55	; 85
     86c:	6a aa       	std	Y+50, r6	; 0x32
     86e:	aa 55       	subi	r26, 0x5A	; 90
     870:	55 55       	subi	r21, 0x55	; 85
     872:	56 aa       	std	Z+54, r5	; 0x36
     874:	94 55       	subi	r25, 0x54	; 84
     876:	54 55       	subi	r21, 0x54	; 84
     878:	55 55       	subi	r21, 0x55	; 85
     87a:	55 5a       	subi	r21, 0xA5	; 165
     87c:	aa aa       	std	Y+50, r10	; 0x32
     87e:	69 55       	subi	r22, 0x59	; 89
     880:	40 00       	.word	0x0040	; ????
     882:	00 00       	nop
     884:	00 aa       	std	Z+48, r0	; 0x30
     886:	aa aa       	std	Y+50, r10	; 0x32
     888:	55 54       	subi	r21, 0x45	; 69
     88a:	01 55       	subi	r16, 0x51	; 81
     88c:	55 55       	subi	r21, 0x55	; 85
     88e:	55 55       	subi	r21, 0x55	; 85
     890:	55 56       	subi	r21, 0x65	; 101
     892:	55 55       	subi	r21, 0x55	; 85
     894:	5a aa       	std	Y+50, r5	; 0x32
     896:	aa 95       	dec	r26
     898:	55 55       	subi	r21, 0x55	; 85
     89a:	55 aa       	std	Z+53, r5	; 0x35
     89c:	95 15       	cp	r25, r5
     89e:	55 15       	cp	r21, r5
     8a0:	55 55       	subi	r21, 0x55	; 85
     8a2:	51 5a       	subi	r21, 0xA1	; 161
     8a4:	aa aa       	std	Y+50, r10	; 0x32
     8a6:	a9 55       	subi	r26, 0x59	; 89
     8a8:	40 00       	.word	0x0040	; ????
     8aa:	00 00       	nop
     8ac:	00 aa       	std	Z+48, r0	; 0x30
     8ae:	aa aa       	std	Y+50, r10	; 0x32
     8b0:	55 55       	subi	r21, 0x55	; 85
     8b2:	05 55       	subi	r16, 0x55	; 85
     8b4:	55 55       	subi	r21, 0x55	; 85
     8b6:	50 00       	.word	0x0050	; ????
     8b8:	15 55       	subi	r17, 0x55	; 85
     8ba:	55 55       	subi	r21, 0x55	; 85
     8bc:	56 aa       	std	Z+54, r5	; 0x36
     8be:	aa 95       	dec	r26
     8c0:	55 aa       	std	Z+53, r5	; 0x35
     8c2:	95 aa       	std	Z+53, r9	; 0x35
     8c4:	95 55       	subi	r25, 0x55	; 85
     8c6:	55 55       	subi	r21, 0x55	; 85
     8c8:	95 55       	subi	r25, 0x55	; 85
     8ca:	54 6a       	ori	r21, 0xA4	; 164
     8cc:	aa aa       	std	Y+50, r10	; 0x32
     8ce:	a5 55       	subi	r26, 0x55	; 85
     8d0:	40 00       	.word	0x0040	; ????
     8d2:	00 0a       	sbc	r0, r16
     8d4:	a8 aa       	std	Y+48, r10	; 0x30
     8d6:	aa aa       	std	Y+50, r10	; 0x32
     8d8:	55 55       	subi	r21, 0x55	; 85
     8da:	00 15       	cp	r16, r0
     8dc:	55 55       	subi	r21, 0x55	; 85
     8de:	00 00       	nop
     8e0:	01 55       	subi	r16, 0x51	; 81
     8e2:	55 55       	subi	r21, 0x55	; 85
     8e4:	56 55       	subi	r21, 0x56	; 86
     8e6:	aa 95       	dec	r26
     8e8:	5a aa       	std	Y+50, r5	; 0x32
     8ea:	a9 aa       	std	Y+49, r10	; 0x31
     8ec:	95 55       	subi	r25, 0x55	; 85
     8ee:	55 55       	subi	r21, 0x55	; 85
     8f0:	65 55       	subi	r22, 0x55	; 85
     8f2:	55 2a       	or	r5, r21
     8f4:	aa aa       	std	Y+50, r10	; 0x32
     8f6:	a5 55       	subi	r26, 0x55	; 85
     8f8:	40 00       	.word	0x0040	; ????
     8fa:	00 aa       	std	Z+48, r0	; 0x30
     8fc:	aa aa       	std	Y+50, r10	; 0x32
     8fe:	aa aa       	std	Y+50, r10	; 0x32
     900:	55 55       	subi	r21, 0x55	; 85
     902:	40 01       	movw	r8, r0
     904:	55 54       	subi	r21, 0x45	; 69
     906:	00 00       	nop
     908:	00 55       	subi	r16, 0x50	; 80
     90a:	55 55       	subi	r21, 0x55	; 85
     90c:	55 55       	subi	r21, 0x55	; 85
     90e:	6a 95       	dec	r22
     910:	6a aa       	std	Y+50, r6	; 0x32
     912:	aa aa       	std	Y+50, r10	; 0x32
     914:	55 55       	subi	r21, 0x55	; 85
     916:	55 55       	subi	r21, 0x55	; 85
     918:	59 95       	.word	0x9559	; ????
     91a:	aa 6a       	ori	r26, 0xAA	; 170
     91c:	aa aa       	std	Y+50, r10	; 0x32
     91e:	a5 55       	subi	r26, 0x55	; 85
     920:	50 00       	.word	0x0050	; ????
     922:	02 aa       	std	Z+50, r0	; 0x32
     924:	aa aa       	std	Y+50, r10	; 0x32
     926:	aa aa       	std	Y+50, r10	; 0x32
     928:	55 55       	subi	r21, 0x55	; 85
     92a:	41 54       	subi	r20, 0x41	; 65
     92c:	55 54       	subi	r21, 0x45	; 69
     92e:	00 00       	nop
     930:	00 15       	cp	r16, r0
     932:	01 55       	subi	r16, 0x51	; 81
     934:	55 55       	subi	r21, 0x55	; 85
     936:	6a 55       	subi	r22, 0x5A	; 90
     938:	6a aa       	std	Y+50, r6	; 0x32
     93a:	aa aa       	std	Y+50, r10	; 0x32
     93c:	a5 55       	subi	r26, 0x55	; 85
     93e:	56 55       	subi	r21, 0x56	; 86
     940:	56 6a       	ori	r21, 0xA6	; 166
     942:	aa aa       	std	Y+50, r10	; 0x32
     944:	aa aa       	std	Y+50, r10	; 0x32
     946:	a5 55       	subi	r26, 0x55	; 85
     948:	50 00       	.word	0x0050	; ????
     94a:	02 aa       	std	Z+50, r0	; 0x32
     94c:	aa aa       	std	Y+50, r10	; 0x32
     94e:	aa aa       	std	Y+50, r10	; 0x32
     950:	55 55       	subi	r21, 0x55	; 85
     952:	45 55       	subi	r20, 0x55	; 85
     954:	55 50       	subi	r21, 0x05	; 5
     956:	00 00       	nop
     958:	00 10       	cpse	r0, r0
     95a:	00 55       	subi	r16, 0x50	; 80
     95c:	55 55       	subi	r21, 0x55	; 85
     95e:	5a a5       	ldd	r21, Y+42	; 0x2a
     960:	6a aa       	std	Y+50, r6	; 0x32
     962:	aa aa       	std	Y+50, r10	; 0x32
     964:	a5 55       	subi	r26, 0x55	; 85
     966:	55 95       	asr	r21
     968:	56 aa       	std	Z+54, r5	; 0x36
     96a:	aa aa       	std	Y+50, r10	; 0x32
     96c:	aa aa       	std	Y+50, r10	; 0x32
     96e:	a5 55       	subi	r26, 0x55	; 85
     970:	54 00       	.word	0x0054	; ????
     972:	0a aa       	std	Y+50, r0	; 0x32
     974:	aa aa       	std	Y+50, r10	; 0x32
     976:	aa aa       	std	Y+50, r10	; 0x32
     978:	55 55       	subi	r21, 0x55	; 85
     97a:	55 55       	subi	r21, 0x55	; 85
     97c:	00 50       	subi	r16, 0x00	; 0
     97e:	00 00       	nop
     980:	00 00       	nop
     982:	15 55       	subi	r17, 0x55	; 85
     984:	55 55       	subi	r21, 0x55	; 85
     986:	aa aa       	std	Y+50, r10	; 0x32
     988:	6a aa       	std	Y+50, r6	; 0x32
     98a:	aa aa       	std	Y+50, r10	; 0x32
     98c:	aa a9       	ldd	r26, Y+50	; 0x32
     98e:	55 55       	subi	r21, 0x55	; 85
     990:	aa aa       	std	Y+50, r10	; 0x32
     992:	aa aa       	std	Y+50, r10	; 0x32
     994:	aa aa       	std	Y+50, r10	; 0x32
     996:	a9 55       	subi	r26, 0x59	; 89
     998:	40 01       	movw	r8, r0
     99a:	5a aa       	std	Y+50, r5	; 0x32
     99c:	aa aa       	std	Y+50, r10	; 0x32
     99e:	aa aa       	std	Y+50, r10	; 0x32
     9a0:	55 55       	subi	r21, 0x55	; 85
     9a2:	55 50       	subi	r21, 0x05	; 5
     9a4:	00 00       	nop
     9a6:	00 00       	nop
     9a8:	00 01       	movw	r0, r0
     9aa:	55 55       	subi	r21, 0x55	; 85
     9ac:	55 56       	subi	r21, 0x65	; 101
     9ae:	aa aa       	std	Y+50, r10	; 0x32
     9b0:	9a aa       	std	Y+50, r9	; 0x32
     9b2:	00 0a       	sbc	r0, r16
     9b4:	aa aa       	std	Y+50, r10	; 0x32
     9b6:	95 59       	subi	r25, 0x95	; 149
     9b8:	5a aa       	std	Y+50, r5	; 0x32
     9ba:	aa aa       	std	Y+50, r10	; 0x32
     9bc:	aa aa       	std	Y+50, r10	; 0x32
     9be:	aa 55       	subi	r26, 0x5A	; 90
     9c0:	00 15       	cp	r16, r0
     9c2:	5a aa       	std	Y+50, r5	; 0x32
     9c4:	aa aa       	std	Y+50, r10	; 0x32
     9c6:	aa aa       	std	Y+50, r10	; 0x32
     9c8:	55 55       	subi	r21, 0x55	; 85
     9ca:	55 40       	sbci	r21, 0x05	; 5
     9cc:	00 00       	nop
     9ce:	00 01       	movw	r0, r0
     9d0:	54 05       	cpc	r21, r4
     9d2:	55 55       	subi	r21, 0x55	; 85
     9d4:	55 55       	subi	r21, 0x55	; 85
     9d6:	6a aa       	std	Y+50, r6	; 0x32
     9d8:	aa 80       	ldd	r10, Y+2	; 0x02
     9da:	00 00       	nop
     9dc:	2a aa       	std	Y+50, r2	; 0x32
     9de:	a5 56       	subi	r26, 0x65	; 101
     9e0:	55 66       	ori	r21, 0x65	; 101
     9e2:	6a aa       	std	Y+50, r6	; 0x32
     9e4:	aa aa       	std	Y+50, r10	; 0x32
     9e6:	aa 54       	subi	r26, 0x4A	; 74
     9e8:	00 55       	subi	r16, 0x50	; 80
     9ea:	5a aa       	std	Y+50, r5	; 0x32
     9ec:	aa aa       	std	Y+50, r10	; 0x32
     9ee:	aa aa       	std	Y+50, r10	; 0x32
     9f0:	55 50       	subi	r21, 0x05	; 5
     9f2:	05 00       	.word	0x0005	; ????
     9f4:	00 00       	nop
     9f6:	00 05       	cpc	r16, r0
     9f8:	55 45       	sbci	r21, 0x55	; 85
     9fa:	55 55       	subi	r21, 0x55	; 85
     9fc:	55 55       	subi	r21, 0x55	; 85
     9fe:	55 aa       	std	Z+53, r5	; 0x35
     a00:	aa 00       	.word	0x00aa	; ????
     a02:	00 00       	nop
     a04:	02 aa       	std	Z+50, r0	; 0x32
     a06:	a9 55       	subi	r26, 0x59	; 89
     a08:	95 99       	sbic	0x12, 5	; 18
     a0a:	99 99       	sbic	0x13, 1	; 19
     a0c:	99 aa       	std	Y+49, r9	; 0x31
     a0e:	a9 55       	subi	r26, 0x59	; 89
     a10:	50 55       	subi	r21, 0x50	; 80
     a12:	5a aa       	std	Y+50, r5	; 0x32
     a14:	aa aa       	std	Y+50, r10	; 0x32
     a16:	a5 56       	subi	r26, 0x65	; 101
     a18:	55 40       	sbci	r21, 0x05	; 5
     a1a:	01 00       	.word	0x0001	; ????
     a1c:	00 00       	nop
     a1e:	00 00       	nop
     a20:	05 55       	subi	r16, 0x55	; 85
     a22:	55 55       	subi	r21, 0x55	; 85
     a24:	55 55       	subi	r21, 0x55	; 85
     a26:	55 5a       	subi	r21, 0xA5	; 165
     a28:	a8 00       	.word	0x00a8	; ????
     a2a:	00 00       	nop
     a2c:	00 aa       	std	Z+48, r0	; 0x30
     a2e:	a9 59       	subi	r26, 0x99	; 153
     a30:	65 66       	ori	r22, 0x65	; 101
     a32:	66 66       	ori	r22, 0x66	; 102
     a34:	6a aa       	std	Y+50, r6	; 0x32
     a36:	a5 55       	subi	r26, 0x55	; 85
     a38:	54 55       	subi	r21, 0x54	; 84
     a3a:	5a aa       	std	Y+50, r5	; 0x32
     a3c:	aa aa       	std	Y+50, r10	; 0x32
     a3e:	95 55       	subi	r25, 0x55	; 85
     a40:	55 00       	.word	0x0055	; ????
     a42:	00 00       	nop
     a44:	00 00       	nop
     a46:	00 00       	nop
     a48:	00 55       	subi	r16, 0x50	; 80
     a4a:	55 55       	subi	r21, 0x55	; 85
     a4c:	55 55       	subi	r21, 0x55	; 85
     a4e:	55 56       	subi	r21, 0x65	; 101
     a50:	a8 00       	.word	0x00a8	; ????
     a52:	00 00       	nop
     a54:	00 2a       	or	r0, r16
     a56:	55 55       	subi	r21, 0x55	; 85
     a58:	99 99       	sbic	0x13, 1	; 19
     a5a:	aa a9       	ldd	r26, Y+50	; 0x32
     a5c:	aa aa       	std	Y+50, r10	; 0x32
     a5e:	95 55       	subi	r25, 0x55	; 85
     a60:	55 55       	subi	r21, 0x55	; 85
     a62:	56 aa       	std	Z+54, r5	; 0x36
     a64:	aa aa       	std	Y+50, r10	; 0x32
     a66:	55 55       	subi	r21, 0x55	; 85
     a68:	05 00       	.word	0x0005	; ????
     a6a:	00 00       	nop
     a6c:	00 00       	nop
     a6e:	00 00       	nop
     a70:	00 14       	cp	r0, r0
     a72:	05 55       	subi	r16, 0x55	; 85
     a74:	55 55       	subi	r21, 0x55	; 85
     a76:	55 55       	subi	r21, 0x55	; 85
     a78:	a0 00       	.word	0x00a0	; ????
     a7a:	00 00       	nop
     a7c:	00 25       	eor	r16, r0
     a7e:	55 55       	subi	r21, 0x55	; 85
     a80:	56 66       	ori	r21, 0x66	; 102
     a82:	aa aa       	std	Y+50, r10	; 0x32
     a84:	aa aa       	std	Y+50, r10	; 0x32
     a86:	95 55       	subi	r25, 0x55	; 85
     a88:	55 55       	subi	r21, 0x55	; 85
     a8a:	55 aa       	std	Z+53, r5	; 0x35
     a8c:	aa aa       	std	Y+50, r10	; 0x32
     a8e:	55 55       	subi	r21, 0x55	; 85
	...
     a98:	00 00       	nop
     a9a:	00 55       	subi	r16, 0x50	; 80
     a9c:	55 55       	subi	r21, 0x55	; 85
     a9e:	55 00       	.word	0x0055	; ????
     aa0:	20 00       	.word	0x0020	; ????
     aa2:	00 00       	nop
     aa4:	00 05       	cpc	r16, r0
     aa6:	55 55       	subi	r21, 0x55	; 85
     aa8:	55 9a       	sbi	0x0a, 5	; 10
     aaa:	aa aa       	std	Y+50, r10	; 0x32
     aac:	aa aa       	std	Y+50, r10	; 0x32
     aae:	55 55       	subi	r21, 0x55	; 85
     ab0:	55 55       	subi	r21, 0x55	; 85
     ab2:	aa aa       	std	Y+50, r10	; 0x32
     ab4:	aa aa       	std	Y+50, r10	; 0x32
     ab6:	55 55       	subi	r21, 0x55	; 85
	...
     ac0:	00 00       	nop
     ac2:	00 55       	subi	r16, 0x50	; 80
     ac4:	55 55       	subi	r21, 0x55	; 85
     ac6:	50 00       	.word	0x0050	; ????
     ac8:	00 00       	nop
     aca:	00 00       	nop
     acc:	00 05       	cpc	r16, r0
     ace:	55 55       	subi	r21, 0x55	; 85
     ad0:	55 5a       	subi	r21, 0xA5	; 165
     ad2:	aa aa       	std	Y+50, r10	; 0x32
     ad4:	aa aa       	std	Y+50, r10	; 0x32
     ad6:	55 55       	subi	r21, 0x55	; 85
     ad8:	55 5a       	subi	r21, 0xA5	; 165
     ada:	aa aa       	std	Y+50, r10	; 0x32
     adc:	aa aa       	std	Y+50, r10	; 0x32
     ade:	55 55       	subi	r21, 0x55	; 85
	...
     ae8:	00 00       	nop
     aea:	00 15       	cp	r16, r0
     aec:	55 55       	subi	r21, 0x55	; 85
     aee:	50 00       	.word	0x0050	; ????
     af0:	00 00       	nop
     af2:	00 00       	nop
     af4:	00 05       	cpc	r16, r0
     af6:	55 55       	subi	r21, 0x55	; 85
     af8:	55 56       	subi	r21, 0x65	; 101
     afa:	aa aa       	std	Y+50, r10	; 0x32
     afc:	aa aa       	std	Y+50, r10	; 0x32
     afe:	55 55       	subi	r21, 0x55	; 85
     b00:	55 6a       	ori	r21, 0xA5	; 165
     b02:	aa aa       	std	Y+50, r10	; 0x32
     b04:	aa aa       	std	Y+50, r10	; 0x32
     b06:	55 55       	subi	r21, 0x55	; 85
	...
     b10:	00 55       	subi	r16, 0x50	; 80
     b12:	40 15       	cp	r20, r0
     b14:	55 55       	subi	r21, 0x55	; 85
     b16:	54 00       	.word	0x0054	; ????
     b18:	00 00       	nop
     b1a:	00 00       	nop
     b1c:	00 00       	nop
     b1e:	15 55       	subi	r17, 0x55	; 85
     b20:	55 56       	subi	r21, 0x65	; 101
     b22:	aa ff       	.word	0xffaa	; ????
     b24:	fa aa       	std	Y+50, r15	; 0x32
     b26:	55 55       	subi	r21, 0x55	; 85
     b28:	55 aa       	std	Z+53, r5	; 0x35
     b2a:	aa aa       	std	Y+50, r10	; 0x32
     b2c:	aa aa       	std	Y+50, r10	; 0x32
     b2e:	95 55       	subi	r25, 0x55	; 85
	...
     b38:	05 55       	subi	r16, 0x55	; 85
     b3a:	54 15       	cp	r21, r4
     b3c:	55 55       	subi	r21, 0x55	; 85
     b3e:	55 00       	.word	0x0055	; ????
     b40:	00 00       	nop
     b42:	00 00       	nop
     b44:	40 00       	.word	0x0040	; ????
     b46:	01 55       	subi	r16, 0x51	; 81
     b48:	55 55       	subi	r21, 0x55	; 85
     b4a:	af ff       	.word	0xffaf	; ????
     b4c:	ff aa       	std	Y+55, r15	; 0x37
     b4e:	55 55       	subi	r21, 0x55	; 85
     b50:	55 aa       	std	Z+53, r5	; 0x35
     b52:	aa aa       	std	Y+50, r10	; 0x32
     b54:	aa aa       	std	Y+50, r10	; 0x32
     b56:	55 55       	subi	r21, 0x55	; 85
     b58:	00 00       	nop
     b5a:	00 00       	nop
     b5c:	00 00       	nop
     b5e:	01 54       	subi	r16, 0x41	; 65
     b60:	15 55       	subi	r17, 0x55	; 85
     b62:	55 15       	cp	r21, r5
     b64:	55 55       	subi	r21, 0x55	; 85
     b66:	55 00       	.word	0x0055	; ????
     b68:	00 00       	nop
     b6a:	00 05       	cpc	r16, r0
     b6c:	00 00       	nop
     b6e:	00 15       	cp	r16, r0
     b70:	55 55       	subi	r21, 0x55	; 85
     b72:	bf ff       	.word	0xffbf	; ????
     b74:	ff ea       	ldi	r31, 0xAF	; 175
     b76:	95 55       	subi	r25, 0x55	; 85
     b78:	56 aa       	std	Z+54, r5	; 0x36
     b7a:	aa aa       	std	Y+50, r10	; 0x32
     b7c:	aa 95       	dec	r26
     b7e:	55 55       	subi	r21, 0x55	; 85
     b80:	ff c0       	rjmp	.+510    	; 0xd80 <__stack+0x481>
     b82:	00 00       	nop
     b84:	00 00       	nop
     b86:	15 55       	subi	r17, 0x55	; 85
     b88:	55 55       	subi	r21, 0x55	; 85
     b8a:	55 55       	subi	r21, 0x55	; 85
     b8c:	55 55       	subi	r21, 0x55	; 85
     b8e:	55 40       	sbci	r21, 0x05	; 5
     b90:	00 00       	nop
     b92:	55 14       	cp	r5, r5
     b94:	00 00       	nop
     b96:	00 15       	cp	r16, r0
     b98:	55 55       	subi	r21, 0x55	; 85
     b9a:	ff ff       	.word	0xffff	; ????
     b9c:	ff fa       	.word	0xfaff	; ????
     b9e:	95 56       	subi	r25, 0x65	; 101
     ba0:	aa aa       	std	Y+50, r10	; 0x32
     ba2:	aa aa       	std	Y+50, r10	; 0x32
     ba4:	a9 55       	subi	r26, 0x59	; 89
     ba6:	55 55       	subi	r21, 0x55	; 85
     ba8:	ff c0       	rjmp	.+510    	; 0xda8 <__stack+0x4a9>
     baa:	3f fc       	.word	0xfc3f	; ????
     bac:	03 c0       	rjmp	.+6      	; 0xbb4 <__stack+0x2b5>
     bae:	55 55       	subi	r21, 0x55	; 85
     bb0:	55 55       	subi	r21, 0x55	; 85
     bb2:	57 d5       	rcall	.+2734   	; 0x1662 <_ZL9logoAtmel+0x17a>
     bb4:	55 55       	subi	r21, 0x55	; 85
     bb6:	55 40       	sbci	r21, 0x05	; 5
     bb8:	00 05       	cpc	r16, r0
     bba:	55 54       	subi	r21, 0x45	; 69
     bbc:	00 00       	nop
     bbe:	00 05       	cpc	r16, r0
     bc0:	55 55       	subi	r21, 0x55	; 85
     bc2:	ff ff       	.word	0xffff	; ????
     bc4:	ff fa       	.word	0xfaff	; ????
     bc6:	a5 6a       	ori	r26, 0xA5	; 165
     bc8:	aa aa       	std	Y+50, r10	; 0x32
     bca:	aa aa       	std	Y+50, r10	; 0x32
     bcc:	a5 55       	subi	r26, 0x55	; 85
     bce:	55 55       	subi	r21, 0x55	; 85
     bd0:	ff c0       	rjmp	.+510    	; 0xdd0 <__stack+0x4d1>
     bd2:	f0 00       	.word	0x00f0	; ????
     bd4:	03 c0       	rjmp	.+6      	; 0xbdc <__stack+0x2dd>
     bd6:	7f f5       	brid	.+94     	; 0xc36 <__stack+0x337>
     bd8:	ff f0       	brie	.+62     	; 0xc18 <__stack+0x319>
     bda:	03 d5       	rcall	.+2566   	; 0x15e2 <_ZL9logoAtmel+0xfa>
     bdc:	55 01       	movw	r10, r10
     bde:	55 05       	cpc	r21, r5
     be0:	50 15       	cp	r21, r0
     be2:	55 50       	subi	r21, 0x05	; 5
     be4:	00 00       	nop
     be6:	00 05       	cpc	r16, r0
     be8:	55 55       	subi	r21, 0x55	; 85
     bea:	ff ff       	.word	0xffff	; ????
     bec:	ff fe       	.word	0xfeff	; ????
     bee:	bf aa       	std	Y+55, r11	; 0x37
     bf0:	aa aa       	std	Y+50, r10	; 0x32
     bf2:	a5 5a       	subi	r26, 0xA5	; 165
     bf4:	95 55       	subi	r25, 0x55	; 85
     bf6:	55 55       	subi	r21, 0x55	; 85
     bf8:	ff c0       	rjmp	.+510    	; 0xdf8 <__stack+0x4f9>
     bfa:	f0 00       	.word	0x00f0	; ????
     bfc:	3f fd       	.word	0xfd3f	; ????
     bfe:	55 7d       	andi	r21, 0xD5	; 213
     c00:	f5 3c       	cpi	r31, 0xC5	; 197
     c02:	3f fd       	.word	0xfd3f	; ????
     c04:	50 00       	.word	0x0050	; ????
     c06:	15 15       	cp	r17, r5
     c08:	54 55       	subi	r21, 0x54	; 84
     c0a:	55 50       	subi	r21, 0x05	; 5
     c0c:	00 00       	nop
     c0e:	00 04       	cpc	r0, r0
     c10:	01 54       	subi	r16, 0x41	; 65
     c12:	ff ff       	.word	0xffff	; ????
     c14:	ff fe       	.word	0xfeff	; ????
     c16:	ff aa       	std	Y+55, r15	; 0x37
     c18:	aa aa       	std	Y+50, r10	; 0x32
     c1a:	55 56       	subi	r21, 0x65	; 101
     c1c:	95 55       	subi	r25, 0x55	; 85
     c1e:	55 55       	subi	r21, 0x55	; 85
     c20:	ff c0       	rjmp	.+510    	; 0xe20 <__stack+0x521>
     c22:	3f f0       	brie	.+14     	; 0xc32 <__stack+0x333>
     c24:	03 c1       	rjmp	.+518    	; 0xe2c <__stack+0x52d>
     c26:	7f fd       	.word	0xfd7f	; ????
     c28:	f4 00       	.word	0x00f4	; ????
     c2a:	03 c0       	rjmp	.+6      	; 0xc32 <__stack+0x333>
     c2c:	40 00       	.word	0x0040	; ????
     c2e:	00 55       	subi	r16, 0x50	; 80
     c30:	54 55       	subi	r21, 0x54	; 84
     c32:	50 10       	cpse	r5, r0
     c34:	00 00       	nop
     c36:	00 00       	nop
     c38:	00 57       	subi	r16, 0x70	; 112
     c3a:	ff ff       	.word	0xffff	; ????
     c3c:	ff ff       	.word	0xffff	; ????
     c3e:	ff aa       	std	Y+55, r15	; 0x37
     c40:	aa a9       	ldd	r26, Y+50	; 0x32
     c42:	55 55       	subi	r21, 0x55	; 85
     c44:	55 55       	subi	r21, 0x55	; 85
     c46:	55 55       	subi	r21, 0x55	; 85
     c48:	ff c0       	rjmp	.+510    	; 0xe48 <__stack+0x549>
     c4a:	00 3c       	cpi	r16, 0xC0	; 192
     c4c:	03 c1       	rjmp	.+518    	; 0xe54 <__stack+0x555>
     c4e:	f0 3d       	cpi	r31, 0xD0	; 208
     c50:	f4 00       	.word	0x00f4	; ????
     c52:	03 c0       	rjmp	.+6      	; 0xc5a <__stack+0x35b>
     c54:	00 00       	nop
     c56:	00 15       	cp	r16, r0
     c58:	55 55       	subi	r21, 0x55	; 85
     c5a:	00 00       	nop
     c5c:	00 00       	nop
     c5e:	00 00       	nop
     c60:	00 55       	subi	r16, 0x50	; 80
     c62:	55 3f       	cpi	r21, 0xF5	; 245
     c64:	ff ff       	.word	0xffff	; ????
     c66:	ff aa       	std	Y+55, r15	; 0x37
     c68:	aa aa       	std	Y+50, r10	; 0x32
     c6a:	a5 55       	subi	r26, 0x55	; 85
     c6c:	55 55       	subi	r21, 0x55	; 85
     c6e:	55 55       	subi	r21, 0x55	; 85
     c70:	ff c0       	rjmp	.+510    	; 0xe70 <__stack+0x571>
     c72:	00 3c       	cpi	r16, 0xC0	; 192
     c74:	03 c0       	rjmp	.+6      	; 0xc7c <__stack+0x37d>
     c76:	f0 3c       	cpi	r31, 0xC0	; 192
     c78:	f0 00       	.word	0x00f0	; ????
     c7a:	03 c0       	rjmp	.+6      	; 0xc82 <__stack+0x383>
     c7c:	00 00       	nop
     c7e:	55 45       	sbci	r21, 0x55	; 85
     c80:	55 55       	subi	r21, 0x55	; 85
     c82:	00 00       	nop
     c84:	00 00       	nop
     c86:	00 00       	nop
     c88:	55 15       	cp	r21, r5
     c8a:	55 53       	subi	r21, 0x35	; 53
     c8c:	ff ff       	.word	0xffff	; ????
     c8e:	ff ea       	ldi	r31, 0xAF	; 175
     c90:	aa aa       	std	Y+50, r10	; 0x32
     c92:	a9 55       	subi	r26, 0x59	; 89
     c94:	55 55       	subi	r21, 0x55	; 85
     c96:	55 aa       	std	Z+53, r5	; 0x35
     c98:	ff c0       	rjmp	.+510    	; 0xe98 <__stack+0x599>
     c9a:	ff f0       	brie	.+62     	; 0xcda <__stack+0x3db>
     c9c:	03 c0       	rjmp	.+6      	; 0xca4 <__stack+0x3a5>
     c9e:	3f fc       	.word	0xfc3f	; ????
     ca0:	f0 00       	.word	0x00f0	; ????
     ca2:	03 c0       	rjmp	.+6      	; 0xcaa <__stack+0x3ab>
     ca4:	00 05       	cpc	r16, r0
     ca6:	55 55       	subi	r21, 0x55	; 85
     ca8:	55 54       	subi	r21, 0x45	; 69
     caa:	55 50       	subi	r21, 0x05	; 5
     cac:	00 00       	nop
     cae:	00 00       	nop
     cb0:	05 55       	subi	r16, 0x55	; 85
     cb2:	55 54       	subi	r21, 0x45	; 69
     cb4:	ff ff       	.word	0xffff	; ????
     cb6:	fa aa       	std	Y+50, r15	; 0x32
     cb8:	aa aa       	std	Y+50, r10	; 0x32
     cba:	aa 55       	subi	r26, 0x5A	; 90
     cbc:	55 55       	subi	r21, 0x55	; 85
     cbe:	6a aa       	std	Y+50, r6	; 0x32
     cc0:	ff c0       	rjmp	.+510    	; 0xec0 <__stack+0x5c1>
	...
     cca:	00 00       	nop
     ccc:	00 15       	cp	r16, r0
     cce:	55 55       	subi	r21, 0x55	; 85
     cd0:	55 55       	subi	r21, 0x55	; 85
     cd2:	55 55       	subi	r21, 0x55	; 85
     cd4:	00 00       	nop
     cd6:	00 00       	nop
     cd8:	01 50       	subi	r16, 0x01	; 1
     cda:	05 55       	subi	r16, 0x55	; 85
     cdc:	3f ff       	.word	0xff3f	; ????
     cde:	ea aa       	std	Y+50, r14	; 0x32
     ce0:	aa aa       	std	Y+50, r10	; 0x32
     ce2:	aa 55       	subi	r26, 0x5A	; 90
     ce4:	55 56       	subi	r21, 0x65	; 101
     ce6:	aa aa       	std	Y+50, r10	; 0x32
	...
     cf4:	00 15       	cp	r16, r0
     cf6:	55 55       	subi	r21, 0x55	; 85
     cf8:	55 55       	subi	r21, 0x55	; 85
     cfa:	55 55       	subi	r21, 0x55	; 85
     cfc:	40 00       	.word	0x0040	; ????
     cfe:	00 00       	nop
     d00:	01 00       	.word	0x0001	; ????
     d02:	00 55       	subi	r16, 0x50	; 80
     d04:	7f ff       	.word	0xff7f	; ????
     d06:	ea aa       	std	Y+50, r14	; 0x32
     d08:	aa aa       	std	Y+50, r10	; 0x32
     d0a:	aa 55       	subi	r26, 0x5A	; 90
     d0c:	55 56       	subi	r21, 0x65	; 101
     d0e:	aa aa       	std	Y+50, r10	; 0x32
     d10:	00 00       	nop
     d12:	55 00       	.word	0x0055	; ????
	...
     d1c:	15 15       	cp	r17, r5
     d1e:	55 55       	subi	r21, 0x55	; 85
     d20:	55 55       	subi	r21, 0x55	; 85
     d22:	55 55       	subi	r21, 0x55	; 85
     d24:	50 00       	.word	0x0050	; ????
     d26:	00 00       	nop
     d28:	00 00       	nop
     d2a:	00 55       	subi	r16, 0x50	; 80
     d2c:	4c 55       	subi	r20, 0x5C	; 92
     d2e:	6a aa       	std	Y+50, r6	; 0x32
     d30:	aa aa       	std	Y+50, r10	; 0x32
     d32:	a9 55       	subi	r26, 0x59	; 89
     d34:	55 5a       	subi	r21, 0xA5	; 165
     d36:	aa aa       	std	Y+50, r10	; 0x32
     d38:	00 55       	subi	r16, 0x50	; 80
     d3a:	55 50       	subi	r21, 0x05	; 5
	...
     d44:	00 55       	subi	r16, 0x50	; 80
     d46:	55 55       	subi	r21, 0x55	; 85
     d48:	55 55       	subi	r21, 0x55	; 85
     d4a:	55 55       	subi	r21, 0x55	; 85
     d4c:	50 00       	.word	0x0050	; ????
     d4e:	00 00       	nop
     d50:	00 00       	nop
     d52:	00 15       	cp	r16, r0
     d54:	55 55       	subi	r21, 0x55	; 85
     d56:	55 6a       	ori	r21, 0xA5	; 165
     d58:	aa aa       	std	Y+50, r10	; 0x32
     d5a:	aa a5       	ldd	r26, Y+42	; 0x2a
     d5c:	55 5a       	subi	r21, 0xA5	; 165
     d5e:	aa aa       	std	Y+50, r10	; 0x32
     d60:	ff d5       	rcall	.+3070   	; 0x1960 <_ZL9logoAtmel+0x478>
     d62:	55 54       	subi	r21, 0x45	; 69
	...
     d6c:	00 05       	cpc	r16, r0
     d6e:	55 55       	subi	r21, 0x55	; 85
     d70:	55 55       	subi	r21, 0x55	; 85
     d72:	55 55       	subi	r21, 0x55	; 85
     d74:	54 00       	.word	0x0054	; ????
     d76:	00 00       	nop
     d78:	00 00       	nop
     d7a:	00 10       	cpse	r0, r0
     d7c:	05 55       	subi	r16, 0x55	; 85
     d7e:	55 55       	subi	r21, 0x55	; 85
     d80:	5a aa       	std	Y+50, r5	; 0x32
     d82:	aa aa       	std	Y+50, r10	; 0x32
     d84:	55 5a       	subi	r21, 0xA5	; 165
     d86:	aa aa       	std	Y+50, r10	; 0x32
     d88:	ff c0       	rjmp	.+510    	; 0xf88 <__stack+0x689>
     d8a:	3f fd       	.word	0xfd3f	; ????
     d8c:	00 55       	subi	r16, 0x50	; 80
     d8e:	40 00       	.word	0x0040	; ????
     d90:	00 00       	nop
     d92:	15 40       	sbci	r17, 0x05	; 5
     d94:	00 01       	movw	r0, r0
     d96:	55 55       	subi	r21, 0x55	; 85
     d98:	55 55       	subi	r21, 0x55	; 85
     d9a:	55 55       	subi	r21, 0x55	; 85
     d9c:	54 05       	cpc	r21, r4
     d9e:	40 00       	.word	0x0040	; ????
     da0:	00 00       	nop
     da2:	00 00       	nop
     da4:	00 01       	movw	r0, r0
     da6:	55 55       	subi	r21, 0x55	; 85
     da8:	aa aa       	std	Y+50, r10	; 0x32
     daa:	a9 55       	subi	r26, 0x59	; 89
     dac:	55 5a       	subi	r21, 0xA5	; 165
     dae:	aa aa       	std	Y+50, r10	; 0x32
     db0:	ff c0       	rjmp	.+510    	; 0xfb0 <__stack+0x6b1>
     db2:	f0 00       	.word	0x00f0	; ????
     db4:	7f fd       	.word	0xfd7f	; ????
     db6:	7f f0       	brie	.+30     	; 0xdd6 <__stack+0x4d7>
     db8:	ff f1       	brie	.+126    	; 0xe38 <__stack+0x539>
     dba:	7f f4       	brid	.+30     	; 0xdda <__stack+0x4db>
     dbc:	00 01       	movw	r0, r0
     dbe:	55 55       	subi	r21, 0x55	; 85
     dc0:	55 55       	subi	r21, 0x55	; 85
     dc2:	55 55       	subi	r21, 0x55	; 85
     dc4:	54 55       	subi	r21, 0x54	; 84
     dc6:	54 00       	.word	0x0054	; ????
     dc8:	00 00       	nop
     dca:	00 00       	nop
     dcc:	00 2a       	or	r0, r16
     dce:	aa aa       	std	Y+50, r10	; 0x32
     dd0:	aa aa       	std	Y+50, r10	; 0x32
     dd2:	55 55       	subi	r21, 0x55	; 85
     dd4:	55 aa       	std	Z+53, r5	; 0x35
     dd6:	aa aa       	std	Y+50, r10	; 0x32
     dd8:	ff c0       	rjmp	.+510    	; 0xfd8 <__stack+0x6d9>
     dda:	f0 00       	.word	0x00f0	; ????
     ddc:	f0 15       	cp	r31, r0
     dde:	f5 3c       	cpi	r31, 0xC5	; 197
     de0:	f0 3d       	cpi	r31, 0xD0	; 208
     de2:	f5 7d       	andi	r31, 0xD5	; 213
     de4:	00 00       	nop
     de6:	55 55       	subi	r21, 0x55	; 85
     de8:	55 55       	subi	r21, 0x55	; 85
     dea:	55 55       	subi	r21, 0x55	; 85
     dec:	55 55       	subi	r21, 0x55	; 85
     dee:	55 00       	.word	0x0055	; ????
     df0:	00 55       	subi	r16, 0x50	; 80
     df2:	6a aa       	std	Y+50, r6	; 0x32
     df4:	aa aa       	std	Y+50, r10	; 0x32
     df6:	aa aa       	std	Y+50, r10	; 0x32
     df8:	aa a9       	ldd	r26, Y+50	; 0x32
     dfa:	55 55       	subi	r21, 0x55	; 85
     dfc:	5a aa       	std	Y+50, r5	; 0x32
     dfe:	aa aa       	std	Y+50, r10	; 0x32
     e00:	ff c0       	rjmp	.+510    	; 0x1000 <__stack+0x701>
     e02:	3f f0       	brie	.+14     	; 0xe12 <__stack+0x513>
     e04:	f0 00       	.word	0x00f0	; ????
     e06:	f5 3d       	cpi	r31, 0xD5	; 213
     e08:	f0 05       	cpc	r31, r0
     e0a:	f5 7d       	andi	r31, 0xD5	; 213
     e0c:	40 00       	.word	0x0040	; ????
     e0e:	40 15       	cp	r20, r0
     e10:	55 55       	subi	r21, 0x55	; 85
     e12:	55 55       	subi	r21, 0x55	; 85
     e14:	55 55       	subi	r21, 0x55	; 85
     e16:	55 55       	subi	r21, 0x55	; 85
     e18:	55 55       	subi	r21, 0x55	; 85
     e1a:	5a a5       	ldd	r21, Y+42	; 0x2a
     e1c:	56 aa       	std	Z+54, r5	; 0x36
     e1e:	aa aa       	std	Y+50, r10	; 0x32
     e20:	aa a5       	ldd	r26, Y+42	; 0x2a
     e22:	55 55       	subi	r21, 0x55	; 85
     e24:	6a aa       	std	Y+50, r6	; 0x32
     e26:	aa aa       	std	Y+50, r10	; 0x32
     e28:	ff c0       	rjmp	.+510    	; 0x1028 <__stack+0x729>
     e2a:	00 3c       	cpi	r16, 0xC0	; 192
     e2c:	f0 00       	.word	0x00f0	; ????
     e2e:	f5 7d       	andi	r31, 0xD5	; 213
     e30:	f5 15       	cp	r31, r5
     e32:	ff f5       	brid	.+126    	; 0xeb2 <__stack+0x5b3>
     e34:	45 40       	sbci	r20, 0x05	; 5
     e36:	00 05       	cpc	r16, r0
     e38:	55 55       	subi	r21, 0x55	; 85
     e3a:	55 55       	subi	r21, 0x55	; 85
     e3c:	55 55       	subi	r21, 0x55	; 85
     e3e:	55 55       	subi	r21, 0x55	; 85
     e40:	55 55       	subi	r21, 0x55	; 85
     e42:	5a 55       	subi	r21, 0x5A	; 90
     e44:	55 6a       	ori	r21, 0xA5	; 165
     e46:	aa aa       	std	Y+50, r10	; 0x32
     e48:	aa a5       	ldd	r26, Y+42	; 0x2a
     e4a:	55 55       	subi	r21, 0x55	; 85
     e4c:	a5 55       	subi	r26, 0x55	; 85
     e4e:	a9 55       	subi	r26, 0x59	; 89
     e50:	ff c0       	rjmp	.+510    	; 0x1050 <__stack+0x751>
     e52:	00 3c       	cpi	r16, 0xC0	; 192
     e54:	f0 00       	.word	0x00f0	; ????
     e56:	f0 3d       	cpi	r31, 0xD0	; 208
     e58:	f5 15       	cp	r31, r5
     e5a:	f5 55       	subi	r31, 0x55	; 85
     e5c:	55 54       	subi	r21, 0x45	; 69
     e5e:	00 01       	movw	r0, r0
     e60:	55 55       	subi	r21, 0x55	; 85
     e62:	55 55       	subi	r21, 0x55	; 85
     e64:	55 55       	subi	r21, 0x55	; 85
     e66:	55 55       	subi	r21, 0x55	; 85
     e68:	55 55       	subi	r21, 0x55	; 85
     e6a:	59 55       	subi	r21, 0x59	; 89
     e6c:	55 5a       	subi	r21, 0xA5	; 165
     e6e:	aa aa       	std	Y+50, r10	; 0x32
     e70:	aa 95       	dec	r26
     e72:	55 55       	subi	r21, 0x55	; 85
     e74:	95 55       	subi	r25, 0x55	; 85
     e76:	65 55       	subi	r22, 0x55	; 85
     e78:	ff c0       	rjmp	.+510    	; 0x1078 <__stack+0x779>
     e7a:	ff f0       	brie	.+62     	; 0xeba <__stack+0x5bb>
     e7c:	3f fc       	.word	0xfc3f	; ????
     e7e:	3f f0       	brie	.+14     	; 0xe8e <__stack+0x58f>
     e80:	f5 55       	subi	r31, 0x55	; 85
     e82:	7f f5       	brid	.+94     	; 0xee2 <__stack+0x5e3>
     e84:	55 55       	subi	r21, 0x55	; 85
     e86:	05 51       	subi	r16, 0x15	; 21
     e88:	55 55       	subi	r21, 0x55	; 85
     e8a:	55 55       	subi	r21, 0x55	; 85
     e8c:	55 55       	subi	r21, 0x55	; 85
     e8e:	55 55       	subi	r21, 0x55	; 85
     e90:	55 55       	subi	r21, 0x55	; 85
     e92:	55 55       	subi	r21, 0x55	; 85
     e94:	55 56       	subi	r21, 0x65	; 101
     e96:	aa aa       	std	Y+50, r10	; 0x32
     e98:	aa 95       	dec	r26
     e9a:	55 55       	subi	r21, 0x55	; 85
     e9c:	55 55       	subi	r21, 0x55	; 85
     e9e:	55 55       	subi	r21, 0x55	; 85
     ea0:	ff c0       	rjmp	.+510    	; 0x10a0 <__stack+0x7a1>
     ea2:	00 00       	nop
     ea4:	00 00       	nop
     ea6:	00 00       	nop
     ea8:	00 15       	cp	r16, r0
     eaa:	50 00       	.word	0x0050	; ????
     eac:	01 55       	subi	r16, 0x51	; 81
     eae:	15 54       	subi	r17, 0x45	; 69
     eb0:	55 55       	subi	r21, 0x55	; 85
     eb2:	55 55       	subi	r21, 0x55	; 85
     eb4:	55 55       	subi	r21, 0x55	; 85
     eb6:	55 55       	subi	r21, 0x55	; 85
     eb8:	55 55       	subi	r21, 0x55	; 85
     eba:	55 55       	subi	r21, 0x55	; 85
     ebc:	55 55       	subi	r21, 0x55	; 85
     ebe:	56 aa       	std	Z+54, r5	; 0x36
     ec0:	aa 95       	dec	r26
     ec2:	55 55       	subi	r21, 0x55	; 85
     ec4:	55 55       	subi	r21, 0x55	; 85
     ec6:	55 55       	subi	r21, 0x55	; 85
	...
     ed4:	00 01       	movw	r0, r0
     ed6:	55 55       	subi	r21, 0x55	; 85
     ed8:	55 55       	subi	r21, 0x55	; 85
     eda:	55 55       	subi	r21, 0x55	; 85
     edc:	55 55       	subi	r21, 0x55	; 85
     ede:	55 55       	subi	r21, 0x55	; 85
     ee0:	55 55       	subi	r21, 0x55	; 85
     ee2:	55 55       	subi	r21, 0x55	; 85
     ee4:	55 55       	subi	r21, 0x55	; 85
     ee6:	55 6a       	ori	r21, 0xA5	; 165
     ee8:	a5 55       	subi	r26, 0x55	; 85
     eea:	55 55       	subi	r21, 0x55	; 85
     eec:	55 55       	subi	r21, 0x55	; 85
     eee:	55 55       	subi	r21, 0x55	; 85
	...
     efc:	00 00       	nop
     efe:	05 55       	subi	r16, 0x55	; 85
     f00:	55 55       	subi	r21, 0x55	; 85
     f02:	55 55       	subi	r21, 0x55	; 85
     f04:	54 01       	movw	r10, r8
     f06:	55 55       	subi	r21, 0x55	; 85
     f08:	55 55       	subi	r21, 0x55	; 85
     f0a:	55 55       	subi	r21, 0x55	; 85
     f0c:	55 55       	subi	r21, 0x55	; 85
     f0e:	55 5a       	subi	r21, 0xA5	; 165
     f10:	55 55       	subi	r21, 0x55	; 85
     f12:	55 55       	subi	r21, 0x55	; 85
     f14:	55 55       	subi	r21, 0x55	; 85
     f16:	55 55       	subi	r21, 0x55	; 85
	...
     f24:	00 00       	nop
     f26:	00 05       	cpc	r16, r0
     f28:	55 55       	subi	r21, 0x55	; 85
     f2a:	55 55       	subi	r21, 0x55	; 85
     f2c:	00 00       	nop
     f2e:	00 15       	cp	r16, r0
     f30:	55 50       	subi	r21, 0x05	; 5
     f32:	15 55       	subi	r17, 0x55	; 85
     f34:	55 55       	subi	r21, 0x55	; 85
     f36:	55 59       	subi	r21, 0x95	; 149
     f38:	55 55       	subi	r21, 0x55	; 85
     f3a:	55 55       	subi	r21, 0x55	; 85
     f3c:	55 55       	subi	r21, 0x55	; 85
     f3e:	55 55       	subi	r21, 0x55	; 85
     f40:	ff c0       	rjmp	.+510    	; 0x1140 <__stack+0x841>
	...
     f4e:	00 00       	nop
     f50:	01 55       	subi	r16, 0x51	; 81
     f52:	55 00       	.word	0x0055	; ????
     f54:	00 00       	nop
     f56:	00 00       	nop
     f58:	05 40       	sbci	r16, 0x05	; 5
     f5a:	01 55       	subi	r16, 0x51	; 81
     f5c:	55 55       	subi	r21, 0x55	; 85
     f5e:	55 55       	subi	r21, 0x55	; 85
     f60:	55 55       	subi	r21, 0x55	; 85
     f62:	55 55       	subi	r21, 0x55	; 85
     f64:	55 55       	subi	r21, 0x55	; 85
     f66:	55 55       	subi	r21, 0x55	; 85
     f68:	ff d5       	rcall	.+3070   	; 0x1b68 <_ZL9logoAtmel+0x680>
     f6a:	7f fd       	.word	0xfd7f	; ????
     f6c:	55 55       	subi	r21, 0x55	; 85
     f6e:	55 55       	subi	r21, 0x55	; 85
     f70:	55 7d       	andi	r21, 0xD5	; 213
     f72:	57 d5       	rcall	.+2734   	; 0x1a22 <_ZL9logoAtmel+0x53a>
     f74:	57 d5       	rcall	.+2734   	; 0x1a24 <_ZL9logoAtmel+0x53c>
     f76:	55 55       	subi	r21, 0x55	; 85
     f78:	55 55       	subi	r21, 0x55	; 85
     f7a:	55 55       	subi	r21, 0x55	; 85
     f7c:	56 aa       	std	Z+54, r5	; 0x36
     f7e:	aa aa       	std	Y+50, r10	; 0x32
     f80:	aa aa       	std	Y+50, r10	; 0x32
     f82:	aa aa       	std	Y+50, r10	; 0x32
     f84:	aa aa       	std	Y+50, r10	; 0x32
     f86:	aa aa       	std	Y+50, r10	; 0x32
     f88:	a5 55       	subi	r26, 0x55	; 85
     f8a:	55 55       	subi	r21, 0x55	; 85
     f8c:	55 55       	subi	r21, 0x55	; 85
     f8e:	55 55       	subi	r21, 0x55	; 85
     f90:	ff d5       	rcall	.+3070   	; 0x1b90 <_ZL9logoAtmel+0x6a8>
     f92:	f5 55       	subi	r31, 0x55	; 85
     f94:	ff f5       	brid	.+126    	; 0x1014 <__stack+0x715>
     f96:	7f f5       	brid	.+94     	; 0xff6 <__stack+0x6f7>
     f98:	7f fd       	.word	0xfd7f	; ????
     f9a:	55 55       	subi	r21, 0x55	; 85
     f9c:	57 d5       	rcall	.+2734   	; 0x1a4c <_ZL9logoAtmel+0x564>
     f9e:	55 55       	subi	r21, 0x55	; 85
     fa0:	55 55       	subi	r21, 0x55	; 85
     fa2:	55 55       	subi	r21, 0x55	; 85
     fa4:	55 5a       	subi	r21, 0xA5	; 165
     fa6:	55 6a       	ori	r21, 0xA5	; 165
     fa8:	aa aa       	std	Y+50, r10	; 0x32
     faa:	ab fa       	.word	0xfaab	; ????
     fac:	aa aa       	std	Y+50, r10	; 0x32
     fae:	aa a5       	ldd	r26, Y+42	; 0x2a
     fb0:	55 55       	subi	r21, 0x55	; 85
     fb2:	55 55       	subi	r21, 0x55	; 85
     fb4:	55 55       	subi	r21, 0x55	; 85
     fb6:	55 55       	subi	r21, 0x55	; 85
     fb8:	ff d5       	rcall	.+3070   	; 0x1bb8 <_ZL9logoAtmel+0x6d0>
     fba:	f5 55       	subi	r31, 0x55	; 85
     fbc:	f5 7d       	andi	r31, 0xD5	; 213
     fbe:	f5 7d       	andi	r31, 0xD5	; 213
     fc0:	f5 7d       	andi	r31, 0xD5	; 213
     fc2:	5f d5       	rcall	.+2750   	; 0x1a82 <_ZL9logoAtmel+0x59a>
     fc4:	7f fd       	.word	0xfd7f	; ????
     fc6:	55 55       	subi	r21, 0x55	; 85
     fc8:	55 55       	subi	r21, 0x55	; 85
     fca:	55 5a       	subi	r21, 0xA5	; 165
     fcc:	aa aa       	std	Y+50, r10	; 0x32
     fce:	aa aa       	std	Y+50, r10	; 0x32
     fd0:	aa ab       	std	Y+50, r26	; 0x32
     fd2:	ff fe       	.word	0xfeff	; ????
     fd4:	aa aa       	std	Y+50, r10	; 0x32
     fd6:	aa aa       	std	Y+50, r10	; 0x32
     fd8:	aa aa       	std	Y+50, r10	; 0x32
     fda:	a9 55       	subi	r26, 0x59	; 89
     fdc:	55 55       	subi	r21, 0x55	; 85
     fde:	55 55       	subi	r21, 0x55	; 85
     fe0:	ff d5       	rcall	.+3070   	; 0x1be0 <_ZL9logoAtmel+0x6f8>
     fe2:	f5 55       	subi	r31, 0x55	; 85
     fe4:	f5 55       	subi	r31, 0x55	; 85
     fe6:	f5 7d       	andi	r31, 0xD5	; 213
     fe8:	f5 7d       	andi	r31, 0xD5	; 213
     fea:	57 d5       	rcall	.+2734   	; 0x1a9a <_ZL9logoAtmel+0x5b2>
     fec:	57 d5       	rcall	.+2734   	; 0x1a9c <_ZL9logoAtmel+0x5b4>
     fee:	55 aa       	std	Z+53, r5	; 0x35
     ff0:	aa aa       	std	Y+50, r10	; 0x32
     ff2:	aa aa       	std	Y+50, r10	; 0x32
     ff4:	aa aa       	std	Y+50, r10	; 0x32
     ff6:	aa aa       	std	Y+50, r10	; 0x32
     ff8:	aa aa       	std	Y+50, r10	; 0x32
     ffa:	aa aa       	std	Y+50, r10	; 0x32
     ffc:	aa aa       	std	Y+50, r10	; 0x32
     ffe:	aa aa       	std	Y+50, r10	; 0x32
    1000:	aa aa       	std	Y+50, r10	; 0x32
    1002:	95 55       	subi	r25, 0x55	; 85
    1004:	55 55       	subi	r21, 0x55	; 85
    1006:	55 55       	subi	r21, 0x55	; 85
    1008:	ff d5       	rcall	.+3070   	; 0x1c08 <__ctors_start>
    100a:	f5 55       	subi	r31, 0x55	; 85
    100c:	f5 55       	subi	r31, 0x55	; 85
    100e:	ff f5       	brid	.+126    	; 0x108e <__stack+0x78f>
    1010:	f5 7d       	andi	r31, 0xD5	; 213
    1012:	57 d5       	rcall	.+2734   	; 0x1ac2 <_ZL9logoAtmel+0x5da>
    1014:	57 d5       	rcall	.+2734   	; 0x1ac4 <_ZL9logoAtmel+0x5dc>
    1016:	55 55       	subi	r21, 0x55	; 85
    1018:	56 aa       	std	Z+54, r5	; 0x36
    101a:	aa aa       	std	Y+50, r10	; 0x32
    101c:	aa aa       	std	Y+50, r10	; 0x32
    101e:	aa aa       	std	Y+50, r10	; 0x32
    1020:	aa ab       	std	Y+50, r26	; 0x32
    1022:	ff aa       	std	Y+55, r15	; 0x37
    1024:	aa aa       	std	Y+50, r10	; 0x32
    1026:	aa aa       	std	Y+50, r10	; 0x32
    1028:	aa aa       	std	Y+50, r10	; 0x32
    102a:	aa aa       	std	Y+50, r10	; 0x32
    102c:	aa aa       	std	Y+50, r10	; 0x32
    102e:	aa aa       	std	Y+50, r10	; 0x32
    1030:	ff d5       	rcall	.+3070   	; 0x1c30 <__do_clear_bss+0x4>
    1032:	f5 55       	subi	r31, 0x55	; 85
    1034:	f5 55       	subi	r31, 0x55	; 85
    1036:	f5 55       	subi	r31, 0x55	; 85
    1038:	f5 7d       	andi	r31, 0xD5	; 213
    103a:	57 d5       	rcall	.+2734   	; 0x1aea <_ZL9logoAtmel+0x602>
    103c:	57 d5       	rcall	.+2734   	; 0x1aec <_ZL9logoAtmel+0x604>
    103e:	55 55       	subi	r21, 0x55	; 85
    1040:	55 56       	subi	r21, 0x65	; 101
    1042:	aa aa       	std	Y+50, r10	; 0x32
    1044:	aa aa       	std	Y+50, r10	; 0x32
    1046:	aa ab       	std	Y+50, r26	; 0x32
    1048:	ff ff       	.word	0xffff	; ????
    104a:	ff ff       	.word	0xffff	; ????
    104c:	ea aa       	std	Y+50, r14	; 0x32
    104e:	aa aa       	std	Y+50, r10	; 0x32
    1050:	aa aa       	std	Y+50, r10	; 0x32
    1052:	aa aa       	std	Y+50, r10	; 0x32
    1054:	aa a9       	ldd	r26, Y+50	; 0x32
    1056:	55 55       	subi	r21, 0x55	; 85
    1058:	ff d5       	rcall	.+3070   	; 0x1c58 <__do_global_ctors+0x1c>
    105a:	7f fd       	.word	0xfd7f	; ????
    105c:	f5 55       	subi	r31, 0x55	; 85
    105e:	7f f5       	brid	.+94     	; 0x10be <__stack+0x7bf>
    1060:	7f fd       	.word	0xfd7f	; ????
    1062:	57 d5       	rcall	.+2734   	; 0x1b12 <_ZL9logoAtmel+0x62a>
    1064:	5b e5       	ldi	r21, 0x5B	; 91
    1066:	56 aa       	std	Z+54, r5	; 0x36
    1068:	aa aa       	std	Y+50, r10	; 0x32
    106a:	aa aa       	std	Y+50, r10	; 0x32
    106c:	aa aa       	std	Y+50, r10	; 0x32
    106e:	aa aa       	std	Y+50, r10	; 0x32
    1070:	aa ff       	.word	0xffaa	; ????
    1072:	ff fe       	.word	0xfeff	; ????
    1074:	aa aa       	std	Y+50, r10	; 0x32
    1076:	aa aa       	std	Y+50, r10	; 0x32
    1078:	aa aa       	std	Y+50, r10	; 0x32
    107a:	aa aa       	std	Y+50, r10	; 0x32
    107c:	a9 55       	subi	r26, 0x59	; 89
    107e:	55 55       	subi	r21, 0x55	; 85
    1080:	ff d5       	rcall	.+3070   	; 0x1c80 <main+0x22>
    1082:	55 55       	subi	r21, 0x55	; 85
    1084:	55 55       	subi	r21, 0x55	; 85
    1086:	55 55       	subi	r21, 0x55	; 85
    1088:	55 5a       	subi	r21, 0xA5	; 165
    108a:	aa aa       	std	Y+50, r10	; 0x32
    108c:	aa aa       	std	Y+50, r10	; 0x32
    108e:	aa aa       	std	Y+50, r10	; 0x32
    1090:	aa aa       	std	Y+50, r10	; 0x32
    1092:	aa aa       	std	Y+50, r10	; 0x32
    1094:	aa aa       	std	Y+50, r10	; 0x32
    1096:	aa aa       	std	Y+50, r10	; 0x32
    1098:	ff ff       	.word	0xffff	; ????
    109a:	ff ff       	.word	0xffff	; ????
    109c:	ff ab       	std	Y+55, r31	; 0x37
    109e:	fa aa       	std	Y+50, r15	; 0x32
    10a0:	aa aa       	std	Y+50, r10	; 0x32
    10a2:	aa aa       	std	Y+50, r10	; 0x32
    10a4:	aa aa       	std	Y+50, r10	; 0x32
    10a6:	aa aa       	std	Y+50, r10	; 0x32
    10a8:	55 55       	subi	r21, 0x55	; 85
    10aa:	55 55       	subi	r21, 0x55	; 85
    10ac:	55 55       	subi	r21, 0x55	; 85
    10ae:	55 55       	subi	r21, 0x55	; 85
    10b0:	55 55       	subi	r21, 0x55	; 85
    10b2:	56 aa       	std	Z+54, r5	; 0x36
    10b4:	aa aa       	std	Y+50, r10	; 0x32
    10b6:	aa aa       	std	Y+50, r10	; 0x32
    10b8:	aa aa       	std	Y+50, r10	; 0x32
    10ba:	aa aa       	std	Y+50, r10	; 0x32
    10bc:	aa aa       	std	Y+50, r10	; 0x32
    10be:	aa aa       	std	Y+50, r10	; 0x32
    10c0:	aa aa       	std	Y+50, r10	; 0x32
    10c2:	aa aa       	std	Y+50, r10	; 0x32
    10c4:	aa aa       	std	Y+50, r10	; 0x32
    10c6:	aa aa       	std	Y+50, r10	; 0x32
    10c8:	aa aa       	std	Y+50, r10	; 0x32
    10ca:	aa aa       	std	Y+50, r10	; 0x32
    10cc:	aa aa       	std	Y+50, r10	; 0x32
    10ce:	aa aa       	std	Y+50, r10	; 0x32
    10d0:	55 55       	subi	r21, 0x55	; 85
    10d2:	55 55       	subi	r21, 0x55	; 85
    10d4:	55 55       	subi	r21, 0x55	; 85
    10d6:	aa aa       	std	Y+50, r10	; 0x32
    10d8:	95 55       	subi	r25, 0x55	; 85
    10da:	aa aa       	std	Y+50, r10	; 0x32
    10dc:	aa aa       	std	Y+50, r10	; 0x32
    10de:	aa aa       	std	Y+50, r10	; 0x32
    10e0:	aa aa       	std	Y+50, r10	; 0x32
    10e2:	aa aa       	std	Y+50, r10	; 0x32
    10e4:	aa aa       	std	Y+50, r10	; 0x32
    10e6:	bf ff       	.word	0xffbf	; ????
    10e8:	ff ff       	.word	0xffff	; ????
    10ea:	ff fa       	.word	0xfaff	; ????
    10ec:	aa aa       	std	Y+50, r10	; 0x32
    10ee:	aa aa       	std	Y+50, r10	; 0x32
    10f0:	aa aa       	std	Y+50, r10	; 0x32
    10f2:	aa aa       	std	Y+50, r10	; 0x32
    10f4:	aa aa       	std	Y+50, r10	; 0x32
    10f6:	aa aa       	std	Y+50, r10	; 0x32
    10f8:	55 55       	subi	r21, 0x55	; 85
    10fa:	55 56       	subi	r21, 0x65	; 101
    10fc:	aa aa       	std	Y+50, r10	; 0x32
    10fe:	aa aa       	std	Y+50, r10	; 0x32
    1100:	aa aa       	std	Y+50, r10	; 0x32
    1102:	aa aa       	std	Y+50, r10	; 0x32
    1104:	aa aa       	std	Y+50, r10	; 0x32
    1106:	aa aa       	std	Y+50, r10	; 0x32
    1108:	aa aa       	std	Y+50, r10	; 0x32
    110a:	aa af       	std	Y+58, r26	; 0x3a
    110c:	eb ff       	.word	0xffeb	; ????
    110e:	ff ff       	.word	0xffff	; ????
    1110:	ff ff       	.word	0xffff	; ????
    1112:	ff ff       	.word	0xffff	; ????
    1114:	ff ea       	ldi	r31, 0xAF	; 175
    1116:	aa aa       	std	Y+50, r10	; 0x32
    1118:	aa aa       	std	Y+50, r10	; 0x32
    111a:	aa aa       	std	Y+50, r10	; 0x32
    111c:	aa aa       	std	Y+50, r10	; 0x32
    111e:	aa aa       	std	Y+50, r10	; 0x32
    1120:	aa aa       	std	Y+50, r10	; 0x32
    1122:	55 55       	subi	r21, 0x55	; 85
    1124:	56 aa       	std	Z+54, r5	; 0x36
    1126:	aa aa       	std	Y+50, r10	; 0x32
    1128:	aa aa       	std	Y+50, r10	; 0x32
    112a:	aa aa       	std	Y+50, r10	; 0x32
    112c:	aa aa       	std	Y+50, r10	; 0x32
    112e:	aa aa       	std	Y+50, r10	; 0x32
    1130:	aa aa       	std	Y+50, r10	; 0x32
    1132:	aa aa       	std	Y+50, r10	; 0x32
    1134:	aa ab       	std	Y+50, r26	; 0x32
    1136:	ff ff       	.word	0xffff	; ????
    1138:	ff ea       	ldi	r31, 0xAF	; 175
    113a:	aa aa       	std	Y+50, r10	; 0x32
    113c:	aa aa       	std	Y+50, r10	; 0x32
    113e:	aa aa       	std	Y+50, r10	; 0x32
    1140:	aa aa       	std	Y+50, r10	; 0x32
    1142:	aa aa       	std	Y+50, r10	; 0x32
    1144:	aa aa       	std	Y+50, r10	; 0x32
    1146:	aa aa       	std	Y+50, r10	; 0x32
    1148:	aa aa       	std	Y+50, r10	; 0x32
    114a:	a9 55       	subi	r26, 0x59	; 89
    114c:	55 56       	subi	r21, 0x65	; 101
    114e:	95 56       	subi	r25, 0x65	; 101
    1150:	aa aa       	std	Y+50, r10	; 0x32
    1152:	aa aa       	std	Y+50, r10	; 0x32
    1154:	aa aa       	std	Y+50, r10	; 0x32
    1156:	aa aa       	std	Y+50, r10	; 0x32
    1158:	aa aa       	std	Y+50, r10	; 0x32
    115a:	aa aa       	std	Y+50, r10	; 0x32
    115c:	aa aa       	std	Y+50, r10	; 0x32
    115e:	aa bf       	out	0x3a, r26	; 58
    1160:	ff ff       	.word	0xffff	; ????
    1162:	fa aa       	std	Y+50, r15	; 0x32
    1164:	aa aa       	std	Y+50, r10	; 0x32
    1166:	aa aa       	std	Y+50, r10	; 0x32
    1168:	aa aa       	std	Y+50, r10	; 0x32
    116a:	aa aa       	std	Y+50, r10	; 0x32
    116c:	aa aa       	std	Y+50, r10	; 0x32
    116e:	aa aa       	std	Y+50, r10	; 0x32
    1170:	a5 59       	subi	r26, 0x95	; 149
    1172:	55 55       	subi	r21, 0x55	; 85
    1174:	5a aa       	std	Y+50, r5	; 0x32
    1176:	aa aa       	std	Y+50, r10	; 0x32
    1178:	aa aa       	std	Y+50, r10	; 0x32
    117a:	aa aa       	std	Y+50, r10	; 0x32
    117c:	aa aa       	std	Y+50, r10	; 0x32
    117e:	aa aa       	std	Y+50, r10	; 0x32
    1180:	aa aa       	std	Y+50, r10	; 0x32
    1182:	aa aa       	std	Y+50, r10	; 0x32
    1184:	aa aa       	std	Y+50, r10	; 0x32
    1186:	aa aa       	std	Y+50, r10	; 0x32
    1188:	bf ff       	.word	0xffbf	; ????
    118a:	ff ff       	.word	0xffff	; ????
    118c:	fe aa       	std	Y+54, r15	; 0x36
    118e:	aa aa       	std	Y+50, r10	; 0x32
    1190:	aa aa       	std	Y+50, r10	; 0x32
    1192:	aa aa       	std	Y+50, r10	; 0x32
    1194:	aa aa       	std	Y+50, r10	; 0x32
    1196:	aa aa       	std	Y+50, r10	; 0x32
    1198:	aa aa       	std	Y+50, r10	; 0x32
    119a:	aa aa       	std	Y+50, r10	; 0x32
    119c:	aa aa       	std	Y+50, r10	; 0x32
    119e:	aa aa       	std	Y+50, r10	; 0x32
    11a0:	aa aa       	std	Y+50, r10	; 0x32
    11a2:	aa aa       	std	Y+50, r10	; 0x32
    11a4:	aa aa       	std	Y+50, r10	; 0x32
    11a6:	aa aa       	std	Y+50, r10	; 0x32
    11a8:	aa aa       	std	Y+50, r10	; 0x32
    11aa:	aa bf       	out	0x3a, r26	; 58
    11ac:	ff ff       	.word	0xffff	; ????
    11ae:	ff ff       	.word	0xffff	; ????
    11b0:	ff ff       	.word	0xffff	; ????
    11b2:	ff fe       	.word	0xfeff	; ????
    11b4:	aa aa       	std	Y+50, r10	; 0x32
    11b6:	aa aa       	std	Y+50, r10	; 0x32
    11b8:	aa aa       	std	Y+50, r10	; 0x32
    11ba:	aa aa       	std	Y+50, r10	; 0x32
    11bc:	aa aa       	std	Y+50, r10	; 0x32
    11be:	aa aa       	std	Y+50, r10	; 0x32
    11c0:	aa aa       	std	Y+50, r10	; 0x32
    11c2:	aa aa       	std	Y+50, r10	; 0x32
    11c4:	aa aa       	std	Y+50, r10	; 0x32
    11c6:	aa aa       	std	Y+50, r10	; 0x32
    11c8:	aa aa       	std	Y+50, r10	; 0x32
    11ca:	aa aa       	std	Y+50, r10	; 0x32
    11cc:	aa aa       	std	Y+50, r10	; 0x32
    11ce:	aa aa       	std	Y+50, r10	; 0x32
    11d0:	ff ff       	.word	0xffff	; ????
    11d2:	ff ff       	.word	0xffff	; ????
    11d4:	ff ff       	.word	0xffff	; ????
    11d6:	ff ff       	.word	0xffff	; ????
    11d8:	ff ff       	.word	0xffff	; ????
    11da:	fe aa       	std	Y+54, r15	; 0x36
    11dc:	aa bf       	out	0x3a, r26	; 58
    11de:	ff ff       	.word	0xffff	; ????
    11e0:	ff af       	std	Y+63, r31	; 0x3f
    11e2:	aa aa       	std	Y+50, r10	; 0x32
    11e4:	aa aa       	std	Y+50, r10	; 0x32
    11e6:	aa aa       	std	Y+50, r10	; 0x32

000011e8 <_ZL9fontASCII>:
    11e8:	00 30 00 00 10 00 00 00 00 00 00 00 00 00 00 00     .0..............
    11f8:	00 78 6c 28 3c 66 20 30 18 30 54 18 00 00 00 06     .xl(<f 0.0T.....
    1208:	00 78 24 7c 60 0c 50 10 30 18 38 18 00 00 00 0c     .x$|`.P.0.8.....
    1218:	00 78 00 28 38 18 34 00 30 18 10 7e 00 7e 00 18     .x.(8.4.0..~.~..
    1228:	00 30 00 7c 0c 30 48 00 30 18 38 18 00 00 00 30     .0.|.0H.0.8....0
    1238:	00 00 00 28 78 66 34 00 18 30 54 18 00 00 00 60     ...(xf4..0T....`
    1248:	00 30 00 00 10 00 00 00 00 00 00 00 30 00 30 00     .0..........0.0.
	...
    1264:	10 00 00 00 38 18 fc fc 06 fe 7c fe 7c 7c 00 00     ....8.....|.||..
    1274:	00 00 00 7c 4c 38 06 06 c6 c0 c0 06 c6 c6 00 00     ...|L8..........
    1284:	18 00 30 c6 c6 18 06 3c c6 fc fc 06 7c c6 30 30     ..0....<....|.00
    1294:	30 7c 18 06 c6 18 7c 06 c6 06 c6 0c c6 c6 00 00     0|....|.........
    12a4:	60 00 0c 06 c6 18 c0 06 c6 06 c6 18 c6 7e 00 00     `............~..
    12b4:	30 7c 18 3c 64 18 c0 06 fe 06 c6 30 c6 06 30 30     0|.<d......0..00
    12c4:	18 00 30 00 38 3c fe fc 06 fc 7c 30 7c 7c 00 10     ..0.8<....|0||..
    12d4:	00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 00     ...0............
    12e4:	00 00 00 00 7c 7c fc 7e fc fe fe 7c c6 3c 1e c6     ....||.~...|.<..
    12f4:	c0 c6 c6 7c c6 c6 c6 c0 c6 c0 c0 c6 c6 18 06 c6     ...|............
    1304:	c0 ee e6 c6 c6 c6 c6 c0 c6 c0 c0 c0 c6 18 06 cc     ................
    1314:	c0 fe f6 c6 d6 c6 fc c0 c6 f8 fc de fe 18 06 f8     ................
    1324:	c0 d6 de c6 dc fe c6 c0 c6 c0 c0 c6 c6 18 06 cc     ................
    1334:	c0 c6 ce c6 c0 c6 c6 c0 c6 c0 c0 c6 c6 18 c6 c6     ................
    1344:	c0 c6 c6 c6 7c c6 fc 7e fc fe c0 7e c6 3c 7c c6     ....|..~...~.<|.
    1354:	fe c6 c6 7c 00 00 00 00 00 00 00 00 00 00 00 00     ...|............
    1364:	00 00 00 00 fc 7c fc 7e 7e c6 c6 c6 c6 66 fe 00     .....|.~~....f..
    1374:	00 00 00 00 c6 c6 c6 c0 18 c6 c6 c6 c6 66 06 38     .............f.8
    1384:	60 38 10 00 c6 c6 c6 c0 18 c6 c6 c6 6c 66 0c 30     `8..........lf.0
    1394:	30 18 38 00 c6 c6 c6 7c 18 c6 c6 d6 38 3c 38 30     0.8....|....8<80
    13a4:	18 18 6c 00 fc de fc 06 18 c6 6c fe 6c 18 60 30     ..l.......l.l.`0
    13b4:	0c 18 44 00 c0 cc c6 06 18 c6 38 ee c6 18 c0 38     ..D.......8....8
    13c4:	06 38 00 00 c0 76 c6 fc 18 7c 10 c6 c6 18 fe 00     .8...v...|......
    13d4:	00 00 00 fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
    13e4:	00 00 00 00 00 00 c0 00 06 00 3e 00 c0 18 0c c0     ..........>.....
    13f4:	38 00 00 00 60 7c fc 7e 7e 7c 60 7e c0 00 00 c6     8...`|.~~|`~....
    1404:	18 fc fc 7c 20 06 c6 c0 c6 c6 60 c6 fc 38 1c cc     ...| .....`..8..
    1414:	18 d6 c6 c6 00 7e c6 c0 c6 c6 fc c6 c6 18 0c f8     .....~..........
    1424:	18 d6 c6 c6 00 c6 c6 c0 c6 fc 60 c6 c6 18 0c cc     ..........`.....
    1434:	18 d6 c6 c6 00 c6 c6 c0 c6 c0 60 7e c6 18 0c c6     ..........`~....
    1444:	18 d6 c6 c6 00 7e fc 7e 7e 7c 60 06 c6 18 0c c6     .....~.~~|`.....
    1454:	18 d6 c6 7c 00 00 00 00 00 00 00 7c 00 00 78 00     ...|.......|..x.
	...
    146c:	18 00 00 00 00 00 00 00 00 00 00 00 fc 7e fc 7c     .............~.|
    147c:	18 c6 c6 d6 c6 c6 fe 38 10 38 00 00 c6 c6 c6 c0     .......8.8......
    148c:	7e c6 c6 d6 6c c6 0c 30 10 18 30 00 c6 c6 c0 7c     ~...l..0..0....|
    149c:	18 c6 c6 d6 38 c6 38 60 10 0c 5a 00 c6 c6 c0 06     ....8.8`..Z.....
    14ac:	18 c6 6c d6 6c c6 60 30 10 18 0c 00 c6 c6 c0 06     ..l.l.`0........
    14bc:	18 c6 38 d6 c6 7e c0 38 10 38 00 00 fc 7e c0 7c     ..8..~.8.8...~.|
    14cc:	18 7e 10 7e c6 06 fe 00 00 00 00 00 c0 06 00 00     .~.~............
    14dc:	00 00 00 00 00 7c 00 00 00 00 00 00                 .....|......

000014e8 <_ZL9logoAtmel>:
    14e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    14f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1508:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
    1518:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
    1528:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1538:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    1548:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1558:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
    1568:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
    1578:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
    1588:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
    1598:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15a8:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
    15b8:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    15c8:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
    15d8:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
    15e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
    15f8:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
    1608:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1618:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
    1628:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
    1638:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
    1648:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
    1658:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
    1668:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
    1678:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1688:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
    1698:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
    16a8:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
    16b8:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
    16c8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
    16d8:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
    16e8:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
    16f8:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
    1708:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
    1718:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
    1728:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
    1738:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1748:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
    1758:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
    1768:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
    1778:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
    1788:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
    1798:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
    17a8:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
    17b8:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
    17c8:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
    17d8:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
    17e8:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
    17f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
    1808:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
    1818:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
    1828:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
    1838:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
    1848:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1858:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
    1868:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1878:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
    1888:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1898:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
    18a8:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18c8:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
    18d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    18e8:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
    18f8:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1908:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
    1918:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
    1928:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1938:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
    1948:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
    1958:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
    1968:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
    1978:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1988:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
    1998:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
    19a8:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
    19b8:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
    19c8:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
    19d8:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
    19e8:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
    19f8:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
    1a08:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
    1a18:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
    1a28:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
    1a38:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
    1a48:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
    1a58:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
    1a68:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
    1a78:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
    1a88:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
    1a98:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
    1aa8:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
    1ab8:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
    1ac8:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
    1ad8:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
    1ae8:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
    1af8:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
    1b08:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
    1b18:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
    1b28:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
    1b38:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
    1b48:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
    1b58:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1b68:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
    1b78:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
    1b88:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1b98:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
    1ba8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bb8:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
    1bc8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1bd8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1be8:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
    1bf8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00001c08 <__ctors_start>:
    1c08:	bf 0e       	add	r11, r31

00001c0a <__ctors_end>:
    1c0a:	11 24       	eor	r1, r1
    1c0c:	1f be       	out	0x3f, r1	; 63
    1c0e:	cf ef       	ldi	r28, 0xFF	; 255
    1c10:	d8 e0       	ldi	r29, 0x08	; 8
    1c12:	de bf       	out	0x3e, r29	; 62
    1c14:	cd bf       	out	0x3d, r28	; 61

00001c16 <__do_copy_data>:
    1c16:	11 e0       	ldi	r17, 0x01	; 1
    1c18:	a0 e0       	ldi	r26, 0x00	; 0
    1c1a:	b1 e0       	ldi	r27, 0x01	; 1
    1c1c:	e6 ef       	ldi	r30, 0xF6	; 246
    1c1e:	f7 e2       	ldi	r31, 0x27	; 39
    1c20:	02 c0       	rjmp	.+4      	; 0x1c26 <__do_copy_data+0x10>
    1c22:	05 90       	lpm	r0, Z+
    1c24:	0d 92       	st	X+, r0
    1c26:	a2 30       	cpi	r26, 0x02	; 2
    1c28:	b1 07       	cpc	r27, r17
    1c2a:	d9 f7       	brne	.-10     	; 0x1c22 <__do_copy_data+0xc>

00001c2c <__do_clear_bss>:
    1c2c:	21 e0       	ldi	r18, 0x01	; 1
    1c2e:	a2 e0       	ldi	r26, 0x02	; 2
    1c30:	b1 e0       	ldi	r27, 0x01	; 1
    1c32:	01 c0       	rjmp	.+2      	; 0x1c36 <.do_clear_bss_start>

00001c34 <.do_clear_bss_loop>:
    1c34:	1d 92       	st	X+, r1

00001c36 <.do_clear_bss_start>:
    1c36:	ad 31       	cpi	r26, 0x1D	; 29
    1c38:	b2 07       	cpc	r27, r18
    1c3a:	e1 f7       	brne	.-8      	; 0x1c34 <.do_clear_bss_loop>

00001c3c <__do_global_ctors>:
    1c3c:	1e e0       	ldi	r17, 0x0E	; 14
    1c3e:	c5 e0       	ldi	r28, 0x05	; 5
    1c40:	de e0       	ldi	r29, 0x0E	; 14
    1c42:	04 c0       	rjmp	.+8      	; 0x1c4c <__do_global_ctors+0x10>
    1c44:	21 97       	sbiw	r28, 0x01	; 1
    1c46:	fe 01       	movw	r30, r28
    1c48:	0e 94 f3 13 	call	0x27e6	; 0x27e6 <__tablejump2__>
    1c4c:	c4 30       	cpi	r28, 0x04	; 4
    1c4e:	d1 07       	cpc	r29, r17
    1c50:	c9 f7       	brne	.-14     	; 0x1c44 <__do_global_ctors+0x8>
    1c52:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <main>
    1c56:	0c 94 f9 13 	jmp	0x27f2	; 0x27f2 <_exit>

00001c5a <__bad_interrupt>:
    1c5a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001c5e <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
    1c5e:	61 e0       	ldi	r22, 0x01	; 1
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	0e 94 a4 10 	call	0x2148	; 0x2148 <_ZN3MCU7Setting9beginPortEab>
  beginPort(C, IN);
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	0e 94 a4 10 	call	0x2148	; 0x2148 <_ZN3MCU7Setting9beginPortEab>
  beginPin(D, 6);
    1c6e:	66 e0       	ldi	r22, 0x06	; 6
    1c70:	82 e0       	ldi	r24, 0x02	; 2
    1c72:	0e 94 77 10 	call	0x20ee	; 0x20ee <_ZN3MCU7Setting8beginPinEaa>

  beginINT(0, DOWN);
    1c76:	61 e0       	ldi	r22, 0x01	; 1
    1c78:	80 e0       	ldi	r24, 0x00	; 0
    1c7a:	0e 94 b4 10 	call	0x2168	; 0x2168 <_ZN3MCU7Setting8beginINTEaa>
  //beginINT(1, DOWN);
  beginTimer(1, COMP);
    1c7e:	61 e0       	ldi	r22, 0x01	; 1
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
    1c86:	61 e0       	ldi	r22, 0x01	; 1
    1c88:	82 e0       	ldi	r24, 0x02	; 2
    1c8a:	0e 94 cf 10 	call	0x219e	; 0x219e <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
    1c8e:	61 e0       	ldi	r22, 0x01	; 1
    1c90:	83 e0       	ldi	r24, 0x03	; 3
    1c92:	0e 94 25 11 	call	0x224a	; 0x224a <_ZN3MCU7Setting8beginPWMEab>
  beginSPI();
    1c96:	0e 94 bd 11 	call	0x237a	; 0x237a <_ZN3MCU7Setting8beginSPIEv>
  sei();
    1c9a:	78 94       	sei

  TCCR0B = 0x00;
    1c9c:	15 bc       	out	0x25, r1	; 37

  game.title();
    1c9e:	85 e0       	ldi	r24, 0x05	; 5
    1ca0:	91 e0       	ldi	r25, 0x01	; 1
    1ca2:	0e 94 56 0f 	call	0x1eac	; 0x1eac <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
    1ca6:	85 e0       	ldi	r24, 0x05	; 5
    1ca8:	91 e0       	ldi	r25, 0x01	; 1
    1caa:	0e 94 e0 0f 	call	0x1fc0	; 0x1fc0 <_ZN4Game5startEv>
    1cae:	fb cf       	rjmp	.-10     	; 0x1ca6 <main+0x48>

00001cb0 <__vector_11>:
---------------  MAIN END  ---------------
//========================================*/


ISR(TIMER1_COMPA_vect)
{
    1cb0:	1f 92       	push	r1
    1cb2:	0f 92       	push	r0
    1cb4:	0f b6       	in	r0, 0x3f	; 63
    1cb6:	0f 92       	push	r0
    1cb8:	11 24       	eor	r1, r1
    1cba:	2f 93       	push	r18
    1cbc:	3f 93       	push	r19
    1cbe:	4f 93       	push	r20
    1cc0:	5f 93       	push	r21
    1cc2:	6f 93       	push	r22
    1cc4:	7f 93       	push	r23
    1cc6:	8f 93       	push	r24
    1cc8:	9f 93       	push	r25
    1cca:	af 93       	push	r26
    1ccc:	bf 93       	push	r27
    1cce:	ef 93       	push	r30
    1cd0:	ff 93       	push	r31
  sw.update();
    1cd2:	82 e0       	ldi	r24, 0x02	; 2
    1cd4:	91 e0       	ldi	r25, 0x01	; 1
    1cd6:	0e 94 c2 11 	call	0x2384	; 0x2384 <_ZN2SW6updateEv>

  switch (sw.result)
    1cda:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end+0x2>
    1cde:	82 30       	cpi	r24, 0x02	; 2
    1ce0:	31 f0       	breq	.+12     	; 0x1cee <__vector_11+0x3e>
    1ce2:	88 30       	cpi	r24, 0x08	; 8
    1ce4:	39 f4       	brne	.+14     	; 0x1cf4 <__vector_11+0x44>
  {
  case SW_UP:
    sw.up = ON;
    1ce6:	81 e0       	ldi	r24, 0x01	; 1
    1ce8:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <_ZN2SW2upE>
    break;
    1cec:	03 c0       	rjmp	.+6      	; 0x1cf4 <__vector_11+0x44>
  
  case SW_DOWN:
    sw.down = ON;
    1cee:	81 e0       	ldi	r24, 0x01	; 1
    1cf0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <_ZN2SW4downE>
    break;

   default:
    break;
  }
}
    1cf4:	ff 91       	pop	r31
    1cf6:	ef 91       	pop	r30
    1cf8:	bf 91       	pop	r27
    1cfa:	af 91       	pop	r26
    1cfc:	9f 91       	pop	r25
    1cfe:	8f 91       	pop	r24
    1d00:	7f 91       	pop	r23
    1d02:	6f 91       	pop	r22
    1d04:	5f 91       	pop	r21
    1d06:	4f 91       	pop	r20
    1d08:	3f 91       	pop	r19
    1d0a:	2f 91       	pop	r18
    1d0c:	0f 90       	pop	r0
    1d0e:	0f be       	out	0x3f, r0	; 63
    1d10:	0f 90       	pop	r0
    1d12:	1f 90       	pop	r1
    1d14:	18 95       	reti

00001d16 <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
    1d16:	1f 92       	push	r1
    1d18:	0f 92       	push	r0
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	0f 92       	push	r0
    1d1e:	11 24       	eor	r1, r1
    1d20:	8f 93       	push	r24
    1d22:	9f 93       	push	r25
    1d24:	af 93       	push	r26
    1d26:	bf 93       	push	r27
  Frame::presentTime++;
    1d28:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE>
    1d2c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1d30:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1d34:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
    1d38:	01 96       	adiw	r24, 0x01	; 1
    1d3a:	a1 1d       	adc	r26, r1
    1d3c:	b1 1d       	adc	r27, r1
    1d3e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <_ZN5Frame11presentTimeE>
    1d42:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1d46:	a0 93 18 01 	sts	0x0118, r26	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1d4a:	b0 93 19 01 	sts	0x0119, r27	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
}
    1d4e:	bf 91       	pop	r27
    1d50:	af 91       	pop	r26
    1d52:	9f 91       	pop	r25
    1d54:	8f 91       	pop	r24
    1d56:	0f 90       	pop	r0
    1d58:	0f be       	out	0x3f, r0	; 63
    1d5a:	0f 90       	pop	r0
    1d5c:	1f 90       	pop	r1
    1d5e:	18 95       	reti

00001d60 <__vector_1>:


ISR(INT0_vect)
{
    1d60:	1f 92       	push	r1
    1d62:	0f 92       	push	r0
    1d64:	0f b6       	in	r0, 0x3f	; 63
    1d66:	0f 92       	push	r0
    1d68:	11 24       	eor	r1, r1
    1d6a:	8f 93       	push	r24
  SW::interrupt0 = ON;
    1d6c:	81 e0       	ldi	r24, 0x01	; 1
    1d6e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <_ZN2SW10interrupt0E>
    1d72:	8f 91       	pop	r24
    1d74:	0f 90       	pop	r0
    1d76:	0f be       	out	0x3f, r0	; 63
    1d78:	0f 90       	pop	r0
    1d7a:	1f 90       	pop	r1
    1d7c:	18 95       	reti

00001d7e <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    1d7e:	e5 e0       	ldi	r30, 0x05	; 5
    1d80:	f1 e0       	ldi	r31, 0x01	; 1
    1d82:	80 ef       	ldi	r24, 0xF0	; 240
    1d84:	90 e0       	ldi	r25, 0x00	; 0
    1d86:	91 83       	std	Z+1, r25	; 0x01
    1d88:	80 83       	st	Z, r24
    1d8a:	80 e4       	ldi	r24, 0x40	; 64
    1d8c:	91 e0       	ldi	r25, 0x01	; 1
    1d8e:	93 83       	std	Z+3, r25	; 0x03
    1d90:	82 83       	std	Z+2, r24	; 0x02
  bool mIs_Start;
  bool mIs_Score;
  bool mIs_Credit;

public:
  Game() : Font(){ m_Cursor = 0; mIs_Start = false; mIs_Score = false; mIs_Credit = false; }
    1d92:	12 86       	std	Z+10, r1	; 0x0a
    1d94:	13 86       	std	Z+11, r1	; 0x0b
    1d96:	14 86       	std	Z+12, r1	; 0x0c
    1d98:	15 86       	std	Z+13, r1	; 0x0d
    1d9a:	08 95       	ret

00001d9c <_ZN5Frame6updateEv>:
/*----------------------------------------//
              Update Frame
//----------------------------------------*/

void Frame::update(void)
{
    1d9c:	fc 01       	movw	r30, r24

  if (presentTime >= m_PastTick + 5)
    1d9e:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE>
    1da2:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1da6:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1daa:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
    1dae:	80 81       	ld	r24, Z
    1db0:	91 81       	ldd	r25, Z+1	; 0x01
    1db2:	a2 81       	ldd	r26, Z+2	; 0x02
    1db4:	b3 81       	ldd	r27, Z+3	; 0x03
    1db6:	05 96       	adiw	r24, 0x05	; 5
    1db8:	a1 1d       	adc	r26, r1
    1dba:	b1 1d       	adc	r27, r1
    1dbc:	48 17       	cp	r20, r24
    1dbe:	59 07       	cpc	r21, r25
    1dc0:	6a 07       	cpc	r22, r26
    1dc2:	7b 07       	cpc	r23, r27
    1dc4:	70 f0       	brcs	.+28     	; 0x1de2 <_ZN5Frame6updateEv+0x46>
  {

    m_PastTick = presentTime;
    1dc6:	40 83       	st	Z, r20
    1dc8:	51 83       	std	Z+1, r21	; 0x01
    1dca:	62 83       	std	Z+2, r22	; 0x02
    1dcc:	73 83       	std	Z+3, r23	; 0x03

    oneTick++;
    1dce:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <_ZN5Frame7oneTickE>
    1dd2:	8f 5f       	subi	r24, 0xFF	; 255

    if (oneTick == 2)
    1dd4:	82 30       	cpi	r24, 0x02	; 2
    1dd6:	19 f0       	breq	.+6      	; 0x1dde <_ZN5Frame6updateEv+0x42>
  if (presentTime >= m_PastTick + 5)
  {

    m_PastTick = presentTime;

    oneTick++;
    1dd8:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <_ZN5Frame7oneTickE>
    1ddc:	02 c0       	rjmp	.+4      	; 0x1de2 <_ZN5Frame6updateEv+0x46>

    if (oneTick == 2)
    {
      oneTick = 0;
    1dde:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <_ZN5Frame7oneTickE>
    }

  }

  if (presentTime >= m_PastFrame + 100)
    1de2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE>
    1de6:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1dea:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1dee:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
    1df2:	44 81       	ldd	r20, Z+4	; 0x04
    1df4:	55 81       	ldd	r21, Z+5	; 0x05
    1df6:	66 81       	ldd	r22, Z+6	; 0x06
    1df8:	77 81       	ldd	r23, Z+7	; 0x07
    1dfa:	4c 59       	subi	r20, 0x9C	; 156
    1dfc:	5f 4f       	sbci	r21, 0xFF	; 255
    1dfe:	6f 4f       	sbci	r22, 0xFF	; 255
    1e00:	7f 4f       	sbci	r23, 0xFF	; 255
    1e02:	84 17       	cp	r24, r20
    1e04:	95 07       	cpc	r25, r21
    1e06:	a6 07       	cpc	r26, r22
    1e08:	b7 07       	cpc	r27, r23
    1e0a:	b0 f0       	brcs	.+44     	; 0x1e38 <_ZN5Frame6updateEv+0x9c>
  {

    m_PastFrame = presentTime;
    1e0c:	84 83       	std	Z+4, r24	; 0x04
    1e0e:	95 83       	std	Z+5, r25	; 0x05
    1e10:	a6 83       	std	Z+6, r26	; 0x06
    1e12:	b7 83       	std	Z+7, r27	; 0x07

    fourFrames++;
    1e14:	30 91 14 01 	lds	r19, 0x0114	; 0x800114 <_ZN5Frame10fourFramesE>
    1e18:	3f 5f       	subi	r19, 0xFF	; 255
    1e1a:	30 93 14 01 	sts	0x0114, r19	; 0x800114 <_ZN5Frame10fourFramesE>
    sixFrames++;
    1e1e:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <_ZN5Frame9sixFramesE>
    1e22:	2f 5f       	subi	r18, 0xFF	; 255
    1e24:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <_ZN5Frame9sixFramesE>

    if (fourFrames == 4)
    1e28:	34 30       	cpi	r19, 0x04	; 4
    1e2a:	11 f4       	brne	.+4      	; 0x1e30 <_ZN5Frame6updateEv+0x94>
    {
      fourFrames = 0;
    1e2c:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
    1e30:	26 30       	cpi	r18, 0x06	; 6
    1e32:	11 f4       	brne	.+4      	; 0x1e38 <_ZN5Frame6updateEv+0x9c>
    {
      sixFrames = 0;
    1e34:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <_ZN5Frame9sixFramesE>
    }

  }

  if (presentTime >= m_PastBeat + 125)
    1e38:	40 85       	ldd	r20, Z+8	; 0x08
    1e3a:	51 85       	ldd	r21, Z+9	; 0x09
    1e3c:	62 85       	ldd	r22, Z+10	; 0x0a
    1e3e:	73 85       	ldd	r23, Z+11	; 0x0b
    1e40:	43 58       	subi	r20, 0x83	; 131
    1e42:	5f 4f       	sbci	r21, 0xFF	; 255
    1e44:	6f 4f       	sbci	r22, 0xFF	; 255
    1e46:	7f 4f       	sbci	r23, 0xFF	; 255
    1e48:	84 17       	cp	r24, r20
    1e4a:	95 07       	cpc	r25, r21
    1e4c:	a6 07       	cpc	r26, r22
    1e4e:	b7 07       	cpc	r27, r23
    1e50:	70 f0       	brcs	.+28     	; 0x1e6e <_ZN5Frame6updateEv+0xd2>
  {

    m_PastBeat = presentTime;
    1e52:	80 87       	std	Z+8, r24	; 0x08
    1e54:	91 87       	std	Z+9, r25	; 0x09
    1e56:	a2 87       	std	Z+10, r26	; 0x0a
    1e58:	b3 87       	std	Z+11, r27	; 0x0b

    sixteenBeats++;
    1e5a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_ZN5Frame12sixteenBeatsE>
    1e5e:	8f 5f       	subi	r24, 0xFF	; 255

    if (sixteenBeats == 2)
    1e60:	82 30       	cpi	r24, 0x02	; 2
    1e62:	19 f0       	breq	.+6      	; 0x1e6a <_ZN5Frame6updateEv+0xce>
  if (presentTime >= m_PastBeat + 125)
  {

    m_PastBeat = presentTime;

    sixteenBeats++;
    1e64:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_ZN5Frame12sixteenBeatsE>
    1e68:	08 95       	ret

    if (sixteenBeats == 2)
    {
      sixteenBeats = 0;
    1e6a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_ZN5Frame12sixteenBeatsE>
    1e6e:	08 95       	ret

00001e70 <_ZN5Frame4initEv>:
/*----------------------------------------//
                Reset Frame
//----------------------------------------*/

void Frame::init(void)
{
    1e70:	fc 01       	movw	r30, r24
  m_PastTick = presentTime;
    1e72:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE>
    1e76:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1e7a:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1e7e:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
    1e82:	80 83       	st	Z, r24
    1e84:	91 83       	std	Z+1, r25	; 0x01
    1e86:	a2 83       	std	Z+2, r26	; 0x02
    1e88:	b3 83       	std	Z+3, r27	; 0x03
  m_PastFrame = presentTime;
    1e8a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <_ZN5Frame11presentTimeE>
    1e8e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <_ZN5Frame11presentTimeE+0x1>
    1e92:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <_ZN5Frame11presentTimeE+0x2>
    1e96:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <_ZN5Frame11presentTimeE+0x3>
    1e9a:	84 83       	std	Z+4, r24	; 0x04
    1e9c:	95 83       	std	Z+5, r25	; 0x05
    1e9e:	a6 83       	std	Z+6, r26	; 0x06
    1ea0:	b7 83       	std	Z+7, r27	; 0x07
  m_PastBeat = presentTime;
    1ea2:	80 87       	std	Z+8, r24	; 0x08
    1ea4:	91 87       	std	Z+9, r25	; 0x09
    1ea6:	a2 87       	std	Z+10, r26	; 0x0a
    1ea8:	b3 87       	std	Z+11, r27	; 0x0b
    1eaa:	08 95       	ret

00001eac <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
    1eac:	7f 92       	push	r7
    1eae:	8f 92       	push	r8
    1eb0:	9f 92       	push	r9
    1eb2:	af 92       	push	r10
    1eb4:	bf 92       	push	r11
    1eb6:	cf 92       	push	r12
    1eb8:	df 92       	push	r13
    1eba:	ef 92       	push	r14
    1ebc:	ff 92       	push	r15
    1ebe:	0f 93       	push	r16
    1ec0:	1f 93       	push	r17
    1ec2:	cf 93       	push	r28
    1ec4:	df 93       	push	r29
    1ec6:	ec 01       	movw	r28, r24
  begin();
    1ec8:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <_ZN3TFT5beginEv>
  setRotation(0);
    1ecc:	60 e0       	ldi	r22, 0x00	; 0
    1ece:	ce 01       	movw	r24, r28
    1ed0:	0e 94 47 12 	call	0x248e	; 0x248e <_ZN3TFT11setRotationEa>

  fillScreen(WHITE);
    1ed4:	6f ef       	ldi	r22, 0xFF	; 255
    1ed6:	7f ef       	ldi	r23, 0xFF	; 255
    1ed8:	ce 01       	movw	r24, r28
    1eda:	0e 94 a3 12 	call	0x2546	; 0x2546 <_ZN3TFT10fillScreenEj>
  drawBitmap(8, 70, 304, 96, logoAtmel, BLACK, RED, BLUE, WHITE);
    1ede:	77 24       	eor	r7, r7
    1ee0:	7a 94       	dec	r7
    1ee2:	7f 92       	push	r7
    1ee4:	7f 92       	push	r7
    1ee6:	0f 2e       	mov	r0, r31
    1ee8:	ff e1       	ldi	r31, 0x1F	; 31
    1eea:	8f 2e       	mov	r8, r31
    1eec:	91 2c       	mov	r9, r1
    1eee:	f0 2d       	mov	r31, r0
    1ef0:	0f 2e       	mov	r0, r31
    1ef2:	a1 2c       	mov	r10, r1
    1ef4:	f8 ef       	ldi	r31, 0xF8	; 248
    1ef6:	bf 2e       	mov	r11, r31
    1ef8:	f0 2d       	mov	r31, r0
    1efa:	c1 2c       	mov	r12, r1
    1efc:	d1 2c       	mov	r13, r1
    1efe:	0f 2e       	mov	r0, r31
    1f00:	f8 ee       	ldi	r31, 0xE8	; 232
    1f02:	ef 2e       	mov	r14, r31
    1f04:	f4 e1       	ldi	r31, 0x14	; 20
    1f06:	ff 2e       	mov	r15, r31
    1f08:	f0 2d       	mov	r31, r0
    1f0a:	00 e6       	ldi	r16, 0x60	; 96
    1f0c:	10 e0       	ldi	r17, 0x00	; 0
    1f0e:	20 e3       	ldi	r18, 0x30	; 48
    1f10:	31 e0       	ldi	r19, 0x01	; 1
    1f12:	46 e4       	ldi	r20, 0x46	; 70
    1f14:	50 e0       	ldi	r21, 0x00	; 0
    1f16:	68 e0       	ldi	r22, 0x08	; 8
    1f18:	70 e0       	ldi	r23, 0x00	; 0
    1f1a:	ce 01       	movw	r24, r28
    1f1c:	0e 94 21 13 	call	0x2642	; 0x2642 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1f20:	2f ef       	ldi	r18, 0xFF	; 255
    1f22:	8b e7       	ldi	r24, 0x7B	; 123
    1f24:	92 e9       	ldi	r25, 0x92	; 146
    1f26:	21 50       	subi	r18, 0x01	; 1
    1f28:	80 40       	sbci	r24, 0x00	; 0
    1f2a:	90 40       	sbci	r25, 0x00	; 0
    1f2c:	e1 f7       	brne	.-8      	; 0x1f26 <_ZN4Game5titleEv+0x7a>
    1f2e:	00 c0       	rjmp	.+0      	; 0x1f30 <_ZN4Game5titleEv+0x84>
    1f30:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
    1f32:	60 e0       	ldi	r22, 0x00	; 0
    1f34:	70 e0       	ldi	r23, 0x00	; 0
    1f36:	ce 01       	movw	r24, r28
    1f38:	0e 94 a3 12 	call	0x2546	; 0x2546 <_ZN3TFT10fillScreenEj>
  drawBitmap(0, 16, 320, 224, titleMenu, BLACK, MAROON, RED, WHITE);
    1f3c:	7f 92       	push	r7
    1f3e:	7f 92       	push	r7
    1f40:	0f 2e       	mov	r0, r31
    1f42:	81 2c       	mov	r8, r1
    1f44:	f8 ef       	ldi	r31, 0xF8	; 248
    1f46:	9f 2e       	mov	r9, r31
    1f48:	f0 2d       	mov	r31, r0
    1f4a:	0f 2e       	mov	r0, r31
    1f4c:	a1 2c       	mov	r10, r1
    1f4e:	f8 e7       	ldi	r31, 0x78	; 120
    1f50:	bf 2e       	mov	r11, r31
    1f52:	f0 2d       	mov	r31, r0
    1f54:	0f 2e       	mov	r0, r31
    1f56:	f8 e6       	ldi	r31, 0x68	; 104
    1f58:	ef 2e       	mov	r14, r31
    1f5a:	f0 e0       	ldi	r31, 0x00	; 0
    1f5c:	ff 2e       	mov	r15, r31
    1f5e:	f0 2d       	mov	r31, r0
    1f60:	00 ee       	ldi	r16, 0xE0	; 224
    1f62:	10 e0       	ldi	r17, 0x00	; 0
    1f64:	20 e4       	ldi	r18, 0x40	; 64
    1f66:	31 e0       	ldi	r19, 0x01	; 1
    1f68:	40 e1       	ldi	r20, 0x10	; 16
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	60 e0       	ldi	r22, 0x00	; 0
    1f6e:	70 e0       	ldi	r23, 0x00	; 0
    1f70:	ce 01       	movw	r24, r28
    1f72:	0e 94 21 13 	call	0x2642	; 0x2642 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
    1f76:	2f ef       	ldi	r18, 0xFF	; 255
    1f78:	89 e6       	ldi	r24, 0x69	; 105
    1f7a:	98 e1       	ldi	r25, 0x18	; 24
    1f7c:	21 50       	subi	r18, 0x01	; 1
    1f7e:	80 40       	sbci	r24, 0x00	; 0
    1f80:	90 40       	sbci	r25, 0x00	; 0
    1f82:	e1 f7       	brne	.-8      	; 0x1f7c <_ZN4Game5titleEv+0xd0>
    1f84:	00 c0       	rjmp	.+0      	; 0x1f86 <_ZN4Game5titleEv+0xda>
    1f86:	00 00       	nop
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
    1f88:	88 ee       	ldi	r24, 0xE8	; 232
    1f8a:	91 e1       	ldi	r25, 0x11	; 17
    1f8c:	9d 83       	std	Y+5, r25	; 0x05
    1f8e:	8c 83       	std	Y+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
    1f90:	1f 82       	std	Y+7, r1	; 0x07
    1f92:	1e 82       	std	Y+6, r1	; 0x06
    1f94:	8f ef       	ldi	r24, 0xFF	; 255
    1f96:	9f ef       	ldi	r25, 0xFF	; 255
    1f98:	99 87       	std	Y+9, r25	; 0x09
    1f9a:	88 87       	std	Y+8, r24	; 0x08
  _delay_ms(500);

  setFont(fontASCII);
  setColor(BLACK, WHITE);
}
    1f9c:	0f 90       	pop	r0
    1f9e:	0f 90       	pop	r0
    1fa0:	0f 90       	pop	r0
    1fa2:	0f 90       	pop	r0
    1fa4:	df 91       	pop	r29
    1fa6:	cf 91       	pop	r28
    1fa8:	1f 91       	pop	r17
    1faa:	0f 91       	pop	r16
    1fac:	ff 90       	pop	r15
    1fae:	ef 90       	pop	r14
    1fb0:	df 90       	pop	r13
    1fb2:	cf 90       	pop	r12
    1fb4:	bf 90       	pop	r11
    1fb6:	af 90       	pop	r10
    1fb8:	9f 90       	pop	r9
    1fba:	8f 90       	pop	r8
    1fbc:	7f 90       	pop	r7
    1fbe:	08 95       	ret

00001fc0 <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
    1fc0:	cf 93       	push	r28
    1fc2:	df 93       	push	r29
    1fc4:	cd b7       	in	r28, 0x3d	; 61
    1fc6:	de b7       	in	r29, 0x3e	; 62
    1fc8:	2c 97       	sbiw	r28, 0x0c	; 12
    1fca:	0f b6       	in	r0, 0x3f	; 63
    1fcc:	f8 94       	cli
    1fce:	de bf       	out	0x3e, r29	; 62
    1fd0:	0f be       	out	0x3f, r0	; 63
    1fd2:	cd bf       	out	0x3d, r28	; 61
    1fd4:	6c 01       	movw	r12, r24
    1fd6:	2f ef       	ldi	r18, 0xFF	; 255
    1fd8:	81 ee       	ldi	r24, 0xE1	; 225
    1fda:	94 e0       	ldi	r25, 0x04	; 4
    1fdc:	21 50       	subi	r18, 0x01	; 1
    1fde:	80 40       	sbci	r24, 0x00	; 0
    1fe0:	90 40       	sbci	r25, 0x00	; 0
    1fe2:	e1 f7       	brne	.-8      	; 0x1fdc <_ZN4Game5startEv+0x1c>
    1fe4:	00 c0       	rjmp	.+0      	; 0x1fe6 <_ZN4Game5startEv+0x26>
    1fe6:	00 00       	nop
  
  _delay_ms(100);

  Frame frame;
  frame.init();
    1fe8:	ce 01       	movw	r24, r28
    1fea:	01 96       	adiw	r24, 0x01	; 1
    1fec:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <_ZN5Frame4initEv>
    {
      m_Cursor += 1;

      if (m_Cursor > 2)
      {
        m_Cursor = 2;
    1ff0:	68 94       	set
    1ff2:	bb 24       	eor	r11, r11
    1ff4:	b1 f8       	bld	r11, 1
  Frame frame;
  frame.init();

  while (1)
  {
    frame.update();
    1ff6:	ce 01       	movw	r24, r28
    1ff8:	01 96       	adiw	r24, 0x01	; 1
    1ffa:	0e 94 ce 0e 	call	0x1d9c	; 0x1d9c <_ZN5Frame6updateEv>

    if (SW::up == ON)
    1ffe:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <_ZN2SW2upE>
    2002:	88 23       	and	r24, r24
    2004:	59 f0       	breq	.+22     	; 0x201c <_ZN4Game5startEv+0x5c>
    {
      m_Cursor -= 1;
    2006:	f6 01       	movw	r30, r12
    2008:	82 85       	ldd	r24, Z+10	; 0x0a
    200a:	81 50       	subi	r24, 0x01	; 1

      if (m_Cursor < 0)
    200c:	12 f0       	brmi	.+4      	; 0x2012 <_ZN4Game5startEv+0x52>
  {
    frame.update();

    if (SW::up == ON)
    {
      m_Cursor -= 1;
    200e:	82 87       	std	Z+10, r24	; 0x0a
    2010:	02 c0       	rjmp	.+4      	; 0x2016 <_ZN4Game5startEv+0x56>

      if (m_Cursor < 0)
      {
        m_Cursor = 0;
    2012:	f6 01       	movw	r30, r12
    2014:	12 86       	std	Z+10, r1	; 0x0a
      }

      SW::up = OFF;
    2016:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <_ZN2SW2upE>
    201a:	0f c0       	rjmp	.+30     	; 0x203a <_ZN4Game5startEv+0x7a>
    }

    else if (SW::down == ON)
    201c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <_ZN2SW4downE>
    2020:	88 23       	and	r24, r24
    2022:	59 f0       	breq	.+22     	; 0x203a <_ZN4Game5startEv+0x7a>
    {
      m_Cursor += 1;
    2024:	f6 01       	movw	r30, r12
    2026:	82 85       	ldd	r24, Z+10	; 0x0a
    2028:	8f 5f       	subi	r24, 0xFF	; 255

      if (m_Cursor > 2)
    202a:	83 30       	cpi	r24, 0x03	; 3
    202c:	14 f4       	brge	.+4      	; 0x2032 <_ZN4Game5startEv+0x72>
      SW::up = OFF;
    }

    else if (SW::down == ON)
    {
      m_Cursor += 1;
    202e:	82 87       	std	Z+10, r24	; 0x0a
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <_ZN4Game5startEv+0x76>

      if (m_Cursor > 2)
      {
        m_Cursor = 2;
    2032:	f6 01       	movw	r30, r12
    2034:	b2 86       	std	Z+10, r11	; 0x0a
      }

      SW::down = OFF;
    2036:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <_ZN2SW4downE>
    }

    if (Frame::sixFrames == 0)
    203a:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <_ZN5Frame9sixFramesE>
    203e:	81 11       	cpse	r24, r1
    2040:	32 c0       	rjmp	.+100    	; 0x20a6 <_ZN4Game5startEv+0xe6>
    {
      switch (m_Cursor)
    2042:	f6 01       	movw	r30, r12
    2044:	82 85       	ldd	r24, Z+10	; 0x0a
    2046:	81 30       	cpi	r24, 0x01	; 1
    2048:	91 f0       	breq	.+36     	; 0x206e <_ZN4Game5startEv+0xae>
    204a:	82 30       	cpi	r24, 0x02	; 2
    204c:	f1 f0       	breq	.+60     	; 0x208a <_ZN4Game5startEv+0xca>
    204e:	81 11       	cpse	r24, r1
    2050:	d2 cf       	rjmp	.-92     	; 0x1ff6 <_ZN4Game5startEv+0x36>
      {
      case 0:
        fillRect(2, 160, 6, 14, BLACK);
    2052:	e1 2c       	mov	r14, r1
    2054:	f1 2c       	mov	r15, r1
    2056:	0e e0       	ldi	r16, 0x0E	; 14
    2058:	10 e0       	ldi	r17, 0x00	; 0
    205a:	26 e0       	ldi	r18, 0x06	; 6
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 ea       	ldi	r20, 0xA0	; 160
    2060:	50 e0       	ldi	r21, 0x00	; 0
    2062:	62 e0       	ldi	r22, 0x02	; 2
    2064:	70 e0       	ldi	r23, 0x00	; 0
    2066:	c6 01       	movw	r24, r12
    2068:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
        break;
    206c:	c4 cf       	rjmp	.-120    	; 0x1ff6 <_ZN4Game5startEv+0x36>

      case 1:
        fillRect(2, 184, 6, 14, BLACK);
    206e:	e1 2c       	mov	r14, r1
    2070:	f1 2c       	mov	r15, r1
    2072:	0e e0       	ldi	r16, 0x0E	; 14
    2074:	10 e0       	ldi	r17, 0x00	; 0
    2076:	26 e0       	ldi	r18, 0x06	; 6
    2078:	30 e0       	ldi	r19, 0x00	; 0
    207a:	48 eb       	ldi	r20, 0xB8	; 184
    207c:	50 e0       	ldi	r21, 0x00	; 0
    207e:	62 e0       	ldi	r22, 0x02	; 2
    2080:	70 e0       	ldi	r23, 0x00	; 0
    2082:	c6 01       	movw	r24, r12
    2084:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
        break;
    2088:	b6 cf       	rjmp	.-148    	; 0x1ff6 <_ZN4Game5startEv+0x36>

      case 2:
        fillRect(2, 208, 6, 14, BLACK);
    208a:	e1 2c       	mov	r14, r1
    208c:	f1 2c       	mov	r15, r1
    208e:	0e e0       	ldi	r16, 0x0E	; 14
    2090:	10 e0       	ldi	r17, 0x00	; 0
    2092:	26 e0       	ldi	r18, 0x06	; 6
    2094:	30 e0       	ldi	r19, 0x00	; 0
    2096:	40 ed       	ldi	r20, 0xD0	; 208
    2098:	50 e0       	ldi	r21, 0x00	; 0
    209a:	62 e0       	ldi	r22, 0x02	; 2
    209c:	70 e0       	ldi	r23, 0x00	; 0
    209e:	c6 01       	movw	r24, r12
    20a0:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
        break;
    20a4:	a8 cf       	rjmp	.-176    	; 0x1ff6 <_ZN4Game5startEv+0x36>
      default:
        break;
      }
    }

    else if (Frame::sixFrames == 4)
    20a6:	84 30       	cpi	r24, 0x04	; 4
    20a8:	09 f0       	breq	.+2      	; 0x20ac <_ZN4Game5startEv+0xec>
    20aa:	a5 cf       	rjmp	.-182    	; 0x1ff6 <_ZN4Game5startEv+0x36>
    {
      fillRect(2, 160, 6, 14, WHITE);
    20ac:	ee 24       	eor	r14, r14
    20ae:	ea 94       	dec	r14
    20b0:	fe 2c       	mov	r15, r14
    20b2:	0e e0       	ldi	r16, 0x0E	; 14
    20b4:	10 e0       	ldi	r17, 0x00	; 0
    20b6:	26 e0       	ldi	r18, 0x06	; 6
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	40 ea       	ldi	r20, 0xA0	; 160
    20bc:	50 e0       	ldi	r21, 0x00	; 0
    20be:	62 e0       	ldi	r22, 0x02	; 2
    20c0:	70 e0       	ldi	r23, 0x00	; 0
    20c2:	c6 01       	movw	r24, r12
    20c4:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
      fillRect(2, 184, 6, 14, WHITE);
    20c8:	26 e0       	ldi	r18, 0x06	; 6
    20ca:	30 e0       	ldi	r19, 0x00	; 0
    20cc:	48 eb       	ldi	r20, 0xB8	; 184
    20ce:	50 e0       	ldi	r21, 0x00	; 0
    20d0:	62 e0       	ldi	r22, 0x02	; 2
    20d2:	70 e0       	ldi	r23, 0x00	; 0
    20d4:	c6 01       	movw	r24, r12
    20d6:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
      fillRect(2, 208, 6, 14, WHITE);
    20da:	26 e0       	ldi	r18, 0x06	; 6
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	40 ed       	ldi	r20, 0xD0	; 208
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	62 e0       	ldi	r22, 0x02	; 2
    20e4:	70 e0       	ldi	r23, 0x00	; 0
    20e6:	c6 01       	movw	r24, r12
    20e8:	0e 94 e8 12 	call	0x25d0	; 0x25d0 <_ZN3TFT8fillRectEiiiij>
    20ec:	84 cf       	rjmp	.-248    	; 0x1ff6 <_ZN4Game5startEv+0x36>

000020ee <_ZN3MCU7Setting8beginPinEaa>:

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    PCICR |= 0x04;
    20ee:	81 30       	cpi	r24, 0x01	; 1
    20f0:	89 f0       	breq	.+34     	; 0x2114 <_ZN3MCU7Setting8beginPinEaa+0x26>
    20f2:	82 30       	cpi	r24, 0x02	; 2
    20f4:	e1 f0       	breq	.+56     	; 0x212e <_ZN3MCU7Setting8beginPinEaa+0x40>
    20f6:	81 11       	cpse	r24, r1
    20f8:	26 c0       	rjmp	.+76     	; 0x2146 <_ZN3MCU7Setting8beginPinEaa+0x58>
    20fa:	24 b1       	in	r18, 0x04	; 4
    20fc:	81 e0       	ldi	r24, 0x01	; 1
    20fe:	90 e0       	ldi	r25, 0x00	; 0
    2100:	02 c0       	rjmp	.+4      	; 0x2106 <_ZN3MCU7Setting8beginPinEaa+0x18>
    2102:	88 0f       	add	r24, r24
    2104:	99 1f       	adc	r25, r25
    2106:	6a 95       	dec	r22
    2108:	e2 f7       	brpl	.-8      	; 0x2102 <_ZN3MCU7Setting8beginPinEaa+0x14>
    210a:	82 2b       	or	r24, r18
    210c:	84 b9       	out	0x04, r24	; 4
    210e:	85 b1       	in	r24, 0x05	; 5
    2110:	85 b9       	out	0x05, r24	; 5
    2112:	08 95       	ret
    2114:	27 b1       	in	r18, 0x07	; 7
    2116:	81 e0       	ldi	r24, 0x01	; 1
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	02 c0       	rjmp	.+4      	; 0x2120 <_ZN3MCU7Setting8beginPinEaa+0x32>
    211c:	88 0f       	add	r24, r24
    211e:	99 1f       	adc	r25, r25
    2120:	6a 95       	dec	r22
    2122:	e2 f7       	brpl	.-8      	; 0x211c <_ZN3MCU7Setting8beginPinEaa+0x2e>
    2124:	82 2b       	or	r24, r18
    2126:	87 b9       	out	0x07, r24	; 7
    2128:	88 b1       	in	r24, 0x08	; 8
    212a:	88 b9       	out	0x08, r24	; 8
    212c:	08 95       	ret
    212e:	2a b1       	in	r18, 0x0a	; 10
    2130:	81 e0       	ldi	r24, 0x01	; 1
    2132:	90 e0       	ldi	r25, 0x00	; 0
    2134:	02 c0       	rjmp	.+4      	; 0x213a <_ZN3MCU7Setting8beginPinEaa+0x4c>
    2136:	88 0f       	add	r24, r24
    2138:	99 1f       	adc	r25, r25
    213a:	6a 95       	dec	r22
    213c:	e2 f7       	brpl	.-8      	; 0x2136 <_ZN3MCU7Setting8beginPinEaa+0x48>
    213e:	82 2b       	or	r24, r18
    2140:	8a b9       	out	0x0a, r24	; 10
    2142:	8b b1       	in	r24, 0x0b	; 11
    2144:	8b b9       	out	0x0b, r24	; 11
    2146:	08 95       	ret

00002148 <_ZN3MCU7Setting9beginPortEab>:
    2148:	61 95       	neg	r22
    214a:	81 30       	cpi	r24, 0x01	; 1
    214c:	39 f0       	breq	.+14     	; 0x215c <_ZN3MCU7Setting9beginPortEab+0x14>
    214e:	82 30       	cpi	r24, 0x02	; 2
    2150:	41 f0       	breq	.+16     	; 0x2162 <_ZN3MCU7Setting9beginPortEab+0x1a>
    2152:	81 11       	cpse	r24, r1
    2154:	08 c0       	rjmp	.+16     	; 0x2166 <_ZN3MCU7Setting9beginPortEab+0x1e>
    2156:	64 b9       	out	0x04, r22	; 4
    2158:	15 b8       	out	0x05, r1	; 5
    215a:	08 95       	ret
    215c:	67 b9       	out	0x07, r22	; 7
    215e:	18 b8       	out	0x08, r1	; 8
    2160:	08 95       	ret
    2162:	6a b9       	out	0x0a, r22	; 10
    2164:	1b b8       	out	0x0b, r1	; 11
    2166:	08 95       	ret

00002168 <_ZN3MCU7Setting8beginINTEaa>:
    2168:	9d b3       	in	r25, 0x1d	; 29
    216a:	21 e0       	ldi	r18, 0x01	; 1
    216c:	30 e0       	ldi	r19, 0x00	; 0
    216e:	02 c0       	rjmp	.+4      	; 0x2174 <_ZN3MCU7Setting8beginINTEaa+0xc>
    2170:	22 0f       	add	r18, r18
    2172:	33 1f       	adc	r19, r19
    2174:	8a 95       	dec	r24
    2176:	e2 f7       	brpl	.-8      	; 0x2170 <_ZN3MCU7Setting8beginINTEaa+0x8>
    2178:	29 2b       	or	r18, r25
    217a:	2d bb       	out	0x1d, r18	; 29
    217c:	61 30       	cpi	r22, 0x01	; 1
    217e:	39 f0       	breq	.+14     	; 0x218e <_ZN3MCU7Setting8beginINTEaa+0x26>
    2180:	62 30       	cpi	r22, 0x02	; 2
    2182:	49 f0       	breq	.+18     	; 0x2196 <_ZN3MCU7Setting8beginINTEaa+0x2e>
    2184:	61 11       	cpse	r22, r1
    2186:	0a c0       	rjmp	.+20     	; 0x219c <_ZN3MCU7Setting8beginINTEaa+0x34>
    2188:	10 92 69 00 	sts	0x0069, r1	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    218c:	08 95       	ret
    218e:	8a e0       	ldi	r24, 0x0A	; 10
    2190:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    2194:	08 95       	ret
    2196:	8f e0       	ldi	r24, 0x0F	; 15
    2198:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
    219c:	08 95       	ret

0000219e <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    219e:	81 30       	cpi	r24, 0x01	; 1
    21a0:	99 f1       	breq	.+102    	; 0x2208 <_ZN3MCU7Setting10beginTimerEab+0x6a>
    21a2:	82 30       	cpi	r24, 0x02	; 2
    21a4:	b1 f0       	breq	.+44     	; 0x21d2 <_ZN3MCU7Setting10beginTimerEab+0x34>
    21a6:	81 11       	cpse	r24, r1
    21a8:	4f c0       	rjmp	.+158    	; 0x2248 <_ZN3MCU7Setting10beginTimerEab+0xaa>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    21aa:	61 11       	cpse	r22, r1
    21ac:	08 c0       	rjmp	.+16     	; 0x21be <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    21b4:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    21b6:	85 e0       	ldi	r24, 0x05	; 5
    21b8:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    21ba:	16 bc       	out	0x26, r1	; 38
    21bc:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    21be:	82 e0       	ldi	r24, 0x02	; 2
    21c0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    21c4:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    21c6:	85 e0       	ldi	r24, 0x05	; 5
    21c8:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    21ca:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    21cc:	8f ef       	ldi	r24, 0xFF	; 255
    21ce:	87 bd       	out	0x27, r24	; 39
    21d0:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    21d2:	61 11       	cpse	r22, r1
    21d4:	0b c0       	rjmp	.+22     	; 0x21ec <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    21dc:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    21e0:	84 e0       	ldi	r24, 0x04	; 4
    21e2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    21e6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    21ea:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    21ec:	82 e0       	ldi	r24, 0x02	; 2
    21ee:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    21f2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x04;
    21f6:	84 e0       	ldi	r24, 0x04	; 4
    21f8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    21fc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    2200:	89 ef       	ldi	r24, 0xF9	; 249
    2202:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    2206:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    2208:	61 11       	cpse	r22, r1
    220a:	0d c0       	rjmp	.+26     	; 0x2226 <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    220c:	81 e0       	ldi	r24, 0x01	; 1
    220e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, Normal Mode
    2212:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x05;
    2216:	85 e0       	ldi	r24, 0x05	; 5
    2218:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    221c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2220:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2224:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    2226:	82 e0       	ldi	r24, 0x02	; 2
    2228:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 1024 Prescaler, CTC Mode
    222c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0D;
    2230:	8d e0       	ldi	r24, 0x0D	; 13
    2232:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    2236:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    223a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    223e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    2242:	8f ef       	ldi	r24, 0xFF	; 255
    2244:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    2248:	08 95       	ret

0000224a <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    224a:	85 30       	cpi	r24, 0x05	; 5
    224c:	09 f4       	brne	.+2      	; 0x2250 <_ZN3MCU7Setting8beginPWMEab+0x6>
    224e:	5d c0       	rjmp	.+186    	; 0x230a <_ZN3MCU7Setting8beginPWMEab+0xc0>
    2250:	2c f4       	brge	.+10     	; 0x225c <_ZN3MCU7Setting8beginPWMEab+0x12>
    2252:	83 30       	cpi	r24, 0x03	; 3
    2254:	51 f0       	breq	.+20     	; 0x226a <_ZN3MCU7Setting8beginPWMEab+0x20>
    2256:	84 30       	cpi	r24, 0x04	; 4
    2258:	c1 f0       	breq	.+48     	; 0x228a <_ZN3MCU7Setting8beginPWMEab+0x40>
    225a:	08 95       	ret
    225c:	87 30       	cpi	r24, 0x07	; 7
    225e:	29 f1       	breq	.+74     	; 0x22aa <_ZN3MCU7Setting8beginPWMEab+0x60>
    2260:	0c f4       	brge	.+2      	; 0x2264 <_ZN3MCU7Setting8beginPWMEab+0x1a>
    2262:	6f c0       	rjmp	.+222    	; 0x2342 <_ZN3MCU7Setting8beginPWMEab+0xf8>
    2264:	88 30       	cpi	r24, 0x08	; 8
    2266:	c9 f1       	breq	.+114    	; 0x22da <_ZN3MCU7Setting8beginPWMEab+0x90>
    2268:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    226a:	61 11       	cpse	r22, r1
    226c:	07 c0       	rjmp	.+14     	; 0x227c <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    226e:	84 b5       	in	r24, 0x24	; 36
    2270:	81 64       	ori	r24, 0x41	; 65
    2272:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2274:	8c e0       	ldi	r24, 0x0C	; 12
    2276:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2278:	16 bc       	out	0x26, r1	; 38
    227a:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    227c:	84 b5       	in	r24, 0x24	; 36
    227e:	83 64       	ori	r24, 0x43	; 67
    2280:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    2282:	8c e0       	ldi	r24, 0x0C	; 12
    2284:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2286:	16 bc       	out	0x26, r1	; 38
    2288:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    228a:	61 11       	cpse	r22, r1
    228c:	07 c0       	rjmp	.+14     	; 0x229c <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    228e:	84 b5       	in	r24, 0x24	; 36
    2290:	81 61       	ori	r24, 0x11	; 17
    2292:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    2294:	8c e0       	ldi	r24, 0x0C	; 12
    2296:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    2298:	16 bc       	out	0x26, r1	; 38
    229a:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    229c:	84 b5       	in	r24, 0x24	; 36
    229e:	83 61       	ori	r24, 0x13	; 19
    22a0:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    22a2:	8c e0       	ldi	r24, 0x0C	; 12
    22a4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    22a6:	16 bc       	out	0x26, r1	; 38
    22a8:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    22aa:	61 11       	cpse	r22, r1
    22ac:	0b c0       	rjmp	.+22     	; 0x22c4 <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    22ae:	e0 eb       	ldi	r30, 0xB0	; 176
    22b0:	f0 e0       	ldi	r31, 0x00	; 0
    22b2:	80 81       	ld	r24, Z
    22b4:	81 68       	ori	r24, 0x81	; 129
    22b6:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    22b8:	86 e0       	ldi	r24, 0x06	; 6
    22ba:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    22be:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    22c2:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    22c4:	e0 eb       	ldi	r30, 0xB0	; 176
    22c6:	f0 e0       	ldi	r31, 0x00	; 0
    22c8:	80 81       	ld	r24, Z
    22ca:	83 68       	ori	r24, 0x83	; 131
    22cc:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    22ce:	86 e0       	ldi	r24, 0x06	; 6
    22d0:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    22d4:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    22d8:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    22da:	61 11       	cpse	r22, r1
    22dc:	0b c0       	rjmp	.+22     	; 0x22f4 <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    22de:	e0 eb       	ldi	r30, 0xB0	; 176
    22e0:	f0 e0       	ldi	r31, 0x00	; 0
    22e2:	80 81       	ld	r24, Z
    22e4:	81 62       	ori	r24, 0x21	; 33
    22e6:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    22e8:	86 e0       	ldi	r24, 0x06	; 6
    22ea:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    22ee:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    22f2:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    22f4:	e0 eb       	ldi	r30, 0xB0	; 176
    22f6:	f0 e0       	ldi	r31, 0x00	; 0
    22f8:	80 81       	ld	r24, Z
    22fa:	83 62       	ori	r24, 0x23	; 35
    22fc:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    22fe:	86 e0       	ldi	r24, 0x06	; 6
    2300:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    2304:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    2308:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    230a:	61 11       	cpse	r22, r1
    230c:	0d c0       	rjmp	.+26     	; 0x2328 <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    230e:	e0 e8       	ldi	r30, 0x80	; 128
    2310:	f0 e0       	ldi	r31, 0x00	; 0
    2312:	80 81       	ld	r24, Z
    2314:	83 68       	ori	r24, 0x83	; 131
    2316:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2318:	84 e0       	ldi	r24, 0x04	; 4
    231a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    231e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2322:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2326:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    2328:	e0 e8       	ldi	r30, 0x80	; 128
    232a:	f0 e0       	ldi	r31, 0x00	; 0
    232c:	80 81       	ld	r24, Z
    232e:	83 68       	ori	r24, 0x83	; 131
    2330:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    2332:	8c e0       	ldi	r24, 0x0C	; 12
    2334:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2338:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    233c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2340:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    2342:	61 11       	cpse	r22, r1
    2344:	0d c0       	rjmp	.+26     	; 0x2360 <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2346:	e0 e8       	ldi	r30, 0x80	; 128
    2348:	f0 e0       	ldi	r31, 0x00	; 0
    234a:	80 81       	ld	r24, Z
    234c:	83 62       	ori	r24, 0x23	; 35
    234e:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    2350:	84 e0       	ldi	r24, 0x04	; 4
    2352:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2356:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    235a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    235e:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    2360:	e0 e8       	ldi	r30, 0x80	; 128
    2362:	f0 e0       	ldi	r31, 0x00	; 0
    2364:	80 81       	ld	r24, Z
    2366:	83 62       	ori	r24, 0x23	; 35
    2368:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    236a:	8c e0       	ldi	r24, 0x0C	; 12
    236c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    2370:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    2374:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    2378:	08 95       	ret

0000237a <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    237a:	80 e5       	ldi	r24, 0x50	; 80
    237c:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    237e:	81 e0       	ldi	r24, 0x01	; 1
    2380:	8d bd       	out	0x2d, r24	; 45
    2382:	08 95       	ret

00002384 <_ZN2SW6updateEv>:
/*----------------------------------------//
            Initialize Switch
//----------------------------------------*/

void SW::update(void)
{
    2384:	fc 01       	movw	r30, r24
  newData = PINC | 0xC0;
    2386:	86 b1       	in	r24, 0x06	; 6
    2388:	80 6c       	ori	r24, 0xC0	; 192
    238a:	80 83       	st	Z, r24
  result = oldData & ~newData;
    238c:	91 81       	ldd	r25, Z+1	; 0x01
    238e:	80 81       	ld	r24, Z
    2390:	80 95       	com	r24
    2392:	89 23       	and	r24, r25
    2394:	82 83       	std	Z+2, r24	; 0x02
	oldData = newData;
    2396:	80 81       	ld	r24, Z
    2398:	81 83       	std	Z+1, r24	; 0x01
    239a:	08 95       	ret

0000239c <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    239c:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    239e:	0d b4       	in	r0, 0x2d	; 45
    23a0:	07 fe       	sbrs	r0, 7
    23a2:	fd cf       	rjmp	.-6      	; 0x239e <_ZN3SPI7sendBitEh+0x2>
}
    23a4:	08 95       	ret

000023a6 <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    23a6:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    23a8:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    23aa:	0e 94 ce 11 	call	0x239c	; 0x239c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    23ae:	28 9a       	sbi	0x05, 0	; 5
    23b0:	08 95       	ret

000023b2 <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    23b2:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    23b4:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    23b6:	0e 94 ce 11 	call	0x239c	; 0x239c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    23ba:	28 9a       	sbi	0x05, 0	; 5
    23bc:	08 95       	ret

000023be <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    23be:	1f 93       	push	r17
    23c0:	cf 93       	push	r28
    23c2:	df 93       	push	r29
    23c4:	ec 01       	movw	r28, r24
    23c6:	16 2f       	mov	r17, r22
    23c8:	67 2f       	mov	r22, r23
  RS_HIGH;
    23ca:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    23cc:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    23ce:	0e 94 ce 11 	call	0x239c	; 0x239c <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    23d2:	61 2f       	mov	r22, r17
    23d4:	ce 01       	movw	r24, r28
    23d6:	0e 94 ce 11 	call	0x239c	; 0x239c <_ZN3SPI7sendBitEh>

  CS_HIGH;
    23da:	28 9a       	sbi	0x05, 0	; 5
}
    23dc:	df 91       	pop	r29
    23de:	cf 91       	pop	r28
    23e0:	1f 91       	pop	r17
    23e2:	08 95       	ret

000023e4 <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    23e4:	cf 93       	push	r28
    23e6:	df 93       	push	r29
    23e8:	ec 01       	movw	r28, r24
  CS_HIGH;
    23ea:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    23ec:	29 98       	cbi	0x05, 1	; 5
    23ee:	2f ef       	ldi	r18, 0xFF	; 255
    23f0:	89 ef       	ldi	r24, 0xF9	; 249
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	21 50       	subi	r18, 0x01	; 1
    23f6:	80 40       	sbci	r24, 0x00	; 0
    23f8:	90 40       	sbci	r25, 0x00	; 0
    23fa:	e1 f7       	brne	.-8      	; 0x23f4 <_ZN3TFT5beginEv+0x10>
    23fc:	00 c0       	rjmp	.+0      	; 0x23fe <_ZN3TFT5beginEv+0x1a>
    23fe:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    2400:	29 9a       	sbi	0x05, 1	; 5
    2402:	2f ef       	ldi	r18, 0xFF	; 255
    2404:	89 e6       	ldi	r24, 0x69	; 105
    2406:	98 e1       	ldi	r25, 0x18	; 24
    2408:	21 50       	subi	r18, 0x01	; 1
    240a:	80 40       	sbci	r24, 0x00	; 0
    240c:	90 40       	sbci	r25, 0x00	; 0
    240e:	e1 f7       	brne	.-8      	; 0x2408 <_ZN3TFT5beginEv+0x24>
    2410:	00 c0       	rjmp	.+0      	; 0x2412 <_ZN3TFT5beginEv+0x2e>
    2412:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    2414:	61 e0       	ldi	r22, 0x01	; 1
    2416:	ce 01       	movw	r24, r28
    2418:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
    241c:	2f ef       	ldi	r18, 0xFF	; 255
    241e:	89 ef       	ldi	r24, 0xF9	; 249
    2420:	90 e0       	ldi	r25, 0x00	; 0
    2422:	21 50       	subi	r18, 0x01	; 1
    2424:	80 40       	sbci	r24, 0x00	; 0
    2426:	90 40       	sbci	r25, 0x00	; 0
    2428:	e1 f7       	brne	.-8      	; 0x2422 <_ZN3TFT5beginEv+0x3e>
    242a:	00 c0       	rjmp	.+0      	; 0x242c <_ZN3TFT5beginEv+0x48>
    242c:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    242e:	60 ec       	ldi	r22, 0xC0	; 192
    2430:	ce 01       	movw	r24, r28
    2432:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    2436:	6b e2       	ldi	r22, 0x2B	; 43
    2438:	ce 01       	movw	r24, r28
    243a:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    243e:	66 e3       	ldi	r22, 0x36	; 54
    2440:	ce 01       	movw	r24, r28
    2442:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    2446:	68 e4       	ldi	r22, 0x48	; 72
    2448:	ce 01       	movw	r24, r28
    244a:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    244e:	6a e3       	ldi	r22, 0x3A	; 58
    2450:	ce 01       	movw	r24, r28
    2452:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    2456:	65 e5       	ldi	r22, 0x55	; 85
    2458:	ce 01       	movw	r24, r28
    245a:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    245e:	60 e2       	ldi	r22, 0x20	; 32
    2460:	ce 01       	movw	r24, r28
    2462:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    2466:	61 e1       	ldi	r22, 0x11	; 17
    2468:	ce 01       	movw	r24, r28
    246a:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
    246e:	2f ef       	ldi	r18, 0xFF	; 255
    2470:	8d ee       	ldi	r24, 0xED	; 237
    2472:	92 e0       	ldi	r25, 0x02	; 2
    2474:	21 50       	subi	r18, 0x01	; 1
    2476:	80 40       	sbci	r24, 0x00	; 0
    2478:	90 40       	sbci	r25, 0x00	; 0
    247a:	e1 f7       	brne	.-8      	; 0x2474 <_ZN3TFT5beginEv+0x90>
    247c:	00 c0       	rjmp	.+0      	; 0x247e <_ZN3TFT5beginEv+0x9a>
    247e:	00 00       	nop
  _delay_ms(60);

  exportCommand(0x29);  // Display ON (29h)
    2480:	69 e2       	ldi	r22, 0x29	; 41
    2482:	ce 01       	movw	r24, r28
    2484:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
}
    2488:	df 91       	pop	r29
    248a:	cf 91       	pop	r28
    248c:	08 95       	ret

0000248e <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    248e:	1f 93       	push	r17
    2490:	cf 93       	push	r28
    2492:	df 93       	push	r29
    2494:	ec 01       	movw	r28, r24
    2496:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    2498:	66 e3       	ldi	r22, 0x36	; 54
    249a:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>

  switch (rotation)
    249e:	11 30       	cpi	r17, 0x01	; 1
    24a0:	89 f0       	breq	.+34     	; 0x24c4 <_ZN3TFT11setRotationEa+0x36>
    24a2:	12 30       	cpi	r17, 0x02	; 2
    24a4:	a1 f0       	breq	.+40     	; 0x24ce <_ZN3TFT11setRotationEa+0x40>
    24a6:	11 11       	cpse	r17, r1
    24a8:	16 c0       	rjmp	.+44     	; 0x24d6 <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    24aa:	68 e2       	ldi	r22, 0x28	; 40
    24ac:	ce 01       	movw	r24, r28
    24ae:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>
    temp = m_Width;
    24b2:	88 81       	ld	r24, Y
    24b4:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    24b6:	2a 81       	ldd	r18, Y+2	; 0x02
    24b8:	3b 81       	ldd	r19, Y+3	; 0x03
    24ba:	39 83       	std	Y+1, r19	; 0x01
    24bc:	28 83       	st	Y, r18
    m_Height = temp;
    24be:	9b 83       	std	Y+3, r25	; 0x03
    24c0:	8a 83       	std	Y+2, r24	; 0x02
    break;
    24c2:	09 c0       	rjmp	.+18     	; 0x24d6 <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    24c4:	68 e4       	ldi	r22, 0x48	; 72
    24c6:	ce 01       	movw	r24, r28
    24c8:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>
    break;
    24cc:	04 c0       	rjmp	.+8      	; 0x24d6 <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    24ce:	68 e8       	ldi	r22, 0x88	; 136
    24d0:	ce 01       	movw	r24, r28
    24d2:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    24d6:	df 91       	pop	r29
    24d8:	cf 91       	pop	r28
    24da:	1f 91       	pop	r17
    24dc:	08 95       	ret

000024de <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    24de:	af 92       	push	r10
    24e0:	bf 92       	push	r11
    24e2:	cf 92       	push	r12
    24e4:	df 92       	push	r13
    24e6:	ef 92       	push	r14
    24e8:	ff 92       	push	r15
    24ea:	0f 93       	push	r16
    24ec:	1f 93       	push	r17
    24ee:	cf 93       	push	r28
    24f0:	df 93       	push	r29
    24f2:	ec 01       	movw	r28, r24
    24f4:	5b 01       	movw	r10, r22
    24f6:	7a 01       	movw	r14, r20
    24f8:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    24fa:	6a e2       	ldi	r22, 0x2A	; 42
    24fc:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    2500:	b5 01       	movw	r22, r10
    2502:	ce 01       	movw	r24, r28
    2504:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    2508:	b6 01       	movw	r22, r12
    250a:	ce 01       	movw	r24, r28
    250c:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    2510:	6b e2       	ldi	r22, 0x2B	; 43
    2512:	ce 01       	movw	r24, r28
    2514:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    2518:	b7 01       	movw	r22, r14
    251a:	ce 01       	movw	r24, r28
    251c:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    2520:	b8 01       	movw	r22, r16
    2522:	ce 01       	movw	r24, r28
    2524:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    2528:	6c e2       	ldi	r22, 0x2C	; 44
    252a:	ce 01       	movw	r24, r28
    252c:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN3SPI13exportCommandEh>
}
    2530:	df 91       	pop	r29
    2532:	cf 91       	pop	r28
    2534:	1f 91       	pop	r17
    2536:	0f 91       	pop	r16
    2538:	ff 90       	pop	r15
    253a:	ef 90       	pop	r14
    253c:	df 90       	pop	r13
    253e:	cf 90       	pop	r12
    2540:	bf 90       	pop	r11
    2542:	af 90       	pop	r10
    2544:	08 95       	ret

00002546 <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
                Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    2546:	cf 92       	push	r12
    2548:	df 92       	push	r13
    254a:	ef 92       	push	r14
    254c:	ff 92       	push	r15
    254e:	0f 93       	push	r16
    2550:	1f 93       	push	r17
    2552:	cf 93       	push	r28
    2554:	df 93       	push	r29
    2556:	7c 01       	movw	r14, r24
    2558:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    255a:	fc 01       	movw	r30, r24
    255c:	02 81       	ldd	r16, Z+2	; 0x02
    255e:	13 81       	ldd	r17, Z+3	; 0x03
    2560:	01 50       	subi	r16, 0x01	; 1
    2562:	11 09       	sbc	r17, r1
    2564:	20 81       	ld	r18, Z
    2566:	31 81       	ldd	r19, Z+1	; 0x01
    2568:	21 50       	subi	r18, 0x01	; 1
    256a:	31 09       	sbc	r19, r1
    256c:	40 e0       	ldi	r20, 0x00	; 0
    256e:	50 e0       	ldi	r21, 0x00	; 0
    2570:	60 e0       	ldi	r22, 0x00	; 0
    2572:	70 e0       	ldi	r23, 0x00	; 0
    2574:	0e 94 6f 12 	call	0x24de	; 0x24de <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    2578:	f7 01       	movw	r30, r14
    257a:	82 81       	ldd	r24, Z+2	; 0x02
    257c:	93 81       	ldd	r25, Z+3	; 0x03
    257e:	18 16       	cp	r1, r24
    2580:	19 06       	cpc	r1, r25
    2582:	ec f4       	brge	.+58     	; 0x25be <_ZN3TFT10fillScreenEj+0x78>
    2584:	00 e0       	ldi	r16, 0x00	; 0
    2586:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    2588:	f7 01       	movw	r30, r14
    258a:	80 81       	ld	r24, Z
    258c:	91 81       	ldd	r25, Z+1	; 0x01
    258e:	18 16       	cp	r1, r24
    2590:	19 06       	cpc	r1, r25
    2592:	6c f4       	brge	.+26     	; 0x25ae <_ZN3TFT10fillScreenEj+0x68>
    2594:	c0 e0       	ldi	r28, 0x00	; 0
    2596:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    2598:	b6 01       	movw	r22, r12
    259a:	c7 01       	movw	r24, r14
    259c:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    25a0:	21 96       	adiw	r28, 0x01	; 1
    25a2:	f7 01       	movw	r30, r14
    25a4:	80 81       	ld	r24, Z
    25a6:	91 81       	ldd	r25, Z+1	; 0x01
    25a8:	c8 17       	cp	r28, r24
    25aa:	d9 07       	cpc	r29, r25
    25ac:	ac f3       	brlt	.-22     	; 0x2598 <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    25ae:	0f 5f       	subi	r16, 0xFF	; 255
    25b0:	1f 4f       	sbci	r17, 0xFF	; 255
    25b2:	f7 01       	movw	r30, r14
    25b4:	82 81       	ldd	r24, Z+2	; 0x02
    25b6:	93 81       	ldd	r25, Z+3	; 0x03
    25b8:	08 17       	cp	r16, r24
    25ba:	19 07       	cpc	r17, r25
    25bc:	2c f3       	brlt	.-54     	; 0x2588 <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    25be:	df 91       	pop	r29
    25c0:	cf 91       	pop	r28
    25c2:	1f 91       	pop	r17
    25c4:	0f 91       	pop	r16
    25c6:	ff 90       	pop	r15
    25c8:	ef 90       	pop	r14
    25ca:	df 90       	pop	r13
    25cc:	cf 90       	pop	r12
    25ce:	08 95       	ret

000025d0 <_ZN3TFT8fillRectEiiiij>:
/*----------------------------------------//
                Fill Rect
//----------------------------------------*/

void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{
    25d0:	8f 92       	push	r8
    25d2:	9f 92       	push	r9
    25d4:	af 92       	push	r10
    25d6:	bf 92       	push	r11
    25d8:	cf 92       	push	r12
    25da:	df 92       	push	r13
    25dc:	ef 92       	push	r14
    25de:	ff 92       	push	r15
    25e0:	0f 93       	push	r16
    25e2:	1f 93       	push	r17
    25e4:	cf 93       	push	r28
    25e6:	df 93       	push	r29
    25e8:	6c 01       	movw	r12, r24
    25ea:	49 01       	movw	r8, r18
    25ec:	58 01       	movw	r10, r16

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    25ee:	8a 01       	movw	r16, r20
    25f0:	0a 0d       	add	r16, r10
    25f2:	1b 1d       	adc	r17, r11
    25f4:	01 50       	subi	r16, 0x01	; 1
    25f6:	11 09       	sbc	r17, r1
    25f8:	9b 01       	movw	r18, r22
    25fa:	28 0d       	add	r18, r8
    25fc:	39 1d       	adc	r19, r9
    25fe:	21 50       	subi	r18, 0x01	; 1
    2600:	31 09       	sbc	r19, r1
    2602:	0e 94 6f 12 	call	0x24de	; 0x24de <_ZN3TFT10setAddressEiiii>

  for (int yPos=height; yPos>0; yPos--)
    2606:	1a 14       	cp	r1, r10
    2608:	1b 04       	cpc	r1, r11
    260a:	74 f4       	brge	.+28     	; 0x2628 <_ZN3TFT8fillRectEiiiij+0x58>
  {
    for (int xPos=width; xPos>0; xPos--)
    260c:	18 14       	cp	r1, r8
    260e:	19 04       	cpc	r1, r9
    2610:	3c f4       	brge	.+14     	; 0x2620 <_ZN3TFT8fillRectEiiiij+0x50>
    2612:	e4 01       	movw	r28, r8
    {
      exportLongData(colorValue);
    2614:	b7 01       	movw	r22, r14
    2616:	c6 01       	movw	r24, r12
    2618:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
  {
    for (int xPos=width; xPos>0; xPos--)
    261c:	21 97       	sbiw	r28, 0x01	; 1
    261e:	d1 f7       	brne	.-12     	; 0x2614 <_ZN3TFT8fillRectEiiiij+0x44>
void TFT::fillRect(int16_t xPos, int16_t yPos, int16_t width, int16_t height, uint16_t colorValue)
{

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int yPos=height; yPos>0; yPos--)
    2620:	81 e0       	ldi	r24, 0x01	; 1
    2622:	a8 1a       	sub	r10, r24
    2624:	b1 08       	sbc	r11, r1
    2626:	91 f7       	brne	.-28     	; 0x260c <_ZN3TFT8fillRectEiiiij+0x3c>
    {
      exportLongData(colorValue);
    }
  }

}
    2628:	df 91       	pop	r29
    262a:	cf 91       	pop	r28
    262c:	1f 91       	pop	r17
    262e:	0f 91       	pop	r16
    2630:	ff 90       	pop	r15
    2632:	ef 90       	pop	r14
    2634:	df 90       	pop	r13
    2636:	cf 90       	pop	r12
    2638:	bf 90       	pop	r11
    263a:	af 90       	pop	r10
    263c:	9f 90       	pop	r9
    263e:	8f 90       	pop	r8
    2640:	08 95       	ret

00002642 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>:
                Draw Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap,
  uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    2642:	2f 92       	push	r2
    2644:	3f 92       	push	r3
    2646:	4f 92       	push	r4
    2648:	5f 92       	push	r5
    264a:	6f 92       	push	r6
    264c:	7f 92       	push	r7
    264e:	8f 92       	push	r8
    2650:	9f 92       	push	r9
    2652:	af 92       	push	r10
    2654:	bf 92       	push	r11
    2656:	cf 92       	push	r12
    2658:	df 92       	push	r13
    265a:	ef 92       	push	r14
    265c:	ff 92       	push	r15
    265e:	0f 93       	push	r16
    2660:	1f 93       	push	r17
    2662:	cf 93       	push	r28
    2664:	df 93       	push	r29
    2666:	cd b7       	in	r28, 0x3d	; 61
    2668:	de b7       	in	r29, 0x3e	; 62
    266a:	60 97       	sbiw	r28, 0x10	; 16
    266c:	0f b6       	in	r0, 0x3f	; 63
    266e:	f8 94       	cli
    2670:	de bf       	out	0x3e, r29	; 62
    2672:	0f be       	out	0x3f, r0	; 63
    2674:	cd bf       	out	0x3d, r28	; 61
    2676:	98 8b       	std	Y+16, r25	; 0x10
    2678:	8f 87       	std	Y+15, r24	; 0x0f
    267a:	29 01       	movw	r4, r18
    267c:	38 01       	movw	r6, r16
    267e:	da 82       	std	Y+2, r13	; 0x02
    2680:	c9 82       	std	Y+1, r12	; 0x01
    2682:	ba 86       	std	Y+10, r11	; 0x0a
    2684:	a9 86       	std	Y+9, r10	; 0x09
    2686:	9c 86       	std	Y+12, r9	; 0x0c
    2688:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    268a:	8a 01       	movw	r16, r20
    268c:	06 0d       	add	r16, r6
    268e:	17 1d       	adc	r17, r7
    2690:	01 50       	subi	r16, 0x01	; 1
    2692:	11 09       	sbc	r17, r1
    2694:	9b 01       	movw	r18, r22
    2696:	24 0d       	add	r18, r4
    2698:	35 1d       	adc	r19, r5
    269a:	21 50       	subi	r18, 0x01	; 1
    269c:	31 09       	sbc	r19, r1
    269e:	0e 94 6f 12 	call	0x24de	; 0x24de <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    26a2:	c3 01       	movw	r24, r6
    26a4:	99 23       	and	r25, r25
    26a6:	0c f4       	brge	.+2      	; 0x26aa <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x68>
    26a8:	01 96       	adiw	r24, 0x01	; 1
    26aa:	9c 01       	movw	r18, r24
    26ac:	35 95       	asr	r19
    26ae:	27 95       	ror	r18
    26b0:	3e 87       	std	Y+14, r19	; 0x0e
    26b2:	2d 87       	std	Y+13, r18	; 0x0d
    26b4:	12 16       	cp	r1, r18
    26b6:	13 06       	cpc	r1, r19
    26b8:	0c f0       	brlt	.+2      	; 0x26bc <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x7a>
    26ba:	7c c0       	rjmp	.+248    	; 0x27b4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    26bc:	c2 01       	movw	r24, r4
    26be:	99 23       	and	r25, r25
    26c0:	0c f4       	brge	.+2      	; 0x26c4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x82>
    26c2:	07 96       	adiw	r24, 0x07	; 7
    26c4:	fc 01       	movw	r30, r24
    26c6:	f5 95       	asr	r31
    26c8:	e7 95       	ror	r30
    26ca:	f5 95       	asr	r31
    26cc:	e7 95       	ror	r30
    26ce:	f5 95       	asr	r31
    26d0:	e7 95       	ror	r30
    26d2:	fe 83       	std	Y+6, r31	; 0x06
    26d4:	ed 83       	std	Y+5, r30	; 0x05
    26d6:	f8 87       	std	Y+8, r31	; 0x08
    26d8:	ef 83       	std	Y+7, r30	; 0x07
    26da:	6e 2c       	mov	r6, r14
    26dc:	7f 2c       	mov	r7, r15
    26de:	21 2c       	mov	r2, r1
    26e0:	31 2c       	mov	r3, r1
    26e2:	68 94       	set
    26e4:	aa 24       	eor	r10, r10
    26e6:	a1 f8       	bld	r10, 1
    26e8:	b1 2c       	mov	r11, r1
    26ea:	8f 80       	ldd	r8, Y+7	; 0x07
    26ec:	98 84       	ldd	r9, Y+8	; 0x08
    26ee:	86 0c       	add	r8, r6
    26f0:	97 1c       	adc	r9, r7
    26f2:	7c 82       	std	Y+4, r7	; 0x04
    26f4:	6b 82       	std	Y+3, r6	; 0x03
    26f6:	4f 84       	ldd	r4, Y+15	; 0x0f
    26f8:	58 88       	ldd	r5, Y+16	; 0x10
    26fa:	2d 81       	ldd	r18, Y+5	; 0x05
    26fc:	3e 81       	ldd	r19, Y+6	; 0x06
    26fe:	12 16       	cp	r1, r18
    2700:	13 06       	cpc	r1, r19
    2702:	0c f0       	brlt	.+2      	; 0x2706 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc4>
    2704:	43 c0       	rjmp	.+134    	; 0x278c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    2706:	eb 80       	ldd	r14, Y+3	; 0x03
    2708:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    270a:	f7 01       	movw	r30, r14
    270c:	c4 90       	lpm	r12, Z
    270e:	68 94       	set
    2710:	66 24       	eor	r6, r6
    2712:	62 f8       	bld	r6, 2
    2714:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    2716:	dc 2c       	mov	r13, r12
    2718:	d6 94       	lsr	r13
    271a:	d6 94       	lsr	r13
    271c:	d6 94       	lsr	r13
    271e:	d6 94       	lsr	r13
    2720:	d6 94       	lsr	r13
    2722:	d6 94       	lsr	r13
    2724:	02 e0       	ldi	r16, 0x02	; 2
    2726:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    2728:	d1 10       	cpse	r13, r1
    272a:	06 c0       	rjmp	.+12     	; 0x2738 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0Bit);
    272c:	69 81       	ldd	r22, Y+1	; 0x01
    272e:	7a 81       	ldd	r23, Y+2	; 0x02
    2730:	c2 01       	movw	r24, r4
    2732:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
    2736:	1a c0       	rjmp	.+52     	; 0x276c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    2738:	f1 e0       	ldi	r31, 0x01	; 1
    273a:	df 12       	cpse	r13, r31
    273c:	06 c0       	rjmp	.+12     	; 0x274a <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1Bit);
    273e:	69 85       	ldd	r22, Y+9	; 0x09
    2740:	7a 85       	ldd	r23, Y+10	; 0x0a
    2742:	c2 01       	movw	r24, r4
    2744:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
    2748:	11 c0       	rjmp	.+34     	; 0x276c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    274a:	22 e0       	ldi	r18, 0x02	; 2
    274c:	d2 12       	cpse	r13, r18
    274e:	06 c0       	rjmp	.+12     	; 0x275c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2Bit);
    2750:	6b 85       	ldd	r22, Y+11	; 0x0b
    2752:	7c 85       	ldd	r23, Y+12	; 0x0c
    2754:	c2 01       	movw	r24, r4
    2756:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
    275a:	08 c0       	rjmp	.+16     	; 0x276c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    275c:	33 e0       	ldi	r19, 0x03	; 3
    275e:	d3 12       	cpse	r13, r19
    2760:	05 c0       	rjmp	.+10     	; 0x276c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3Bit);
    2762:	6d a1       	ldd	r22, Y+37	; 0x25
    2764:	7e a1       	ldd	r23, Y+38	; 0x26
    2766:	c2 01       	movw	r24, r4
    2768:	0e 94 df 11 	call	0x23be	; 0x23be <_ZN3SPI14exportLongDataEj>
    276c:	01 50       	subi	r16, 0x01	; 1
    276e:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    2770:	d9 f6       	brne	.-74     	; 0x2728 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xe6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    2772:	cc 0c       	add	r12, r12
    2774:	cc 0c       	add	r12, r12
    2776:	81 e0       	ldi	r24, 0x01	; 1
    2778:	68 1a       	sub	r6, r24
    277a:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    277c:	61 f6       	brne	.-104    	; 0x2716 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xd4>
    277e:	9f ef       	ldi	r25, 0xFF	; 255
    2780:	e9 1a       	sub	r14, r25
    2782:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    2784:	e8 14       	cp	r14, r8
    2786:	f9 04       	cpc	r15, r9
    2788:	09 f0       	breq	.+2      	; 0x278c <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x14a>
    278a:	bf cf       	rjmp	.-130    	; 0x270a <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc8>
    278c:	e1 e0       	ldi	r30, 0x01	; 1
    278e:	ae 1a       	sub	r10, r30
    2790:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    2792:	09 f0       	breq	.+2      	; 0x2796 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x154>
    2794:	b2 cf       	rjmp	.-156    	; 0x26fa <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xb8>
    2796:	6b 80       	ldd	r6, Y+3	; 0x03
    2798:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    279a:	ff ef       	ldi	r31, 0xFF	; 255
    279c:	2f 1a       	sub	r2, r31
    279e:	3f 0a       	sbc	r3, r31
    27a0:	2f 81       	ldd	r18, Y+7	; 0x07
    27a2:	38 85       	ldd	r19, Y+8	; 0x08
    27a4:	62 0e       	add	r6, r18
    27a6:	73 1e       	adc	r7, r19
    27a8:	8d 85       	ldd	r24, Y+13	; 0x0d
    27aa:	9e 85       	ldd	r25, Y+14	; 0x0e
    27ac:	28 16       	cp	r2, r24
    27ae:	39 06       	cpc	r3, r25
    27b0:	09 f0       	breq	.+2      	; 0x27b4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x172>
    27b2:	97 cf       	rjmp	.-210    	; 0x26e2 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    27b4:	60 96       	adiw	r28, 0x10	; 16
    27b6:	0f b6       	in	r0, 0x3f	; 63
    27b8:	f8 94       	cli
    27ba:	de bf       	out	0x3e, r29	; 62
    27bc:	0f be       	out	0x3f, r0	; 63
    27be:	cd bf       	out	0x3d, r28	; 61
    27c0:	df 91       	pop	r29
    27c2:	cf 91       	pop	r28
    27c4:	1f 91       	pop	r17
    27c6:	0f 91       	pop	r16
    27c8:	ff 90       	pop	r15
    27ca:	ef 90       	pop	r14
    27cc:	df 90       	pop	r13
    27ce:	cf 90       	pop	r12
    27d0:	bf 90       	pop	r11
    27d2:	af 90       	pop	r10
    27d4:	9f 90       	pop	r9
    27d6:	8f 90       	pop	r8
    27d8:	7f 90       	pop	r7
    27da:	6f 90       	pop	r6
    27dc:	5f 90       	pop	r5
    27de:	4f 90       	pop	r4
    27e0:	3f 90       	pop	r3
    27e2:	2f 90       	pop	r2
    27e4:	08 95       	ret

000027e6 <__tablejump2__>:
    27e6:	ee 0f       	add	r30, r30
    27e8:	ff 1f       	adc	r31, r31
    27ea:	05 90       	lpm	r0, Z+
    27ec:	f4 91       	lpm	r31, Z
    27ee:	e0 2d       	mov	r30, r0
    27f0:	09 94       	ijmp

000027f2 <_exit>:
    27f2:	f8 94       	cli

000027f4 <__stop_program>:
    27f4:	ff cf       	rjmp	.-2      	; 0x27f4 <__stop_program>
