
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000019da  00001a6e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800138  00800138  00001aa6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001aa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ad8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001b18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000051d1  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001048  00000000  00000000  00006e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001770  00000000  00000000  00007eb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e8  00000000  00000000  0000962c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c22  00000000  00000000  00009b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002e11  00000000  00000000  0000a736  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000d547  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__ctors_end>
       4:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
       8:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
       c:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      10:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      14:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      18:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      1c:	0c 94 a6 05 	jmp	0xb4c	; 0xb4c <__vector_7>
      20:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      24:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      28:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      2c:	0c 94 90 05 	jmp	0xb20	; 0xb20 <__vector_11>
      30:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      34:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      38:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      3c:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      40:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      44:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      48:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      4c:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      50:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      54:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      58:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      5c:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      60:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>
      64:	0c 94 6d 05 	jmp	0xada	; 0xada <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 30       	cpi	r16, 0x00	; 0
      6a:	00 00       	nop
      6c:	10 00       	.word	0x0010	; ????
	...
      76:	00 00       	nop
      78:	00 78       	andi	r16, 0x80	; 128
      7a:	6c 28       	or	r6, r12
      7c:	3c 66       	ori	r19, 0x6C	; 108
      7e:	20 30       	cpi	r18, 0x00	; 0
      80:	18 30       	cpi	r17, 0x08	; 8
      82:	54 18       	sub	r5, r4
      84:	00 00       	nop
      86:	00 06       	cpc	r0, r16
      88:	00 78       	andi	r16, 0x80	; 128
      8a:	24 7c       	andi	r18, 0xC4	; 196
      8c:	60 0c       	add	r6, r0
      8e:	50 10       	cpse	r5, r0
      90:	30 18       	sub	r3, r0
      92:	38 18       	sub	r3, r8
      94:	00 00       	nop
      96:	00 0c       	add	r0, r0
      98:	00 78       	andi	r16, 0x80	; 128
      9a:	00 28       	or	r0, r0
      9c:	38 18       	sub	r3, r8
      9e:	34 00       	.word	0x0034	; ????
      a0:	30 18       	sub	r3, r0
      a2:	10 7e       	andi	r17, 0xE0	; 224
      a4:	00 7e       	andi	r16, 0xE0	; 224
      a6:	00 18       	sub	r0, r0
      a8:	00 30       	cpi	r16, 0x00	; 0
      aa:	00 7c       	andi	r16, 0xC0	; 192
      ac:	0c 30       	cpi	r16, 0x0C	; 12
      ae:	48 00       	.word	0x0048	; ????
      b0:	30 18       	sub	r3, r0
      b2:	38 18       	sub	r3, r8
      b4:	00 00       	nop
      b6:	00 30       	cpi	r16, 0x00	; 0
      b8:	00 00       	nop
      ba:	00 28       	or	r0, r0
      bc:	78 66       	ori	r23, 0x68	; 104
      be:	34 00       	.word	0x0034	; ????
      c0:	18 30       	cpi	r17, 0x08	; 8
      c2:	54 18       	sub	r5, r4
      c4:	00 00       	nop
      c6:	00 60       	ori	r16, 0x00	; 0
      c8:	00 30       	cpi	r16, 0x00	; 0
      ca:	00 00       	nop
      cc:	10 00       	.word	0x0010	; ????
      ce:	00 00       	nop
      d0:	00 00       	nop
      d2:	00 00       	nop
      d4:	30 00       	.word	0x0030	; ????
      d6:	30 00       	.word	0x0030	; ????
	...
      e4:	10 00       	.word	0x0010	; ????
      e6:	00 00       	nop
      e8:	38 18       	sub	r3, r8
      ea:	fc fc       	.word	0xfcfc	; ????
      ec:	06 fe       	sbrs	r0, 6
      ee:	7c fe       	.word	0xfe7c	; ????
      f0:	7c 7c       	andi	r23, 0xCC	; 204
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	00 7c       	andi	r16, 0xC0	; 192
      f8:	4c 38       	cpi	r20, 0x8C	; 140
      fa:	06 06       	cpc	r0, r22
      fc:	c6 c0       	rjmp	.+396    	; 0x28a <__trampolines_end+0x222>
      fe:	c0 06       	cpc	r12, r16
     100:	c6 c6       	rjmp	.+3468   	; 0xe8e <_ZN4Game5startEv+0x5c>
     102:	00 00       	nop
     104:	18 00       	.word	0x0018	; ????
     106:	30 c6       	rjmp	.+3168   	; 0xd68 <_ZN4Game5titleEv+0x9c>
     108:	c6 18       	sub	r12, r6
     10a:	06 3c       	cpi	r16, 0xC6	; 198
     10c:	c6 fc       	sbrc	r12, 6
     10e:	fc 06       	cpc	r15, r28
     110:	7c c6       	rjmp	.+3320   	; 0xe0a <_ZN4Game5titleEv+0x13e>
     112:	30 30       	cpi	r19, 0x00	; 0
     114:	30 7c       	andi	r19, 0xC0	; 192
     116:	18 06       	cpc	r1, r24
     118:	c6 18       	sub	r12, r6
     11a:	7c 06       	cpc	r7, r28
     11c:	c6 06       	cpc	r12, r22
     11e:	c6 0c       	add	r12, r6
     120:	c6 c6       	rjmp	.+3468   	; 0xeae <_ZN4Game5startEv+0x7c>
     122:	00 00       	nop
     124:	60 00       	.word	0x0060	; ????
     126:	0c 06       	cpc	r0, r28
     128:	c6 18       	sub	r12, r6
     12a:	c0 06       	cpc	r12, r16
     12c:	c6 06       	cpc	r12, r22
     12e:	c6 18       	sub	r12, r6
     130:	c6 7e       	andi	r28, 0xE6	; 230
     132:	00 00       	nop
     134:	30 7c       	andi	r19, 0xC0	; 192
     136:	18 3c       	cpi	r17, 0xC8	; 200
     138:	64 18       	sub	r6, r4
     13a:	c0 06       	cpc	r12, r16
     13c:	fe 06       	cpc	r15, r30
     13e:	c6 30       	cpi	r28, 0x06	; 6
     140:	c6 06       	cpc	r12, r22
     142:	30 30       	cpi	r19, 0x00	; 0
     144:	18 00       	.word	0x0018	; ????
     146:	30 00       	.word	0x0030	; ????
     148:	38 3c       	cpi	r19, 0xC8	; 200
     14a:	fe fc       	.word	0xfcfe	; ????
     14c:	06 fc       	sbrc	r0, 6
     14e:	7c 30       	cpi	r23, 0x0C	; 12
     150:	7c 7c       	andi	r23, 0xCC	; 204
     152:	00 10       	cpse	r0, r0
     154:	00 00       	nop
     156:	00 30       	cpi	r16, 0x00	; 0
	...
     168:	7c 7c       	andi	r23, 0xCC	; 204
     16a:	fc 7e       	andi	r31, 0xEC	; 236
     16c:	fc fe       	.word	0xfefc	; ????
     16e:	fe 7c       	andi	r31, 0xCE	; 206
     170:	c6 3c       	cpi	r28, 0xC6	; 198
     172:	1e c6       	rjmp	.+3132   	; 0xdb0 <_ZN4Game5titleEv+0xe4>
     174:	c0 c6       	rjmp	.+3456   	; 0xef6 <_ZN4Game5startEv+0xc4>
     176:	c6 7c       	andi	r28, 0xC6	; 198
     178:	c6 c6       	rjmp	.+3468   	; 0xf06 <_ZN4Game5startEv+0xd4>
     17a:	c6 c0       	rjmp	.+396    	; 0x308 <__trampolines_end+0x2a0>
     17c:	c6 c0       	rjmp	.+396    	; 0x30a <__trampolines_end+0x2a2>
     17e:	c0 c6       	rjmp	.+3456   	; 0xf00 <_ZN4Game5startEv+0xce>
     180:	c6 18       	sub	r12, r6
     182:	06 c6       	rjmp	.+3084   	; 0xd90 <_ZN4Game5titleEv+0xc4>
     184:	c0 ee       	ldi	r28, 0xE0	; 224
     186:	e6 c6       	rjmp	.+3532   	; 0xf54 <_ZN4Game5startEv+0x122>
     188:	c6 c6       	rjmp	.+3468   	; 0xf16 <_ZN4Game5startEv+0xe4>
     18a:	c6 c0       	rjmp	.+396    	; 0x318 <__trampolines_end+0x2b0>
     18c:	c6 c0       	rjmp	.+396    	; 0x31a <__trampolines_end+0x2b2>
     18e:	c0 c0       	rjmp	.+384    	; 0x310 <__trampolines_end+0x2a8>
     190:	c6 18       	sub	r12, r6
     192:	06 cc       	rjmp	.-2036   	; 0xfffff9a0 <__eeprom_end+0xff7ef9a0>
     194:	c0 fe       	sbrs	r12, 0
     196:	f6 c6       	rjmp	.+3564   	; 0xf84 <_ZN4Game5startEv+0x152>
     198:	d6 c6       	rjmp	.+3500   	; 0xf46 <_ZN4Game5startEv+0x114>
     19a:	fc c0       	rjmp	.+504    	; 0x394 <_ZL9logoAtmel+0x2c>
     19c:	c6 f8       	bld	r12, 6
     19e:	fc de       	rcall	.-520    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     1a0:	fe 18       	sub	r15, r14
     1a2:	06 f8       	bld	r0, 6
     1a4:	c0 d6       	rcall	.+3456   	; 0xf26 <_ZN4Game5startEv+0xf4>
     1a6:	de c6       	rjmp	.+3516   	; 0xf64 <_ZN4Game5startEv+0x132>
     1a8:	dc fe       	.word	0xfedc	; ????
     1aa:	c6 c0       	rjmp	.+396    	; 0x338 <__trampolines_end+0x2d0>
     1ac:	c6 c0       	rjmp	.+396    	; 0x33a <__trampolines_end+0x2d2>
     1ae:	c0 c6       	rjmp	.+3456   	; 0xf30 <_ZN4Game5startEv+0xfe>
     1b0:	c6 18       	sub	r12, r6
     1b2:	06 cc       	rjmp	.-2036   	; 0xfffff9c0 <__eeprom_end+0xff7ef9c0>
     1b4:	c0 c6       	rjmp	.+3456   	; 0xf36 <_ZN4Game5startEv+0x104>
     1b6:	ce c6       	rjmp	.+3484   	; 0xf54 <_ZN4Game5startEv+0x122>
     1b8:	c0 c6       	rjmp	.+3456   	; 0xf3a <_ZN4Game5startEv+0x108>
     1ba:	c6 c0       	rjmp	.+396    	; 0x348 <__trampolines_end+0x2e0>
     1bc:	c6 c0       	rjmp	.+396    	; 0x34a <__trampolines_end+0x2e2>
     1be:	c0 c6       	rjmp	.+3456   	; 0xf40 <_ZN4Game5startEv+0x10e>
     1c0:	c6 18       	sub	r12, r6
     1c2:	c6 c6       	rjmp	.+3468   	; 0xf50 <_ZN4Game5startEv+0x11e>
     1c4:	c0 c6       	rjmp	.+3456   	; 0xf46 <_ZN4Game5startEv+0x114>
     1c6:	c6 c6       	rjmp	.+3468   	; 0xf54 <_ZN4Game5startEv+0x122>
     1c8:	7c c6       	rjmp	.+3320   	; 0xec2 <_ZN4Game5startEv+0x90>
     1ca:	fc 7e       	andi	r31, 0xEC	; 236
     1cc:	fc fe       	.word	0xfefc	; ????
     1ce:	c0 7e       	andi	r28, 0xE0	; 224
     1d0:	c6 3c       	cpi	r28, 0xC6	; 198
     1d2:	7c c6       	rjmp	.+3320   	; 0xecc <_ZN4Game5startEv+0x9a>
     1d4:	fe c6       	rjmp	.+3580   	; 0xfd2 <_ZN4Game5startEv+0x1a0>
     1d6:	c6 7c       	andi	r28, 0xC6	; 198
	...
     1e8:	fc 7c       	andi	r31, 0xCC	; 204
     1ea:	fc 7e       	andi	r31, 0xEC	; 236
     1ec:	7e c6       	rjmp	.+3324   	; 0xeea <_ZN4Game5startEv+0xb8>
     1ee:	c6 c6       	rjmp	.+3468   	; 0xf7c <_ZN4Game5startEv+0x14a>
     1f0:	c6 66       	ori	r28, 0x66	; 102
     1f2:	fe 00       	.word	0x00fe	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	c6 c6       	rjmp	.+3468   	; 0xf86 <_ZN4Game5startEv+0x154>
     1fa:	c6 c0       	rjmp	.+396    	; 0x388 <_ZL9logoAtmel+0x20>
     1fc:	18 c6       	rjmp	.+3120   	; 0xe2e <_ZN4Game5titleEv+0x162>
     1fe:	c6 c6       	rjmp	.+3468   	; 0xf8c <_ZN4Game5startEv+0x15a>
     200:	c6 66       	ori	r28, 0x66	; 102
     202:	06 38       	cpi	r16, 0x86	; 134
     204:	60 38       	cpi	r22, 0x80	; 128
     206:	10 00       	.word	0x0010	; ????
     208:	c6 c6       	rjmp	.+3468   	; 0xf96 <_ZN4Game5startEv+0x164>
     20a:	c6 c0       	rjmp	.+396    	; 0x398 <_ZL9logoAtmel+0x30>
     20c:	18 c6       	rjmp	.+3120   	; 0xe3e <_ZN4Game5startEv+0xc>
     20e:	c6 c6       	rjmp	.+3468   	; 0xf9c <_ZN4Game5startEv+0x16a>
     210:	6c 66       	ori	r22, 0x6C	; 108
     212:	0c 30       	cpi	r16, 0x0C	; 12
     214:	30 18       	sub	r3, r0
     216:	38 00       	.word	0x0038	; ????
     218:	c6 c6       	rjmp	.+3468   	; 0xfa6 <_ZN4Game5startEv+0x174>
     21a:	c6 7c       	andi	r28, 0xC6	; 198
     21c:	18 c6       	rjmp	.+3120   	; 0xe4e <_ZN4Game5startEv+0x1c>
     21e:	c6 d6       	rcall	.+3468   	; 0xfac <_ZN4Game5startEv+0x17a>
     220:	38 3c       	cpi	r19, 0xC8	; 200
     222:	38 30       	cpi	r19, 0x08	; 8
     224:	18 18       	sub	r1, r8
     226:	6c 00       	.word	0x006c	; ????
     228:	fc de       	rcall	.-520    	; 0x22 <__FUSE_REGION_LENGTH__+0x1f>
     22a:	fc 06       	cpc	r15, r28
     22c:	18 c6       	rjmp	.+3120   	; 0xe5e <_ZN4Game5startEv+0x2c>
     22e:	6c fe       	.word	0xfe6c	; ????
     230:	6c 18       	sub	r6, r12
     232:	60 30       	cpi	r22, 0x00	; 0
     234:	0c 18       	sub	r0, r12
     236:	44 00       	.word	0x0044	; ????
     238:	c0 cc       	rjmp	.-1664   	; 0xfffffbba <__eeprom_end+0xff7efbba>
     23a:	c6 06       	cpc	r12, r22
     23c:	18 c6       	rjmp	.+3120   	; 0xe6e <_ZN4Game5startEv+0x3c>
     23e:	38 ee       	ldi	r19, 0xE8	; 232
     240:	c6 18       	sub	r12, r6
     242:	c0 38       	cpi	r28, 0x80	; 128
     244:	06 38       	cpi	r16, 0x86	; 134
     246:	00 00       	nop
     248:	c0 76       	andi	r28, 0x60	; 96
     24a:	c6 fc       	sbrc	r12, 6
     24c:	18 7c       	andi	r17, 0xC8	; 200
     24e:	10 c6       	rjmp	.+3104   	; 0xe70 <_ZN4Game5startEv+0x3e>
     250:	c6 18       	sub	r12, r6
     252:	fe 00       	.word	0x00fe	; ????
     254:	00 00       	nop
     256:	00 fe       	sbrs	r0, 0
	...
     268:	00 00       	nop
     26a:	c0 00       	.word	0x00c0	; ????
     26c:	06 00       	.word	0x0006	; ????
     26e:	3e 00       	.word	0x003e	; ????
     270:	c0 18       	sub	r12, r0
     272:	0c c0       	rjmp	.+24     	; 0x28c <__trampolines_end+0x224>
     274:	38 00       	.word	0x0038	; ????
     276:	00 00       	nop
     278:	60 7c       	andi	r22, 0xC0	; 192
     27a:	fc 7e       	andi	r31, 0xEC	; 236
     27c:	7e 7c       	andi	r23, 0xCE	; 206
     27e:	60 7e       	andi	r22, 0xE0	; 224
     280:	c0 00       	.word	0x00c0	; ????
     282:	00 c6       	rjmp	.+3072   	; 0xe84 <_ZN4Game5startEv+0x52>
     284:	18 fc       	.word	0xfc18	; ????
     286:	fc 7c       	andi	r31, 0xCC	; 204
     288:	20 06       	cpc	r2, r16
     28a:	c6 c0       	rjmp	.+396    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     28c:	c6 c6       	rjmp	.+3468   	; 0x101a <_ZN4Game5startEv+0x1e8>
     28e:	60 c6       	rjmp	.+3264   	; 0xf50 <_ZN4Game5startEv+0x11e>
     290:	fc 38       	cpi	r31, 0x8C	; 140
     292:	1c cc       	rjmp	.-1992   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     294:	18 d6       	rcall	.+3120   	; 0xec6 <_ZN4Game5startEv+0x94>
     296:	c6 c6       	rjmp	.+3468   	; 0x1024 <_ZN4Game5startEv+0x1f2>
     298:	00 7e       	andi	r16, 0xE0	; 224
     29a:	c6 c0       	rjmp	.+396    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     29c:	c6 c6       	rjmp	.+3468   	; 0x102a <_ZN4Game5startEv+0x1f8>
     29e:	fc c6       	rjmp	.+3576   	; 0x1098 <_ZN4Game5startEv+0x266>
     2a0:	c6 18       	sub	r12, r6
     2a2:	0c f8       	.word	0xf80c	; ????
     2a4:	18 d6       	rcall	.+3120   	; 0xed6 <_ZN4Game5startEv+0xa4>
     2a6:	c6 c6       	rjmp	.+3468   	; 0x1034 <_ZN4Game5startEv+0x202>
     2a8:	00 c6       	rjmp	.+3072   	; 0xeaa <_ZN4Game5startEv+0x78>
     2aa:	c6 c0       	rjmp	.+396    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     2ac:	c6 fc       	sbrc	r12, 6
     2ae:	60 c6       	rjmp	.+3264   	; 0xf70 <_ZN4Game5startEv+0x13e>
     2b0:	c6 18       	sub	r12, r6
     2b2:	0c cc       	rjmp	.-2024   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     2b4:	18 d6       	rcall	.+3120   	; 0xee6 <_ZN4Game5startEv+0xb4>
     2b6:	c6 c6       	rjmp	.+3468   	; 0x1044 <_ZN4Game5startEv+0x212>
     2b8:	00 c6       	rjmp	.+3072   	; 0xeba <_ZN4Game5startEv+0x88>
     2ba:	c6 c0       	rjmp	.+396    	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     2bc:	c6 c0       	rjmp	.+396    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     2be:	60 7e       	andi	r22, 0xE0	; 224
     2c0:	c6 18       	sub	r12, r6
     2c2:	0c c6       	rjmp	.+3096   	; 0xedc <_ZN4Game5startEv+0xaa>
     2c4:	18 d6       	rcall	.+3120   	; 0xef6 <_ZN4Game5startEv+0xc4>
     2c6:	c6 c6       	rjmp	.+3468   	; 0x1054 <_ZN4Game5startEv+0x222>
     2c8:	00 7e       	andi	r16, 0xE0	; 224
     2ca:	fc 7e       	andi	r31, 0xEC	; 236
     2cc:	7e 7c       	andi	r23, 0xCE	; 206
     2ce:	60 06       	cpc	r6, r16
     2d0:	c6 18       	sub	r12, r6
     2d2:	0c c6       	rjmp	.+3096   	; 0xeec <_ZN4Game5startEv+0xba>
     2d4:	18 d6       	rcall	.+3120   	; 0xf06 <_ZN4Game5startEv+0xd4>
     2d6:	c6 7c       	andi	r28, 0xC6	; 198
     2d8:	00 00       	nop
     2da:	00 00       	nop
     2dc:	00 00       	nop
     2de:	00 7c       	andi	r16, 0xC0	; 192
     2e0:	00 00       	nop
     2e2:	78 00       	.word	0x0078	; ????
	...
     2ec:	18 00       	.word	0x0018	; ????
	...
     2f6:	00 00       	nop
     2f8:	fc 7e       	andi	r31, 0xEC	; 236
     2fa:	fc 7c       	andi	r31, 0xCC	; 204
     2fc:	18 c6       	rjmp	.+3120   	; 0xf2e <_ZN4Game5startEv+0xfc>
     2fe:	c6 d6       	rcall	.+3468   	; 0x108c <_ZN4Game5startEv+0x25a>
     300:	c6 c6       	rjmp	.+3468   	; 0x108e <_ZN4Game5startEv+0x25c>
     302:	fe 38       	cpi	r31, 0x8E	; 142
     304:	10 38       	cpi	r17, 0x80	; 128
     306:	00 00       	nop
     308:	c6 c6       	rjmp	.+3468   	; 0x1096 <_ZN4Game5startEv+0x264>
     30a:	c6 c0       	rjmp	.+396    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     30c:	7e c6       	rjmp	.+3324   	; 0x100a <_ZN4Game5startEv+0x1d8>
     30e:	c6 d6       	rcall	.+3468   	; 0x109c <_ZN4Game5startEv+0x26a>
     310:	6c c6       	rjmp	.+3288   	; 0xfea <_ZN4Game5startEv+0x1b8>
     312:	0c 30       	cpi	r16, 0x0C	; 12
     314:	10 18       	sub	r1, r0
     316:	30 00       	.word	0x0030	; ????
     318:	c6 c6       	rjmp	.+3468   	; 0x10a6 <_ZN4Game5startEv+0x274>
     31a:	c0 7c       	andi	r28, 0xC0	; 192
     31c:	18 c6       	rjmp	.+3120   	; 0xf4e <_ZN4Game5startEv+0x11c>
     31e:	c6 d6       	rcall	.+3468   	; 0x10ac <_ZN4Game5startEv+0x27a>
     320:	38 c6       	rjmp	.+3184   	; 0xf92 <_ZN4Game5startEv+0x160>
     322:	38 60       	ori	r19, 0x08	; 8
     324:	10 0c       	add	r1, r0
     326:	5a 00       	.word	0x005a	; ????
     328:	c6 c6       	rjmp	.+3468   	; 0x10b6 <_ZN4Game5startEv+0x284>
     32a:	c0 06       	cpc	r12, r16
     32c:	18 c6       	rjmp	.+3120   	; 0xf5e <_ZN4Game5startEv+0x12c>
     32e:	6c d6       	rcall	.+3288   	; 0x1008 <_ZN4Game5startEv+0x1d6>
     330:	6c c6       	rjmp	.+3288   	; 0x100a <_ZN4Game5startEv+0x1d8>
     332:	60 30       	cpi	r22, 0x00	; 0
     334:	10 18       	sub	r1, r0
     336:	0c 00       	.word	0x000c	; ????
     338:	c6 c6       	rjmp	.+3468   	; 0x10c6 <_ZN4Game5startEv+0x294>
     33a:	c0 06       	cpc	r12, r16
     33c:	18 c6       	rjmp	.+3120   	; 0xf6e <_ZN4Game5startEv+0x13c>
     33e:	38 d6       	rcall	.+3184   	; 0xfb0 <_ZN4Game5startEv+0x17e>
     340:	c6 7e       	andi	r28, 0xE6	; 230
     342:	c0 38       	cpi	r28, 0x80	; 128
     344:	10 38       	cpi	r17, 0x80	; 128
     346:	00 00       	nop
     348:	fc 7e       	andi	r31, 0xEC	; 236
     34a:	c0 7c       	andi	r28, 0xC0	; 192
     34c:	18 7e       	andi	r17, 0xE8	; 232
     34e:	10 7e       	andi	r17, 0xE0	; 224
     350:	c6 06       	cpc	r12, r22
     352:	fe 00       	.word	0x00fe	; ????
     354:	00 00       	nop
     356:	00 00       	nop
     358:	c0 06       	cpc	r12, r16
     35a:	00 00       	nop
     35c:	00 00       	nop
     35e:	00 00       	nop
     360:	00 7c       	andi	r16, 0xC0	; 192
     362:	00 00       	nop
     364:	00 00       	nop
	...

00000368 <_ZL9logoAtmel>:
     368:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     378:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     388:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
     398:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
     3a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3b8:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     3c8:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3d8:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
     3e8:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
     3f8:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
     408:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
     418:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     428:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
     438:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     448:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
     458:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
     468:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
     478:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
     488:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     498:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
     4a8:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
     4b8:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
     4c8:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
     4d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
     4e8:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
     4f8:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     508:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
     518:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
     528:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
     538:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
     548:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
     558:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
     568:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
     578:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
     588:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
     598:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
     5a8:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
     5b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5c8:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
     5d8:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
     5e8:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
     5f8:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
     608:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
     618:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
     628:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     638:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
     648:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
     658:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
     668:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
     678:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
     688:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
     698:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
     6a8:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
     6b8:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
     6c8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6d8:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
     6e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6f8:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
     708:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     718:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
     728:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     738:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     748:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
     758:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     768:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
     778:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
     788:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
     798:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
     7a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     7b8:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
     7c8:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
     7d8:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
     7e8:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
     7f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     808:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
     818:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
     828:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
     838:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
     848:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
     858:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
     868:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
     878:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
     888:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
     898:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
     8a8:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
     8b8:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
     8c8:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
     8d8:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
     8e8:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
     8f8:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
     908:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
     918:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
     928:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
     938:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
     948:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
     958:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
     968:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
     978:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
     988:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
     998:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
     9a8:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
     9b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
     9c8:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
     9d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
     9f8:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
     a08:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a18:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
     a28:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a38:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
     a48:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a58:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a68:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
     a78:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000a88 <__ctors_start>:
     a88:	bc 05       	cpc	r27, r12

00000a8a <__ctors_end>:
     a8a:	11 24       	eor	r1, r1
     a8c:	1f be       	out	0x3f, r1	; 63
     a8e:	cf ef       	ldi	r28, 0xFF	; 255
     a90:	d8 e0       	ldi	r29, 0x08	; 8
     a92:	de bf       	out	0x3e, r29	; 62
     a94:	cd bf       	out	0x3d, r28	; 61

00000a96 <__do_copy_data>:
     a96:	11 e0       	ldi	r17, 0x01	; 1
     a98:	a0 e0       	ldi	r26, 0x00	; 0
     a9a:	b1 e0       	ldi	r27, 0x01	; 1
     a9c:	ea ed       	ldi	r30, 0xDA	; 218
     a9e:	f9 e1       	ldi	r31, 0x19	; 25
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <__do_copy_data+0x10>
     aa2:	05 90       	lpm	r0, Z+
     aa4:	0d 92       	st	X+, r0
     aa6:	a8 33       	cpi	r26, 0x38	; 56
     aa8:	b1 07       	cpc	r27, r17
     aaa:	d9 f7       	brne	.-10     	; 0xaa2 <__do_copy_data+0xc>

00000aac <__do_clear_bss>:
     aac:	21 e0       	ldi	r18, 0x01	; 1
     aae:	a8 e3       	ldi	r26, 0x38	; 56
     ab0:	b1 e0       	ldi	r27, 0x01	; 1
     ab2:	01 c0       	rjmp	.+2      	; 0xab6 <.do_clear_bss_start>

00000ab4 <.do_clear_bss_loop>:
     ab4:	1d 92       	st	X+, r1

00000ab6 <.do_clear_bss_start>:
     ab6:	a6 34       	cpi	r26, 0x46	; 70
     ab8:	b2 07       	cpc	r27, r18
     aba:	e1 f7       	brne	.-8      	; 0xab4 <.do_clear_bss_loop>

00000abc <__do_global_ctors>:
     abc:	15 e0       	ldi	r17, 0x05	; 5
     abe:	c5 e4       	ldi	r28, 0x45	; 69
     ac0:	d5 e0       	ldi	r29, 0x05	; 5
     ac2:	04 c0       	rjmp	.+8      	; 0xacc <__do_global_ctors+0x10>
     ac4:	21 97       	sbiw	r28, 0x01	; 1
     ac6:	fe 01       	movw	r30, r28
     ac8:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <__tablejump2__>
     acc:	c4 34       	cpi	r28, 0x44	; 68
     ace:	d1 07       	cpc	r29, r17
     ad0:	c9 f7       	brne	.-14     	; 0xac4 <__do_global_ctors+0x8>
     ad2:	0e 94 6f 05 	call	0xade	; 0xade <main>
     ad6:	0c 94 eb 0c 	jmp	0x19d6	; 0x19d6 <_exit>

00000ada <__bad_interrupt>:
     ada:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000ade <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
     ade:	61 e0       	ldi	r22, 0x01	; 1
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN3MCU7Setting9beginPortEab>
  beginPort(D, OUT);
     ae6:	61 e0       	ldi	r22, 0x01	; 1
     ae8:	82 e0       	ldi	r24, 0x02	; 2
     aea:	0e 94 4d 09 	call	0x129a	; 0x129a <_ZN3MCU7Setting9beginPortEab>
  beginTimer(1, COMP);
     aee:	61 e0       	ldi	r22, 0x01	; 1
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_ZN3MCU7Setting10beginTimerEab>
  beginTimer(2, COMP);
     af6:	61 e0       	ldi	r22, 0x01	; 1
     af8:	82 e0       	ldi	r24, 0x02	; 2
     afa:	0e 94 5d 09 	call	0x12ba	; 0x12ba <_ZN3MCU7Setting10beginTimerEab>
  beginPWM(OC0A, FAST);
     afe:	61 e0       	ldi	r22, 0x01	; 1
     b00:	83 e0       	ldi	r24, 0x03	; 3
     b02:	0e 94 b4 09 	call	0x1368	; 0x1368 <_ZN3MCU7Setting8beginPWMEab>
  beginSPI();
     b06:	0e 94 4c 0a 	call	0x1498	; 0x1498 <_ZN3MCU7Setting8beginSPIEv>


  TCCR0B = 0x00;
     b0a:	15 bc       	out	0x25, r1	; 37

  sei();
     b0c:	78 94       	sei

  game.title();
     b0e:	88 e3       	ldi	r24, 0x38	; 56
     b10:	91 e0       	ldi	r25, 0x01	; 1
     b12:	0e 94 66 06 	call	0xccc	; 0xccc <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
     b16:	88 e3       	ldi	r24, 0x38	; 56
     b18:	91 e0       	ldi	r25, 0x01	; 1
     b1a:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZN4Game5startEv>
     b1e:	fb cf       	rjmp	.-10     	; 0xb16 <main+0x38>

00000b20 <__vector_11>:
---------------  MAIN END  ---------------
//========================================*/


ISR(TIMER1_COMPA_vect)
{
     b20:	1f 92       	push	r1
     b22:	0f 92       	push	r0
     b24:	0f b6       	in	r0, 0x3f	; 63
     b26:	0f 92       	push	r0
     b28:	11 24       	eor	r1, r1
     b2a:	8f 93       	push	r24
  Frame::beatFrame++;
     b2c:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <_ZN5Frame9beatFrameE>
     b30:	8f 5f       	subi	r24, 0xFF	; 255
     b32:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <_ZN5Frame9beatFrameE>
  Frame::secondFrame++;
     b36:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <_ZN5Frame11secondFrameE>
     b3a:	8f 5f       	subi	r24, 0xFF	; 255
     b3c:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <_ZN5Frame11secondFrameE>
}
     b40:	8f 91       	pop	r24
     b42:	0f 90       	pop	r0
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	0f 90       	pop	r0
     b48:	1f 90       	pop	r1
     b4a:	18 95       	reti

00000b4c <__vector_7>:

ISR(TIMER2_COMPA_vect)
{
     b4c:	1f 92       	push	r1
     b4e:	0f 92       	push	r0
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	0f 92       	push	r0
     b54:	11 24       	eor	r1, r1
     b56:	8f 93       	push	r24
  Frame::frameRate++;
     b58:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_ZN5Frame9frameRateE>
     b5c:	8f 5f       	subi	r24, 0xFF	; 255
     b5e:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <_ZN5Frame9frameRateE>
  Frame::tickFrame++;
     b62:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <_ZN5Frame9tickFrameE>
     b66:	8f 5f       	subi	r24, 0xFF	; 255
     b68:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <_ZN5Frame9tickFrameE>
     b6c:	8f 91       	pop	r24
     b6e:	0f 90       	pop	r0
     b70:	0f be       	out	0x3f, r0	; 63
     b72:	0f 90       	pop	r0
     b74:	1f 90       	pop	r1
     b76:	18 95       	reti

00000b78 <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
     b78:	e8 e3       	ldi	r30, 0x38	; 56
     b7a:	f1 e0       	ldi	r31, 0x01	; 1
     b7c:	80 ef       	ldi	r24, 0xF0	; 240
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	91 83       	std	Z+1, r25	; 0x01
     b82:	80 83       	st	Z, r24
     b84:	80 e4       	ldi	r24, 0x40	; 64
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	93 83       	std	Z+3, r25	; 0x03
     b8a:	82 83       	std	Z+2, r24	; 0x02
     b8c:	08 95       	ret

00000b8e <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
     b8e:	8f 92       	push	r8
     b90:	9f 92       	push	r9
     b92:	af 92       	push	r10
     b94:	bf 92       	push	r11
     b96:	cf 92       	push	r12
     b98:	df 92       	push	r13
     b9a:	ef 92       	push	r14
     b9c:	ff 92       	push	r15
     b9e:	0f 93       	push	r16
     ba0:	1f 93       	push	r17
     ba2:	cf 93       	push	r28
     ba4:	df 93       	push	r29
     ba6:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
     ba8:	82 2f       	mov	r24, r18
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
     bae:	9c 01       	movw	r18, r24
     bb0:	12 f4       	brpl	.+4      	; 0xbb6 <_ZN4Font11printLetterEiih+0x28>
     bb2:	21 5f       	subi	r18, 0xF1	; 241
     bb4:	3f 4f       	sbci	r19, 0xFF	; 255
     bb6:	49 01       	movw	r8, r18
     bb8:	95 94       	asr	r9
     bba:	87 94       	ror	r8
     bbc:	95 94       	asr	r9
     bbe:	87 94       	ror	r8
     bc0:	95 94       	asr	r9
     bc2:	87 94       	ror	r8
     bc4:	95 94       	asr	r9
     bc6:	87 94       	ror	r8
     bc8:	96 94       	lsr	r9
     bca:	98 2c       	mov	r9, r8
     bcc:	88 24       	eor	r8, r8
     bce:	97 94       	ror	r9
     bd0:	87 94       	ror	r8
     bd2:	8f 70       	andi	r24, 0x0F	; 15
     bd4:	90 78       	andi	r25, 0x80	; 128
     bd6:	99 23       	and	r25, r25
     bd8:	24 f4       	brge	.+8      	; 0xbe2 <_ZN4Font11printLetterEiih+0x54>
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	80 6f       	ori	r24, 0xF0	; 240
     bde:	9f 6f       	ori	r25, 0xFF	; 255
     be0:	01 96       	adiw	r24, 0x01	; 1
     be2:	88 0e       	add	r8, r24
     be4:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
     be6:	8a 01       	movw	r16, r20
     be8:	01 5f       	subi	r16, 0xF1	; 241
     bea:	1f 4f       	sbci	r17, 0xFF	; 255
     bec:	9b 01       	movw	r18, r22
     bee:	21 5f       	subi	r18, 0xF1	; 241
     bf0:	3f 4f       	sbci	r19, 0xFF	; 255
     bf2:	ce 01       	movw	r24, r28
     bf4:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN3TFT10setAddressEiiii>
     bf8:	54 01       	movw	r10, r8
     bfa:	80 e8       	ldi	r24, 0x80	; 128
     bfc:	88 0e       	add	r8, r24
     bfe:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
     c00:	68 94       	set
     c02:	cc 24       	eor	r12, r12
     c04:	c1 f8       	bld	r12, 1
     c06:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
     c08:	ec 81       	ldd	r30, Y+4	; 0x04
     c0a:	fd 81       	ldd	r31, Y+5	; 0x05
     c0c:	ea 0d       	add	r30, r10
     c0e:	fb 1d       	adc	r31, r11
     c10:	14 91       	lpm	r17, Z
     c12:	68 94       	set
     c14:	ee 24       	eor	r14, r14
     c16:	e3 f8       	bld	r14, 3
     c18:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
     c1a:	11 23       	and	r17, r17
     c1c:	5c f4       	brge	.+22     	; 0xc34 <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
     c1e:	68 85       	ldd	r22, Y+8	; 0x08
     c20:	79 85       	ldd	r23, Y+9	; 0x09
     c22:	ce 01       	movw	r24, r28
     c24:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
     c28:	68 85       	ldd	r22, Y+8	; 0x08
     c2a:	79 85       	ldd	r23, Y+9	; 0x09
     c2c:	ce 01       	movw	r24, r28
     c2e:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
     c32:	0a c0       	rjmp	.+20     	; 0xc48 <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
     c34:	6e 81       	ldd	r22, Y+6	; 0x06
     c36:	7f 81       	ldd	r23, Y+7	; 0x07
     c38:	ce 01       	movw	r24, r28
     c3a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
     c3e:	6e 81       	ldd	r22, Y+6	; 0x06
     c40:	7f 81       	ldd	r23, Y+7	; 0x07
     c42:	ce 01       	movw	r24, r28
     c44:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
     c48:	11 0f       	add	r17, r17
     c4a:	81 e0       	ldi	r24, 0x01	; 1
     c4c:	e8 1a       	sub	r14, r24
     c4e:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
     c50:	21 f7       	brne	.-56     	; 0xc1a <_ZN4Font11printLetterEiih+0x8c>
     c52:	81 e0       	ldi	r24, 0x01	; 1
     c54:	c8 1a       	sub	r12, r24
     c56:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
     c58:	b9 f6       	brne	.-82     	; 0xc08 <_ZN4Font11printLetterEiih+0x7a>
     c5a:	80 e1       	ldi	r24, 0x10	; 16
     c5c:	a8 0e       	add	r10, r24
     c5e:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
     c60:	a8 14       	cp	r10, r8
     c62:	b9 04       	cpc	r11, r9
     c64:	69 f6       	brne	.-102    	; 0xc00 <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
     c66:	df 91       	pop	r29
     c68:	cf 91       	pop	r28
     c6a:	1f 91       	pop	r17
     c6c:	0f 91       	pop	r16
     c6e:	ff 90       	pop	r15
     c70:	ef 90       	pop	r14
     c72:	df 90       	pop	r13
     c74:	cf 90       	pop	r12
     c76:	bf 90       	pop	r11
     c78:	af 90       	pop	r10
     c7a:	9f 90       	pop	r9
     c7c:	8f 90       	pop	r8
     c7e:	08 95       	ret

00000c80 <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
     c80:	cf 92       	push	r12
     c82:	df 92       	push	r13
     c84:	ef 92       	push	r14
     c86:	ff 92       	push	r15
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	7c 01       	movw	r14, r24
     c92:	eb 01       	movw	r28, r22
     c94:	6a 01       	movw	r12, r20
     c96:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
     c98:	20 81       	ld	r18, Z
     c9a:	22 23       	and	r18, r18
     c9c:	71 f0       	breq	.+28     	; 0xcba <_ZN4Font5printEiiPKc+0x3a>
     c9e:	8f 01       	movw	r16, r30
     ca0:	0f 5f       	subi	r16, 0xFF	; 255
     ca2:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
     ca4:	a6 01       	movw	r20, r12
     ca6:	be 01       	movw	r22, r28
     ca8:	c7 01       	movw	r24, r14
     caa:	0e 94 c7 05 	call	0xb8e	; 0xb8e <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
     cae:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
     cb0:	f8 01       	movw	r30, r16
     cb2:	21 91       	ld	r18, Z+
     cb4:	8f 01       	movw	r16, r30
     cb6:	21 11       	cpse	r18, r1
     cb8:	f5 cf       	rjmp	.-22     	; 0xca4 <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	1f 91       	pop	r17
     cc0:	0f 91       	pop	r16
     cc2:	ff 90       	pop	r15
     cc4:	ef 90       	pop	r14
     cc6:	df 90       	pop	r13
     cc8:	cf 90       	pop	r12
     cca:	08 95       	ret

00000ccc <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
     ccc:	7f 92       	push	r7
     cce:	8f 92       	push	r8
     cd0:	9f 92       	push	r9
     cd2:	af 92       	push	r10
     cd4:	bf 92       	push	r11
     cd6:	cf 92       	push	r12
     cd8:	df 92       	push	r13
     cda:	ef 92       	push	r14
     cdc:	ff 92       	push	r15
     cde:	0f 93       	push	r16
     ce0:	1f 93       	push	r17
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	ec 01       	movw	r28, r24
  begin();
     ce8:	0e 94 75 0a 	call	0x14ea	; 0x14ea <_ZN3TFT5beginEv>
  setRotation(0);
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	ce 01       	movw	r24, r28
     cf0:	0e 94 ca 0a 	call	0x1594	; 0x1594 <_ZN3TFT11setRotationEa>

  fillScreen(WHITE);
     cf4:	6f ef       	ldi	r22, 0xFF	; 255
     cf6:	7f ef       	ldi	r23, 0xFF	; 255
     cf8:	ce 01       	movw	r24, r28
     cfa:	0e 94 26 0b 	call	0x164c	; 0x164c <_ZN3TFT10fillScreenEj>
  drawBitmap(8, 70, 152, 48, logoAtmel, BLACK, RED, BLUE, WHITE);
     cfe:	77 24       	eor	r7, r7
     d00:	7a 94       	dec	r7
     d02:	7f 92       	push	r7
     d04:	7f 92       	push	r7
     d06:	0f 2e       	mov	r0, r31
     d08:	ff e1       	ldi	r31, 0x1F	; 31
     d0a:	8f 2e       	mov	r8, r31
     d0c:	91 2c       	mov	r9, r1
     d0e:	f0 2d       	mov	r31, r0
     d10:	0f 2e       	mov	r0, r31
     d12:	a1 2c       	mov	r10, r1
     d14:	f8 ef       	ldi	r31, 0xF8	; 248
     d16:	bf 2e       	mov	r11, r31
     d18:	f0 2d       	mov	r31, r0
     d1a:	c1 2c       	mov	r12, r1
     d1c:	d1 2c       	mov	r13, r1
     d1e:	0f 2e       	mov	r0, r31
     d20:	f8 e6       	ldi	r31, 0x68	; 104
     d22:	ef 2e       	mov	r14, r31
     d24:	f3 e0       	ldi	r31, 0x03	; 3
     d26:	ff 2e       	mov	r15, r31
     d28:	f0 2d       	mov	r31, r0
     d2a:	00 e3       	ldi	r16, 0x30	; 48
     d2c:	10 e0       	ldi	r17, 0x00	; 0
     d2e:	28 e9       	ldi	r18, 0x98	; 152
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	46 e4       	ldi	r20, 0x46	; 70
     d34:	50 e0       	ldi	r21, 0x00	; 0
     d36:	68 e0       	ldi	r22, 0x08	; 8
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	ce 01       	movw	r24, r28
     d3c:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d40:	2f ef       	ldi	r18, 0xFF	; 255
     d42:	89 e6       	ldi	r24, 0x69	; 105
     d44:	98 e1       	ldi	r25, 0x18	; 24
     d46:	21 50       	subi	r18, 0x01	; 1
     d48:	80 40       	sbci	r24, 0x00	; 0
     d4a:	90 40       	sbci	r25, 0x00	; 0
     d4c:	e1 f7       	brne	.-8      	; 0xd46 <_ZN4Game5titleEv+0x7a>
     d4e:	00 c0       	rjmp	.+0      	; 0xd50 <_ZN4Game5titleEv+0x84>
     d50:	00 00       	nop
  _delay_ms(500);

  drawBitmapTwice(8, 70, 304, 96, logoAtmel, BLACK, RED, BLUE, WHITE);
     d52:	7f 92       	push	r7
     d54:	7f 92       	push	r7
     d56:	00 e6       	ldi	r16, 0x60	; 96
     d58:	10 e0       	ldi	r17, 0x00	; 0
     d5a:	20 e3       	ldi	r18, 0x30	; 48
     d5c:	31 e0       	ldi	r19, 0x01	; 1
     d5e:	46 e4       	ldi	r20, 0x46	; 70
     d60:	50 e0       	ldi	r21, 0x00	; 0
     d62:	68 e0       	ldi	r22, 0x08	; 8
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	ce 01       	movw	r24, r28
     d68:	0e 94 13 0c 	call	0x1826	; 0x1826 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj>
     d6c:	2f ef       	ldi	r18, 0xFF	; 255
     d6e:	8b e7       	ldi	r24, 0x7B	; 123
     d70:	92 e9       	ldi	r25, 0x92	; 146
     d72:	21 50       	subi	r18, 0x01	; 1
     d74:	80 40       	sbci	r24, 0x00	; 0
     d76:	90 40       	sbci	r25, 0x00	; 0
     d78:	e1 f7       	brne	.-8      	; 0xd72 <_ZN4Game5titleEv+0xa6>
     d7a:	00 c0       	rjmp	.+0      	; 0xd7c <_ZN4Game5titleEv+0xb0>
     d7c:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	ce 01       	movw	r24, r28
     d84:	0e 94 26 0b 	call	0x164c	; 0x164c <_ZN3TFT10fillScreenEj>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
     d88:	88 e6       	ldi	r24, 0x68	; 104
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	9d 83       	std	Y+5, r25	; 0x05
     d8e:	8c 83       	std	Y+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
     d90:	1f 82       	std	Y+7, r1	; 0x07
     d92:	1e 82       	std	Y+6, r1	; 0x06
     d94:	8f ef       	ldi	r24, 0xFF	; 255
     d96:	9f ef       	ldi	r25, 0xFF	; 255
     d98:	99 87       	std	Y+9, r25	; 0x09
     d9a:	88 87       	std	Y+8, r24	; 0x08
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(30, 70, "Hello, World!");
     d9c:	20 e0       	ldi	r18, 0x00	; 0
     d9e:	31 e0       	ldi	r19, 0x01	; 1
     da0:	46 e4       	ldi	r20, 0x46	; 70
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	6e e1       	ldi	r22, 0x1E	; 30
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	ce 01       	movw	r24, r28
     daa:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN4Font5printEiiPKc>
     dae:	2f ef       	ldi	r18, 0xFF	; 255
     db0:	83 ed       	ldi	r24, 0xD3	; 211
     db2:	90 e3       	ldi	r25, 0x30	; 48
     db4:	21 50       	subi	r18, 0x01	; 1
     db6:	80 40       	sbci	r24, 0x00	; 0
     db8:	90 40       	sbci	r25, 0x00	; 0
     dba:	e1 f7       	brne	.-8      	; 0xdb4 <_ZN4Game5titleEv+0xe8>
     dbc:	00 c0       	rjmp	.+0      	; 0xdbe <_ZN4Game5titleEv+0xf2>
     dbe:	00 00       	nop
     dc0:	1f 82       	std	Y+7, r1	; 0x07
     dc2:	1e 82       	std	Y+6, r1	; 0x06
     dc4:	8f ef       	ldi	r24, 0xFF	; 255
     dc6:	97 e0       	ldi	r25, 0x07	; 7
     dc8:	99 87       	std	Y+9, r25	; 0x09
     dca:	88 87       	std	Y+8, r24	; 0x08
  _delay_ms(1000);

  setColor(BLACK, CYAN);
  print(30, 120, "And Welcome to");
     dcc:	2e e0       	ldi	r18, 0x0E	; 14
     dce:	31 e0       	ldi	r19, 0x01	; 1
     dd0:	48 e7       	ldi	r20, 0x78	; 120
     dd2:	50 e0       	ldi	r21, 0x00	; 0
     dd4:	6e e1       	ldi	r22, 0x1E	; 30
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	ce 01       	movw	r24, r28
     dda:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN4Font5printEiiPKc>
     dde:	1f 82       	std	Y+7, r1	; 0x07
     de0:	1e 82       	std	Y+6, r1	; 0x06
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	98 ef       	ldi	r25, 0xF8	; 248
     de6:	99 87       	std	Y+9, r25	; 0x09
     de8:	88 87       	std	Y+8, r24	; 0x08
  setColor(BLACK, RED);
  print(30, 136, "Atmega Game (^0^)");
     dea:	2d e1       	ldi	r18, 0x1D	; 29
     dec:	31 e0       	ldi	r19, 0x01	; 1
     dee:	48 e8       	ldi	r20, 0x88	; 136
     df0:	50 e0       	ldi	r21, 0x00	; 0
     df2:	6e e1       	ldi	r22, 0x1E	; 30
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	ce 01       	movw	r24, r28
     df8:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN4Font5printEiiPKc>
     dfc:	2f ef       	ldi	r18, 0xFF	; 255
     dfe:	83 e2       	ldi	r24, 0x23	; 35
     e00:	94 ef       	ldi	r25, 0xF4	; 244
     e02:	21 50       	subi	r18, 0x01	; 1
     e04:	80 40       	sbci	r24, 0x00	; 0
     e06:	90 40       	sbci	r25, 0x00	; 0
     e08:	e1 f7       	brne	.-8      	; 0xe02 <_ZN4Game5titleEv+0x136>
     e0a:	00 c0       	rjmp	.+0      	; 0xe0c <_ZN4Game5titleEv+0x140>
     e0c:	00 00       	nop
  _delay_ms(5000);
}
     e0e:	0f 90       	pop	r0
     e10:	0f 90       	pop	r0
     e12:	0f 90       	pop	r0
     e14:	0f 90       	pop	r0
     e16:	df 91       	pop	r29
     e18:	cf 91       	pop	r28
     e1a:	1f 91       	pop	r17
     e1c:	0f 91       	pop	r16
     e1e:	ff 90       	pop	r15
     e20:	ef 90       	pop	r14
     e22:	df 90       	pop	r13
     e24:	cf 90       	pop	r12
     e26:	bf 90       	pop	r11
     e28:	af 90       	pop	r10
     e2a:	9f 90       	pop	r9
     e2c:	8f 90       	pop	r8
     e2e:	7f 90       	pop	r7
     e30:	08 95       	ret

00000e32 <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
     e32:	6c 01       	movw	r12, r24
  fillScreen(BLACK);
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	0e 94 26 0b 	call	0x164c	; 0x164c <_ZN3TFT10fillScreenEj>
     e3c:	f6 01       	movw	r30, r12
     e3e:	17 82       	std	Z+7, r1	; 0x07
     e40:	16 82       	std	Z+6, r1	; 0x06
     e42:	8f ef       	ldi	r24, 0xFF	; 255
     e44:	9f ef       	ldi	r25, 0xFF	; 255
     e46:	91 87       	std	Z+9, r25	; 0x09
     e48:	80 87       	std	Z+8, r24	; 0x08
     e4a:	ff ef       	ldi	r31, 0xFF	; 255
     e4c:	21 ee       	ldi	r18, 0xE1	; 225
     e4e:	84 e0       	ldi	r24, 0x04	; 4
     e50:	f1 50       	subi	r31, 0x01	; 1
     e52:	20 40       	sbci	r18, 0x00	; 0
     e54:	80 40       	sbci	r24, 0x00	; 0
     e56:	e1 f7       	brne	.-8      	; 0xe50 <_ZN4Game5startEv+0x1e>
     e58:	00 c0       	rjmp	.+0      	; 0xe5a <_ZN4Game5startEv+0x28>
     e5a:	00 00       	nop
    //Frame::updateFrame();
    //user.startPlayer();

    print(30, 70, "0x0B, 64");

    OCR0A = 40;
     e5c:	d8 e2       	ldi	r29, 0x28	; 40
    TCCR0B = 0x0B;
     e5e:	cb e0       	ldi	r28, 0x0B	; 11
    TCCR0B = 0x0B;
    _delay_ms(250);
    TCCR0B = 0x00;
    _delay_ms(250);

    OCR0A = 36;
     e60:	0f 2e       	mov	r0, r31
     e62:	f4 e2       	ldi	r31, 0x24	; 36
     e64:	ff 2e       	mov	r15, r31
     e66:	f0 2d       	mov	r31, r0
    TCCR0B = 0x0B;
    _delay_ms(250);
    TCCR0B = 0x00;
    _delay_ms(250);

    OCR0A = 47;
     e68:	1f e2       	ldi	r17, 0x2F	; 47
    TCCR0B = 0x0B;
    _delay_ms(250);
    TCCR0B = 0x00;
    _delay_ms(250);

    OCR0A = 53;
     e6a:	05 e3       	ldi	r16, 0x35	; 53
    TCCR0B = 0x0B;
    _delay_ms(250);
    TCCR0B = 0x00;
    _delay_ms(250);

    OCR0A = 60;
     e6c:	0f 2e       	mov	r0, r31
     e6e:	fc e3       	ldi	r31, 0x3C	; 60
     e70:	bf 2e       	mov	r11, r31
     e72:	f0 2d       	mov	r31, r0
    TCCR0B = 0x0B;
    _delay_ms(250);
    TCCR0B = 0x00;
    _delay_ms(250);
	
	OCR0A = 80;
     e74:	0f 2e       	mov	r0, r31
     e76:	f0 e5       	ldi	r31, 0x50	; 80
     e78:	ef 2e       	mov	r14, r31
     e7a:	f0 2d       	mov	r31, r0
  while (1)
  {
    //Frame::updateFrame();
    //user.startPlayer();

    print(30, 70, "0x0B, 64");
     e7c:	2f e2       	ldi	r18, 0x2F	; 47
     e7e:	31 e0       	ldi	r19, 0x01	; 1
     e80:	46 e4       	ldi	r20, 0x46	; 70
     e82:	50 e0       	ldi	r21, 0x00	; 0
     e84:	6e e1       	ldi	r22, 0x1E	; 30
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	c6 01       	movw	r24, r12
     e8a:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN4Font5printEiiPKc>

    OCR0A = 40;
     e8e:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
     e90:	c5 bd       	out	0x25, r28	; 37
     e92:	9f ef       	ldi	r25, 0xFF	; 255
     e94:	e4 e3       	ldi	r30, 0x34	; 52
     e96:	fc e0       	ldi	r31, 0x0C	; 12
     e98:	91 50       	subi	r25, 0x01	; 1
     e9a:	e0 40       	sbci	r30, 0x00	; 0
     e9c:	f0 40       	sbci	r31, 0x00	; 0
     e9e:	e1 f7       	brne	.-8      	; 0xe98 <_ZN4Game5startEv+0x66>
     ea0:	00 c0       	rjmp	.+0      	; 0xea2 <_ZN4Game5startEv+0x70>
     ea2:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     ea4:	15 bc       	out	0x25, r1	; 37
     ea6:	2f ef       	ldi	r18, 0xFF	; 255
     ea8:	84 e3       	ldi	r24, 0x34	; 52
     eaa:	9c e0       	ldi	r25, 0x0C	; 12
     eac:	21 50       	subi	r18, 0x01	; 1
     eae:	80 40       	sbci	r24, 0x00	; 0
     eb0:	90 40       	sbci	r25, 0x00	; 0
     eb2:	e1 f7       	brne	.-8      	; 0xeac <_ZN4Game5startEv+0x7a>
     eb4:	00 c0       	rjmp	.+0      	; 0xeb6 <_ZN4Game5startEv+0x84>
     eb6:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
     eb8:	c5 bd       	out	0x25, r28	; 37
     eba:	ef ef       	ldi	r30, 0xFF	; 255
     ebc:	f4 e3       	ldi	r31, 0x34	; 52
     ebe:	2c e0       	ldi	r18, 0x0C	; 12
     ec0:	e1 50       	subi	r30, 0x01	; 1
     ec2:	f0 40       	sbci	r31, 0x00	; 0
     ec4:	20 40       	sbci	r18, 0x00	; 0
     ec6:	e1 f7       	brne	.-8      	; 0xec0 <_ZN4Game5startEv+0x8e>
     ec8:	00 c0       	rjmp	.+0      	; 0xeca <_ZN4Game5startEv+0x98>
     eca:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     ecc:	15 bc       	out	0x25, r1	; 37
     ece:	8f ef       	ldi	r24, 0xFF	; 255
     ed0:	94 e3       	ldi	r25, 0x34	; 52
     ed2:	ec e0       	ldi	r30, 0x0C	; 12
     ed4:	81 50       	subi	r24, 0x01	; 1
     ed6:	90 40       	sbci	r25, 0x00	; 0
     ed8:	e0 40       	sbci	r30, 0x00	; 0
     eda:	e1 f7       	brne	.-8      	; 0xed4 <_ZN4Game5startEv+0xa2>
     edc:	00 c0       	rjmp	.+0      	; 0xede <_ZN4Game5startEv+0xac>
     ede:	00 00       	nop
    _delay_ms(250);

    OCR0A = 36;
     ee0:	f7 bc       	out	0x27, r15	; 39
    TCCR0B = 0x0B;
     ee2:	c5 bd       	out	0x25, r28	; 37
     ee4:	ff ef       	ldi	r31, 0xFF	; 255
     ee6:	24 e3       	ldi	r18, 0x34	; 52
     ee8:	8c e0       	ldi	r24, 0x0C	; 12
     eea:	f1 50       	subi	r31, 0x01	; 1
     eec:	20 40       	sbci	r18, 0x00	; 0
     eee:	80 40       	sbci	r24, 0x00	; 0
     ef0:	e1 f7       	brne	.-8      	; 0xeea <_ZN4Game5startEv+0xb8>
     ef2:	00 c0       	rjmp	.+0      	; 0xef4 <_ZN4Game5startEv+0xc2>
     ef4:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     ef6:	15 bc       	out	0x25, r1	; 37
     ef8:	9f ef       	ldi	r25, 0xFF	; 255
     efa:	e4 e3       	ldi	r30, 0x34	; 52
     efc:	fc e0       	ldi	r31, 0x0C	; 12
     efe:	91 50       	subi	r25, 0x01	; 1
     f00:	e0 40       	sbci	r30, 0x00	; 0
     f02:	f0 40       	sbci	r31, 0x00	; 0
     f04:	e1 f7       	brne	.-8      	; 0xefe <_ZN4Game5startEv+0xcc>
     f06:	00 c0       	rjmp	.+0      	; 0xf08 <_ZN4Game5startEv+0xd6>
     f08:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
     f0a:	c5 bd       	out	0x25, r28	; 37
     f0c:	2f ef       	ldi	r18, 0xFF	; 255
     f0e:	84 e3       	ldi	r24, 0x34	; 52
     f10:	9c e0       	ldi	r25, 0x0C	; 12
     f12:	21 50       	subi	r18, 0x01	; 1
     f14:	80 40       	sbci	r24, 0x00	; 0
     f16:	90 40       	sbci	r25, 0x00	; 0
     f18:	e1 f7       	brne	.-8      	; 0xf12 <_ZN4Game5startEv+0xe0>
     f1a:	00 c0       	rjmp	.+0      	; 0xf1c <_ZN4Game5startEv+0xea>
     f1c:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     f1e:	15 bc       	out	0x25, r1	; 37
     f20:	ef ef       	ldi	r30, 0xFF	; 255
     f22:	f4 e3       	ldi	r31, 0x34	; 52
     f24:	2c e0       	ldi	r18, 0x0C	; 12
     f26:	e1 50       	subi	r30, 0x01	; 1
     f28:	f0 40       	sbci	r31, 0x00	; 0
     f2a:	20 40       	sbci	r18, 0x00	; 0
     f2c:	e1 f7       	brne	.-8      	; 0xf26 <_ZN4Game5startEv+0xf4>
     f2e:	00 c0       	rjmp	.+0      	; 0xf30 <_ZN4Game5startEv+0xfe>
     f30:	00 00       	nop
    _delay_ms(250);

    OCR0A = 40;
     f32:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
     f34:	c5 bd       	out	0x25, r28	; 37
     f36:	8f ef       	ldi	r24, 0xFF	; 255
     f38:	94 e3       	ldi	r25, 0x34	; 52
     f3a:	ec e0       	ldi	r30, 0x0C	; 12
     f3c:	81 50       	subi	r24, 0x01	; 1
     f3e:	90 40       	sbci	r25, 0x00	; 0
     f40:	e0 40       	sbci	r30, 0x00	; 0
     f42:	e1 f7       	brne	.-8      	; 0xf3c <_ZN4Game5startEv+0x10a>
     f44:	00 c0       	rjmp	.+0      	; 0xf46 <_ZN4Game5startEv+0x114>
     f46:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     f48:	15 bc       	out	0x25, r1	; 37
     f4a:	ff ef       	ldi	r31, 0xFF	; 255
     f4c:	24 e3       	ldi	r18, 0x34	; 52
     f4e:	8c e0       	ldi	r24, 0x0C	; 12
     f50:	f1 50       	subi	r31, 0x01	; 1
     f52:	20 40       	sbci	r18, 0x00	; 0
     f54:	80 40       	sbci	r24, 0x00	; 0
     f56:	e1 f7       	brne	.-8      	; 0xf50 <_ZN4Game5startEv+0x11e>
     f58:	00 c0       	rjmp	.+0      	; 0xf5a <_ZN4Game5startEv+0x128>
     f5a:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
     f5c:	c5 bd       	out	0x25, r28	; 37
     f5e:	9f ef       	ldi	r25, 0xFF	; 255
     f60:	e4 e3       	ldi	r30, 0x34	; 52
     f62:	fc e0       	ldi	r31, 0x0C	; 12
     f64:	91 50       	subi	r25, 0x01	; 1
     f66:	e0 40       	sbci	r30, 0x00	; 0
     f68:	f0 40       	sbci	r31, 0x00	; 0
     f6a:	e1 f7       	brne	.-8      	; 0xf64 <_ZN4Game5startEv+0x132>
     f6c:	00 c0       	rjmp	.+0      	; 0xf6e <_ZN4Game5startEv+0x13c>
     f6e:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     f70:	15 bc       	out	0x25, r1	; 37
     f72:	2f ef       	ldi	r18, 0xFF	; 255
     f74:	84 e3       	ldi	r24, 0x34	; 52
     f76:	9c e0       	ldi	r25, 0x0C	; 12
     f78:	21 50       	subi	r18, 0x01	; 1
     f7a:	80 40       	sbci	r24, 0x00	; 0
     f7c:	90 40       	sbci	r25, 0x00	; 0
     f7e:	e1 f7       	brne	.-8      	; 0xf78 <_ZN4Game5startEv+0x146>
     f80:	00 c0       	rjmp	.+0      	; 0xf82 <_ZN4Game5startEv+0x150>
     f82:	00 00       	nop
    _delay_ms(250);

    OCR0A = 47;
     f84:	17 bd       	out	0x27, r17	; 39
    TCCR0B = 0x0B;
     f86:	c5 bd       	out	0x25, r28	; 37
     f88:	ef ef       	ldi	r30, 0xFF	; 255
     f8a:	f9 e6       	ldi	r31, 0x69	; 105
     f8c:	28 e1       	ldi	r18, 0x18	; 24
     f8e:	e1 50       	subi	r30, 0x01	; 1
     f90:	f0 40       	sbci	r31, 0x00	; 0
     f92:	20 40       	sbci	r18, 0x00	; 0
     f94:	e1 f7       	brne	.-8      	; 0xf8e <_ZN4Game5startEv+0x15c>
     f96:	00 c0       	rjmp	.+0      	; 0xf98 <_ZN4Game5startEv+0x166>
     f98:	00 00       	nop
    _delay_ms(500);
    TCCR0B = 0x00;
     f9a:	15 bc       	out	0x25, r1	; 37
     f9c:	8f ef       	ldi	r24, 0xFF	; 255
     f9e:	99 e6       	ldi	r25, 0x69	; 105
     fa0:	e8 e1       	ldi	r30, 0x18	; 24
     fa2:	81 50       	subi	r24, 0x01	; 1
     fa4:	90 40       	sbci	r25, 0x00	; 0
     fa6:	e0 40       	sbci	r30, 0x00	; 0
     fa8:	e1 f7       	brne	.-8      	; 0xfa2 <_ZN4Game5startEv+0x170>
     faa:	00 c0       	rjmp	.+0      	; 0xfac <_ZN4Game5startEv+0x17a>
     fac:	00 00       	nop
    _delay_ms(500);
	
	/////

    OCR0A = 40;
     fae:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
     fb0:	c5 bd       	out	0x25, r28	; 37
     fb2:	ff ef       	ldi	r31, 0xFF	; 255
     fb4:	24 e3       	ldi	r18, 0x34	; 52
     fb6:	8c e0       	ldi	r24, 0x0C	; 12
     fb8:	f1 50       	subi	r31, 0x01	; 1
     fba:	20 40       	sbci	r18, 0x00	; 0
     fbc:	80 40       	sbci	r24, 0x00	; 0
     fbe:	e1 f7       	brne	.-8      	; 0xfb8 <_ZN4Game5startEv+0x186>
     fc0:	00 c0       	rjmp	.+0      	; 0xfc2 <_ZN4Game5startEv+0x190>
     fc2:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     fc4:	15 bc       	out	0x25, r1	; 37
     fc6:	9f ef       	ldi	r25, 0xFF	; 255
     fc8:	e4 e3       	ldi	r30, 0x34	; 52
     fca:	fc e0       	ldi	r31, 0x0C	; 12
     fcc:	91 50       	subi	r25, 0x01	; 1
     fce:	e0 40       	sbci	r30, 0x00	; 0
     fd0:	f0 40       	sbci	r31, 0x00	; 0
     fd2:	e1 f7       	brne	.-8      	; 0xfcc <_ZN4Game5startEv+0x19a>
     fd4:	00 c0       	rjmp	.+0      	; 0xfd6 <_ZN4Game5startEv+0x1a4>
     fd6:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
     fd8:	c5 bd       	out	0x25, r28	; 37
     fda:	2f ef       	ldi	r18, 0xFF	; 255
     fdc:	84 e3       	ldi	r24, 0x34	; 52
     fde:	9c e0       	ldi	r25, 0x0C	; 12
     fe0:	21 50       	subi	r18, 0x01	; 1
     fe2:	80 40       	sbci	r24, 0x00	; 0
     fe4:	90 40       	sbci	r25, 0x00	; 0
     fe6:	e1 f7       	brne	.-8      	; 0xfe0 <_ZN4Game5startEv+0x1ae>
     fe8:	00 c0       	rjmp	.+0      	; 0xfea <_ZN4Game5startEv+0x1b8>
     fea:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
     fec:	15 bc       	out	0x25, r1	; 37
     fee:	ef ef       	ldi	r30, 0xFF	; 255
     ff0:	f4 e3       	ldi	r31, 0x34	; 52
     ff2:	2c e0       	ldi	r18, 0x0C	; 12
     ff4:	e1 50       	subi	r30, 0x01	; 1
     ff6:	f0 40       	sbci	r31, 0x00	; 0
     ff8:	20 40       	sbci	r18, 0x00	; 0
     ffa:	e1 f7       	brne	.-8      	; 0xff4 <_ZN4Game5startEv+0x1c2>
     ffc:	00 c0       	rjmp	.+0      	; 0xffe <_ZN4Game5startEv+0x1cc>
     ffe:	00 00       	nop
    _delay_ms(250);

    OCR0A = 47;
    1000:	17 bd       	out	0x27, r17	; 39
    TCCR0B = 0x0B;
    1002:	c5 bd       	out	0x25, r28	; 37
    1004:	8f ef       	ldi	r24, 0xFF	; 255
    1006:	94 e3       	ldi	r25, 0x34	; 52
    1008:	ec e0       	ldi	r30, 0x0C	; 12
    100a:	81 50       	subi	r24, 0x01	; 1
    100c:	90 40       	sbci	r25, 0x00	; 0
    100e:	e0 40       	sbci	r30, 0x00	; 0
    1010:	e1 f7       	brne	.-8      	; 0x100a <_ZN4Game5startEv+0x1d8>
    1012:	00 c0       	rjmp	.+0      	; 0x1014 <_ZN4Game5startEv+0x1e2>
    1014:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    1016:	15 bc       	out	0x25, r1	; 37
    1018:	ff ef       	ldi	r31, 0xFF	; 255
    101a:	24 e3       	ldi	r18, 0x34	; 52
    101c:	8c e0       	ldi	r24, 0x0C	; 12
    101e:	f1 50       	subi	r31, 0x01	; 1
    1020:	20 40       	sbci	r18, 0x00	; 0
    1022:	80 40       	sbci	r24, 0x00	; 0
    1024:	e1 f7       	brne	.-8      	; 0x101e <_ZN4Game5startEv+0x1ec>
    1026:	00 c0       	rjmp	.+0      	; 0x1028 <_ZN4Game5startEv+0x1f6>
    1028:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
    102a:	c5 bd       	out	0x25, r28	; 37
    102c:	9f ef       	ldi	r25, 0xFF	; 255
    102e:	e4 e3       	ldi	r30, 0x34	; 52
    1030:	fc e0       	ldi	r31, 0x0C	; 12
    1032:	91 50       	subi	r25, 0x01	; 1
    1034:	e0 40       	sbci	r30, 0x00	; 0
    1036:	f0 40       	sbci	r31, 0x00	; 0
    1038:	e1 f7       	brne	.-8      	; 0x1032 <_ZN4Game5startEv+0x200>
    103a:	00 c0       	rjmp	.+0      	; 0x103c <_ZN4Game5startEv+0x20a>
    103c:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    103e:	15 bc       	out	0x25, r1	; 37
    1040:	2f ef       	ldi	r18, 0xFF	; 255
    1042:	84 e3       	ldi	r24, 0x34	; 52
    1044:	9c e0       	ldi	r25, 0x0C	; 12
    1046:	21 50       	subi	r18, 0x01	; 1
    1048:	80 40       	sbci	r24, 0x00	; 0
    104a:	90 40       	sbci	r25, 0x00	; 0
    104c:	e1 f7       	brne	.-8      	; 0x1046 <_ZN4Game5startEv+0x214>
    104e:	00 c0       	rjmp	.+0      	; 0x1050 <_ZN4Game5startEv+0x21e>
    1050:	00 00       	nop
    _delay_ms(250);

    OCR0A = 53;
    1052:	07 bd       	out	0x27, r16	; 39
    TCCR0B = 0x0B;
    1054:	c5 bd       	out	0x25, r28	; 37
    1056:	ef ef       	ldi	r30, 0xFF	; 255
    1058:	fe e9       	ldi	r31, 0x9E	; 158
    105a:	24 e2       	ldi	r18, 0x24	; 36
    105c:	e1 50       	subi	r30, 0x01	; 1
    105e:	f0 40       	sbci	r31, 0x00	; 0
    1060:	20 40       	sbci	r18, 0x00	; 0
    1062:	e1 f7       	brne	.-8      	; 0x105c <_ZN4Game5startEv+0x22a>
    1064:	00 c0       	rjmp	.+0      	; 0x1066 <_ZN4Game5startEv+0x234>
    1066:	00 00       	nop
    _delay_ms(750);
    TCCR0B = 0x00;
    1068:	15 bc       	out	0x25, r1	; 37
    106a:	8f ef       	ldi	r24, 0xFF	; 255
    106c:	98 e0       	ldi	r25, 0x08	; 8
    106e:	ed e3       	ldi	r30, 0x3D	; 61
    1070:	81 50       	subi	r24, 0x01	; 1
    1072:	90 40       	sbci	r25, 0x00	; 0
    1074:	e0 40       	sbci	r30, 0x00	; 0
    1076:	e1 f7       	brne	.-8      	; 0x1070 <_ZN4Game5startEv+0x23e>
    1078:	00 c0       	rjmp	.+0      	; 0x107a <_ZN4Game5startEv+0x248>
    107a:	00 00       	nop
    _delay_ms(1250);
	
    ////
    
    OCR0A = 40;
    107c:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
    107e:	c5 bd       	out	0x25, r28	; 37
    1080:	ff ef       	ldi	r31, 0xFF	; 255
    1082:	24 e3       	ldi	r18, 0x34	; 52
    1084:	8c e0       	ldi	r24, 0x0C	; 12
    1086:	f1 50       	subi	r31, 0x01	; 1
    1088:	20 40       	sbci	r18, 0x00	; 0
    108a:	80 40       	sbci	r24, 0x00	; 0
    108c:	e1 f7       	brne	.-8      	; 0x1086 <_ZN4Game5startEv+0x254>
    108e:	00 c0       	rjmp	.+0      	; 0x1090 <_ZN4Game5startEv+0x25e>
    1090:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    1092:	15 bc       	out	0x25, r1	; 37
    1094:	9f ef       	ldi	r25, 0xFF	; 255
    1096:	e4 e3       	ldi	r30, 0x34	; 52
    1098:	fc e0       	ldi	r31, 0x0C	; 12
    109a:	91 50       	subi	r25, 0x01	; 1
    109c:	e0 40       	sbci	r30, 0x00	; 0
    109e:	f0 40       	sbci	r31, 0x00	; 0
    10a0:	e1 f7       	brne	.-8      	; 0x109a <_ZN4Game5startEv+0x268>
    10a2:	00 c0       	rjmp	.+0      	; 0x10a4 <_ZN4Game5startEv+0x272>
    10a4:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
    10a6:	c5 bd       	out	0x25, r28	; 37
    10a8:	2f ef       	ldi	r18, 0xFF	; 255
    10aa:	84 e3       	ldi	r24, 0x34	; 52
    10ac:	9c e0       	ldi	r25, 0x0C	; 12
    10ae:	21 50       	subi	r18, 0x01	; 1
    10b0:	80 40       	sbci	r24, 0x00	; 0
    10b2:	90 40       	sbci	r25, 0x00	; 0
    10b4:	e1 f7       	brne	.-8      	; 0x10ae <_ZN4Game5startEv+0x27c>
    10b6:	00 c0       	rjmp	.+0      	; 0x10b8 <_ZN4Game5startEv+0x286>
    10b8:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    10ba:	15 bc       	out	0x25, r1	; 37
    10bc:	ef ef       	ldi	r30, 0xFF	; 255
    10be:	f4 e3       	ldi	r31, 0x34	; 52
    10c0:	2c e0       	ldi	r18, 0x0C	; 12
    10c2:	e1 50       	subi	r30, 0x01	; 1
    10c4:	f0 40       	sbci	r31, 0x00	; 0
    10c6:	20 40       	sbci	r18, 0x00	; 0
    10c8:	e1 f7       	brne	.-8      	; 0x10c2 <_ZN4Game5startEv+0x290>
    10ca:	00 c0       	rjmp	.+0      	; 0x10cc <_ZN4Game5startEv+0x29a>
    10cc:	00 00       	nop
    _delay_ms(250);

    OCR0A = 36;
    10ce:	f7 bc       	out	0x27, r15	; 39
    TCCR0B = 0x0B;
    10d0:	c5 bd       	out	0x25, r28	; 37
    10d2:	8f ef       	ldi	r24, 0xFF	; 255
    10d4:	94 e3       	ldi	r25, 0x34	; 52
    10d6:	ec e0       	ldi	r30, 0x0C	; 12
    10d8:	81 50       	subi	r24, 0x01	; 1
    10da:	90 40       	sbci	r25, 0x00	; 0
    10dc:	e0 40       	sbci	r30, 0x00	; 0
    10de:	e1 f7       	brne	.-8      	; 0x10d8 <_ZN4Game5startEv+0x2a6>
    10e0:	00 c0       	rjmp	.+0      	; 0x10e2 <_ZN4Game5startEv+0x2b0>
    10e2:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    10e4:	15 bc       	out	0x25, r1	; 37
    10e6:	ff ef       	ldi	r31, 0xFF	; 255
    10e8:	24 e3       	ldi	r18, 0x34	; 52
    10ea:	8c e0       	ldi	r24, 0x0C	; 12
    10ec:	f1 50       	subi	r31, 0x01	; 1
    10ee:	20 40       	sbci	r18, 0x00	; 0
    10f0:	80 40       	sbci	r24, 0x00	; 0
    10f2:	e1 f7       	brne	.-8      	; 0x10ec <_ZN4Game5startEv+0x2ba>
    10f4:	00 c0       	rjmp	.+0      	; 0x10f6 <_ZN4Game5startEv+0x2c4>
    10f6:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
    10f8:	c5 bd       	out	0x25, r28	; 37
    10fa:	9f ef       	ldi	r25, 0xFF	; 255
    10fc:	e4 e3       	ldi	r30, 0x34	; 52
    10fe:	fc e0       	ldi	r31, 0x0C	; 12
    1100:	91 50       	subi	r25, 0x01	; 1
    1102:	e0 40       	sbci	r30, 0x00	; 0
    1104:	f0 40       	sbci	r31, 0x00	; 0
    1106:	e1 f7       	brne	.-8      	; 0x1100 <_ZN4Game5startEv+0x2ce>
    1108:	00 c0       	rjmp	.+0      	; 0x110a <_ZN4Game5startEv+0x2d8>
    110a:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    110c:	15 bc       	out	0x25, r1	; 37
    110e:	2f ef       	ldi	r18, 0xFF	; 255
    1110:	84 e3       	ldi	r24, 0x34	; 52
    1112:	9c e0       	ldi	r25, 0x0C	; 12
    1114:	21 50       	subi	r18, 0x01	; 1
    1116:	80 40       	sbci	r24, 0x00	; 0
    1118:	90 40       	sbci	r25, 0x00	; 0
    111a:	e1 f7       	brne	.-8      	; 0x1114 <_ZN4Game5startEv+0x2e2>
    111c:	00 c0       	rjmp	.+0      	; 0x111e <_ZN4Game5startEv+0x2ec>
    111e:	00 00       	nop
    _delay_ms(250);

    OCR0A = 40;
    1120:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
    1122:	c5 bd       	out	0x25, r28	; 37
    1124:	ef ef       	ldi	r30, 0xFF	; 255
    1126:	f4 e3       	ldi	r31, 0x34	; 52
    1128:	2c e0       	ldi	r18, 0x0C	; 12
    112a:	e1 50       	subi	r30, 0x01	; 1
    112c:	f0 40       	sbci	r31, 0x00	; 0
    112e:	20 40       	sbci	r18, 0x00	; 0
    1130:	e1 f7       	brne	.-8      	; 0x112a <_ZN4Game5startEv+0x2f8>
    1132:	00 c0       	rjmp	.+0      	; 0x1134 <_ZN4Game5startEv+0x302>
    1134:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    1136:	15 bc       	out	0x25, r1	; 37
    1138:	8f ef       	ldi	r24, 0xFF	; 255
    113a:	94 e3       	ldi	r25, 0x34	; 52
    113c:	ec e0       	ldi	r30, 0x0C	; 12
    113e:	81 50       	subi	r24, 0x01	; 1
    1140:	90 40       	sbci	r25, 0x00	; 0
    1142:	e0 40       	sbci	r30, 0x00	; 0
    1144:	e1 f7       	brne	.-8      	; 0x113e <_ZN4Game5startEv+0x30c>
    1146:	00 c0       	rjmp	.+0      	; 0x1148 <_ZN4Game5startEv+0x316>
    1148:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x0B;
    114a:	c5 bd       	out	0x25, r28	; 37
    114c:	ff ef       	ldi	r31, 0xFF	; 255
    114e:	24 e3       	ldi	r18, 0x34	; 52
    1150:	8c e0       	ldi	r24, 0x0C	; 12
    1152:	f1 50       	subi	r31, 0x01	; 1
    1154:	20 40       	sbci	r18, 0x00	; 0
    1156:	80 40       	sbci	r24, 0x00	; 0
    1158:	e1 f7       	brne	.-8      	; 0x1152 <_ZN4Game5startEv+0x320>
    115a:	00 c0       	rjmp	.+0      	; 0x115c <_ZN4Game5startEv+0x32a>
    115c:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    115e:	15 bc       	out	0x25, r1	; 37
    1160:	9f ef       	ldi	r25, 0xFF	; 255
    1162:	e4 e3       	ldi	r30, 0x34	; 52
    1164:	fc e0       	ldi	r31, 0x0C	; 12
    1166:	91 50       	subi	r25, 0x01	; 1
    1168:	e0 40       	sbci	r30, 0x00	; 0
    116a:	f0 40       	sbci	r31, 0x00	; 0
    116c:	e1 f7       	brne	.-8      	; 0x1166 <_ZN4Game5startEv+0x334>
    116e:	00 c0       	rjmp	.+0      	; 0x1170 <_ZN4Game5startEv+0x33e>
    1170:	00 00       	nop
    _delay_ms(250);

    OCR0A = 47;
    1172:	17 bd       	out	0x27, r17	; 39
    TCCR0B = 0x0B;
    1174:	c5 bd       	out	0x25, r28	; 37
    1176:	2f ef       	ldi	r18, 0xFF	; 255
    1178:	89 e6       	ldi	r24, 0x69	; 105
    117a:	98 e1       	ldi	r25, 0x18	; 24
    117c:	21 50       	subi	r18, 0x01	; 1
    117e:	80 40       	sbci	r24, 0x00	; 0
    1180:	90 40       	sbci	r25, 0x00	; 0
    1182:	e1 f7       	brne	.-8      	; 0x117c <_ZN4Game5startEv+0x34a>
    1184:	00 c0       	rjmp	.+0      	; 0x1186 <_ZN4Game5startEv+0x354>
    1186:	00 00       	nop
    _delay_ms(500);
    TCCR0B = 0x00;
    1188:	15 bc       	out	0x25, r1	; 37
    118a:	ef ef       	ldi	r30, 0xFF	; 255
    118c:	f9 e6       	ldi	r31, 0x69	; 105
    118e:	28 e1       	ldi	r18, 0x18	; 24
    1190:	e1 50       	subi	r30, 0x01	; 1
    1192:	f0 40       	sbci	r31, 0x00	; 0
    1194:	20 40       	sbci	r18, 0x00	; 0
    1196:	e1 f7       	brne	.-8      	; 0x1190 <_ZN4Game5startEv+0x35e>
    1198:	00 c0       	rjmp	.+0      	; 0x119a <_ZN4Game5startEv+0x368>
    119a:	00 00       	nop
    _delay_ms(500);
    
    /////

    OCR0A = 40;
    119c:	d7 bd       	out	0x27, r29	; 39
    TCCR0B = 0x0B;
    119e:	c5 bd       	out	0x25, r28	; 37
    11a0:	8f ef       	ldi	r24, 0xFF	; 255
    11a2:	94 e3       	ldi	r25, 0x34	; 52
    11a4:	ec e0       	ldi	r30, 0x0C	; 12
    11a6:	81 50       	subi	r24, 0x01	; 1
    11a8:	90 40       	sbci	r25, 0x00	; 0
    11aa:	e0 40       	sbci	r30, 0x00	; 0
    11ac:	e1 f7       	brne	.-8      	; 0x11a6 <_ZN4Game5startEv+0x374>
    11ae:	00 c0       	rjmp	.+0      	; 0x11b0 <_ZN4Game5startEv+0x37e>
    11b0:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    11b2:	15 bc       	out	0x25, r1	; 37
    11b4:	ff ef       	ldi	r31, 0xFF	; 255
    11b6:	24 e3       	ldi	r18, 0x34	; 52
    11b8:	8c e0       	ldi	r24, 0x0C	; 12
    11ba:	f1 50       	subi	r31, 0x01	; 1
    11bc:	20 40       	sbci	r18, 0x00	; 0
    11be:	80 40       	sbci	r24, 0x00	; 0
    11c0:	e1 f7       	brne	.-8      	; 0x11ba <_ZN4Game5startEv+0x388>
    11c2:	00 c0       	rjmp	.+0      	; 0x11c4 <_ZN4Game5startEv+0x392>
    11c4:	00 00       	nop
    _delay_ms(250);
    
    OCR0A = 47;
    11c6:	17 bd       	out	0x27, r17	; 39
    TCCR0B = 0x0B;
    11c8:	c5 bd       	out	0x25, r28	; 37
    11ca:	9f ef       	ldi	r25, 0xFF	; 255
    11cc:	e4 e3       	ldi	r30, 0x34	; 52
    11ce:	fc e0       	ldi	r31, 0x0C	; 12
    11d0:	91 50       	subi	r25, 0x01	; 1
    11d2:	e0 40       	sbci	r30, 0x00	; 0
    11d4:	f0 40       	sbci	r31, 0x00	; 0
    11d6:	e1 f7       	brne	.-8      	; 0x11d0 <_ZN4Game5startEv+0x39e>
    11d8:	00 c0       	rjmp	.+0      	; 0x11da <_ZN4Game5startEv+0x3a8>
    11da:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    11dc:	15 bc       	out	0x25, r1	; 37
    11de:	2f ef       	ldi	r18, 0xFF	; 255
    11e0:	84 e3       	ldi	r24, 0x34	; 52
    11e2:	9c e0       	ldi	r25, 0x0C	; 12
    11e4:	21 50       	subi	r18, 0x01	; 1
    11e6:	80 40       	sbci	r24, 0x00	; 0
    11e8:	90 40       	sbci	r25, 0x00	; 0
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <_ZN4Game5startEv+0x3b2>
    11ec:	00 c0       	rjmp	.+0      	; 0x11ee <_ZN4Game5startEv+0x3bc>
    11ee:	00 00       	nop
    _delay_ms(250);

    OCR0A = 53;
    11f0:	07 bd       	out	0x27, r16	; 39
    TCCR0B = 0x0B;
    11f2:	c5 bd       	out	0x25, r28	; 37
    11f4:	ef ef       	ldi	r30, 0xFF	; 255
    11f6:	f4 e3       	ldi	r31, 0x34	; 52
    11f8:	2c e0       	ldi	r18, 0x0C	; 12
    11fa:	e1 50       	subi	r30, 0x01	; 1
    11fc:	f0 40       	sbci	r31, 0x00	; 0
    11fe:	20 40       	sbci	r18, 0x00	; 0
    1200:	e1 f7       	brne	.-8      	; 0x11fa <_ZN4Game5startEv+0x3c8>
    1202:	00 c0       	rjmp	.+0      	; 0x1204 <_ZN4Game5startEv+0x3d2>
    1204:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    1206:	15 bc       	out	0x25, r1	; 37
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	94 e3       	ldi	r25, 0x34	; 52
    120c:	ec e0       	ldi	r30, 0x0C	; 12
    120e:	81 50       	subi	r24, 0x01	; 1
    1210:	90 40       	sbci	r25, 0x00	; 0
    1212:	e0 40       	sbci	r30, 0x00	; 0
    1214:	e1 f7       	brne	.-8      	; 0x120e <_ZN4Game5startEv+0x3dc>
    1216:	00 c0       	rjmp	.+0      	; 0x1218 <_ZN4Game5startEv+0x3e6>
    1218:	00 00       	nop
    _delay_ms(250);
    
    OCR0A = 47;
    121a:	17 bd       	out	0x27, r17	; 39
    TCCR0B = 0x0B;
    121c:	c5 bd       	out	0x25, r28	; 37
    121e:	ff ef       	ldi	r31, 0xFF	; 255
    1220:	24 e3       	ldi	r18, 0x34	; 52
    1222:	8c e0       	ldi	r24, 0x0C	; 12
    1224:	f1 50       	subi	r31, 0x01	; 1
    1226:	20 40       	sbci	r18, 0x00	; 0
    1228:	80 40       	sbci	r24, 0x00	; 0
    122a:	e1 f7       	brne	.-8      	; 0x1224 <_ZN4Game5startEv+0x3f2>
    122c:	00 c0       	rjmp	.+0      	; 0x122e <_ZN4Game5startEv+0x3fc>
    122e:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    1230:	15 bc       	out	0x25, r1	; 37
    1232:	9f ef       	ldi	r25, 0xFF	; 255
    1234:	e4 e3       	ldi	r30, 0x34	; 52
    1236:	fc e0       	ldi	r31, 0x0C	; 12
    1238:	91 50       	subi	r25, 0x01	; 1
    123a:	e0 40       	sbci	r30, 0x00	; 0
    123c:	f0 40       	sbci	r31, 0x00	; 0
    123e:	e1 f7       	brne	.-8      	; 0x1238 <_ZN4Game5startEv+0x406>
    1240:	00 c0       	rjmp	.+0      	; 0x1242 <_ZN4Game5startEv+0x410>
    1242:	00 00       	nop
    _delay_ms(250);

    OCR0A = 60;
    1244:	b7 bc       	out	0x27, r11	; 39
    TCCR0B = 0x0B;
    1246:	c5 bd       	out	0x25, r28	; 37
    1248:	2f ef       	ldi	r18, 0xFF	; 255
    124a:	84 e3       	ldi	r24, 0x34	; 52
    124c:	9c e0       	ldi	r25, 0x0C	; 12
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	80 40       	sbci	r24, 0x00	; 0
    1252:	90 40       	sbci	r25, 0x00	; 0
    1254:	e1 f7       	brne	.-8      	; 0x124e <_ZN4Game5startEv+0x41c>
    1256:	00 c0       	rjmp	.+0      	; 0x1258 <_ZN4Game5startEv+0x426>
    1258:	00 00       	nop
    _delay_ms(250);
    TCCR0B = 0x00;
    125a:	15 bc       	out	0x25, r1	; 37
    125c:	ef ef       	ldi	r30, 0xFF	; 255
    125e:	f4 e3       	ldi	r31, 0x34	; 52
    1260:	2c e0       	ldi	r18, 0x0C	; 12
    1262:	e1 50       	subi	r30, 0x01	; 1
    1264:	f0 40       	sbci	r31, 0x00	; 0
    1266:	20 40       	sbci	r18, 0x00	; 0
    1268:	e1 f7       	brne	.-8      	; 0x1262 <_ZN4Game5startEv+0x430>
    126a:	00 c0       	rjmp	.+0      	; 0x126c <_ZN4Game5startEv+0x43a>
    126c:	00 00       	nop
    _delay_ms(250);
	
	OCR0A = 80;
    126e:	e7 bc       	out	0x27, r14	; 39
	TCCR0B = 0x0B;
    1270:	c5 bd       	out	0x25, r28	; 37
    1272:	8f ef       	ldi	r24, 0xFF	; 255
    1274:	9e e9       	ldi	r25, 0x9E	; 158
    1276:	e4 e2       	ldi	r30, 0x24	; 36
    1278:	81 50       	subi	r24, 0x01	; 1
    127a:	90 40       	sbci	r25, 0x00	; 0
    127c:	e0 40       	sbci	r30, 0x00	; 0
    127e:	e1 f7       	brne	.-8      	; 0x1278 <_ZN4Game5startEv+0x446>
    1280:	00 c0       	rjmp	.+0      	; 0x1282 <_ZN4Game5startEv+0x450>
    1282:	00 00       	nop
	_delay_ms(750);
	TCCR0B = 0x00;
    1284:	15 bc       	out	0x25, r1	; 37
    1286:	ff ef       	ldi	r31, 0xFF	; 255
    1288:	28 e0       	ldi	r18, 0x08	; 8
    128a:	8d e3       	ldi	r24, 0x3D	; 61
    128c:	f1 50       	subi	r31, 0x01	; 1
    128e:	20 40       	sbci	r18, 0x00	; 0
    1290:	80 40       	sbci	r24, 0x00	; 0
    1292:	e1 f7       	brne	.-8      	; 0x128c <_ZN4Game5startEv+0x45a>
    1294:	00 c0       	rjmp	.+0      	; 0x1296 <_ZN4Game5startEv+0x464>
    1296:	00 00       	nop
    1298:	f1 cd       	rjmp	.-1054   	; 0xe7c <_ZN4Game5startEv+0x4a>

0000129a <_ZN3MCU7Setting9beginPortEab>:
  }

  else if (PCINTIndex <= 23)
  {
    PCINTIndex -= 16;
    PCMSK1 |= insertBit(PCINTIndex, HIGH);
    129a:	61 95       	neg	r22
    129c:	81 30       	cpi	r24, 0x01	; 1
    129e:	39 f0       	breq	.+14     	; 0x12ae <_ZN3MCU7Setting9beginPortEab+0x14>
    12a0:	82 30       	cpi	r24, 0x02	; 2
    12a2:	41 f0       	breq	.+16     	; 0x12b4 <_ZN3MCU7Setting9beginPortEab+0x1a>
    12a4:	81 11       	cpse	r24, r1
    12a6:	08 c0       	rjmp	.+16     	; 0x12b8 <_ZN3MCU7Setting9beginPortEab+0x1e>
    12a8:	64 b9       	out	0x04, r22	; 4
    12aa:	15 b8       	out	0x05, r1	; 5
    12ac:	08 95       	ret
    12ae:	67 b9       	out	0x07, r22	; 7
    12b0:	18 b8       	out	0x08, r1	; 8
    12b2:	08 95       	ret
    12b4:	6a b9       	out	0x0a, r22	; 10
    12b6:	1b b8       	out	0x0b, r1	; 11
    12b8:	08 95       	ret

000012ba <_ZN3MCU7Setting10beginTimerEab>:
//----------------------------------------*/

void MCU::Setting::beginTimer(int8_t timerIndex, bool timerMode)
{

  switch (timerIndex)
    12ba:	81 30       	cpi	r24, 0x01	; 1
    12bc:	99 f1       	breq	.+102    	; 0x1324 <_ZN3MCU7Setting10beginTimerEab+0x6a>
    12be:	82 30       	cpi	r24, 0x02	; 2
    12c0:	b1 f0       	breq	.+44     	; 0x12ee <_ZN3MCU7Setting10beginTimerEab+0x34>
    12c2:	81 11       	cpse	r24, r1
    12c4:	50 c0       	rjmp	.+160    	; 0x1366 <_ZN3MCU7Setting10beginTimerEab+0xac>
  {
    // TIMER INTERRUPT 0, 2 (8 BIT)
  case 0:
    if (timerMode == OVF)
    12c6:	61 11       	cpse	r22, r1
    12c8:	08 c0       	rjmp	.+16     	; 0x12da <_ZN3MCU7Setting10beginTimerEab+0x20>
    {
      TIMSK0 = 0x01;
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x00;    // 1024 Prescaler, Normal Mode
    12d0:	14 bc       	out	0x24, r1	; 36
      TCCR0B = 0x05;
    12d2:	85 e0       	ldi	r24, 0x05	; 5
    12d4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    12d6:	16 bc       	out	0x26, r1	; 38
    12d8:	08 95       	ret
    }

    else
    {
      TIMSK0 = 0x02;
    12da:	82 e0       	ldi	r24, 0x02	; 2
    12dc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

      TCCR0A = 0x02;    // 1024 Prescaler, CTC Mode
    12e0:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x05;
    12e2:	85 e0       	ldi	r24, 0x05	; 5
    12e4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;     // Start Counting 0x00
    12e6:	16 bc       	out	0x26, r1	; 38

      OCR0A = _OCR0A;
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	87 bd       	out	0x27, r24	; 39
    12ec:	08 95       	ret
    }

    break;

  case 2:
    if (timerMode == OVF)
    12ee:	61 11       	cpse	r22, r1
    12f0:	0b c0       	rjmp	.+22     	; 0x1308 <_ZN3MCU7Setting10beginTimerEab+0x4e>
    {
      TIMSK2 = 0x01;
    12f2:	81 e0       	ldi	r24, 0x01	; 1
    12f4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x00;    // 1024 Prescaler, Normal Mode
    12f8:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x07;
    12fc:	87 e0       	ldi	r24, 0x07	; 7
    12fe:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    1302:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1306:	08 95       	ret
    }

    else
    {
      TIMSK2 = 0x02;
    1308:	82 e0       	ldi	r24, 0x02	; 2
    130a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>

      TCCR2A = 0x02;    // 1024 Prescaler, CTC Mode
    130e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
      TCCR2B = 0x07;
    1312:	87 e0       	ldi	r24, 0x07	; 7
    1314:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;     // Start Counting 0x00
    1318:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>

      OCR2A = _OCR2A;
    131c:	89 ef       	ldi	r24, 0xF9	; 249
    131e:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    1322:	08 95       	ret

    break;

    // TIMER INTERRUPT 1 (16 BIT)
  case 1:
    if (timerMode == OVF)
    1324:	61 11       	cpse	r22, r1
    1326:	0d c0       	rjmp	.+26     	; 0x1342 <_ZN3MCU7Setting10beginTimerEab+0x88>
    {
      TIMSK1 = 0x01;
    1328:	81 e0       	ldi	r24, 0x01	; 1
    132a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 256 Prescaler, Normal Mode
    132e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x04;
    1332:	84 e0       	ldi	r24, 0x04	; 4
    1334:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    1338:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    133c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1340:	08 95       	ret
    }

    else
    {
      TIMSK1 = 0x02;
    1342:	82 e0       	ldi	r24, 0x02	; 2
    1344:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>

      TCCR1A = 0x00;    // 256 Prescaler, CTC Mode
    1348:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
      TCCR1B = 0x0C;
    134c:	8c e0       	ldi	r24, 0x0C	; 12
    134e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;    // Start Counting 0x0000
    1352:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1356:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>

      OCR1AH = _OCR1AH;
    135a:	8d e3       	ldi	r24, 0x3D	; 61
    135c:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
      OCR1AL = _OCR1AL;
    1360:	88 e0       	ldi	r24, 0x08	; 8
    1362:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1366:	08 95       	ret

00001368 <_ZN3MCU7Setting8beginPWMEab>:
//----------------------------------------*/

void MCU::Setting::beginPWM(int8_t PWMIndex, bool PWMMode)
{

  switch (PWMIndex)
    1368:	85 30       	cpi	r24, 0x05	; 5
    136a:	09 f4       	brne	.+2      	; 0x136e <_ZN3MCU7Setting8beginPWMEab+0x6>
    136c:	5d c0       	rjmp	.+186    	; 0x1428 <_ZN3MCU7Setting8beginPWMEab+0xc0>
    136e:	2c f4       	brge	.+10     	; 0x137a <_ZN3MCU7Setting8beginPWMEab+0x12>
    1370:	83 30       	cpi	r24, 0x03	; 3
    1372:	51 f0       	breq	.+20     	; 0x1388 <_ZN3MCU7Setting8beginPWMEab+0x20>
    1374:	84 30       	cpi	r24, 0x04	; 4
    1376:	c1 f0       	breq	.+48     	; 0x13a8 <_ZN3MCU7Setting8beginPWMEab+0x40>
    1378:	08 95       	ret
    137a:	87 30       	cpi	r24, 0x07	; 7
    137c:	29 f1       	breq	.+74     	; 0x13c8 <_ZN3MCU7Setting8beginPWMEab+0x60>
    137e:	0c f4       	brge	.+2      	; 0x1382 <_ZN3MCU7Setting8beginPWMEab+0x1a>
    1380:	6f c0       	rjmp	.+222    	; 0x1460 <_ZN3MCU7Setting8beginPWMEab+0xf8>
    1382:	88 30       	cpi	r24, 0x08	; 8
    1384:	c9 f1       	breq	.+114    	; 0x13f8 <_ZN3MCU7Setting8beginPWMEab+0x90>
    1386:	08 95       	ret
  {
    // TIMER PWM 0, 2 (8 BIT)
  case OC0A:
    if (PWMMode == CORRECT)
    1388:	61 11       	cpse	r22, r1
    138a:	07 c0       	rjmp	.+14     	; 0x139a <_ZN3MCU7Setting8beginPWMEab+0x32>
    {
      TCCR0A |= 0x01 | (1 << COM0A0);   // 256 Prescaler, Phase Correct PWM
    138c:	84 b5       	in	r24, 0x24	; 36
    138e:	81 64       	ori	r24, 0x41	; 65
    1390:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    1392:	8c e0       	ldi	r24, 0x0C	; 12
    1394:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    1396:	16 bc       	out	0x26, r1	; 38
    1398:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0A0);   // 256 Prescaler, Fast PWM Mode
    139a:	84 b5       	in	r24, 0x24	; 36
    139c:	83 64       	ori	r24, 0x43	; 67
    139e:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    13a0:	8c e0       	ldi	r24, 0x0C	; 12
    13a2:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    13a4:	16 bc       	out	0x26, r1	; 38
    13a6:	08 95       	ret
    }

    break;

  case OC0B:
    if (PWMMode == CORRECT)
    13a8:	61 11       	cpse	r22, r1
    13aa:	07 c0       	rjmp	.+14     	; 0x13ba <_ZN3MCU7Setting8beginPWMEab+0x52>
    {
      TCCR0A |= 0x01 | (1 << COM0B0);   // 256 Prescaler, Phase Correct PWM
    13ac:	84 b5       	in	r24, 0x24	; 36
    13ae:	81 61       	ori	r24, 0x11	; 17
    13b0:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Phase Correct PWM to OCR0A
    13b2:	8c e0       	ldi	r24, 0x0C	; 12
    13b4:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    13b6:	16 bc       	out	0x26, r1	; 38
    13b8:	08 95       	ret
    }

    else
    {
      TCCR0A |= 0x03 | (1 << COM0B0);   // 256 Prescaler, Fast PWM Mode
    13ba:	84 b5       	in	r24, 0x24	; 36
    13bc:	83 61       	ori	r24, 0x13	; 19
    13be:	84 bd       	out	0x24, r24	; 36
      TCCR0B = 0x0C;                    // Fast PWM to OCR0A
    13c0:	8c e0       	ldi	r24, 0x0C	; 12
    13c2:	85 bd       	out	0x25, r24	; 37
      TCNT0 = 0x00;                     // Start Counting 0x00
    13c4:	16 bc       	out	0x26, r1	; 38
    13c6:	08 95       	ret
    }

    break;

  case OC2A:
    if (PWMMode == CORRECT)
    13c8:	61 11       	cpse	r22, r1
    13ca:	0b c0       	rjmp	.+22     	; 0x13e2 <_ZN3MCU7Setting8beginPWMEab+0x7a>
    {
      TCCR2A |= 0x01 | (1 << COM2A1);   // 256 Prescaler
    13cc:	e0 eb       	ldi	r30, 0xB0	; 176
    13ce:	f0 e0       	ldi	r31, 0x00	; 0
    13d0:	80 81       	ld	r24, Z
    13d2:	81 68       	ori	r24, 0x81	; 129
    13d4:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    13d6:	86 e0       	ldi	r24, 0x06	; 6
    13d8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    13dc:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    13e0:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2A1);   // 256 Prescaler
    13e2:	e0 eb       	ldi	r30, 0xB0	; 176
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	80 81       	ld	r24, Z
    13e8:	83 68       	ori	r24, 0x83	; 131
    13ea:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    13ec:	86 e0       	ldi	r24, 0x06	; 6
    13ee:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    13f2:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    13f6:	08 95       	ret
    }

    break;

  case OC2B:
    if (PWMMode == CORRECT)
    13f8:	61 11       	cpse	r22, r1
    13fa:	0b c0       	rjmp	.+22     	; 0x1412 <_ZN3MCU7Setting8beginPWMEab+0xaa>
    {
      TCCR2A |= 0x01 | (1 << COM2B1);   // 256 Prescaler
    13fc:	e0 eb       	ldi	r30, 0xB0	; 176
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	80 81       	ld	r24, Z
    1402:	81 62       	ori	r24, 0x21	; 33
    1404:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Phase Correct PWM to 255
    1406:	86 e0       	ldi	r24, 0x06	; 6
    1408:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    140c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1410:	08 95       	ret
    }

    else
    {
      TCCR2A |= 0x03 | (1 << COM2B1);   // 256 Prescaler
    1412:	e0 eb       	ldi	r30, 0xB0	; 176
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	80 81       	ld	r24, Z
    1418:	83 62       	ori	r24, 0x23	; 35
    141a:	80 83       	st	Z, r24
      TCCR2B = 0x06;                    // Fast PWM to 255
    141c:	86 e0       	ldi	r24, 0x06	; 6
    141e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
      TCNT2 = 0x00;                     // Start Counting 0x00
    1422:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    1426:	08 95       	ret

    break;

    // TIMER PWM 1 (10 BIT)
  case OC1A:
    if (PWMMode == CORRECT)
    1428:	61 11       	cpse	r22, r1
    142a:	0d c0       	rjmp	.+26     	; 0x1446 <_ZN3MCU7Setting8beginPWMEab+0xde>
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    142c:	e0 e8       	ldi	r30, 0x80	; 128
    142e:	f0 e0       	ldi	r31, 0x00	; 0
    1430:	80 81       	ld	r24, Z
    1432:	83 68       	ori	r24, 0x83	; 131
    1434:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    1436:	84 e0       	ldi	r24, 0x04	; 4
    1438:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    143c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1440:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1444:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1A1);   // 256 Prescaler
    1446:	e0 e8       	ldi	r30, 0x80	; 128
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	83 68       	ori	r24, 0x83	; 131
    144e:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    1450:	8c e0       	ldi	r24, 0x0C	; 12
    1452:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1456:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    145a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    145e:	08 95       	ret
    }

    break;

  case OC1B:
    if (PWMMode == CORRECT)
    1460:	61 11       	cpse	r22, r1
    1462:	0d c0       	rjmp	.+26     	; 0x147e <_ZN3MCU7Setting8beginPWMEab+0x116>
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    1464:	e0 e8       	ldi	r30, 0x80	; 128
    1466:	f0 e0       	ldi	r31, 0x00	; 0
    1468:	80 81       	ld	r24, Z
    146a:	83 62       	ori	r24, 0x23	; 35
    146c:	80 83       	st	Z, r24
      TCCR1B = 0x04;                    // Phase Correct PWM to 1023
    146e:	84 e0       	ldi	r24, 0x04	; 4
    1470:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    1474:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1478:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    147c:	08 95       	ret
    }

    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler
    147e:	e0 e8       	ldi	r30, 0x80	; 128
    1480:	f0 e0       	ldi	r31, 0x00	; 0
    1482:	80 81       	ld	r24, Z
    1484:	83 62       	ori	r24, 0x23	; 35
    1486:	80 83       	st	Z, r24
      TCCR1B = 0x0C;                    // Fast PWM to 1023
    1488:	8c e0       	ldi	r24, 0x0C	; 12
    148a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
      TCNT1H = 0x00;                    // Start Counting 0x0000
    148e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
      TCNT1L = 0x00;
    1492:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1496:	08 95       	ret

00001498 <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    1498:	80 e5       	ldi	r24, 0x50	; 80
    149a:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    149c:	81 e0       	ldi	r24, 0x01	; 1
    149e:	8d bd       	out	0x2d, r24	; 45
    14a0:	08 95       	ret

000014a2 <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    14a2:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    14a4:	0d b4       	in	r0, 0x2d	; 45
    14a6:	07 fe       	sbrs	r0, 7
    14a8:	fd cf       	rjmp	.-6      	; 0x14a4 <_ZN3SPI7sendBitEh+0x2>
}
    14aa:	08 95       	ret

000014ac <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    14ac:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    14ae:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    14b0:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    14b4:	28 9a       	sbi	0x05, 0	; 5
    14b6:	08 95       	ret

000014b8 <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    14b8:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    14ba:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    14bc:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    14c0:	28 9a       	sbi	0x05, 0	; 5
    14c2:	08 95       	ret

000014c4 <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    14c4:	1f 93       	push	r17
    14c6:	cf 93       	push	r28
    14c8:	df 93       	push	r29
    14ca:	ec 01       	movw	r28, r24
    14cc:	16 2f       	mov	r17, r22
    14ce:	67 2f       	mov	r22, r23
  RS_HIGH;
    14d0:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    14d2:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    14d4:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    14d8:	61 2f       	mov	r22, r17
    14da:	ce 01       	movw	r24, r28
    14dc:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    14e0:	28 9a       	sbi	0x05, 0	; 5
}
    14e2:	df 91       	pop	r29
    14e4:	cf 91       	pop	r28
    14e6:	1f 91       	pop	r17
    14e8:	08 95       	ret

000014ea <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    14ea:	cf 93       	push	r28
    14ec:	df 93       	push	r29
    14ee:	ec 01       	movw	r28, r24
  CS_HIGH;
    14f0:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    14f2:	29 98       	cbi	0x05, 1	; 5
    14f4:	2f ef       	ldi	r18, 0xFF	; 255
    14f6:	89 ef       	ldi	r24, 0xF9	; 249
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	21 50       	subi	r18, 0x01	; 1
    14fc:	80 40       	sbci	r24, 0x00	; 0
    14fe:	90 40       	sbci	r25, 0x00	; 0
    1500:	e1 f7       	brne	.-8      	; 0x14fa <_ZN3TFT5beginEv+0x10>
    1502:	00 c0       	rjmp	.+0      	; 0x1504 <_ZN3TFT5beginEv+0x1a>
    1504:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    1506:	29 9a       	sbi	0x05, 1	; 5
    1508:	2f ef       	ldi	r18, 0xFF	; 255
    150a:	89 e6       	ldi	r24, 0x69	; 105
    150c:	98 e1       	ldi	r25, 0x18	; 24
    150e:	21 50       	subi	r18, 0x01	; 1
    1510:	80 40       	sbci	r24, 0x00	; 0
    1512:	90 40       	sbci	r25, 0x00	; 0
    1514:	e1 f7       	brne	.-8      	; 0x150e <_ZN3TFT5beginEv+0x24>
    1516:	00 c0       	rjmp	.+0      	; 0x1518 <_ZN3TFT5beginEv+0x2e>
    1518:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    151a:	61 e0       	ldi	r22, 0x01	; 1
    151c:	ce 01       	movw	r24, r28
    151e:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
    1522:	2f ef       	ldi	r18, 0xFF	; 255
    1524:	89 ef       	ldi	r24, 0xF9	; 249
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	21 50       	subi	r18, 0x01	; 1
    152a:	80 40       	sbci	r24, 0x00	; 0
    152c:	90 40       	sbci	r25, 0x00	; 0
    152e:	e1 f7       	brne	.-8      	; 0x1528 <_ZN3TFT5beginEv+0x3e>
    1530:	00 c0       	rjmp	.+0      	; 0x1532 <_ZN3TFT5beginEv+0x48>
    1532:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    1534:	60 ec       	ldi	r22, 0xC0	; 192
    1536:	ce 01       	movw	r24, r28
    1538:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    153c:	6b e2       	ldi	r22, 0x2B	; 43
    153e:	ce 01       	movw	r24, r28
    1540:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    1544:	66 e3       	ldi	r22, 0x36	; 54
    1546:	ce 01       	movw	r24, r28
    1548:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    154c:	68 e4       	ldi	r22, 0x48	; 72
    154e:	ce 01       	movw	r24, r28
    1550:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    1554:	6a e3       	ldi	r22, 0x3A	; 58
    1556:	ce 01       	movw	r24, r28
    1558:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    155c:	65 e5       	ldi	r22, 0x55	; 85
    155e:	ce 01       	movw	r24, r28
    1560:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    1564:	60 e2       	ldi	r22, 0x20	; 32
    1566:	ce 01       	movw	r24, r28
    1568:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    156c:	61 e1       	ldi	r22, 0x11	; 17
    156e:	ce 01       	movw	r24, r28
    1570:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
    1574:	2f ef       	ldi	r18, 0xFF	; 255
    1576:	89 ef       	ldi	r24, 0xF9	; 249
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	21 50       	subi	r18, 0x01	; 1
    157c:	80 40       	sbci	r24, 0x00	; 0
    157e:	90 40       	sbci	r25, 0x00	; 0
    1580:	e1 f7       	brne	.-8      	; 0x157a <_ZN3TFT5beginEv+0x90>
    1582:	00 c0       	rjmp	.+0      	; 0x1584 <_ZN3TFT5beginEv+0x9a>
    1584:	00 00       	nop
  _delay_ms(20);

  exportCommand(0x29);  // Display ON (29h)
    1586:	69 e2       	ldi	r22, 0x29	; 41
    1588:	ce 01       	movw	r24, r28
    158a:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
}
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	08 95       	ret

00001594 <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    1594:	1f 93       	push	r17
    1596:	cf 93       	push	r28
    1598:	df 93       	push	r29
    159a:	ec 01       	movw	r28, r24
    159c:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    159e:	66 e3       	ldi	r22, 0x36	; 54
    15a0:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>

  switch (rotation)
    15a4:	11 30       	cpi	r17, 0x01	; 1
    15a6:	89 f0       	breq	.+34     	; 0x15ca <_ZN3TFT11setRotationEa+0x36>
    15a8:	12 30       	cpi	r17, 0x02	; 2
    15aa:	a1 f0       	breq	.+40     	; 0x15d4 <_ZN3TFT11setRotationEa+0x40>
    15ac:	11 11       	cpse	r17, r1
    15ae:	16 c0       	rjmp	.+44     	; 0x15dc <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    15b0:	68 e2       	ldi	r22, 0x28	; 40
    15b2:	ce 01       	movw	r24, r28
    15b4:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>
    temp = m_Width;
    15b8:	88 81       	ld	r24, Y
    15ba:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    15bc:	2a 81       	ldd	r18, Y+2	; 0x02
    15be:	3b 81       	ldd	r19, Y+3	; 0x03
    15c0:	39 83       	std	Y+1, r19	; 0x01
    15c2:	28 83       	st	Y, r18
    m_Height = temp;
    15c4:	9b 83       	std	Y+3, r25	; 0x03
    15c6:	8a 83       	std	Y+2, r24	; 0x02
    break;
    15c8:	09 c0       	rjmp	.+18     	; 0x15dc <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    15ca:	68 e4       	ldi	r22, 0x48	; 72
    15cc:	ce 01       	movw	r24, r28
    15ce:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>
    break;
    15d2:	04 c0       	rjmp	.+8      	; 0x15dc <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    15d4:	68 e8       	ldi	r22, 0x88	; 136
    15d6:	ce 01       	movw	r24, r28
    15d8:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    15dc:	df 91       	pop	r29
    15de:	cf 91       	pop	r28
    15e0:	1f 91       	pop	r17
    15e2:	08 95       	ret

000015e4 <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    15e4:	af 92       	push	r10
    15e6:	bf 92       	push	r11
    15e8:	cf 92       	push	r12
    15ea:	df 92       	push	r13
    15ec:	ef 92       	push	r14
    15ee:	ff 92       	push	r15
    15f0:	0f 93       	push	r16
    15f2:	1f 93       	push	r17
    15f4:	cf 93       	push	r28
    15f6:	df 93       	push	r29
    15f8:	ec 01       	movw	r28, r24
    15fa:	5b 01       	movw	r10, r22
    15fc:	7a 01       	movw	r14, r20
    15fe:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    1600:	6a e2       	ldi	r22, 0x2A	; 42
    1602:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    1606:	b5 01       	movw	r22, r10
    1608:	ce 01       	movw	r24, r28
    160a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    160e:	b6 01       	movw	r22, r12
    1610:	ce 01       	movw	r24, r28
    1612:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    1616:	6b e2       	ldi	r22, 0x2B	; 43
    1618:	ce 01       	movw	r24, r28
    161a:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    161e:	b7 01       	movw	r22, r14
    1620:	ce 01       	movw	r24, r28
    1622:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    1626:	b8 01       	movw	r22, r16
    1628:	ce 01       	movw	r24, r28
    162a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    162e:	6c e2       	ldi	r22, 0x2C	; 44
    1630:	ce 01       	movw	r24, r28
    1632:	0e 94 56 0a 	call	0x14ac	; 0x14ac <_ZN3SPI13exportCommandEh>
}
    1636:	df 91       	pop	r29
    1638:	cf 91       	pop	r28
    163a:	1f 91       	pop	r17
    163c:	0f 91       	pop	r16
    163e:	ff 90       	pop	r15
    1640:	ef 90       	pop	r14
    1642:	df 90       	pop	r13
    1644:	cf 90       	pop	r12
    1646:	bf 90       	pop	r11
    1648:	af 90       	pop	r10
    164a:	08 95       	ret

0000164c <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
              Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    164c:	cf 92       	push	r12
    164e:	df 92       	push	r13
    1650:	ef 92       	push	r14
    1652:	ff 92       	push	r15
    1654:	0f 93       	push	r16
    1656:	1f 93       	push	r17
    1658:	cf 93       	push	r28
    165a:	df 93       	push	r29
    165c:	7c 01       	movw	r14, r24
    165e:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    1660:	fc 01       	movw	r30, r24
    1662:	02 81       	ldd	r16, Z+2	; 0x02
    1664:	13 81       	ldd	r17, Z+3	; 0x03
    1666:	01 50       	subi	r16, 0x01	; 1
    1668:	11 09       	sbc	r17, r1
    166a:	20 81       	ld	r18, Z
    166c:	31 81       	ldd	r19, Z+1	; 0x01
    166e:	21 50       	subi	r18, 0x01	; 1
    1670:	31 09       	sbc	r19, r1
    1672:	40 e0       	ldi	r20, 0x00	; 0
    1674:	50 e0       	ldi	r21, 0x00	; 0
    1676:	60 e0       	ldi	r22, 0x00	; 0
    1678:	70 e0       	ldi	r23, 0x00	; 0
    167a:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    167e:	f7 01       	movw	r30, r14
    1680:	82 81       	ldd	r24, Z+2	; 0x02
    1682:	93 81       	ldd	r25, Z+3	; 0x03
    1684:	18 16       	cp	r1, r24
    1686:	19 06       	cpc	r1, r25
    1688:	ec f4       	brge	.+58     	; 0x16c4 <_ZN3TFT10fillScreenEj+0x78>
    168a:	00 e0       	ldi	r16, 0x00	; 0
    168c:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    168e:	f7 01       	movw	r30, r14
    1690:	80 81       	ld	r24, Z
    1692:	91 81       	ldd	r25, Z+1	; 0x01
    1694:	18 16       	cp	r1, r24
    1696:	19 06       	cpc	r1, r25
    1698:	6c f4       	brge	.+26     	; 0x16b4 <_ZN3TFT10fillScreenEj+0x68>
    169a:	c0 e0       	ldi	r28, 0x00	; 0
    169c:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    169e:	b6 01       	movw	r22, r12
    16a0:	c7 01       	movw	r24, r14
    16a2:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    16a6:	21 96       	adiw	r28, 0x01	; 1
    16a8:	f7 01       	movw	r30, r14
    16aa:	80 81       	ld	r24, Z
    16ac:	91 81       	ldd	r25, Z+1	; 0x01
    16ae:	c8 17       	cp	r28, r24
    16b0:	d9 07       	cpc	r29, r25
    16b2:	ac f3       	brlt	.-22     	; 0x169e <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    16b4:	0f 5f       	subi	r16, 0xFF	; 255
    16b6:	1f 4f       	sbci	r17, 0xFF	; 255
    16b8:	f7 01       	movw	r30, r14
    16ba:	82 81       	ldd	r24, Z+2	; 0x02
    16bc:	93 81       	ldd	r25, Z+3	; 0x03
    16be:	08 17       	cp	r16, r24
    16c0:	19 07       	cpc	r17, r25
    16c2:	2c f3       	brlt	.-54     	; 0x168e <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    16c4:	df 91       	pop	r29
    16c6:	cf 91       	pop	r28
    16c8:	1f 91       	pop	r17
    16ca:	0f 91       	pop	r16
    16cc:	ff 90       	pop	r15
    16ce:	ef 90       	pop	r14
    16d0:	df 90       	pop	r13
    16d2:	cf 90       	pop	r12
    16d4:	08 95       	ret

000016d6 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>:
/*----------------------------------------//
              Draw Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    16d6:	2f 92       	push	r2
    16d8:	3f 92       	push	r3
    16da:	4f 92       	push	r4
    16dc:	5f 92       	push	r5
    16de:	6f 92       	push	r6
    16e0:	7f 92       	push	r7
    16e2:	8f 92       	push	r8
    16e4:	9f 92       	push	r9
    16e6:	af 92       	push	r10
    16e8:	bf 92       	push	r11
    16ea:	cf 92       	push	r12
    16ec:	df 92       	push	r13
    16ee:	ef 92       	push	r14
    16f0:	ff 92       	push	r15
    16f2:	0f 93       	push	r16
    16f4:	1f 93       	push	r17
    16f6:	cf 93       	push	r28
    16f8:	df 93       	push	r29
    16fa:	cd b7       	in	r28, 0x3d	; 61
    16fc:	de b7       	in	r29, 0x3e	; 62
    16fe:	2a 97       	sbiw	r28, 0x0a	; 10
    1700:	0f b6       	in	r0, 0x3f	; 63
    1702:	f8 94       	cli
    1704:	de bf       	out	0x3e, r29	; 62
    1706:	0f be       	out	0x3f, r0	; 63
    1708:	cd bf       	out	0x3d, r28	; 61
    170a:	3c 01       	movw	r6, r24
    170c:	29 01       	movw	r4, r18
    170e:	18 87       	std	Y+8, r17	; 0x08
    1710:	0f 83       	std	Y+7, r16	; 0x07
    1712:	16 01       	movw	r2, r12
    1714:	ba 82       	std	Y+2, r11	; 0x02
    1716:	a9 82       	std	Y+1, r10	; 0x01
    1718:	9c 82       	std	Y+4, r9	; 0x04
    171a:	8b 82       	std	Y+3, r8	; 0x03

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    171c:	04 0f       	add	r16, r20
    171e:	15 1f       	adc	r17, r21
    1720:	01 50       	subi	r16, 0x01	; 1
    1722:	11 09       	sbc	r17, r1
    1724:	9b 01       	movw	r18, r22
    1726:	24 0d       	add	r18, r4
    1728:	35 1d       	adc	r19, r5
    172a:	21 50       	subi	r18, 0x01	; 1
    172c:	31 09       	sbc	r19, r1
    172e:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<height; i++)
    1732:	2f 81       	ldd	r18, Y+7	; 0x07
    1734:	38 85       	ldd	r19, Y+8	; 0x08
    1736:	12 16       	cp	r1, r18
    1738:	13 06       	cpc	r1, r19
    173a:	0c f0       	brlt	.+2      	; 0x173e <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x68>
    173c:	5b c0       	rjmp	.+182    	; 0x17f4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11e>
  {
    for (int j=0; j<(width / 4); j++)
    173e:	c2 01       	movw	r24, r4
    1740:	99 23       	and	r25, r25
    1742:	0c f4       	brge	.+2      	; 0x1746 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x70>
    1744:	03 96       	adiw	r24, 0x03	; 3
    1746:	fc 01       	movw	r30, r24
    1748:	f5 95       	asr	r31
    174a:	e7 95       	ror	r30
    174c:	f5 95       	asr	r31
    174e:	e7 95       	ror	r30
    1750:	fa 87       	std	Y+10, r31	; 0x0a
    1752:	e9 87       	std	Y+9, r30	; 0x09
    1754:	fe 83       	std	Y+6, r31	; 0x06
    1756:	ed 83       	std	Y+5, r30	; 0x05
    1758:	ae 2c       	mov	r10, r14
    175a:	bf 2c       	mov	r11, r15
    175c:	41 2c       	mov	r4, r1
    175e:	51 2c       	mov	r5, r1
    1760:	29 85       	ldd	r18, Y+9	; 0x09
    1762:	3a 85       	ldd	r19, Y+10	; 0x0a
    1764:	12 16       	cp	r1, r18
    1766:	13 06       	cpc	r1, r19
    1768:	c4 f5       	brge	.+112    	; 0x17da <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x104>
    176a:	ed 80       	ldd	r14, Y+5	; 0x05
    176c:	fe 80       	ldd	r15, Y+6	; 0x06
    176e:	ea 0c       	add	r14, r10
    1770:	fb 1c       	adc	r15, r11
    1772:	85 01       	movw	r16, r10
    {

      data = pgm_read_byte(&bitmap[i * (width / 4) + j]);
    1774:	f8 01       	movw	r30, r16
    1776:	94 90       	lpm	r9, Z
    1778:	68 94       	set
    177a:	cc 24       	eor	r12, r12
    177c:	c2 f8       	bld	r12, 2
    177e:	d1 2c       	mov	r13, r1

      for (int k=0; k<4; k++)
      {
        temp = data >> 6;
    1780:	89 2d       	mov	r24, r9
    1782:	82 95       	swap	r24
    1784:	86 95       	lsr	r24
    1786:	86 95       	lsr	r24
    1788:	83 70       	andi	r24, 0x03	; 3

        if (temp == 0x00)       //1Pixel = 00
    178a:	29 f4       	brne	.+10     	; 0x1796 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc0>
        {
          exportLongData(color0Bit);
    178c:	b1 01       	movw	r22, r2
    178e:	c3 01       	movw	r24, r6
    1790:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    1794:	17 c0       	rjmp	.+46     	; 0x17c4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x01)  //1Pixel = 01
    1796:	81 30       	cpi	r24, 0x01	; 1
    1798:	31 f4       	brne	.+12     	; 0x17a6 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xd0>
        {
          exportLongData(color1Bit);
    179a:	69 81       	ldd	r22, Y+1	; 0x01
    179c:	7a 81       	ldd	r23, Y+2	; 0x02
    179e:	c3 01       	movw	r24, r6
    17a0:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    17a4:	0f c0       	rjmp	.+30     	; 0x17c4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x02)  //1Pixel = 10
    17a6:	82 30       	cpi	r24, 0x02	; 2
    17a8:	31 f4       	brne	.+12     	; 0x17b6 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xe0>
        {
          exportLongData(color2Bit);
    17aa:	6b 81       	ldd	r22, Y+3	; 0x03
    17ac:	7c 81       	ldd	r23, Y+4	; 0x04
    17ae:	c3 01       	movw	r24, r6
    17b0:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    17b4:	07 c0       	rjmp	.+14     	; 0x17c4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x03)  //1Pixel = 11
    17b6:	83 30       	cpi	r24, 0x03	; 3
    17b8:	29 f4       	brne	.+10     	; 0x17c4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        {
          exportLongData(color3Bit);
    17ba:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17bc:	78 a1       	ldd	r23, Y+32	; 0x20
    17be:	c3 01       	movw	r24, r6
    17c0:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
        }

        data <<= 2;
    17c4:	99 0c       	add	r9, r9
    17c6:	99 0c       	add	r9, r9
    17c8:	f1 e0       	ldi	r31, 0x01	; 1
    17ca:	cf 1a       	sub	r12, r31
    17cc:	d1 08       	sbc	r13, r1
    for (int j=0; j<(width / 4); j++)
    {

      data = pgm_read_byte(&bitmap[i * (width / 4) + j]);

      for (int k=0; k<4; k++)
    17ce:	c1 f6       	brne	.-80     	; 0x1780 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xaa>
    17d0:	0f 5f       	subi	r16, 0xFF	; 255
    17d2:	1f 4f       	sbci	r17, 0xFF	; 255

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<height; i++)
  {
    for (int j=0; j<(width / 4); j++)
    17d4:	e0 16       	cp	r14, r16
    17d6:	f1 06       	cpc	r15, r17
    17d8:	69 f6       	brne	.-102    	; 0x1774 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x9e>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<height; i++)
    17da:	2f ef       	ldi	r18, 0xFF	; 255
    17dc:	42 1a       	sub	r4, r18
    17de:	52 0a       	sbc	r5, r18
    17e0:	8d 81       	ldd	r24, Y+5	; 0x05
    17e2:	9e 81       	ldd	r25, Y+6	; 0x06
    17e4:	a8 0e       	add	r10, r24
    17e6:	b9 1e       	adc	r11, r25
    17e8:	ef 81       	ldd	r30, Y+7	; 0x07
    17ea:	f8 85       	ldd	r31, Y+8	; 0x08
    17ec:	e4 15       	cp	r30, r4
    17ee:	f5 05       	cpc	r31, r5
    17f0:	09 f0       	breq	.+2      	; 0x17f4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11e>
    17f2:	b6 cf       	rjmp	.-148    	; 0x1760 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x8a>
      }

    }
  }

}
    17f4:	2a 96       	adiw	r28, 0x0a	; 10
    17f6:	0f b6       	in	r0, 0x3f	; 63
    17f8:	f8 94       	cli
    17fa:	de bf       	out	0x3e, r29	; 62
    17fc:	0f be       	out	0x3f, r0	; 63
    17fe:	cd bf       	out	0x3d, r28	; 61
    1800:	df 91       	pop	r29
    1802:	cf 91       	pop	r28
    1804:	1f 91       	pop	r17
    1806:	0f 91       	pop	r16
    1808:	ff 90       	pop	r15
    180a:	ef 90       	pop	r14
    180c:	df 90       	pop	r13
    180e:	cf 90       	pop	r12
    1810:	bf 90       	pop	r11
    1812:	af 90       	pop	r10
    1814:	9f 90       	pop	r9
    1816:	8f 90       	pop	r8
    1818:	7f 90       	pop	r7
    181a:	6f 90       	pop	r6
    181c:	5f 90       	pop	r5
    181e:	4f 90       	pop	r4
    1820:	3f 90       	pop	r3
    1822:	2f 90       	pop	r2
    1824:	08 95       	ret

00001826 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj>:
/*----------------------------------------//
            Draw Bitmap Twice
//----------------------------------------*/

void TFT::drawBitmapTwice(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    1826:	2f 92       	push	r2
    1828:	3f 92       	push	r3
    182a:	4f 92       	push	r4
    182c:	5f 92       	push	r5
    182e:	6f 92       	push	r6
    1830:	7f 92       	push	r7
    1832:	8f 92       	push	r8
    1834:	9f 92       	push	r9
    1836:	af 92       	push	r10
    1838:	bf 92       	push	r11
    183a:	cf 92       	push	r12
    183c:	df 92       	push	r13
    183e:	ef 92       	push	r14
    1840:	ff 92       	push	r15
    1842:	0f 93       	push	r16
    1844:	1f 93       	push	r17
    1846:	cf 93       	push	r28
    1848:	df 93       	push	r29
    184a:	cd b7       	in	r28, 0x3d	; 61
    184c:	de b7       	in	r29, 0x3e	; 62
    184e:	60 97       	sbiw	r28, 0x10	; 16
    1850:	0f b6       	in	r0, 0x3f	; 63
    1852:	f8 94       	cli
    1854:	de bf       	out	0x3e, r29	; 62
    1856:	0f be       	out	0x3f, r0	; 63
    1858:	cd bf       	out	0x3d, r28	; 61
    185a:	98 8b       	std	Y+16, r25	; 0x10
    185c:	8f 87       	std	Y+15, r24	; 0x0f
    185e:	29 01       	movw	r4, r18
    1860:	38 01       	movw	r6, r16
    1862:	da 82       	std	Y+2, r13	; 0x02
    1864:	c9 82       	std	Y+1, r12	; 0x01
    1866:	ba 86       	std	Y+10, r11	; 0x0a
    1868:	a9 86       	std	Y+9, r10	; 0x09
    186a:	9c 86       	std	Y+12, r9	; 0x0c
    186c:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    186e:	8a 01       	movw	r16, r20
    1870:	06 0d       	add	r16, r6
    1872:	17 1d       	adc	r17, r7
    1874:	01 50       	subi	r16, 0x01	; 1
    1876:	11 09       	sbc	r17, r1
    1878:	9b 01       	movw	r18, r22
    187a:	24 0d       	add	r18, r4
    187c:	35 1d       	adc	r19, r5
    187e:	21 50       	subi	r18, 0x01	; 1
    1880:	31 09       	sbc	r19, r1
    1882:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    1886:	c3 01       	movw	r24, r6
    1888:	99 23       	and	r25, r25
    188a:	0c f4       	brge	.+2      	; 0x188e <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x68>
    188c:	01 96       	adiw	r24, 0x01	; 1
    188e:	9c 01       	movw	r18, r24
    1890:	35 95       	asr	r19
    1892:	27 95       	ror	r18
    1894:	3e 87       	std	Y+14, r19	; 0x0e
    1896:	2d 87       	std	Y+13, r18	; 0x0d
    1898:	12 16       	cp	r1, r18
    189a:	13 06       	cpc	r1, r19
    189c:	0c f0       	brlt	.+2      	; 0x18a0 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x7a>
    189e:	7c c0       	rjmp	.+248    	; 0x1998 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    18a0:	c2 01       	movw	r24, r4
    18a2:	99 23       	and	r25, r25
    18a4:	0c f4       	brge	.+2      	; 0x18a8 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x82>
    18a6:	07 96       	adiw	r24, 0x07	; 7
    18a8:	fc 01       	movw	r30, r24
    18aa:	f5 95       	asr	r31
    18ac:	e7 95       	ror	r30
    18ae:	f5 95       	asr	r31
    18b0:	e7 95       	ror	r30
    18b2:	f5 95       	asr	r31
    18b4:	e7 95       	ror	r30
    18b6:	fe 83       	std	Y+6, r31	; 0x06
    18b8:	ed 83       	std	Y+5, r30	; 0x05
    18ba:	f8 87       	std	Y+8, r31	; 0x08
    18bc:	ef 83       	std	Y+7, r30	; 0x07
    18be:	6e 2c       	mov	r6, r14
    18c0:	7f 2c       	mov	r7, r15
    18c2:	21 2c       	mov	r2, r1
    18c4:	31 2c       	mov	r3, r1
    18c6:	68 94       	set
    18c8:	aa 24       	eor	r10, r10
    18ca:	a1 f8       	bld	r10, 1
    18cc:	b1 2c       	mov	r11, r1
    18ce:	8f 80       	ldd	r8, Y+7	; 0x07
    18d0:	98 84       	ldd	r9, Y+8	; 0x08
    18d2:	86 0c       	add	r8, r6
    18d4:	97 1c       	adc	r9, r7
    18d6:	7c 82       	std	Y+4, r7	; 0x04
    18d8:	6b 82       	std	Y+3, r6	; 0x03
    18da:	4f 84       	ldd	r4, Y+15	; 0x0f
    18dc:	58 88       	ldd	r5, Y+16	; 0x10
    18de:	2d 81       	ldd	r18, Y+5	; 0x05
    18e0:	3e 81       	ldd	r19, Y+6	; 0x06
    18e2:	12 16       	cp	r1, r18
    18e4:	13 06       	cpc	r1, r19
    18e6:	0c f0       	brlt	.+2      	; 0x18ea <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xc4>
    18e8:	43 c0       	rjmp	.+134    	; 0x1970 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x14a>
    18ea:	eb 80       	ldd	r14, Y+3	; 0x03
    18ec:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    18ee:	f7 01       	movw	r30, r14
    18f0:	c4 90       	lpm	r12, Z
    18f2:	68 94       	set
    18f4:	66 24       	eor	r6, r6
    18f6:	62 f8       	bld	r6, 2
    18f8:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    18fa:	dc 2c       	mov	r13, r12
    18fc:	d6 94       	lsr	r13
    18fe:	d6 94       	lsr	r13
    1900:	d6 94       	lsr	r13
    1902:	d6 94       	lsr	r13
    1904:	d6 94       	lsr	r13
    1906:	d6 94       	lsr	r13
    1908:	02 e0       	ldi	r16, 0x02	; 2
    190a:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    190c:	d1 10       	cpse	r13, r1
    190e:	06 c0       	rjmp	.+12     	; 0x191c <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0Bit);
    1910:	69 81       	ldd	r22, Y+1	; 0x01
    1912:	7a 81       	ldd	r23, Y+2	; 0x02
    1914:	c2 01       	movw	r24, r4
    1916:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    191a:	1a c0       	rjmp	.+52     	; 0x1950 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    191c:	f1 e0       	ldi	r31, 0x01	; 1
    191e:	df 12       	cpse	r13, r31
    1920:	06 c0       	rjmp	.+12     	; 0x192e <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1Bit);
    1922:	69 85       	ldd	r22, Y+9	; 0x09
    1924:	7a 85       	ldd	r23, Y+10	; 0x0a
    1926:	c2 01       	movw	r24, r4
    1928:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    192c:	11 c0       	rjmp	.+34     	; 0x1950 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    192e:	22 e0       	ldi	r18, 0x02	; 2
    1930:	d2 12       	cpse	r13, r18
    1932:	06 c0       	rjmp	.+12     	; 0x1940 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2Bit);
    1934:	6b 85       	ldd	r22, Y+11	; 0x0b
    1936:	7c 85       	ldd	r23, Y+12	; 0x0c
    1938:	c2 01       	movw	r24, r4
    193a:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    193e:	08 c0       	rjmp	.+16     	; 0x1950 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    1940:	33 e0       	ldi	r19, 0x03	; 3
    1942:	d3 12       	cpse	r13, r19
    1944:	05 c0       	rjmp	.+10     	; 0x1950 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3Bit);
    1946:	6d a1       	ldd	r22, Y+37	; 0x25
    1948:	7e a1       	ldd	r23, Y+38	; 0x26
    194a:	c2 01       	movw	r24, r4
    194c:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN3SPI14exportLongDataEj>
    1950:	01 50       	subi	r16, 0x01	; 1
    1952:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    1954:	d9 f6       	brne	.-74     	; 0x190c <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xe6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    1956:	cc 0c       	add	r12, r12
    1958:	cc 0c       	add	r12, r12
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	68 1a       	sub	r6, r24
    195e:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    1960:	61 f6       	brne	.-104    	; 0x18fa <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xd4>
    1962:	9f ef       	ldi	r25, 0xFF	; 255
    1964:	e9 1a       	sub	r14, r25
    1966:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    1968:	e8 14       	cp	r14, r8
    196a:	f9 04       	cpc	r15, r9
    196c:	09 f0       	breq	.+2      	; 0x1970 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x14a>
    196e:	bf cf       	rjmp	.-130    	; 0x18ee <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xc8>
    1970:	e1 e0       	ldi	r30, 0x01	; 1
    1972:	ae 1a       	sub	r10, r30
    1974:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    1976:	09 f0       	breq	.+2      	; 0x197a <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x154>
    1978:	b2 cf       	rjmp	.-156    	; 0x18de <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xb8>
    197a:	6b 80       	ldd	r6, Y+3	; 0x03
    197c:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    197e:	ff ef       	ldi	r31, 0xFF	; 255
    1980:	2f 1a       	sub	r2, r31
    1982:	3f 0a       	sbc	r3, r31
    1984:	2f 81       	ldd	r18, Y+7	; 0x07
    1986:	38 85       	ldd	r19, Y+8	; 0x08
    1988:	62 0e       	add	r6, r18
    198a:	73 1e       	adc	r7, r19
    198c:	8d 85       	ldd	r24, Y+13	; 0x0d
    198e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1990:	28 16       	cp	r2, r24
    1992:	39 06       	cpc	r3, r25
    1994:	09 f0       	breq	.+2      	; 0x1998 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x172>
    1996:	97 cf       	rjmp	.-210    	; 0x18c6 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    1998:	60 96       	adiw	r28, 0x10	; 16
    199a:	0f b6       	in	r0, 0x3f	; 63
    199c:	f8 94       	cli
    199e:	de bf       	out	0x3e, r29	; 62
    19a0:	0f be       	out	0x3f, r0	; 63
    19a2:	cd bf       	out	0x3d, r28	; 61
    19a4:	df 91       	pop	r29
    19a6:	cf 91       	pop	r28
    19a8:	1f 91       	pop	r17
    19aa:	0f 91       	pop	r16
    19ac:	ff 90       	pop	r15
    19ae:	ef 90       	pop	r14
    19b0:	df 90       	pop	r13
    19b2:	cf 90       	pop	r12
    19b4:	bf 90       	pop	r11
    19b6:	af 90       	pop	r10
    19b8:	9f 90       	pop	r9
    19ba:	8f 90       	pop	r8
    19bc:	7f 90       	pop	r7
    19be:	6f 90       	pop	r6
    19c0:	5f 90       	pop	r5
    19c2:	4f 90       	pop	r4
    19c4:	3f 90       	pop	r3
    19c6:	2f 90       	pop	r2
    19c8:	08 95       	ret

000019ca <__tablejump2__>:
    19ca:	ee 0f       	add	r30, r30
    19cc:	ff 1f       	adc	r31, r31
    19ce:	05 90       	lpm	r0, Z+
    19d0:	f4 91       	lpm	r31, Z
    19d2:	e0 2d       	mov	r30, r0
    19d4:	09 94       	ijmp

000019d6 <_exit>:
    19d6:	f8 94       	cli

000019d8 <__stop_program>:
    19d8:	ff cf       	rjmp	.-2      	; 0x19d8 <__stop_program>
