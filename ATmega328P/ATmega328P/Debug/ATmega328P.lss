
ATmega328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000018be  00001952  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800130  00800130  00001982  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001982  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  000019f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004c19  00000000  00000000  00001b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011aa  00000000  00000000  000067a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001268  00000000  00000000  0000794f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000530  00000000  00000000  00008bb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c02  00000000  00000000  000090e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002133  00000000  00000000  00009cea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000be1d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__ctors_end>
       4:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
       8:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
       c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      10:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      14:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      18:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      1c:	0c 94 af 06 	jmp	0xd5e	; 0xd5e <__vector_7>
      20:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      24:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      28:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      2c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      30:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      34:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      38:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      3c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      40:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      44:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      48:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      4c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      50:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      54:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      58:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      5c:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      60:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>
      64:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 30       	cpi	r16, 0x00	; 0
      6a:	00 00       	nop
      6c:	10 00       	.word	0x0010	; ????
	...
      76:	00 00       	nop
      78:	00 78       	andi	r16, 0x80	; 128
      7a:	6c 28       	or	r6, r12
      7c:	3c 66       	ori	r19, 0x6C	; 108
      7e:	20 30       	cpi	r18, 0x00	; 0
      80:	18 30       	cpi	r17, 0x08	; 8
      82:	54 18       	sub	r5, r4
      84:	00 00       	nop
      86:	00 06       	cpc	r0, r16
      88:	00 78       	andi	r16, 0x80	; 128
      8a:	24 7c       	andi	r18, 0xC4	; 196
      8c:	60 0c       	add	r6, r0
      8e:	50 10       	cpse	r5, r0
      90:	30 18       	sub	r3, r0
      92:	38 18       	sub	r3, r8
      94:	00 00       	nop
      96:	00 0c       	add	r0, r0
      98:	00 78       	andi	r16, 0x80	; 128
      9a:	00 28       	or	r0, r0
      9c:	38 18       	sub	r3, r8
      9e:	34 00       	.word	0x0034	; ????
      a0:	30 18       	sub	r3, r0
      a2:	10 7e       	andi	r17, 0xE0	; 224
      a4:	00 7e       	andi	r16, 0xE0	; 224
      a6:	00 18       	sub	r0, r0
      a8:	00 30       	cpi	r16, 0x00	; 0
      aa:	00 7c       	andi	r16, 0xC0	; 192
      ac:	0c 30       	cpi	r16, 0x0C	; 12
      ae:	48 00       	.word	0x0048	; ????
      b0:	30 18       	sub	r3, r0
      b2:	38 18       	sub	r3, r8
      b4:	00 00       	nop
      b6:	00 30       	cpi	r16, 0x00	; 0
      b8:	00 00       	nop
      ba:	00 28       	or	r0, r0
      bc:	78 66       	ori	r23, 0x68	; 104
      be:	34 00       	.word	0x0034	; ????
      c0:	18 30       	cpi	r17, 0x08	; 8
      c2:	54 18       	sub	r5, r4
      c4:	00 00       	nop
      c6:	00 60       	ori	r16, 0x00	; 0
      c8:	00 30       	cpi	r16, 0x00	; 0
      ca:	00 00       	nop
      cc:	10 00       	.word	0x0010	; ????
      ce:	00 00       	nop
      d0:	00 00       	nop
      d2:	00 00       	nop
      d4:	30 00       	.word	0x0030	; ????
      d6:	30 00       	.word	0x0030	; ????
	...
      e4:	10 00       	.word	0x0010	; ????
      e6:	00 00       	nop
      e8:	38 18       	sub	r3, r8
      ea:	fc fc       	.word	0xfcfc	; ????
      ec:	06 fe       	sbrs	r0, 6
      ee:	7c fe       	.word	0xfe7c	; ????
      f0:	7c 7c       	andi	r23, 0xCC	; 204
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	00 7c       	andi	r16, 0xC0	; 192
      f8:	4c 38       	cpi	r20, 0x8C	; 140
      fa:	06 06       	cpc	r0, r22
      fc:	c6 c0       	rjmp	.+396    	; 0x28a <__trampolines_end+0x222>
      fe:	c0 06       	cpc	r12, r16
     100:	c6 c6       	rjmp	.+3468   	; 0xe8e <_ZN4Font11printLetterEiih+0xee>
     102:	00 00       	nop
     104:	18 00       	.word	0x0018	; ????
     106:	30 c6       	rjmp	.+3168   	; 0xd68 <__vector_7+0xa>
     108:	c6 18       	sub	r12, r6
     10a:	06 3c       	cpi	r16, 0xC6	; 198
     10c:	c6 fc       	sbrc	r12, 6
     10e:	fc 06       	cpc	r15, r28
     110:	7c c6       	rjmp	.+3320   	; 0xe0a <_ZN4Font11printLetterEiih+0x6a>
     112:	30 30       	cpi	r19, 0x00	; 0
     114:	30 7c       	andi	r19, 0xC0	; 192
     116:	18 06       	cpc	r1, r24
     118:	c6 18       	sub	r12, r6
     11a:	7c 06       	cpc	r7, r28
     11c:	c6 06       	cpc	r12, r22
     11e:	c6 0c       	add	r12, r6
     120:	c6 c6       	rjmp	.+3468   	; 0xeae <_ZN4Font5printEiiPKc+0x1c>
     122:	00 00       	nop
     124:	60 00       	.word	0x0060	; ????
     126:	0c 06       	cpc	r0, r28
     128:	c6 18       	sub	r12, r6
     12a:	c0 06       	cpc	r12, r16
     12c:	c6 06       	cpc	r12, r22
     12e:	c6 18       	sub	r12, r6
     130:	c6 7e       	andi	r28, 0xE6	; 230
     132:	00 00       	nop
     134:	30 7c       	andi	r19, 0xC0	; 192
     136:	18 3c       	cpi	r17, 0xC8	; 200
     138:	64 18       	sub	r6, r4
     13a:	c0 06       	cpc	r12, r16
     13c:	fe 06       	cpc	r15, r30
     13e:	c6 30       	cpi	r28, 0x06	; 6
     140:	c6 06       	cpc	r12, r22
     142:	30 30       	cpi	r19, 0x00	; 0
     144:	18 00       	.word	0x0018	; ????
     146:	30 00       	.word	0x0030	; ????
     148:	38 3c       	cpi	r19, 0xC8	; 200
     14a:	fe fc       	.word	0xfcfe	; ????
     14c:	06 fc       	sbrc	r0, 6
     14e:	7c 30       	cpi	r23, 0x0C	; 12
     150:	7c 7c       	andi	r23, 0xCC	; 204
     152:	00 10       	cpse	r0, r0
     154:	00 00       	nop
     156:	00 30       	cpi	r16, 0x00	; 0
	...
     168:	7c 7c       	andi	r23, 0xCC	; 204
     16a:	fc 7e       	andi	r31, 0xEC	; 236
     16c:	fc fe       	.word	0xfefc	; ????
     16e:	fe 7c       	andi	r31, 0xCE	; 206
     170:	c6 3c       	cpi	r28, 0xC6	; 198
     172:	1e c6       	rjmp	.+3132   	; 0xdb0 <_ZN4Font11printLetterEiih+0x10>
     174:	c0 c6       	rjmp	.+3456   	; 0xef6 <_ZN5Frame11updateFrameEv+0x18>
     176:	c6 7c       	andi	r28, 0xC6	; 198
     178:	c6 c6       	rjmp	.+3468   	; 0xf06 <_ZN5Frame11updateFrameEv+0x28>
     17a:	c6 c0       	rjmp	.+396    	; 0x308 <__trampolines_end+0x2a0>
     17c:	c6 c0       	rjmp	.+396    	; 0x30a <__trampolines_end+0x2a2>
     17e:	c0 c6       	rjmp	.+3456   	; 0xf00 <_ZN5Frame11updateFrameEv+0x22>
     180:	c6 18       	sub	r12, r6
     182:	06 c6       	rjmp	.+3084   	; 0xd90 <_GLOBAL__sub_I_game+0x6>
     184:	c0 ee       	ldi	r28, 0xE0	; 224
     186:	e6 c6       	rjmp	.+3532   	; 0xf54 <_ZN4Game5titleEv+0x38>
     188:	c6 c6       	rjmp	.+3468   	; 0xf16 <_ZN5Frame11updateFrameEv+0x38>
     18a:	c6 c0       	rjmp	.+396    	; 0x318 <__trampolines_end+0x2b0>
     18c:	c6 c0       	rjmp	.+396    	; 0x31a <__trampolines_end+0x2b2>
     18e:	c0 c0       	rjmp	.+384    	; 0x310 <__trampolines_end+0x2a8>
     190:	c6 18       	sub	r12, r6
     192:	06 cc       	rjmp	.-2036   	; 0xfffff9a0 <__eeprom_end+0xff7ef9a0>
     194:	c0 fe       	sbrs	r12, 0
     196:	f6 c6       	rjmp	.+3564   	; 0xf84 <_ZN4Game5titleEv+0x68>
     198:	d6 c6       	rjmp	.+3500   	; 0xf46 <_ZN4Game5titleEv+0x2a>
     19a:	fc c0       	rjmp	.+504    	; 0x394 <_ZL9logoAtmel+0x2c>
     19c:	c6 f8       	bld	r12, 6
     19e:	fc de       	rcall	.-520    	; 0xffffff98 <__eeprom_end+0xff7eff98>
     1a0:	fe 18       	sub	r15, r14
     1a2:	06 f8       	bld	r0, 6
     1a4:	c0 d6       	rcall	.+3456   	; 0xf26 <_ZN4Game5titleEv+0xa>
     1a6:	de c6       	rjmp	.+3516   	; 0xf64 <_ZN4Game5titleEv+0x48>
     1a8:	dc fe       	.word	0xfedc	; ????
     1aa:	c6 c0       	rjmp	.+396    	; 0x338 <__trampolines_end+0x2d0>
     1ac:	c6 c0       	rjmp	.+396    	; 0x33a <__trampolines_end+0x2d2>
     1ae:	c0 c6       	rjmp	.+3456   	; 0xf30 <_ZN4Game5titleEv+0x14>
     1b0:	c6 18       	sub	r12, r6
     1b2:	06 cc       	rjmp	.-2036   	; 0xfffff9c0 <__eeprom_end+0xff7ef9c0>
     1b4:	c0 c6       	rjmp	.+3456   	; 0xf36 <_ZN4Game5titleEv+0x1a>
     1b6:	ce c6       	rjmp	.+3484   	; 0xf54 <_ZN4Game5titleEv+0x38>
     1b8:	c0 c6       	rjmp	.+3456   	; 0xf3a <_ZN4Game5titleEv+0x1e>
     1ba:	c6 c0       	rjmp	.+396    	; 0x348 <__trampolines_end+0x2e0>
     1bc:	c6 c0       	rjmp	.+396    	; 0x34a <__trampolines_end+0x2e2>
     1be:	c0 c6       	rjmp	.+3456   	; 0xf40 <_ZN4Game5titleEv+0x24>
     1c0:	c6 18       	sub	r12, r6
     1c2:	c6 c6       	rjmp	.+3468   	; 0xf50 <_ZN4Game5titleEv+0x34>
     1c4:	c0 c6       	rjmp	.+3456   	; 0xf46 <_ZN4Game5titleEv+0x2a>
     1c6:	c6 c6       	rjmp	.+3468   	; 0xf54 <_ZN4Game5titleEv+0x38>
     1c8:	7c c6       	rjmp	.+3320   	; 0xec2 <_ZN4Font5printEiiPKc+0x30>
     1ca:	fc 7e       	andi	r31, 0xEC	; 236
     1cc:	fc fe       	.word	0xfefc	; ????
     1ce:	c0 7e       	andi	r28, 0xE0	; 224
     1d0:	c6 3c       	cpi	r28, 0xC6	; 198
     1d2:	7c c6       	rjmp	.+3320   	; 0xecc <_ZN4Font5printEiiPKc+0x3a>
     1d4:	fe c6       	rjmp	.+3580   	; 0xfd2 <_ZN4Game5titleEv+0xb6>
     1d6:	c6 7c       	andi	r28, 0xC6	; 198
	...
     1e8:	fc 7c       	andi	r31, 0xCC	; 204
     1ea:	fc 7e       	andi	r31, 0xEC	; 236
     1ec:	7e c6       	rjmp	.+3324   	; 0xeea <_ZN5Frame11updateFrameEv+0xc>
     1ee:	c6 c6       	rjmp	.+3468   	; 0xf7c <_ZN4Game5titleEv+0x60>
     1f0:	c6 66       	ori	r28, 0x66	; 102
     1f2:	fe 00       	.word	0x00fe	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	c6 c6       	rjmp	.+3468   	; 0xf86 <_ZN4Game5titleEv+0x6a>
     1fa:	c6 c0       	rjmp	.+396    	; 0x388 <_ZL9logoAtmel+0x20>
     1fc:	18 c6       	rjmp	.+3120   	; 0xe2e <_ZN4Font11printLetterEiih+0x8e>
     1fe:	c6 c6       	rjmp	.+3468   	; 0xf8c <_ZN4Game5titleEv+0x70>
     200:	c6 66       	ori	r28, 0x66	; 102
     202:	06 38       	cpi	r16, 0x86	; 134
     204:	60 38       	cpi	r22, 0x80	; 128
     206:	10 00       	.word	0x0010	; ????
     208:	c6 c6       	rjmp	.+3468   	; 0xf96 <_ZN4Game5titleEv+0x7a>
     20a:	c6 c0       	rjmp	.+396    	; 0x398 <_ZL9logoAtmel+0x30>
     20c:	18 c6       	rjmp	.+3120   	; 0xe3e <_ZN4Font11printLetterEiih+0x9e>
     20e:	c6 c6       	rjmp	.+3468   	; 0xf9c <_ZN4Game5titleEv+0x80>
     210:	6c 66       	ori	r22, 0x6C	; 108
     212:	0c 30       	cpi	r16, 0x0C	; 12
     214:	30 18       	sub	r3, r0
     216:	38 00       	.word	0x0038	; ????
     218:	c6 c6       	rjmp	.+3468   	; 0xfa6 <_ZN4Game5titleEv+0x8a>
     21a:	c6 7c       	andi	r28, 0xC6	; 198
     21c:	18 c6       	rjmp	.+3120   	; 0xe4e <_ZN4Font11printLetterEiih+0xae>
     21e:	c6 d6       	rcall	.+3468   	; 0xfac <_ZN4Game5titleEv+0x90>
     220:	38 3c       	cpi	r19, 0xC8	; 200
     222:	38 30       	cpi	r19, 0x08	; 8
     224:	18 18       	sub	r1, r8
     226:	6c 00       	.word	0x006c	; ????
     228:	fc de       	rcall	.-520    	; 0x22 <__FUSE_REGION_LENGTH__+0x1f>
     22a:	fc 06       	cpc	r15, r28
     22c:	18 c6       	rjmp	.+3120   	; 0xe5e <_ZN4Font11printLetterEiih+0xbe>
     22e:	6c fe       	.word	0xfe6c	; ????
     230:	6c 18       	sub	r6, r12
     232:	60 30       	cpi	r22, 0x00	; 0
     234:	0c 18       	sub	r0, r12
     236:	44 00       	.word	0x0044	; ????
     238:	c0 cc       	rjmp	.-1664   	; 0xfffffbba <__eeprom_end+0xff7efbba>
     23a:	c6 06       	cpc	r12, r22
     23c:	18 c6       	rjmp	.+3120   	; 0xe6e <_ZN4Font11printLetterEiih+0xce>
     23e:	38 ee       	ldi	r19, 0xE8	; 232
     240:	c6 18       	sub	r12, r6
     242:	c0 38       	cpi	r28, 0x80	; 128
     244:	06 38       	cpi	r16, 0x86	; 134
     246:	00 00       	nop
     248:	c0 76       	andi	r28, 0x60	; 96
     24a:	c6 fc       	sbrc	r12, 6
     24c:	18 7c       	andi	r17, 0xC8	; 200
     24e:	10 c6       	rjmp	.+3104   	; 0xe70 <_ZN4Font11printLetterEiih+0xd0>
     250:	c6 18       	sub	r12, r6
     252:	fe 00       	.word	0x00fe	; ????
     254:	00 00       	nop
     256:	00 fe       	sbrs	r0, 0
	...
     268:	00 00       	nop
     26a:	c0 00       	.word	0x00c0	; ????
     26c:	06 00       	.word	0x0006	; ????
     26e:	3e 00       	.word	0x003e	; ????
     270:	c0 18       	sub	r12, r0
     272:	0c c0       	rjmp	.+24     	; 0x28c <__trampolines_end+0x224>
     274:	38 00       	.word	0x0038	; ????
     276:	00 00       	nop
     278:	60 7c       	andi	r22, 0xC0	; 192
     27a:	fc 7e       	andi	r31, 0xEC	; 236
     27c:	7e 7c       	andi	r23, 0xCE	; 206
     27e:	60 7e       	andi	r22, 0xE0	; 224
     280:	c0 00       	.word	0x00c0	; ????
     282:	00 c6       	rjmp	.+3072   	; 0xe84 <_ZN4Font11printLetterEiih+0xe4>
     284:	18 fc       	.word	0xfc18	; ????
     286:	fc 7c       	andi	r31, 0xCC	; 204
     288:	20 06       	cpc	r2, r16
     28a:	c6 c0       	rjmp	.+396    	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     28c:	c6 c6       	rjmp	.+3468   	; 0x101a <_ZN4Game5titleEv+0xfe>
     28e:	60 c6       	rjmp	.+3264   	; 0xf50 <_ZN4Game5titleEv+0x34>
     290:	fc 38       	cpi	r31, 0x8C	; 140
     292:	1c cc       	rjmp	.-1992   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     294:	18 d6       	rcall	.+3120   	; 0xec6 <_ZN4Font5printEiiPKc+0x34>
     296:	c6 c6       	rjmp	.+3468   	; 0x1024 <_ZN4Game5titleEv+0x108>
     298:	00 7e       	andi	r16, 0xE0	; 224
     29a:	c6 c0       	rjmp	.+396    	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     29c:	c6 c6       	rjmp	.+3468   	; 0x102a <_ZN4Game5titleEv+0x10e>
     29e:	fc c6       	rjmp	.+3576   	; 0x1098 <_ZN4Game5startEv+0x16>
     2a0:	c6 18       	sub	r12, r6
     2a2:	0c f8       	.word	0xf80c	; ????
     2a4:	18 d6       	rcall	.+3120   	; 0xed6 <_ZN4Font5printEiiPKc+0x44>
     2a6:	c6 c6       	rjmp	.+3468   	; 0x1034 <_ZN4Game5titleEv+0x118>
     2a8:	00 c6       	rjmp	.+3072   	; 0xeaa <_ZN4Font5printEiiPKc+0x18>
     2aa:	c6 c0       	rjmp	.+396    	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     2ac:	c6 fc       	sbrc	r12, 6
     2ae:	60 c6       	rjmp	.+3264   	; 0xf70 <_ZN4Game5titleEv+0x54>
     2b0:	c6 18       	sub	r12, r6
     2b2:	0c cc       	rjmp	.-2024   	; 0xfffffacc <__eeprom_end+0xff7efacc>
     2b4:	18 d6       	rcall	.+3120   	; 0xee6 <_ZN5Frame11updateFrameEv+0x8>
     2b6:	c6 c6       	rjmp	.+3468   	; 0x1044 <_ZN4Game5titleEv+0x128>
     2b8:	00 c6       	rjmp	.+3072   	; 0xeba <_ZN4Font5printEiiPKc+0x28>
     2ba:	c6 c0       	rjmp	.+396    	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
     2bc:	c6 c0       	rjmp	.+396    	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     2be:	60 7e       	andi	r22, 0xE0	; 224
     2c0:	c6 18       	sub	r12, r6
     2c2:	0c c6       	rjmp	.+3096   	; 0xedc <_ZN4Font5printEiiPKc+0x4a>
     2c4:	18 d6       	rcall	.+3120   	; 0xef6 <_ZN5Frame11updateFrameEv+0x18>
     2c6:	c6 c6       	rjmp	.+3468   	; 0x1054 <_ZN4Game5titleEv+0x138>
     2c8:	00 7e       	andi	r16, 0xE0	; 224
     2ca:	fc 7e       	andi	r31, 0xEC	; 236
     2cc:	7e 7c       	andi	r23, 0xCE	; 206
     2ce:	60 06       	cpc	r6, r16
     2d0:	c6 18       	sub	r12, r6
     2d2:	0c c6       	rjmp	.+3096   	; 0xeec <_ZN5Frame11updateFrameEv+0xe>
     2d4:	18 d6       	rcall	.+3120   	; 0xf06 <_ZN5Frame11updateFrameEv+0x28>
     2d6:	c6 7c       	andi	r28, 0xC6	; 198
     2d8:	00 00       	nop
     2da:	00 00       	nop
     2dc:	00 00       	nop
     2de:	00 7c       	andi	r16, 0xC0	; 192
     2e0:	00 00       	nop
     2e2:	78 00       	.word	0x0078	; ????
	...
     2ec:	18 00       	.word	0x0018	; ????
	...
     2f6:	00 00       	nop
     2f8:	fc 7e       	andi	r31, 0xEC	; 236
     2fa:	fc 7c       	andi	r31, 0xCC	; 204
     2fc:	18 c6       	rjmp	.+3120   	; 0xf2e <_ZN4Game5titleEv+0x12>
     2fe:	c6 d6       	rcall	.+3468   	; 0x108c <_ZN4Game5startEv+0xa>
     300:	c6 c6       	rjmp	.+3468   	; 0x108e <_ZN4Game5startEv+0xc>
     302:	fe 38       	cpi	r31, 0x8E	; 142
     304:	10 38       	cpi	r17, 0x80	; 128
     306:	00 00       	nop
     308:	c6 c6       	rjmp	.+3468   	; 0x1096 <_ZN4Game5startEv+0x14>
     30a:	c6 c0       	rjmp	.+396    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     30c:	7e c6       	rjmp	.+3324   	; 0x100a <_ZN4Game5titleEv+0xee>
     30e:	c6 d6       	rcall	.+3468   	; 0x109c <_ZN4Game5startEv+0x1a>
     310:	6c c6       	rjmp	.+3288   	; 0xfea <_ZN4Game5titleEv+0xce>
     312:	0c 30       	cpi	r16, 0x0C	; 12
     314:	10 18       	sub	r1, r0
     316:	30 00       	.word	0x0030	; ????
     318:	c6 c6       	rjmp	.+3468   	; 0x10a6 <_ZN4Game5startEv+0x24>
     31a:	c0 7c       	andi	r28, 0xC0	; 192
     31c:	18 c6       	rjmp	.+3120   	; 0xf4e <_ZN4Game5titleEv+0x32>
     31e:	c6 d6       	rcall	.+3468   	; 0x10ac <_ZN4Game5startEv+0x2a>
     320:	38 c6       	rjmp	.+3184   	; 0xf92 <_ZN4Game5titleEv+0x76>
     322:	38 60       	ori	r19, 0x08	; 8
     324:	10 0c       	add	r1, r0
     326:	5a 00       	.word	0x005a	; ????
     328:	c6 c6       	rjmp	.+3468   	; 0x10b6 <_ZN4Game5startEv+0x34>
     32a:	c0 06       	cpc	r12, r16
     32c:	18 c6       	rjmp	.+3120   	; 0xf5e <_ZN4Game5titleEv+0x42>
     32e:	6c d6       	rcall	.+3288   	; 0x1008 <_ZN4Game5titleEv+0xec>
     330:	6c c6       	rjmp	.+3288   	; 0x100a <_ZN4Game5titleEv+0xee>
     332:	60 30       	cpi	r22, 0x00	; 0
     334:	10 18       	sub	r1, r0
     336:	0c 00       	.word	0x000c	; ????
     338:	c6 c6       	rjmp	.+3468   	; 0x10c6 <_ZN4Game5startEv+0x44>
     33a:	c0 06       	cpc	r12, r16
     33c:	18 c6       	rjmp	.+3120   	; 0xf6e <_ZN4Game5titleEv+0x52>
     33e:	38 d6       	rcall	.+3184   	; 0xfb0 <_ZN4Game5titleEv+0x94>
     340:	c6 7e       	andi	r28, 0xE6	; 230
     342:	c0 38       	cpi	r28, 0x80	; 128
     344:	10 38       	cpi	r17, 0x80	; 128
     346:	00 00       	nop
     348:	fc 7e       	andi	r31, 0xEC	; 236
     34a:	c0 7c       	andi	r28, 0xC0	; 192
     34c:	18 7e       	andi	r17, 0xE8	; 232
     34e:	10 7e       	andi	r17, 0xE0	; 224
     350:	c6 06       	cpc	r12, r22
     352:	fe 00       	.word	0x00fe	; ????
     354:	00 00       	nop
     356:	00 00       	nop
     358:	c0 06       	cpc	r12, r16
     35a:	00 00       	nop
     35c:	00 00       	nop
     35e:	00 00       	nop
     360:	00 7c       	andi	r16, 0xC0	; 192
     362:	00 00       	nop
     364:	00 00       	nop
	...

00000368 <_ZL9logoAtmel>:
     368:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     378:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     388:	ff ff ff ff ff ff ff ff ff ff d5 5f f5 7f ff ff     ..........._....
     398:	ff ff ff ff ff ff ff ff ff ff d5 ff 7f ff ff ff     ................
     3a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3b8:	d5 5f f5 7f ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     3c8:	d5 fd ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     3d8:	ff ff ff ff ff ff 55 5f f5 7f ff ff ff ff ff ff     ......U_........
     3e8:	ff ff ff ff ff ff d5 ff ff ff ff ff ff ff ff ff     ................
     3f8:	ff ff ff ff ff ff ff ff ff ff ff fd 55 5f f5 7f     ............U_..
     408:	ff ff ff ff ff ff ff ff ff ff ff ff d5 ff ff ff     ................
     418:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     428:	ff f5 5d 5f f5 7f ff ff ff ff ff ff ff ff ff ff     ..]_............
     438:	ff ff d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     448:	ff ff ff ff ff ff ff d5 7d 5f f5 5f ff ff f5 7f     ........}_._....
     458:	ff d5 ff ff ff d5 5f ff d5 ff ff ff ff ff ff ff     ......_.........
     468:	ff ff ff ff ff ff ff ff ff ff ff ff ff 55 fd 5f     .............U._
     478:	55 55 5f ff 55 57 f5 55 5f ff f5 55 55 ff d5 ff     UU_.UW.U_..UU...
     488:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     498:	ff ff ff 57 fd 5f 55 55 5f fd 55 55 55 55 57 ff     ...W._UU_.UUUUW.
     4a8:	d5 55 55 7f d5 ff ff ff ff ff ff ff ff ff ff ff     .UU.............
     4b8:	ff ff ff ff ff ff ff ff fd 57 fd 5f 55 55 5f f5     .........W._UU_.
     4c8:	55 55 55 55 55 ff 55 5f d5 5f d5 ff ff ff ff ff     UUUUU.U_._......
     4d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff f5 5f     ..............._
     4e8:	fd 5f f5 7f ff d5 5f f5 55 ff 55 ff 55 ff f5 5f     ._...._.U.U.U.._
     4f8:	d5 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     508:	ff ff ff ff d5 7f fd 5f f5 7f ff d5 7f fd 57 ff     ......._......W.
     518:	d5 fd 57 ff fd 57 d5 ff ff ff ff ff ff ff ff ff     ..W..W..........
     528:	ff ff ff ff ff ff ff ff ff ff 55 ff fd 5f f5 7f     ..........U.._..
     538:	ff d5 ff fd 5f ff d5 7d 57 ff fd 57 d5 ff ff ff     ...._..}W..W....
     548:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fd     ................
     558:	55 55 fd 5f f5 7f ff d5 ff fd 5f ff d5 7d 55 55     UU._......_..}UU
     568:	55 57 d5 ff ff ff ff ff ff ff ff ff ff ff ff ff     UW..............
     578:	ff ff ff ff ff f5 55 55 fd 5f f5 7f ff d5 ff fd     ......UU._......
     588:	5f ff d5 7d 55 55 55 57 d5 ff ff ff ff ff ff ff     _..}UUUW........
     598:	ff ff ff ff ff ff ff ff ff ff ff f5 55 57 fd 5f     ............UW._
     5a8:	f5 7f ff d5 ff fd 5f ff d5 7d 55 55 55 57 d5 ff     ......_..}UUUW..
     5b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5c8:	ff d5 7f ff fd 5f f5 7f ff d5 ff fd 5f ff d5 7d     ....._......_..}
     5d8:	5f ff ff ff d5 7f ff ff ff ff ff ff ff ff ff ff     _...............
     5e8:	ff ff ff ff ff ff ff 55 ff ff fd 5f f5 5f ff d5     .......U..._._..
     5f8:	ff fd 5f ff d5 7d 57 ff ff ff d5 7f ff ff ff ff     .._..}W.........
     608:	ff ff ff ff ff ff ff ff ff ff ff ff fd 57 ff ff     .............W..
     618:	fd 5f fd 57 ff d5 ff fd 5f ff d5 7f 55 ff fd 5f     ._.W...._...U.._
     628:	f5 5f ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ._..............
     638:	ff ff f5 5f ff ff fd 5f fd 55 5f d5 ff fd 5f ff     ..._..._.U_..._.
     648:	d5 7f 55 7f d5 5f f5 55 7f ff ff ff ff ff ff ff     ..U.._.U........
     658:	ff ff ff ff ff ff ff ff d5 7f ff ff fd 5f ff 55     ............._.U
     668:	5f d5 ff fd 5f ff d5 7f d5 55 55 7f fd 55 7f ff     _..._....UU..U..
     678:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff 55 ff     ..............U.
     688:	ff ff fd 5f ff d5 5f d5 ff fd 5f ff d5 7f f5 55     ..._.._..._....U
     698:	55 ff ff 55 7f ff ff ff ff ff ff ff ff ff ff ff     U..U............
     6a8:	ff ff ff ff 57 ff ff ff ff ff ff ff ff ff ff ff     ....W...........
     6b8:	ff ff ff ff ff d5 5f ff ff ff ff ff ff ff ff ff     ......_.........
     6c8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6d8:	ff ff fe aa aa bf ff ff ff ff ff ff ff ff ff ff     ................
     6e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     6f8:	ff ff ff ff ff ff ff ff ea aa aa af af ff ff ff     ................
     708:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     718:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff aa aa     ................
     728:	aa ab ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     738:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     748:	ff ff ff fe aa aa aa aa ff ff ff ff ff ff ff ff     ................
     758:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     768:	ff ff ff ff ff ff ff ff ff fa aa aa aa aa ff ff     ................
     778:	ff 0f ff f0 ff ff ff ff ff ff ff ff ff ff ff ff     ................
     788:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ea     ................
     798:	ab ea aa fa bf ff fc 03 ff c0 3f ff ff ff ff ff     ..........?.....
     7a8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     7b8:	ff ff ff ff ff aa af fa ab fe bf ff fc 03 ff c0     ................
     7c8:	3f ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ?...............
     7d8:	ff ff ff ff ff ff ff ff ff ff ff aa bf fa af fe     ................
     7e8:	af ff fc 03 ff c0 3f ff ff ff ff ff ff ff ff ff     ......?.........
     7f8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     808:	fe aa ff fe af ff ab ff fc 00 ff 00 3f 0f c0 00     ............?...
     818:	3f 00 00 ff 00 00 ff 00 00 3c 3f f0 f0 fc 00 03     ?........<?.....
     828:	ff ff ff ff ff ff fe aa bf fe af ff eb ff f0 00     ................
     838:	ff 00 3f 0f 00 00 0f 00 00 3f 00 00 fc 00 00 3c     ..?......?.....<
     848:	3f f0 f0 f0 00 00 ff ff ff ff ff ff fe aa bf ff     ?...............
     858:	ab ff ea ff f0 00 3c 00 3f 0f 00 00 0f 00 00 3c     ......<.?......<
     868:	00 00 3c 00 00 3c 3f f0 f0 f0 00 00 ff ff ff ff     ..<..<?.........
     878:	ff ff fe af af ff eb ff fa bf f0 30 3c 0c 0f 0f     ...........0<...
     888:	03 ff ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0     .....<..<...?...
     898:	3f f0 ff ff ff ff ff ff fe af ab ff ea ff fe bf     ?...............
     8a8:	f0 30 3c 0c 0f 0f 0f ff ff 0f fc 3c 3f fc 3c 3f     .0<........<?.<?
     8b8:	ff fc 00 00 f0 f0 3f f0 ff ff ff ff ff ff fe bf     ......?.........
     8c8:	eb ff fa ff fe af f0 3c 00 3c 0f 0f 0f ff ff 0f     .......<.<......
     8d8:	fc 3c 3f fc 3c 3f ff fc 00 00 f0 f0 3f f0 ff ff     .<?.<?......?...
     8e8:	ff ff ff ff fe ff fa ff fe bf ff af f0 3c 00 3c     .............<.<
     8f8:	0f 0f 0f ff ff 00 00 3c 3f fc 3c 3f ff fc 00 00     .......<?.<?....
     908:	f0 f0 00 00 ff ff ff ff ff ff ff ff fa ff fe af     ................
     918:	ff ef f0 3c 00 3c 0f 0f 0f ff ff 00 00 3c 3f fc     ...<.<.......<?.
     928:	3c 3f ff fc 3f f0 f0 f0 00 03 ff ff ff ff ff ff     <?..?...........
     938:	ff ff fa bf ff af ff ff f0 3f 00 fc 0f 0f 03 ff     .........?......
     948:	ff 0f fc 3c 0f f0 3c 0f ff fc 3f f0 f0 f0 3f ff     ...<..<...?...?.
     958:	ff ff ff ff ff ff ff ff ea af fe ab ff ff f0 3f     ...............?
     968:	00 fc 0f 0f 00 00 0f 0f fc 3c 00 00 3c 00 00 3c     .........<..<..<
     978:	3f f0 f0 f0 3f ff ff ff ff ff ff ff ff ff aa af     ?...?...........
     988:	fe aa ff ff f0 3f c3 fc 0f 0f c0 00 0f 0f fc 3f     .....?.........?
     998:	00 00 ff 00 00 3c 3f f0 f0 f0 3f ff ff ff ff ff     .....<?...?.....
     9a8:	ff ff ff ff aa ab fa aa ff ff fc ff ff ff 3f ff     ..............?.
     9b8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fc     ................
     9c8:	ff ff ff ff ff ff ff ff ff fe aa aa ea aa bf ff     ................
     9d8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9e8:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff fa     ................
     9f8:	aa aa aa aa bf ff ff ff ff ff ff ff ff ff ff ff     ................
     a08:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a18:	ff ff ff ff ff fe aa aa aa aa bf ff ff ff ff ff     ................
     a28:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a38:	ff ff ff ff ff ff ff ff ff ff ff ff ea aa aa aa     ................
     a48:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a58:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a68:	ff ff fe aa aa af ff ff ff ff ff ff ff ff ff ff     ................
     a78:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000a88 <_ZL7charRun>:
     a88:	00 00 00 00 00 00 00 0f fc 00 00 f0 fa ab c0 03     ................
     a98:	ff aa aa b0 03 ea aa aa ac 00 fa aa aa fc 00 0d     ................
     aa8:	6a af ff 00 0d 5d 5f ff 00 03 d7 ff 3c 00 00 35     j....]_.....<..5
     ab8:	57 3c 00 00 f5 57 fc 00 03 aa 57 f0 00 3e aa 60     W<...W....W..>.`
     ac8:	70 00 ea a9 80 70 03 aa a9 80 c0 0e aa 96 02 c0     p....p..........
     ad8:	0e 95 68 07 00 39 6a 80 03 00 0e b5 50 03 00 03     ..h..9j.....P...
     ae8:	cd 40 0c 00 00 00 00 ff c0 00 00 0f aa b0 00 00     .@..............
     af8:	3a aa ac 00 f3 ea aa fc 03 fe aa aa ff 03 ea aa     :...............
     b08:	ab ff 00 f5 aa 9f fc 00 0d 55 5f 3c 00 03 f7 5f     .........U_<..._
     b18:	3c 00 00 39 f7 f0 00 00 e9 54 70 00 03 aa 98 70     <..9.....Tp....p
     b28:	00 0e aa 60 c0 00 3a aa 60 c0 00 ea a9 80 c0 03     ...`..:.`.......
     b38:	aa a9 80 c0 0e aa 96 00 c0 39 55 68 c3 00 0e aa     .........9Uh....
     b48:	83 3c 00 03 fc 0c 00 00 00 00 0f ff f0 00 00 3a     .<.............:
     b58:	aa ac 00 00 ea aa ff 00 03 aa ab ff 00 3f aa ab     .............?..
     b68:	ff 00 fe aa af 3c 00 fa aa b7 3c 00 3d 55 d7 fc     .....<....<.=U..
     b78:	00 03 d5 d7 f0 00 03 a9 54 70 00 0e aa 60 b0 00     ........Tp...`..
     b88:	3a a9 80 b0 00 3a a6 02 b0 00 ea a6 02 c0 00 ea     :....:..........
     b98:	98 00 c0 00 ea 98 00 c0 03 95 58 f0 c0 00 ea a3     ..........X.....
     ba8:	0c c0 00 3c 0c 03 00 00 03 30 00 00 00 00 ff ff     ...<.....0......
     bb8:	c0 00 03 aa aa b0 00 0e aa aa ac 00 3a aa aa ff     ............:...
     bc8:	00 ea aa af ff 03 e6 ab ff fc 03 fd 9f 57 3c 00     .............W<.
     bd8:	ff 57 57 3c 00 0f a5 57 fc 00 3a a9 53 f0 00 ea     .WW<...W..:.S...
     be8:	a6 80 c0 03 aa 98 00 c0 03 aa 60 02 b0 0e a9 80     ..........`.....
     bf8:	02 b0 0d a9 80 0a b0 0e 69 80 02 c0 03 95 80 03     ........i.......
     c08:	00 00 ea 00 00 c0 00 3f 01 70 c0 00 00 ff cc 30     .......?.p.....0
     c18:	00 03 ff fc 00 00 3e aa ab c0 03 ea aa aa b0 0f     ......>.........
     c28:	aa aa aa ac 0f f6 aa ab ff 03 cd af af ff 00 03     ................
     c38:	75 ff fc 00 00 d5 57 3c 00 00 d5 57 3c 00 03 e5     u.....W<...W<...
     c48:	57 fc 00 3e a9 63 f0 03 ea a6 80 c0 0e aa 98 00     W..>.c..........
     c58:	c0 3a aa 60 02 c0 36 a9 80 02 c0 39 a6 00 0a c0     .:.`..6....9....
     c68:	0e 56 40 0a c0 03 ab 50 03 00 00 fc c0 03 00 00     .V@....P........
     c78:	00 3a 83 00 00 00 00 00 00 00 00 0f fc 00 00 f0     .:..............
     c88:	fa ab c0 03 ff aa aa b0 03 ea aa aa ac 00 d6 aa     ................
     c98:	ab fc 00 3d 6a bf ff 00 0d 5d 5f ff 00 03 d7 fc     ...=j....]_.....
     ca8:	fc 00 00 35 5c fc 00 00 f5 5f fc 00 03 a9 4f f0     ...5\...._....O.
     cb8:	00 3e a9 80 70 00 ea a6 00 70 03 aa a6 00 70 0e     .>..p....p....p.
     cc8:	aa 58 02 c0 0e 55 a0 0a c0 39 aa 00 03 00 0e b5     .X...U...9......
     cd8:	50 03 00 03 cd 4c 0c 00                             P....L..

00000ce0 <__ctors_start>:
     ce0:	c5 06       	cpc	r12, r21

00000ce2 <__ctors_end>:
     ce2:	11 24       	eor	r1, r1
     ce4:	1f be       	out	0x3f, r1	; 63
     ce6:	cf ef       	ldi	r28, 0xFF	; 255
     ce8:	d8 e0       	ldi	r29, 0x08	; 8
     cea:	de bf       	out	0x3e, r29	; 62
     cec:	cd bf       	out	0x3d, r28	; 61

00000cee <__do_copy_data>:
     cee:	11 e0       	ldi	r17, 0x01	; 1
     cf0:	a0 e0       	ldi	r26, 0x00	; 0
     cf2:	b1 e0       	ldi	r27, 0x01	; 1
     cf4:	ee eb       	ldi	r30, 0xBE	; 190
     cf6:	f8 e1       	ldi	r31, 0x18	; 24
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <__do_copy_data+0x10>
     cfa:	05 90       	lpm	r0, Z+
     cfc:	0d 92       	st	X+, r0
     cfe:	a0 33       	cpi	r26, 0x30	; 48
     d00:	b1 07       	cpc	r27, r17
     d02:	d9 f7       	brne	.-10     	; 0xcfa <__do_copy_data+0xc>

00000d04 <__do_clear_bss>:
     d04:	21 e0       	ldi	r18, 0x01	; 1
     d06:	a0 e3       	ldi	r26, 0x30	; 48
     d08:	b1 e0       	ldi	r27, 0x01	; 1
     d0a:	01 c0       	rjmp	.+2      	; 0xd0e <.do_clear_bss_start>

00000d0c <.do_clear_bss_loop>:
     d0c:	1d 92       	st	X+, r1

00000d0e <.do_clear_bss_start>:
     d0e:	ae 33       	cpi	r26, 0x3E	; 62
     d10:	b2 07       	cpc	r27, r18
     d12:	e1 f7       	brne	.-8      	; 0xd0c <.do_clear_bss_loop>

00000d14 <__do_global_ctors>:
     d14:	16 e0       	ldi	r17, 0x06	; 6
     d16:	c1 e7       	ldi	r28, 0x71	; 113
     d18:	d6 e0       	ldi	r29, 0x06	; 6
     d1a:	04 c0       	rjmp	.+8      	; 0xd24 <__do_global_ctors+0x10>
     d1c:	21 97       	sbiw	r28, 0x01	; 1
     d1e:	fe 01       	movw	r30, r28
     d20:	0e 94 57 0c 	call	0x18ae	; 0x18ae <__tablejump2__>
     d24:	c0 37       	cpi	r28, 0x70	; 112
     d26:	d1 07       	cpc	r29, r17
     d28:	c9 f7       	brne	.-14     	; 0xd1c <__do_global_ctors+0x8>
     d2a:	0e 94 9b 06 	call	0xd36	; 0xd36 <main>
     d2e:	0c 94 5d 0c 	jmp	0x18ba	; 0x18ba <_exit>

00000d32 <__bad_interrupt>:
     d32:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000d36 <main>:
--------------  MAIN START  --------------
//========================================*/

int main(void)
{
  beginPort(B, OUT);
     d36:	61 e0       	ldi	r22, 0x01	; 1
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	0e 94 ac 08 	call	0x1158	; 0x1158 <_ZN3MCU7Setting9beginPortEab>
  beginTimer(2, COMP);
     d3e:	61 e0       	ldi	r22, 0x01	; 1
     d40:	82 e0       	ldi	r24, 0x02	; 2
     d42:	0e 94 bc 08 	call	0x1178	; 0x1178 <_ZN3MCU7Setting10beginTimerEab>
  beginSPI();
     d46:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN3MCU7Setting8beginSPIEv>

  sei();
     d4a:	78 94       	sei

  game.title();
     d4c:	80 e3       	ldi	r24, 0x30	; 48
     d4e:	91 e0       	ldi	r25, 0x01	; 1
     d50:	0e 94 8e 07 	call	0xf1c	; 0xf1c <_ZN4Game5titleEv>

  while (1)
  {
    game.start();
     d54:	80 e3       	ldi	r24, 0x30	; 48
     d56:	91 e0       	ldi	r25, 0x01	; 1
     d58:	0e 94 41 08 	call	0x1082	; 0x1082 <_ZN4Game5startEv>
     d5c:	fb cf       	rjmp	.-10     	; 0xd54 <main+0x1e>

00000d5e <__vector_7>:
---------------  MAIN END  ---------------
//========================================*/


ISR(TIMER2_COMPA_vect)
{
     d5e:	1f 92       	push	r1
     d60:	0f 92       	push	r0
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	0f 92       	push	r0
     d66:	11 24       	eor	r1, r1
     d68:	8f 93       	push	r24
  Frame::frameRate++;
     d6a:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <_ZN5Frame9frameRateE>
     d6e:	8f 5f       	subi	r24, 0xFF	; 255
     d70:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <_ZN5Frame9frameRateE>
  Frame::tickFrame++;
     d74:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <_ZN5Frame9tickFrameE>
     d78:	8f 5f       	subi	r24, 0xFF	; 255
     d7a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <_ZN5Frame9tickFrameE>
     d7e:	8f 91       	pop	r24
     d80:	0f 90       	pop	r0
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	0f 90       	pop	r0
     d86:	1f 90       	pop	r1
     d88:	18 95       	reti

00000d8a <_GLOBAL__sub_I_game>:
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
     d8a:	e0 e3       	ldi	r30, 0x30	; 48
     d8c:	f1 e0       	ldi	r31, 0x01	; 1
     d8e:	80 ef       	ldi	r24, 0xF0	; 240
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	91 83       	std	Z+1, r25	; 0x01
     d94:	80 83       	st	Z, r24
     d96:	80 e4       	ldi	r24, 0x40	; 64
     d98:	91 e0       	ldi	r25, 0x01	; 1
     d9a:	93 83       	std	Z+3, r25	; 0x03
     d9c:	82 83       	std	Z+2, r24	; 0x02
     d9e:	08 95       	ret

00000da0 <_ZN4Font11printLetterEiih>:
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
     da0:	8f 92       	push	r8
     da2:	9f 92       	push	r9
     da4:	af 92       	push	r10
     da6:	bf 92       	push	r11
     da8:	cf 92       	push	r12
     daa:	df 92       	push	r13
     dac:	ef 92       	push	r14
     dae:	ff 92       	push	r15
     db0:	0f 93       	push	r16
     db2:	1f 93       	push	r17
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	ec 01       	movw	r28, r24

  uint8_t data;
  uint8_t temp;
  int16_t ASCIIValue = ASCII - 32;
     dba:	82 2f       	mov	r24, r18
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	80 97       	sbiw	r24, 0x20	; 32
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);
     dc0:	9c 01       	movw	r18, r24
     dc2:	12 f4       	brpl	.+4      	; 0xdc8 <_ZN4Font11printLetterEiih+0x28>
     dc4:	21 5f       	subi	r18, 0xF1	; 241
     dc6:	3f 4f       	sbci	r19, 0xFF	; 255
     dc8:	49 01       	movw	r8, r18
     dca:	95 94       	asr	r9
     dcc:	87 94       	ror	r8
     dce:	95 94       	asr	r9
     dd0:	87 94       	ror	r8
     dd2:	95 94       	asr	r9
     dd4:	87 94       	ror	r8
     dd6:	95 94       	asr	r9
     dd8:	87 94       	ror	r8
     dda:	96 94       	lsr	r9
     ddc:	98 2c       	mov	r9, r8
     dde:	88 24       	eor	r8, r8
     de0:	97 94       	ror	r9
     de2:	87 94       	ror	r8
     de4:	8f 70       	andi	r24, 0x0F	; 15
     de6:	90 78       	andi	r25, 0x80	; 128
     de8:	99 23       	and	r25, r25
     dea:	24 f4       	brge	.+8      	; 0xdf4 <_ZN4Font11printLetterEiih+0x54>
     dec:	01 97       	sbiw	r24, 0x01	; 1
     dee:	80 6f       	ori	r24, 0xF0	; 240
     df0:	9f 6f       	ori	r25, 0xFF	; 255
     df2:	01 96       	adiw	r24, 0x01	; 1
     df4:	88 0e       	add	r8, r24
     df6:	99 1e       	adc	r9, r25

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));
     df8:	8a 01       	movw	r16, r20
     dfa:	01 5f       	subi	r16, 0xF1	; 241
     dfc:	1f 4f       	sbci	r17, 0xFF	; 255
     dfe:	9b 01       	movw	r18, r22
     e00:	21 5f       	subi	r18, 0xF1	; 241
     e02:	3f 4f       	sbci	r19, 0xFF	; 255
     e04:	ce 01       	movw	r24, r28
     e06:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN3TFT10setAddressEiiii>
     e0a:	54 01       	movw	r10, r8
     e0c:	80 e8       	ldi	r24, 0x80	; 128
     e0e:	88 0e       	add	r8, r24
     e10:	91 1c       	adc	r9, r1
/*----------------------------------------//
              Print 8x8 Letter
//----------------------------------------*/

void Font::printLetter(int16_t xPos, int16_t yPos, uint8_t ASCII)
{
     e12:	68 94       	set
     e14:	cc 24       	eor	r12, r12
     e16:	c1 f8       	bld	r12, 1
     e18:	d1 2c       	mov	r13, r1
  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);
     e1a:	ec 81       	ldd	r30, Y+4	; 0x04
     e1c:	fd 81       	ldd	r31, Y+5	; 0x05
     e1e:	ea 0d       	add	r30, r10
     e20:	fb 1d       	adc	r31, r11
     e22:	14 91       	lpm	r17, Z
     e24:	68 94       	set
     e26:	ee 24       	eor	r14, r14
     e28:	e3 f8       	bld	r14, 3
     e2a:	f1 2c       	mov	r15, r1
        temp = data >> 7;

        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
     e2c:	11 23       	and	r17, r17
     e2e:	5c f4       	brge	.+22     	; 0xe46 <_ZN4Font11printLetterEiih+0xa6>
            exportLongData(m_Background);
          }

          else                    //1Pixel = 1
          {
            exportLongData(m_Colored);
     e30:	68 85       	ldd	r22, Y+8	; 0x08
     e32:	79 85       	ldd	r23, Y+9	; 0x09
     e34:	ce 01       	movw	r24, r28
     e36:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
     e3a:	68 85       	ldd	r22, Y+8	; 0x08
     e3c:	79 85       	ldd	r23, Y+9	; 0x09
     e3e:	ce 01       	movw	r24, r28
     e40:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
     e44:	0a c0       	rjmp	.+20     	; 0xe5a <_ZN4Font11printLetterEiih+0xba>
        for (int l=0; l<2; l++)
        {

          if (temp == 0x00)       //1Pixel = 0
          {
            exportLongData(m_Background);
     e46:	6e 81       	ldd	r22, Y+6	; 0x06
     e48:	7f 81       	ldd	r23, Y+7	; 0x07
     e4a:	ce 01       	movw	r24, r28
     e4c:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
     e50:	6e 81       	ldd	r22, Y+6	; 0x06
     e52:	7f 81       	ldd	r23, Y+7	; 0x07
     e54:	ce 01       	movw	r24, r28
     e56:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
            exportLongData(m_Colored);
          }

        }

        data <<= 1;
     e5a:	11 0f       	add	r17, r17
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	e8 1a       	sub	r14, r24
     e60:	f1 08       	sbc	r15, r1
    for (int j=0; j<2; j++)
    {

      data = pgm_read_byte(&m_Bitmap[(i * 16) + ASCIIValue]);

      for (int k=0; k<8; k++)
     e62:	21 f7       	brne	.-56     	; 0xe2c <_ZN4Font11printLetterEiih+0x8c>
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	c8 1a       	sub	r12, r24
     e68:	d1 08       	sbc	r13, r1

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
  {
    for (int j=0; j<2; j++)
     e6a:	b9 f6       	brne	.-82     	; 0xe1a <_ZN4Font11printLetterEiih+0x7a>
     e6c:	80 e1       	ldi	r24, 0x10	; 16
     e6e:	a8 0e       	add	r10, r24
     e70:	b1 1c       	adc	r11, r1
  int16_t ASCIIValue = ASCII - 32;
  ASCIIValue = (ASCIIValue / 16) * 128 + (ASCIIValue % 16);

  setAddress(xPos, yPos, (xPos + 15), (yPos + 15));

  for (int i=0; i<(16 / 2); i++)
     e72:	a8 14       	cp	r10, r8
     e74:	b9 04       	cpc	r11, r9
     e76:	69 f6       	brne	.-102    	; 0xe12 <_ZN4Font11printLetterEiih+0x72>
      }

    }
  }

}
     e78:	df 91       	pop	r29
     e7a:	cf 91       	pop	r28
     e7c:	1f 91       	pop	r17
     e7e:	0f 91       	pop	r16
     e80:	ff 90       	pop	r15
     e82:	ef 90       	pop	r14
     e84:	df 90       	pop	r13
     e86:	cf 90       	pop	r12
     e88:	bf 90       	pop	r11
     e8a:	af 90       	pop	r10
     e8c:	9f 90       	pop	r9
     e8e:	8f 90       	pop	r8
     e90:	08 95       	ret

00000e92 <_ZN4Font5printEiiPKc>:
/*----------------------------------------//
              Print String
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{
     e92:	cf 92       	push	r12
     e94:	df 92       	push	r13
     e96:	ef 92       	push	r14
     e98:	ff 92       	push	r15
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	7c 01       	movw	r14, r24
     ea4:	eb 01       	movw	r28, r22
     ea6:	6a 01       	movw	r12, r20
     ea8:	f9 01       	movw	r30, r18

  while (*stringValue != '\0')
     eaa:	20 81       	ld	r18, Z
     eac:	22 23       	and	r18, r18
     eae:	71 f0       	breq	.+28     	; 0xecc <_ZN4Font5printEiiPKc+0x3a>
     eb0:	8f 01       	movw	r16, r30
     eb2:	0f 5f       	subi	r16, 0xFF	; 255
     eb4:	1f 4f       	sbci	r17, 0xFF	; 255
  {
    printLetter(xPos, yPos, *stringValue);
     eb6:	a6 01       	movw	r20, r12
     eb8:	be 01       	movw	r22, r28
     eba:	c7 01       	movw	r24, r14
     ebc:	0e 94 d0 06 	call	0xda0	; 0xda0 <_ZN4Font11printLetterEiih>
    stringValue++;
    xPos += 16;
     ec0:	60 96       	adiw	r28, 0x10	; 16
//----------------------------------------*/

void Font::print(int16_t xPos, int16_t yPos, const char *stringValue)
{

  while (*stringValue != '\0')
     ec2:	f8 01       	movw	r30, r16
     ec4:	21 91       	ld	r18, Z+
     ec6:	8f 01       	movw	r16, r30
     ec8:	21 11       	cpse	r18, r1
     eca:	f5 cf       	rjmp	.-22     	; 0xeb6 <_ZN4Font5printEiiPKc+0x24>
    printLetter(xPos, yPos, *stringValue);
    stringValue++;
    xPos += 16;
  }

     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	ff 90       	pop	r15
     ed6:	ef 90       	pop	r14
     ed8:	df 90       	pop	r13
     eda:	cf 90       	pop	r12
     edc:	08 95       	ret

00000ede <_ZN5Frame11updateFrameEv>:
//----------------------------------------*/

void Frame::updateFrame(void)
{

  if (frameRate == 7)
     ede:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <_ZN5Frame9frameRateE>
     ee2:	87 30       	cpi	r24, 0x07	; 7
     ee4:	a1 f4       	brne	.+40     	; 0xf0e <_ZN5Frame11updateFrameEv+0x30>
  {
    frameRate = 0;
     ee6:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <_ZN5Frame9frameRateE>
    fourFrames++;
     eea:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <_ZN5Frame10fourFramesE>
     eee:	9f 5f       	subi	r25, 0xFF	; 255
     ef0:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <_ZN5Frame10fourFramesE>
    sixFrames++;
     ef4:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <_ZN5Frame9sixFramesE>
     ef8:	8f 5f       	subi	r24, 0xFF	; 255
     efa:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_ZN5Frame9sixFramesE>

    if (fourFrames == 4)
     efe:	94 30       	cpi	r25, 0x04	; 4
     f00:	11 f4       	brne	.+4      	; 0xf06 <_ZN5Frame11updateFrameEv+0x28>
    {
      fourFrames = 0;
     f02:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <_ZN5Frame10fourFramesE>
    }

    if (sixFrames == 6)
     f06:	86 30       	cpi	r24, 0x06	; 6
     f08:	11 f4       	brne	.+4      	; 0xf0e <_ZN5Frame11updateFrameEv+0x30>
    {
      sixFrames = 0;
     f0a:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <_ZN5Frame9sixFramesE>
    }
  }

  if (tickFrame == 2)
     f0e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <_ZN5Frame9tickFrameE>
     f12:	82 30       	cpi	r24, 0x02	; 2
     f14:	11 f4       	brne	.+4      	; 0xf1a <_ZN5Frame11updateFrameEv+0x3c>
  {
    tickFrame = 0;
     f16:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <_ZN5Frame9tickFrameE>
     f1a:	08 95       	ret

00000f1c <_ZN4Game5titleEv>:
/*----------------------------------------//
                Game Title
//----------------------------------------*/

void Game::title(void)
{
     f1c:	7f 92       	push	r7
     f1e:	8f 92       	push	r8
     f20:	9f 92       	push	r9
     f22:	af 92       	push	r10
     f24:	bf 92       	push	r11
     f26:	cf 92       	push	r12
     f28:	df 92       	push	r13
     f2a:	ef 92       	push	r14
     f2c:	ff 92       	push	r15
     f2e:	0f 93       	push	r16
     f30:	1f 93       	push	r17
     f32:	cf 93       	push	r28
     f34:	df 93       	push	r29
     f36:	ec 01       	movw	r28, r24
  begin();
     f38:	0e 94 3c 09 	call	0x1278	; 0x1278 <_ZN3TFT5beginEv>
  setRotation(0);
     f3c:	60 e0       	ldi	r22, 0x00	; 0
     f3e:	ce 01       	movw	r24, r28
     f40:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN3TFT11setRotationEa>

  fillScreen(WHITE);
     f44:	6f ef       	ldi	r22, 0xFF	; 255
     f46:	7f ef       	ldi	r23, 0xFF	; 255
     f48:	ce 01       	movw	r24, r28
     f4a:	0e 94 ed 09 	call	0x13da	; 0x13da <_ZN3TFT10fillScreenEj>
  drawBitmap(8, 70, 152, 48, logoAtmel, BLACK, RED, BLUE, WHITE);
     f4e:	77 24       	eor	r7, r7
     f50:	7a 94       	dec	r7
     f52:	7f 92       	push	r7
     f54:	7f 92       	push	r7
     f56:	0f 2e       	mov	r0, r31
     f58:	ff e1       	ldi	r31, 0x1F	; 31
     f5a:	8f 2e       	mov	r8, r31
     f5c:	91 2c       	mov	r9, r1
     f5e:	f0 2d       	mov	r31, r0
     f60:	0f 2e       	mov	r0, r31
     f62:	a1 2c       	mov	r10, r1
     f64:	f8 ef       	ldi	r31, 0xF8	; 248
     f66:	bf 2e       	mov	r11, r31
     f68:	f0 2d       	mov	r31, r0
     f6a:	c1 2c       	mov	r12, r1
     f6c:	d1 2c       	mov	r13, r1
     f6e:	0f 2e       	mov	r0, r31
     f70:	f8 e6       	ldi	r31, 0x68	; 104
     f72:	ef 2e       	mov	r14, r31
     f74:	f3 e0       	ldi	r31, 0x03	; 3
     f76:	ff 2e       	mov	r15, r31
     f78:	f0 2d       	mov	r31, r0
     f7a:	00 e3       	ldi	r16, 0x30	; 48
     f7c:	10 e0       	ldi	r17, 0x00	; 0
     f7e:	28 e9       	ldi	r18, 0x98	; 152
     f80:	30 e0       	ldi	r19, 0x00	; 0
     f82:	46 e4       	ldi	r20, 0x46	; 70
     f84:	50 e0       	ldi	r21, 0x00	; 0
     f86:	68 e0       	ldi	r22, 0x08	; 8
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	ce 01       	movw	r24, r28
     f8c:	0e 94 32 0a 	call	0x1464	; 0x1464 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     f90:	2f ef       	ldi	r18, 0xFF	; 255
     f92:	89 e6       	ldi	r24, 0x69	; 105
     f94:	98 e1       	ldi	r25, 0x18	; 24
     f96:	21 50       	subi	r18, 0x01	; 1
     f98:	80 40       	sbci	r24, 0x00	; 0
     f9a:	90 40       	sbci	r25, 0x00	; 0
     f9c:	e1 f7       	brne	.-8      	; 0xf96 <_ZN4Game5titleEv+0x7a>
     f9e:	00 c0       	rjmp	.+0      	; 0xfa0 <_ZN4Game5titleEv+0x84>
     fa0:	00 00       	nop
  _delay_ms(500);

  drawBitmapTwice(8, 70, 304, 96, logoAtmel, BLACK, RED, BLUE, WHITE);
     fa2:	7f 92       	push	r7
     fa4:	7f 92       	push	r7
     fa6:	00 e6       	ldi	r16, 0x60	; 96
     fa8:	10 e0       	ldi	r17, 0x00	; 0
     faa:	20 e3       	ldi	r18, 0x30	; 48
     fac:	31 e0       	ldi	r19, 0x01	; 1
     fae:	46 e4       	ldi	r20, 0x46	; 70
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	68 e0       	ldi	r22, 0x08	; 8
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	ce 01       	movw	r24, r28
     fb8:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj>
     fbc:	2f ef       	ldi	r18, 0xFF	; 255
     fbe:	8b e7       	ldi	r24, 0x7B	; 123
     fc0:	92 e9       	ldi	r25, 0x92	; 146
     fc2:	21 50       	subi	r18, 0x01	; 1
     fc4:	80 40       	sbci	r24, 0x00	; 0
     fc6:	90 40       	sbci	r25, 0x00	; 0
     fc8:	e1 f7       	brne	.-8      	; 0xfc2 <_ZN4Game5titleEv+0xa6>
     fca:	00 c0       	rjmp	.+0      	; 0xfcc <_ZN4Game5titleEv+0xb0>
     fcc:	00 00       	nop
  _delay_ms(3000);

  fillScreen(BLACK);
     fce:	60 e0       	ldi	r22, 0x00	; 0
     fd0:	70 e0       	ldi	r23, 0x00	; 0
     fd2:	ce 01       	movw	r24, r28
     fd4:	0e 94 ed 09 	call	0x13da	; 0x13da <_ZN3TFT10fillScreenEj>
public:
  Font() : TFT(){};
  Font(const uint8_t *bitmap) : TFT() { m_Bitmap = bitmap; }
  ~Font(){};

  void setFont(const uint8_t *bitmap) { m_Bitmap = bitmap; }
     fd8:	88 e6       	ldi	r24, 0x68	; 104
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	9d 83       	std	Y+5, r25	; 0x05
     fde:	8c 83       	std	Y+4, r24	; 0x04
  void setColor(uint16_t color0Bit, uint16_t color1Bit) { m_Background = color0Bit; m_Colored = color1Bit; }
     fe0:	1f 82       	std	Y+7, r1	; 0x07
     fe2:	1e 82       	std	Y+6, r1	; 0x06
     fe4:	8f ef       	ldi	r24, 0xFF	; 255
     fe6:	9f ef       	ldi	r25, 0xFF	; 255
     fe8:	99 87       	std	Y+9, r25	; 0x09
     fea:	88 87       	std	Y+8, r24	; 0x08
  setFont(fontASCII);
  setColor(BLACK, WHITE);
  print(30, 70, "Hello, World!");
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	31 e0       	ldi	r19, 0x01	; 1
     ff0:	46 e4       	ldi	r20, 0x46	; 70
     ff2:	50 e0       	ldi	r21, 0x00	; 0
     ff4:	6e e1       	ldi	r22, 0x1E	; 30
     ff6:	70 e0       	ldi	r23, 0x00	; 0
     ff8:	ce 01       	movw	r24, r28
     ffa:	0e 94 49 07 	call	0xe92	; 0xe92 <_ZN4Font5printEiiPKc>
     ffe:	2f ef       	ldi	r18, 0xFF	; 255
    1000:	83 ed       	ldi	r24, 0xD3	; 211
    1002:	90 e3       	ldi	r25, 0x30	; 48
    1004:	21 50       	subi	r18, 0x01	; 1
    1006:	80 40       	sbci	r24, 0x00	; 0
    1008:	90 40       	sbci	r25, 0x00	; 0
    100a:	e1 f7       	brne	.-8      	; 0x1004 <_ZN4Game5titleEv+0xe8>
    100c:	00 c0       	rjmp	.+0      	; 0x100e <_ZN4Game5titleEv+0xf2>
    100e:	00 00       	nop
    1010:	1f 82       	std	Y+7, r1	; 0x07
    1012:	1e 82       	std	Y+6, r1	; 0x06
    1014:	8f ef       	ldi	r24, 0xFF	; 255
    1016:	97 e0       	ldi	r25, 0x07	; 7
    1018:	99 87       	std	Y+9, r25	; 0x09
    101a:	88 87       	std	Y+8, r24	; 0x08
  _delay_ms(1000);

  setColor(BLACK, CYAN);
  print(30, 120, "And Welcome to");
    101c:	2e e0       	ldi	r18, 0x0E	; 14
    101e:	31 e0       	ldi	r19, 0x01	; 1
    1020:	48 e7       	ldi	r20, 0x78	; 120
    1022:	50 e0       	ldi	r21, 0x00	; 0
    1024:	6e e1       	ldi	r22, 0x1E	; 30
    1026:	70 e0       	ldi	r23, 0x00	; 0
    1028:	ce 01       	movw	r24, r28
    102a:	0e 94 49 07 	call	0xe92	; 0xe92 <_ZN4Font5printEiiPKc>
    102e:	1f 82       	std	Y+7, r1	; 0x07
    1030:	1e 82       	std	Y+6, r1	; 0x06
    1032:	80 e0       	ldi	r24, 0x00	; 0
    1034:	98 ef       	ldi	r25, 0xF8	; 248
    1036:	99 87       	std	Y+9, r25	; 0x09
    1038:	88 87       	std	Y+8, r24	; 0x08
  setColor(BLACK, RED);
  print(30, 136, "Atmega Game (^0^)");
    103a:	2d e1       	ldi	r18, 0x1D	; 29
    103c:	31 e0       	ldi	r19, 0x01	; 1
    103e:	48 e8       	ldi	r20, 0x88	; 136
    1040:	50 e0       	ldi	r21, 0x00	; 0
    1042:	6e e1       	ldi	r22, 0x1E	; 30
    1044:	70 e0       	ldi	r23, 0x00	; 0
    1046:	ce 01       	movw	r24, r28
    1048:	0e 94 49 07 	call	0xe92	; 0xe92 <_ZN4Font5printEiiPKc>
    104c:	2f ef       	ldi	r18, 0xFF	; 255
    104e:	83 e2       	ldi	r24, 0x23	; 35
    1050:	94 ef       	ldi	r25, 0xF4	; 244
    1052:	21 50       	subi	r18, 0x01	; 1
    1054:	80 40       	sbci	r24, 0x00	; 0
    1056:	90 40       	sbci	r25, 0x00	; 0
    1058:	e1 f7       	brne	.-8      	; 0x1052 <_ZN4Game5titleEv+0x136>
    105a:	00 c0       	rjmp	.+0      	; 0x105c <_ZN4Game5titleEv+0x140>
    105c:	00 00       	nop
  _delay_ms(5000);
}
    105e:	0f 90       	pop	r0
    1060:	0f 90       	pop	r0
    1062:	0f 90       	pop	r0
    1064:	0f 90       	pop	r0
    1066:	df 91       	pop	r29
    1068:	cf 91       	pop	r28
    106a:	1f 91       	pop	r17
    106c:	0f 91       	pop	r16
    106e:	ff 90       	pop	r15
    1070:	ef 90       	pop	r14
    1072:	df 90       	pop	r13
    1074:	cf 90       	pop	r12
    1076:	bf 90       	pop	r11
    1078:	af 90       	pop	r10
    107a:	9f 90       	pop	r9
    107c:	8f 90       	pop	r8
    107e:	7f 90       	pop	r7
    1080:	08 95       	ret

00001082 <_ZN4Game5startEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Game::start(void)
{
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	27 97       	sbiw	r28, 0x07	; 7
    108c:	0f b6       	in	r0, 0x3f	; 63
    108e:	f8 94       	cli
    1090:	de bf       	out	0x3e, r29	; 62
    1092:	0f be       	out	0x3f, r0	; 63
    1094:	cd bf       	out	0x3d, r28	; 61

  fillScreen(BLACK);
    1096:	60 e0       	ldi	r22, 0x00	; 0
    1098:	70 e0       	ldi	r23, 0x00	; 0
    109a:	0e 94 ed 09 	call	0x13da	; 0x13da <_ZN3TFT10fillScreenEj>
    109e:	2f ef       	ldi	r18, 0xFF	; 255
    10a0:	81 ee       	ldi	r24, 0xE1	; 225
    10a2:	94 e0       	ldi	r25, 0x04	; 4
    10a4:	21 50       	subi	r18, 0x01	; 1
    10a6:	80 40       	sbci	r24, 0x00	; 0
    10a8:	90 40       	sbci	r25, 0x00	; 0
    10aa:	e1 f7       	brne	.-8      	; 0x10a4 <_ZN4Game5startEv+0x22>
    10ac:	00 c0       	rjmp	.+0      	; 0x10ae <_ZN4Game5startEv+0x2c>
    10ae:	00 00       	nop
private:
  int16_t m_Width;
  int16_t m_Height;

public:
  TFT() : SPI() { m_Width = 240; m_Height = 320; }
    10b0:	80 ef       	ldi	r24, 0xF0	; 240
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	9a 83       	std	Y+2, r25	; 0x02
    10b6:	89 83       	std	Y+1, r24	; 0x01
    10b8:	80 e4       	ldi	r24, 0x40	; 64
    10ba:	91 e0       	ldi	r25, 0x01	; 1
    10bc:	9c 83       	std	Y+4, r25	; 0x04
    10be:	8b 83       	std	Y+3, r24	; 0x03
  int8_t m_YPos;
  int8_t m_Life;
  int8_t m_Weapon;

public:
  Player() : TFT() { m_Life = 3; }
    10c0:	83 e0       	ldi	r24, 0x03	; 3
    10c2:	8e 83       	std	Y+6, r24	; 0x06

  Player user;

  while (1)
  {
    Frame::updateFrame();
    10c4:	0e 94 6f 07 	call	0xede	; 0xede <_ZN5Frame11updateFrameEv>
    user.startPlayer();
    10c8:	ce 01       	movw	r24, r28
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_ZN6Player11startPlayerEv>
    10d0:	f9 cf       	rjmp	.-14     	; 0x10c4 <_ZN4Game5startEv+0x42>

000010d2 <_ZN6Player11startPlayerEv>:
/*----------------------------------------//
                Start Game
//----------------------------------------*/

void Player::startPlayer(void)
{
    10d2:	6f 92       	push	r6
    10d4:	7f 92       	push	r7
    10d6:	8f 92       	push	r8
    10d8:	9f 92       	push	r9
    10da:	af 92       	push	r10
    10dc:	bf 92       	push	r11
    10de:	cf 92       	push	r12
    10e0:	df 92       	push	r13
    10e2:	ef 92       	push	r14
    10e4:	ff 92       	push	r15
    10e6:	0f 93       	push	r16
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	3c 01       	movw	r6, r24

  for (int i=0; i<6; i++)
    10ee:	c0 e0       	ldi	r28, 0x00	; 0
    10f0:	d0 e0       	ldi	r29, 0x00	; 0
  {
    if (Frame::sixFrames == i)
    10f2:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <_ZN5Frame9sixFramesE>
    10f6:	08 2e       	mov	r0, r24
    10f8:	00 0c       	add	r0, r0
    10fa:	99 0b       	sbc	r25, r25
    10fc:	8c 17       	cp	r24, r28
    10fe:	9d 07       	cpc	r25, r29
    1100:	c9 f4       	brne	.+50     	; 0x1134 <_ZN6Player11startPlayerEv+0x62>
    {
      drawTile(60, 120, charRun, i, BLACK, MAROON, RED, WHITE);
    1102:	88 24       	eor	r8, r8
    1104:	8a 94       	dec	r8
    1106:	98 2c       	mov	r9, r8
    1108:	0f 2e       	mov	r0, r31
    110a:	a1 2c       	mov	r10, r1
    110c:	f8 ef       	ldi	r31, 0xF8	; 248
    110e:	bf 2e       	mov	r11, r31
    1110:	f0 2d       	mov	r31, r0
    1112:	0f 2e       	mov	r0, r31
    1114:	c1 2c       	mov	r12, r1
    1116:	f8 e7       	ldi	r31, 0x78	; 120
    1118:	df 2e       	mov	r13, r31
    111a:	f0 2d       	mov	r31, r0
    111c:	e1 2c       	mov	r14, r1
    111e:	f1 2c       	mov	r15, r1
    1120:	0c 2f       	mov	r16, r28
    1122:	28 e8       	ldi	r18, 0x88	; 136
    1124:	3a e0       	ldi	r19, 0x0A	; 10
    1126:	48 e7       	ldi	r20, 0x78	; 120
    1128:	50 e0       	ldi	r21, 0x00	; 0
    112a:	6c e3       	ldi	r22, 0x3C	; 60
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	c3 01       	movw	r24, r6
    1130:	0e 94 ac 0b 	call	0x1758	; 0x1758 <_ZN3TFT8drawTileEiiPA100_Khajjjj>
//----------------------------------------*/

void Player::startPlayer(void)
{

  for (int i=0; i<6; i++)
    1134:	21 96       	adiw	r28, 0x01	; 1
    1136:	c6 30       	cpi	r28, 0x06	; 6
    1138:	d1 05       	cpc	r29, r1
    113a:	d9 f6       	brne	.-74     	; 0x10f2 <_ZN6Player11startPlayerEv+0x20>
    {
      drawTile(60, 120, charRun, i, BLACK, MAROON, RED, WHITE);
    }
  }

    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	0f 91       	pop	r16
    1142:	ff 90       	pop	r15
    1144:	ef 90       	pop	r14
    1146:	df 90       	pop	r13
    1148:	cf 90       	pop	r12
    114a:	bf 90       	pop	r11
    114c:	af 90       	pop	r10
    114e:	9f 90       	pop	r9
    1150:	8f 90       	pop	r8
    1152:	7f 90       	pop	r7
    1154:	6f 90       	pop	r6
    1156:	08 95       	ret

00001158 <_ZN3MCU7Setting9beginPortEab>:
    else
    {
      TCCR1A |= 0x03 | (1 << COM1B1);   // 256 Prescaler, Fast PWM Mode
      TCCR1B = 0x0C;
      TCNT1H = 0x00;                    // Start Counting 0x0000
      TCNT1L = 0x00;
    1158:	61 95       	neg	r22
    115a:	81 30       	cpi	r24, 0x01	; 1
    115c:	39 f0       	breq	.+14     	; 0x116c <_ZN3MCU7Setting9beginPortEab+0x14>
    115e:	82 30       	cpi	r24, 0x02	; 2
    1160:	41 f0       	breq	.+16     	; 0x1172 <_ZN3MCU7Setting9beginPortEab+0x1a>
    1162:	81 11       	cpse	r24, r1
    1164:	08 c0       	rjmp	.+16     	; 0x1176 <_ZN3MCU7Setting9beginPortEab+0x1e>
    1166:	64 b9       	out	0x04, r22	; 4
    1168:	15 b8       	out	0x05, r1	; 5
    116a:	08 95       	ret
    116c:	67 b9       	out	0x07, r22	; 7
    116e:	18 b8       	out	0x08, r1	; 8
    1170:	08 95       	ret
    1172:	6a b9       	out	0x0a, r22	; 10
    1174:	1b b8       	out	0x0b, r1	; 11
    1176:	08 95       	ret

00001178 <_ZN3MCU7Setting10beginTimerEab>:
    1178:	81 30       	cpi	r24, 0x01	; 1
    117a:	99 f1       	breq	.+102    	; 0x11e2 <_ZN3MCU7Setting10beginTimerEab+0x6a>
    117c:	82 30       	cpi	r24, 0x02	; 2
    117e:	b1 f0       	breq	.+44     	; 0x11ac <_ZN3MCU7Setting10beginTimerEab+0x34>
    1180:	81 11       	cpse	r24, r1
    1182:	50 c0       	rjmp	.+160    	; 0x1224 <_ZN3MCU7Setting10beginTimerEab+0xac>
    1184:	61 11       	cpse	r22, r1
    1186:	08 c0       	rjmp	.+16     	; 0x1198 <_ZN3MCU7Setting10beginTimerEab+0x20>
    1188:	81 e0       	ldi	r24, 0x01	; 1
    118a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
    118e:	14 bc       	out	0x24, r1	; 36
    1190:	85 e0       	ldi	r24, 0x05	; 5
    1192:	85 bd       	out	0x25, r24	; 37
    1194:	16 bc       	out	0x26, r1	; 38
    1196:	08 95       	ret
    1198:	82 e0       	ldi	r24, 0x02	; 2
    119a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
    119e:	84 bd       	out	0x24, r24	; 36
    11a0:	85 e0       	ldi	r24, 0x05	; 5
    11a2:	85 bd       	out	0x25, r24	; 37
    11a4:	16 bc       	out	0x26, r1	; 38
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	87 bd       	out	0x27, r24	; 39
    11aa:	08 95       	ret
    11ac:	61 11       	cpse	r22, r1
    11ae:	0b c0       	rjmp	.+22     	; 0x11c6 <_ZN3MCU7Setting10beginTimerEab+0x4e>
    11b0:	81 e0       	ldi	r24, 0x01	; 1
    11b2:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
    11b6:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    11ba:	87 e0       	ldi	r24, 0x07	; 7
    11bc:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    11c0:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    11c4:	08 95       	ret
    11c6:	82 e0       	ldi	r24, 0x02	; 2
    11c8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
    11cc:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
    11d0:	87 e0       	ldi	r24, 0x07	; 7
    11d2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
    11d6:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
    11da:	89 ef       	ldi	r24, 0xF9	; 249
    11dc:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
    11e0:	08 95       	ret
    11e2:	61 11       	cpse	r22, r1
    11e4:	0d c0       	rjmp	.+26     	; 0x1200 <_ZN3MCU7Setting10beginTimerEab+0x88>
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    11ec:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    11f0:	85 e0       	ldi	r24, 0x05	; 5
    11f2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    11f6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    11fa:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    11fe:	08 95       	ret
    1200:	82 e0       	ldi	r24, 0x02	; 2
    1202:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    1206:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
    120a:	8d e0       	ldi	r24, 0x0D	; 13
    120c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1210:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
    1214:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    1218:	8d e3       	ldi	r24, 0x3D	; 61
    121a:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    121e:	88 e0       	ldi	r24, 0x08	; 8
    1220:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    1224:	08 95       	ret

00001226 <_ZN3MCU7Setting8beginSPIEv>:
            Begin SPI Protocol
//----------------------------------------*/

void MCU::Setting::beginSPI(void)
{
  SPCR = (1 << SPE) | (1 << MSTR);
    1226:	80 e5       	ldi	r24, 0x50	; 80
    1228:	8c bd       	out	0x2c, r24	; 44
  SPSR = (1 << SPI2X);
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	8d bd       	out	0x2d, r24	; 45
    122e:	08 95       	ret

00001230 <_ZN3SPI7sendBitEh>:
              Send Serial Bit
//----------------------------------------*/

void SPI::sendBit(uint8_t bitValue)
{
  SPDR = bitValue;
    1230:	6e bd       	out	0x2e, r22	; 46
  while (!(SPSR & 0x80));
    1232:	0d b4       	in	r0, 0x2d	; 45
    1234:	07 fe       	sbrs	r0, 7
    1236:	fd cf       	rjmp	.-6      	; 0x1232 <_ZN3SPI7sendBitEh+0x2>
}
    1238:	08 95       	ret

0000123a <_ZN3SPI13exportCommandEh>:
              Export Command
//----------------------------------------*/

void SPI::exportCommand(uint8_t commandValue)
{
  RS_LOW;
    123a:	2a 98       	cbi	0x05, 2	; 5
  CS_LOW;
    123c:	28 98       	cbi	0x05, 0	; 5

  sendBit(commandValue);
    123e:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    1242:	28 9a       	sbi	0x05, 0	; 5
    1244:	08 95       	ret

00001246 <_ZN3SPI10exportDataEh>:
              Export Data
//----------------------------------------*/

void SPI::exportData(uint8_t dataValue)
{
  RS_HIGH;
    1246:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    1248:	28 98       	cbi	0x05, 0	; 5

  sendBit(dataValue);
    124a:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    124e:	28 9a       	sbi	0x05, 0	; 5
    1250:	08 95       	ret

00001252 <_ZN3SPI14exportLongDataEj>:
/*----------------------------------------//
            Export Long Data
//----------------------------------------*/

void SPI::exportLongData(uint16_t longDataValue)
{
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	ec 01       	movw	r28, r24
    125a:	16 2f       	mov	r17, r22
    125c:	67 2f       	mov	r22, r23
  RS_HIGH;
    125e:	2a 9a       	sbi	0x05, 2	; 5
  CS_LOW;
    1260:	28 98       	cbi	0x05, 0	; 5

  sendBit(longDataValue >> 8);
    1262:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN3SPI7sendBitEh>
  sendBit(longDataValue & 0xFF);
    1266:	61 2f       	mov	r22, r17
    1268:	ce 01       	movw	r24, r28
    126a:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN3SPI7sendBitEh>

  CS_HIGH;
    126e:	28 9a       	sbi	0x05, 0	; 5
}
    1270:	df 91       	pop	r29
    1272:	cf 91       	pop	r28
    1274:	1f 91       	pop	r17
    1276:	08 95       	ret

00001278 <_ZN3TFT5beginEv>:
/*----------------------------------------//
              Begin TFT LCD
//----------------------------------------*/

void TFT::begin(void)
{
    1278:	cf 93       	push	r28
    127a:	df 93       	push	r29
    127c:	ec 01       	movw	r28, r24
  CS_HIGH;
    127e:	28 9a       	sbi	0x05, 0	; 5
  RST_LOW;
    1280:	29 98       	cbi	0x05, 1	; 5
    1282:	2f ef       	ldi	r18, 0xFF	; 255
    1284:	89 ef       	ldi	r24, 0xF9	; 249
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	21 50       	subi	r18, 0x01	; 1
    128a:	80 40       	sbci	r24, 0x00	; 0
    128c:	90 40       	sbci	r25, 0x00	; 0
    128e:	e1 f7       	brne	.-8      	; 0x1288 <_ZN3TFT5beginEv+0x10>
    1290:	00 c0       	rjmp	.+0      	; 0x1292 <_ZN3TFT5beginEv+0x1a>
    1292:	00 00       	nop
  _delay_ms(20);
  RST_HIGH;
    1294:	29 9a       	sbi	0x05, 1	; 5
    1296:	2f ef       	ldi	r18, 0xFF	; 255
    1298:	89 e6       	ldi	r24, 0x69	; 105
    129a:	98 e1       	ldi	r25, 0x18	; 24
    129c:	21 50       	subi	r18, 0x01	; 1
    129e:	80 40       	sbci	r24, 0x00	; 0
    12a0:	90 40       	sbci	r25, 0x00	; 0
    12a2:	e1 f7       	brne	.-8      	; 0x129c <_ZN3TFT5beginEv+0x24>
    12a4:	00 c0       	rjmp	.+0      	; 0x12a6 <_ZN3TFT5beginEv+0x2e>
    12a6:	00 00       	nop
  _delay_ms(500);

  exportCommand(0x01);  // Software Reset (01h)
    12a8:	61 e0       	ldi	r22, 0x01	; 1
    12aa:	ce 01       	movw	r24, r28
    12ac:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
    12b0:	2f ef       	ldi	r18, 0xFF	; 255
    12b2:	89 ef       	ldi	r24, 0xF9	; 249
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	21 50       	subi	r18, 0x01	; 1
    12b8:	80 40       	sbci	r24, 0x00	; 0
    12ba:	90 40       	sbci	r25, 0x00	; 0
    12bc:	e1 f7       	brne	.-8      	; 0x12b6 <_ZN3TFT5beginEv+0x3e>
    12be:	00 c0       	rjmp	.+0      	; 0x12c0 <_ZN3TFT5beginEv+0x48>
    12c0:	00 00       	nop
  _delay_ms(20);

  exportCommand(0xC0);  // Power Control 1 (C0h)
    12c2:	60 ec       	ldi	r22, 0xC0	; 192
    12c4:	ce 01       	movw	r24, r28
    12c6:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
  exportData(0x2B);     // VRH [5:0], GVDD 5.00V
    12ca:	6b e2       	ldi	r22, 0x2B	; 43
    12cc:	ce 01       	movw	r24, r28
    12ce:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>

  exportCommand(0x36);  // Memory Access Control (36h)
    12d2:	66 e3       	ldi	r22, 0x36	; 54
    12d4:	ce 01       	movw	r24, r28
    12d6:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
  exportData(0x48);     // Column Address Order, RGB-BGR Order
    12da:	68 e4       	ldi	r22, 0x48	; 72
    12dc:	ce 01       	movw	r24, r28
    12de:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>

  exportCommand(0x3A);  // COLMOD: Pixel Format Set (3Ah)
    12e2:	6a e3       	ldi	r22, 0x3A	; 58
    12e4:	ce 01       	movw	r24, r28
    12e6:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
  exportData(0x55);     // DBI [2:0], Format 16 bits / pixel
    12ea:	65 e5       	ldi	r22, 0x55	; 85
    12ec:	ce 01       	movw	r24, r28
    12ee:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>

  exportCommand(0x20);  // Display Inversion OFF (20h)
    12f2:	60 e2       	ldi	r22, 0x20	; 32
    12f4:	ce 01       	movw	r24, r28
    12f6:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>

  exportCommand(0x11);  // Sleep Out (11h)
    12fa:	61 e1       	ldi	r22, 0x11	; 17
    12fc:	ce 01       	movw	r24, r28
    12fe:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
    1302:	2f ef       	ldi	r18, 0xFF	; 255
    1304:	89 ef       	ldi	r24, 0xF9	; 249
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	21 50       	subi	r18, 0x01	; 1
    130a:	80 40       	sbci	r24, 0x00	; 0
    130c:	90 40       	sbci	r25, 0x00	; 0
    130e:	e1 f7       	brne	.-8      	; 0x1308 <_ZN3TFT5beginEv+0x90>
    1310:	00 c0       	rjmp	.+0      	; 0x1312 <_ZN3TFT5beginEv+0x9a>
    1312:	00 00       	nop
  _delay_ms(20);

  exportCommand(0x29);  // Display ON (29h)
    1314:	69 e2       	ldi	r22, 0x29	; 41
    1316:	ce 01       	movw	r24, r28
    1318:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
}
    131c:	df 91       	pop	r29
    131e:	cf 91       	pop	r28
    1320:	08 95       	ret

00001322 <_ZN3TFT11setRotationEa>:
/*----------------------------------------//
              Set Rotation
//----------------------------------------*/

void TFT::setRotation(int8_t rotation)
{
    1322:	1f 93       	push	r17
    1324:	cf 93       	push	r28
    1326:	df 93       	push	r29
    1328:	ec 01       	movw	r28, r24
    132a:	16 2f       	mov	r17, r22
  
  int16_t temp;

  exportCommand(0x36);  // Memory Access Control (36h)
    132c:	66 e3       	ldi	r22, 0x36	; 54
    132e:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>

  switch (rotation)
    1332:	11 30       	cpi	r17, 0x01	; 1
    1334:	89 f0       	breq	.+34     	; 0x1358 <_ZN3TFT11setRotationEa+0x36>
    1336:	12 30       	cpi	r17, 0x02	; 2
    1338:	a1 f0       	breq	.+40     	; 0x1362 <_ZN3TFT11setRotationEa+0x40>
    133a:	11 11       	cpse	r17, r1
    133c:	16 c0       	rjmp	.+44     	; 0x136a <_ZN3TFT11setRotationEa+0x48>
  {
  case 0:
    exportData(0x28);   // Row / Column Exchange, RGB-BGR Order
    133e:	68 e2       	ldi	r22, 0x28	; 40
    1340:	ce 01       	movw	r24, r28
    1342:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>
    temp = m_Width;
    1346:	88 81       	ld	r24, Y
    1348:	99 81       	ldd	r25, Y+1	; 0x01
    m_Width = m_Height;
    134a:	2a 81       	ldd	r18, Y+2	; 0x02
    134c:	3b 81       	ldd	r19, Y+3	; 0x03
    134e:	39 83       	std	Y+1, r19	; 0x01
    1350:	28 83       	st	Y, r18
    m_Height = temp;
    1352:	9b 83       	std	Y+3, r25	; 0x03
    1354:	8a 83       	std	Y+2, r24	; 0x02
    break;
    1356:	09 c0       	rjmp	.+18     	; 0x136a <_ZN3TFT11setRotationEa+0x48>

  case 1:
    exportData(0x48);   // Column Address Order, RGB-BGR Order
    1358:	68 e4       	ldi	r22, 0x48	; 72
    135a:	ce 01       	movw	r24, r28
    135c:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>
    break;
    1360:	04 c0       	rjmp	.+8      	; 0x136a <_ZN3TFT11setRotationEa+0x48>

  case 2:
    exportData(0x88);   // Row Address Order, RGB-BGR Order
    1362:	68 e8       	ldi	r22, 0x88	; 136
    1364:	ce 01       	movw	r24, r28
    1366:	0e 94 23 09 	call	0x1246	; 0x1246 <_ZN3SPI10exportDataEh>

  default:
    break;
  }

}
    136a:	df 91       	pop	r29
    136c:	cf 91       	pop	r28
    136e:	1f 91       	pop	r17
    1370:	08 95       	ret

00001372 <_ZN3TFT10setAddressEiiii>:
/*----------------------------------------//
              Set Address
//----------------------------------------*/

void TFT::setAddress(int16_t xPos, int16_t yPos, int16_t width, int16_t height)
{
    1372:	af 92       	push	r10
    1374:	bf 92       	push	r11
    1376:	cf 92       	push	r12
    1378:	df 92       	push	r13
    137a:	ef 92       	push	r14
    137c:	ff 92       	push	r15
    137e:	0f 93       	push	r16
    1380:	1f 93       	push	r17
    1382:	cf 93       	push	r28
    1384:	df 93       	push	r29
    1386:	ec 01       	movw	r28, r24
    1388:	5b 01       	movw	r10, r22
    138a:	7a 01       	movw	r14, r20
    138c:	69 01       	movw	r12, r18
  exportCommand(0x2A);    // Column Address Set (2Ah)
    138e:	6a e2       	ldi	r22, 0x2A	; 42
    1390:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>

  exportLongData(xPos);   // xPosition
    1394:	b5 01       	movw	r22, r10
    1396:	ce 01       	movw	r24, r28
    1398:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
  exportLongData(width);
    139c:	b6 01       	movw	r22, r12
    139e:	ce 01       	movw	r24, r28
    13a0:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2B);    // Page Address Set (2Bh)
    13a4:	6b e2       	ldi	r22, 0x2B	; 43
    13a6:	ce 01       	movw	r24, r28
    13a8:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>

  exportLongData(yPos);   // yPosition
    13ac:	b7 01       	movw	r22, r14
    13ae:	ce 01       	movw	r24, r28
    13b0:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
  exportLongData(height);
    13b4:	b8 01       	movw	r22, r16
    13b6:	ce 01       	movw	r24, r28
    13b8:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>

  exportCommand(0x2C);    // Memory Write (2Ch)
    13bc:	6c e2       	ldi	r22, 0x2C	; 44
    13be:	ce 01       	movw	r24, r28
    13c0:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN3SPI13exportCommandEh>
}
    13c4:	df 91       	pop	r29
    13c6:	cf 91       	pop	r28
    13c8:	1f 91       	pop	r17
    13ca:	0f 91       	pop	r16
    13cc:	ff 90       	pop	r15
    13ce:	ef 90       	pop	r14
    13d0:	df 90       	pop	r13
    13d2:	cf 90       	pop	r12
    13d4:	bf 90       	pop	r11
    13d6:	af 90       	pop	r10
    13d8:	08 95       	ret

000013da <_ZN3TFT10fillScreenEj>:
/*----------------------------------------//
              Fill Screen
//----------------------------------------*/

void TFT::fillScreen(uint16_t colorValue)
{
    13da:	cf 92       	push	r12
    13dc:	df 92       	push	r13
    13de:	ef 92       	push	r14
    13e0:	ff 92       	push	r15
    13e2:	0f 93       	push	r16
    13e4:	1f 93       	push	r17
    13e6:	cf 93       	push	r28
    13e8:	df 93       	push	r29
    13ea:	7c 01       	movw	r14, r24
    13ec:	6b 01       	movw	r12, r22

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));
    13ee:	fc 01       	movw	r30, r24
    13f0:	02 81       	ldd	r16, Z+2	; 0x02
    13f2:	13 81       	ldd	r17, Z+3	; 0x03
    13f4:	01 50       	subi	r16, 0x01	; 1
    13f6:	11 09       	sbc	r17, r1
    13f8:	20 81       	ld	r18, Z
    13fa:	31 81       	ldd	r19, Z+1	; 0x01
    13fc:	21 50       	subi	r18, 0x01	; 1
    13fe:	31 09       	sbc	r19, r1
    1400:	40 e0       	ldi	r20, 0x00	; 0
    1402:	50 e0       	ldi	r21, 0x00	; 0
    1404:	60 e0       	ldi	r22, 0x00	; 0
    1406:	70 e0       	ldi	r23, 0x00	; 0
    1408:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<m_Height; i++)
    140c:	f7 01       	movw	r30, r14
    140e:	82 81       	ldd	r24, Z+2	; 0x02
    1410:	93 81       	ldd	r25, Z+3	; 0x03
    1412:	18 16       	cp	r1, r24
    1414:	19 06       	cpc	r1, r25
    1416:	ec f4       	brge	.+58     	; 0x1452 <_ZN3TFT10fillScreenEj+0x78>
    1418:	00 e0       	ldi	r16, 0x00	; 0
    141a:	10 e0       	ldi	r17, 0x00	; 0
  {
    for (int j=0; j<m_Width; j++)
    141c:	f7 01       	movw	r30, r14
    141e:	80 81       	ld	r24, Z
    1420:	91 81       	ldd	r25, Z+1	; 0x01
    1422:	18 16       	cp	r1, r24
    1424:	19 06       	cpc	r1, r25
    1426:	6c f4       	brge	.+26     	; 0x1442 <_ZN3TFT10fillScreenEj+0x68>
    1428:	c0 e0       	ldi	r28, 0x00	; 0
    142a:	d0 e0       	ldi	r29, 0x00	; 0
    {
      exportLongData(colorValue);
    142c:	b6 01       	movw	r22, r12
    142e:	c7 01       	movw	r24, r14
    1430:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
  {
    for (int j=0; j<m_Width; j++)
    1434:	21 96       	adiw	r28, 0x01	; 1
    1436:	f7 01       	movw	r30, r14
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	c8 17       	cp	r28, r24
    143e:	d9 07       	cpc	r29, r25
    1440:	ac f3       	brlt	.-22     	; 0x142c <_ZN3TFT10fillScreenEj+0x52>
void TFT::fillScreen(uint16_t colorValue)
{

  setAddress(0, 0, (m_Width - 1), (m_Height - 1));

  for (int i=0; i<m_Height; i++)
    1442:	0f 5f       	subi	r16, 0xFF	; 255
    1444:	1f 4f       	sbci	r17, 0xFF	; 255
    1446:	f7 01       	movw	r30, r14
    1448:	82 81       	ldd	r24, Z+2	; 0x02
    144a:	93 81       	ldd	r25, Z+3	; 0x03
    144c:	08 17       	cp	r16, r24
    144e:	19 07       	cpc	r17, r25
    1450:	2c f3       	brlt	.-54     	; 0x141c <_ZN3TFT10fillScreenEj+0x42>
    {
      exportLongData(colorValue);
    }
  }

}
    1452:	df 91       	pop	r29
    1454:	cf 91       	pop	r28
    1456:	1f 91       	pop	r17
    1458:	0f 91       	pop	r16
    145a:	ff 90       	pop	r15
    145c:	ef 90       	pop	r14
    145e:	df 90       	pop	r13
    1460:	cf 90       	pop	r12
    1462:	08 95       	ret

00001464 <_ZN3TFT10drawBitmapEiiiiPKhjjjj>:
/*----------------------------------------//
              Draw Bitmap
//----------------------------------------*/

void TFT::drawBitmap(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    1464:	2f 92       	push	r2
    1466:	3f 92       	push	r3
    1468:	4f 92       	push	r4
    146a:	5f 92       	push	r5
    146c:	6f 92       	push	r6
    146e:	7f 92       	push	r7
    1470:	8f 92       	push	r8
    1472:	9f 92       	push	r9
    1474:	af 92       	push	r10
    1476:	bf 92       	push	r11
    1478:	cf 92       	push	r12
    147a:	df 92       	push	r13
    147c:	ef 92       	push	r14
    147e:	ff 92       	push	r15
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	cf 93       	push	r28
    1486:	df 93       	push	r29
    1488:	cd b7       	in	r28, 0x3d	; 61
    148a:	de b7       	in	r29, 0x3e	; 62
    148c:	2a 97       	sbiw	r28, 0x0a	; 10
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	de bf       	out	0x3e, r29	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	cd bf       	out	0x3d, r28	; 61
    1498:	3c 01       	movw	r6, r24
    149a:	29 01       	movw	r4, r18
    149c:	18 87       	std	Y+8, r17	; 0x08
    149e:	0f 83       	std	Y+7, r16	; 0x07
    14a0:	16 01       	movw	r2, r12
    14a2:	ba 82       	std	Y+2, r11	; 0x02
    14a4:	a9 82       	std	Y+1, r10	; 0x01
    14a6:	9c 82       	std	Y+4, r9	; 0x04
    14a8:	8b 82       	std	Y+3, r8	; 0x03

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    14aa:	04 0f       	add	r16, r20
    14ac:	15 1f       	adc	r17, r21
    14ae:	01 50       	subi	r16, 0x01	; 1
    14b0:	11 09       	sbc	r17, r1
    14b2:	9b 01       	movw	r18, r22
    14b4:	24 0d       	add	r18, r4
    14b6:	35 1d       	adc	r19, r5
    14b8:	21 50       	subi	r18, 0x01	; 1
    14ba:	31 09       	sbc	r19, r1
    14bc:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<height; i++)
    14c0:	2f 81       	ldd	r18, Y+7	; 0x07
    14c2:	38 85       	ldd	r19, Y+8	; 0x08
    14c4:	12 16       	cp	r1, r18
    14c6:	13 06       	cpc	r1, r19
    14c8:	0c f0       	brlt	.+2      	; 0x14cc <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x68>
    14ca:	5b c0       	rjmp	.+182    	; 0x1582 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11e>
  {
    for (int j=0; j<(width / 4); j++)
    14cc:	c2 01       	movw	r24, r4
    14ce:	99 23       	and	r25, r25
    14d0:	0c f4       	brge	.+2      	; 0x14d4 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x70>
    14d2:	03 96       	adiw	r24, 0x03	; 3
    14d4:	fc 01       	movw	r30, r24
    14d6:	f5 95       	asr	r31
    14d8:	e7 95       	ror	r30
    14da:	f5 95       	asr	r31
    14dc:	e7 95       	ror	r30
    14de:	fa 87       	std	Y+10, r31	; 0x0a
    14e0:	e9 87       	std	Y+9, r30	; 0x09
    14e2:	fe 83       	std	Y+6, r31	; 0x06
    14e4:	ed 83       	std	Y+5, r30	; 0x05
    14e6:	ae 2c       	mov	r10, r14
    14e8:	bf 2c       	mov	r11, r15
    14ea:	41 2c       	mov	r4, r1
    14ec:	51 2c       	mov	r5, r1
    14ee:	29 85       	ldd	r18, Y+9	; 0x09
    14f0:	3a 85       	ldd	r19, Y+10	; 0x0a
    14f2:	12 16       	cp	r1, r18
    14f4:	13 06       	cpc	r1, r19
    14f6:	c4 f5       	brge	.+112    	; 0x1568 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x104>
    14f8:	ed 80       	ldd	r14, Y+5	; 0x05
    14fa:	fe 80       	ldd	r15, Y+6	; 0x06
    14fc:	ea 0c       	add	r14, r10
    14fe:	fb 1c       	adc	r15, r11
    1500:	85 01       	movw	r16, r10
    {

      data = pgm_read_byte(&bitmap[i * (width / 4) + j]);
    1502:	f8 01       	movw	r30, r16
    1504:	94 90       	lpm	r9, Z
    1506:	68 94       	set
    1508:	cc 24       	eor	r12, r12
    150a:	c2 f8       	bld	r12, 2
    150c:	d1 2c       	mov	r13, r1

      for (int k=0; k<4; k++)
      {
        temp = data >> 6;
    150e:	89 2d       	mov	r24, r9
    1510:	82 95       	swap	r24
    1512:	86 95       	lsr	r24
    1514:	86 95       	lsr	r24
    1516:	83 70       	andi	r24, 0x03	; 3

        if (temp == 0x00)       //1Pixel = 00
    1518:	29 f4       	brne	.+10     	; 0x1524 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xc0>
        {
          exportLongData(color0Bit);
    151a:	b1 01       	movw	r22, r2
    151c:	c3 01       	movw	r24, r6
    151e:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    1522:	17 c0       	rjmp	.+46     	; 0x1552 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x01)  //1Pixel = 01
    1524:	81 30       	cpi	r24, 0x01	; 1
    1526:	31 f4       	brne	.+12     	; 0x1534 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xd0>
        {
          exportLongData(color1Bit);
    1528:	69 81       	ldd	r22, Y+1	; 0x01
    152a:	7a 81       	ldd	r23, Y+2	; 0x02
    152c:	c3 01       	movw	r24, r6
    152e:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    1532:	0f c0       	rjmp	.+30     	; 0x1552 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x02)  //1Pixel = 10
    1534:	82 30       	cpi	r24, 0x02	; 2
    1536:	31 f4       	brne	.+12     	; 0x1544 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xe0>
        {
          exportLongData(color2Bit);
    1538:	6b 81       	ldd	r22, Y+3	; 0x03
    153a:	7c 81       	ldd	r23, Y+4	; 0x04
    153c:	c3 01       	movw	r24, r6
    153e:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    1542:	07 c0       	rjmp	.+14     	; 0x1552 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        }

        else if (temp == 0x03)  //1Pixel = 11
    1544:	83 30       	cpi	r24, 0x03	; 3
    1546:	29 f4       	brne	.+10     	; 0x1552 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xee>
        {
          exportLongData(color3Bit);
    1548:	6f 8d       	ldd	r22, Y+31	; 0x1f
    154a:	78 a1       	ldd	r23, Y+32	; 0x20
    154c:	c3 01       	movw	r24, r6
    154e:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
        }

        data <<= 2;
    1552:	99 0c       	add	r9, r9
    1554:	99 0c       	add	r9, r9
    1556:	f1 e0       	ldi	r31, 0x01	; 1
    1558:	cf 1a       	sub	r12, r31
    155a:	d1 08       	sbc	r13, r1
    for (int j=0; j<(width / 4); j++)
    {

      data = pgm_read_byte(&bitmap[i * (width / 4) + j]);

      for (int k=0; k<4; k++)
    155c:	c1 f6       	brne	.-80     	; 0x150e <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0xaa>
    155e:	0f 5f       	subi	r16, 0xFF	; 255
    1560:	1f 4f       	sbci	r17, 0xFF	; 255

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<height; i++)
  {
    for (int j=0; j<(width / 4); j++)
    1562:	e0 16       	cp	r14, r16
    1564:	f1 06       	cpc	r15, r17
    1566:	69 f6       	brne	.-102    	; 0x1502 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x9e>
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<height; i++)
    1568:	2f ef       	ldi	r18, 0xFF	; 255
    156a:	42 1a       	sub	r4, r18
    156c:	52 0a       	sbc	r5, r18
    156e:	8d 81       	ldd	r24, Y+5	; 0x05
    1570:	9e 81       	ldd	r25, Y+6	; 0x06
    1572:	a8 0e       	add	r10, r24
    1574:	b9 1e       	adc	r11, r25
    1576:	ef 81       	ldd	r30, Y+7	; 0x07
    1578:	f8 85       	ldd	r31, Y+8	; 0x08
    157a:	e4 15       	cp	r30, r4
    157c:	f5 05       	cpc	r31, r5
    157e:	09 f0       	breq	.+2      	; 0x1582 <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x11e>
    1580:	b6 cf       	rjmp	.-148    	; 0x14ee <_ZN3TFT10drawBitmapEiiiiPKhjjjj+0x8a>
      }

    }
  }

}
    1582:	2a 96       	adiw	r28, 0x0a	; 10
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
    158e:	df 91       	pop	r29
    1590:	cf 91       	pop	r28
    1592:	1f 91       	pop	r17
    1594:	0f 91       	pop	r16
    1596:	ff 90       	pop	r15
    1598:	ef 90       	pop	r14
    159a:	df 90       	pop	r13
    159c:	cf 90       	pop	r12
    159e:	bf 90       	pop	r11
    15a0:	af 90       	pop	r10
    15a2:	9f 90       	pop	r9
    15a4:	8f 90       	pop	r8
    15a6:	7f 90       	pop	r7
    15a8:	6f 90       	pop	r6
    15aa:	5f 90       	pop	r5
    15ac:	4f 90       	pop	r4
    15ae:	3f 90       	pop	r3
    15b0:	2f 90       	pop	r2
    15b2:	08 95       	ret

000015b4 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj>:
/*----------------------------------------//
            Draw Bitmap Twice
//----------------------------------------*/

void TFT::drawBitmapTwice(int16_t xPos, int16_t yPos, int16_t width, int16_t height, const uint8_t *bitmap, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    15b4:	2f 92       	push	r2
    15b6:	3f 92       	push	r3
    15b8:	4f 92       	push	r4
    15ba:	5f 92       	push	r5
    15bc:	6f 92       	push	r6
    15be:	7f 92       	push	r7
    15c0:	8f 92       	push	r8
    15c2:	9f 92       	push	r9
    15c4:	af 92       	push	r10
    15c6:	bf 92       	push	r11
    15c8:	cf 92       	push	r12
    15ca:	df 92       	push	r13
    15cc:	ef 92       	push	r14
    15ce:	ff 92       	push	r15
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	cd b7       	in	r28, 0x3d	; 61
    15da:	de b7       	in	r29, 0x3e	; 62
    15dc:	60 97       	sbiw	r28, 0x10	; 16
    15de:	0f b6       	in	r0, 0x3f	; 63
    15e0:	f8 94       	cli
    15e2:	de bf       	out	0x3e, r29	; 62
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	cd bf       	out	0x3d, r28	; 61
    15e8:	98 8b       	std	Y+16, r25	; 0x10
    15ea:	8f 87       	std	Y+15, r24	; 0x0f
    15ec:	29 01       	movw	r4, r18
    15ee:	38 01       	movw	r6, r16
    15f0:	da 82       	std	Y+2, r13	; 0x02
    15f2:	c9 82       	std	Y+1, r12	; 0x01
    15f4:	ba 86       	std	Y+10, r11	; 0x0a
    15f6:	a9 86       	std	Y+9, r10	; 0x09
    15f8:	9c 86       	std	Y+12, r9	; 0x0c
    15fa:	8b 86       	std	Y+11, r8	; 0x0b

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));
    15fc:	8a 01       	movw	r16, r20
    15fe:	06 0d       	add	r16, r6
    1600:	17 1d       	adc	r17, r7
    1602:	01 50       	subi	r16, 0x01	; 1
    1604:	11 09       	sbc	r17, r1
    1606:	9b 01       	movw	r18, r22
    1608:	24 0d       	add	r18, r4
    160a:	35 1d       	adc	r19, r5
    160c:	21 50       	subi	r18, 0x01	; 1
    160e:	31 09       	sbc	r19, r1
    1610:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN3TFT10setAddressEiiii>

  for (int i=0; i<(height / 2); i++)
    1614:	c3 01       	movw	r24, r6
    1616:	99 23       	and	r25, r25
    1618:	0c f4       	brge	.+2      	; 0x161c <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x68>
    161a:	01 96       	adiw	r24, 0x01	; 1
    161c:	9c 01       	movw	r18, r24
    161e:	35 95       	asr	r19
    1620:	27 95       	ror	r18
    1622:	3e 87       	std	Y+14, r19	; 0x0e
    1624:	2d 87       	std	Y+13, r18	; 0x0d
    1626:	12 16       	cp	r1, r18
    1628:	13 06       	cpc	r1, r19
    162a:	0c f0       	brlt	.+2      	; 0x162e <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x7a>
    162c:	7c c0       	rjmp	.+248    	; 0x1726 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x172>
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    162e:	c2 01       	movw	r24, r4
    1630:	99 23       	and	r25, r25
    1632:	0c f4       	brge	.+2      	; 0x1636 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x82>
    1634:	07 96       	adiw	r24, 0x07	; 7
    1636:	fc 01       	movw	r30, r24
    1638:	f5 95       	asr	r31
    163a:	e7 95       	ror	r30
    163c:	f5 95       	asr	r31
    163e:	e7 95       	ror	r30
    1640:	f5 95       	asr	r31
    1642:	e7 95       	ror	r30
    1644:	fe 83       	std	Y+6, r31	; 0x06
    1646:	ed 83       	std	Y+5, r30	; 0x05
    1648:	f8 87       	std	Y+8, r31	; 0x08
    164a:	ef 83       	std	Y+7, r30	; 0x07
    164c:	6e 2c       	mov	r6, r14
    164e:	7f 2c       	mov	r7, r15
    1650:	21 2c       	mov	r2, r1
    1652:	31 2c       	mov	r3, r1
    1654:	68 94       	set
    1656:	aa 24       	eor	r10, r10
    1658:	a1 f8       	bld	r10, 1
    165a:	b1 2c       	mov	r11, r1
    165c:	8f 80       	ldd	r8, Y+7	; 0x07
    165e:	98 84       	ldd	r9, Y+8	; 0x08
    1660:	86 0c       	add	r8, r6
    1662:	97 1c       	adc	r9, r7
    1664:	7c 82       	std	Y+4, r7	; 0x04
    1666:	6b 82       	std	Y+3, r6	; 0x03
    1668:	4f 84       	ldd	r4, Y+15	; 0x0f
    166a:	58 88       	ldd	r5, Y+16	; 0x10
    166c:	2d 81       	ldd	r18, Y+5	; 0x05
    166e:	3e 81       	ldd	r19, Y+6	; 0x06
    1670:	12 16       	cp	r1, r18
    1672:	13 06       	cpc	r1, r19
    1674:	0c f0       	brlt	.+2      	; 0x1678 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xc4>
    1676:	43 c0       	rjmp	.+134    	; 0x16fe <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x14a>
    1678:	eb 80       	ldd	r14, Y+3	; 0x03
    167a:	fc 80       	ldd	r15, Y+4	; 0x04
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);
    167c:	f7 01       	movw	r30, r14
    167e:	c4 90       	lpm	r12, Z
    1680:	68 94       	set
    1682:	66 24       	eor	r6, r6
    1684:	62 f8       	bld	r6, 2
    1686:	71 2c       	mov	r7, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    1688:	dc 2c       	mov	r13, r12
    168a:	d6 94       	lsr	r13
    168c:	d6 94       	lsr	r13
    168e:	d6 94       	lsr	r13
    1690:	d6 94       	lsr	r13
    1692:	d6 94       	lsr	r13
    1694:	d6 94       	lsr	r13
    1696:	02 e0       	ldi	r16, 0x02	; 2
    1698:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    169a:	d1 10       	cpse	r13, r1
    169c:	06 c0       	rjmp	.+12     	; 0x16aa <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xf6>
            {
              exportLongData(color0Bit);
    169e:	69 81       	ldd	r22, Y+1	; 0x01
    16a0:	7a 81       	ldd	r23, Y+2	; 0x02
    16a2:	c2 01       	movw	r24, r4
    16a4:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    16a8:	1a c0       	rjmp	.+52     	; 0x16de <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x01)  //1Pixel = 01
    16aa:	f1 e0       	ldi	r31, 0x01	; 1
    16ac:	df 12       	cpse	r13, r31
    16ae:	06 c0       	rjmp	.+12     	; 0x16bc <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x108>
            {
              exportLongData(color1Bit);
    16b0:	69 85       	ldd	r22, Y+9	; 0x09
    16b2:	7a 85       	ldd	r23, Y+10	; 0x0a
    16b4:	c2 01       	movw	r24, r4
    16b6:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    16ba:	11 c0       	rjmp	.+34     	; 0x16de <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x02)  //1Pixel = 10
    16bc:	22 e0       	ldi	r18, 0x02	; 2
    16be:	d2 12       	cpse	r13, r18
    16c0:	06 c0       	rjmp	.+12     	; 0x16ce <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x11a>
            {
              exportLongData(color2Bit);
    16c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    16c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    16c6:	c2 01       	movw	r24, r4
    16c8:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    16cc:	08 c0       	rjmp	.+16     	; 0x16de <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            }

            else if (temp == 0x03)  //1Pixel = 11
    16ce:	33 e0       	ldi	r19, 0x03	; 3
    16d0:	d3 12       	cpse	r13, r19
    16d2:	05 c0       	rjmp	.+10     	; 0x16de <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x12a>
            {
              exportLongData(color3Bit);
    16d4:	6d a1       	ldd	r22, Y+37	; 0x25
    16d6:	7e a1       	ldd	r23, Y+38	; 0x26
    16d8:	c2 01       	movw	r24, r4
    16da:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    16de:	01 50       	subi	r16, 0x01	; 1
    16e0:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    16e2:	d9 f6       	brne	.-74     	; 0x169a <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xe6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    16e4:	cc 0c       	add	r12, r12
    16e6:	cc 0c       	add	r12, r12
    16e8:	81 e0       	ldi	r24, 0x01	; 1
    16ea:	68 1a       	sub	r6, r24
    16ec:	71 08       	sbc	r7, r1
      for (int k=0; k<(width / 8); k++)
      {

        data = pgm_read_byte(&bitmap[i * (width / 8) + k]);

        for (int l=0; l<4; l++)
    16ee:	61 f6       	brne	.-104    	; 0x1688 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xd4>
    16f0:	9f ef       	ldi	r25, 0xFF	; 255
    16f2:	e9 1a       	sub	r14, r25
    16f4:	f9 0a       	sbc	r15, r25

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(width / 8); k++)
    16f6:	e8 14       	cp	r14, r8
    16f8:	f9 04       	cpc	r15, r9
    16fa:	09 f0       	breq	.+2      	; 0x16fe <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x14a>
    16fc:	bf cf       	rjmp	.-130    	; 0x167c <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xc8>
    16fe:	e1 e0       	ldi	r30, 0x01	; 1
    1700:	ae 1a       	sub	r10, r30
    1702:	b1 08       	sbc	r11, r1

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
  {
    for (int j=0; j<2; j++)
    1704:	09 f0       	breq	.+2      	; 0x1708 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x154>
    1706:	b2 cf       	rjmp	.-156    	; 0x166c <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xb8>
    1708:	6b 80       	ldd	r6, Y+3	; 0x03
    170a:	7c 80       	ldd	r7, Y+4	; 0x04
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + width - 1), (yPos + height - 1));

  for (int i=0; i<(height / 2); i++)
    170c:	ff ef       	ldi	r31, 0xFF	; 255
    170e:	2f 1a       	sub	r2, r31
    1710:	3f 0a       	sbc	r3, r31
    1712:	2f 81       	ldd	r18, Y+7	; 0x07
    1714:	38 85       	ldd	r19, Y+8	; 0x08
    1716:	62 0e       	add	r6, r18
    1718:	73 1e       	adc	r7, r19
    171a:	8d 85       	ldd	r24, Y+13	; 0x0d
    171c:	9e 85       	ldd	r25, Y+14	; 0x0e
    171e:	28 16       	cp	r2, r24
    1720:	39 06       	cpc	r3, r25
    1722:	09 f0       	breq	.+2      	; 0x1726 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0x172>
    1724:	97 cf       	rjmp	.-210    	; 0x1654 <_ZN3TFT15drawBitmapTwiceEiiiiPKhjjjj+0xa0>

      }
    }
  }

}
    1726:	60 96       	adiw	r28, 0x10	; 16
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	f8 94       	cli
    172c:	de bf       	out	0x3e, r29	; 62
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	cd bf       	out	0x3d, r28	; 61
    1732:	df 91       	pop	r29
    1734:	cf 91       	pop	r28
    1736:	1f 91       	pop	r17
    1738:	0f 91       	pop	r16
    173a:	ff 90       	pop	r15
    173c:	ef 90       	pop	r14
    173e:	df 90       	pop	r13
    1740:	cf 90       	pop	r12
    1742:	bf 90       	pop	r11
    1744:	af 90       	pop	r10
    1746:	9f 90       	pop	r9
    1748:	8f 90       	pop	r8
    174a:	7f 90       	pop	r7
    174c:	6f 90       	pop	r6
    174e:	5f 90       	pop	r5
    1750:	4f 90       	pop	r4
    1752:	3f 90       	pop	r3
    1754:	2f 90       	pop	r2
    1756:	08 95       	ret

00001758 <_ZN3TFT8drawTileEiiPA100_Khajjjj>:
/*----------------------------------------//
              Draw 20x20 Tile
//----------------------------------------*/

void TFT::drawTile(int16_t xPos, int16_t yPos, const unsigned char (*bitmap)[100], int8_t tileSelection, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    1758:	2f 92       	push	r2
    175a:	3f 92       	push	r3
    175c:	4f 92       	push	r4
    175e:	5f 92       	push	r5
    1760:	6f 92       	push	r6
    1762:	7f 92       	push	r7
    1764:	8f 92       	push	r8
    1766:	9f 92       	push	r9
    1768:	af 92       	push	r10
    176a:	bf 92       	push	r11
    176c:	cf 92       	push	r12
    176e:	df 92       	push	r13
    1770:	ef 92       	push	r14
    1772:	ff 92       	push	r15
    1774:	0f 93       	push	r16
    1776:	1f 93       	push	r17
    1778:	cf 93       	push	r28
    177a:	df 93       	push	r29
    177c:	cd b7       	in	r28, 0x3d	; 61
    177e:	de b7       	in	r29, 0x3e	; 62
    1780:	28 97       	sbiw	r28, 0x08	; 8
    1782:	0f b6       	in	r0, 0x3f	; 63
    1784:	f8 94       	cli
    1786:	de bf       	out	0x3e, r29	; 62
    1788:	0f be       	out	0x3f, r0	; 63
    178a:	cd bf       	out	0x3d, r28	; 61
    178c:	3c 01       	movw	r6, r24
    178e:	19 01       	movw	r2, r18
    1790:	0f 83       	std	Y+7, r16	; 0x07
    1792:	27 01       	movw	r4, r14
    1794:	da 82       	std	Y+2, r13	; 0x02
    1796:	c9 82       	std	Y+1, r12	; 0x01
    1798:	bc 82       	std	Y+4, r11	; 0x04
    179a:	ab 82       	std	Y+3, r10	; 0x03
    179c:	9e 82       	std	Y+6, r9	; 0x06
    179e:	8d 82       	std	Y+5, r8	; 0x05

  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + 39), (yPos + 39));
    17a0:	8a 01       	movw	r16, r20
    17a2:	09 5d       	subi	r16, 0xD9	; 217
    17a4:	1f 4f       	sbci	r17, 0xFF	; 255
    17a6:	9b 01       	movw	r18, r22
    17a8:	29 5d       	subi	r18, 0xD9	; 217
    17aa:	3f 4f       	sbci	r19, 0xFF	; 255
    17ac:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN3TFT10setAddressEiiii>
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(40 / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (40 / 8) + k]);
    17b0:	c1 01       	movw	r24, r2
    17b2:	2f 81       	ldd	r18, Y+7	; 0x07
    17b4:	34 e6       	ldi	r19, 0x64	; 100
    17b6:	23 02       	muls	r18, r19
    17b8:	80 0d       	add	r24, r0
    17ba:	91 1d       	adc	r25, r1
    17bc:	11 24       	eor	r1, r1
    17be:	5c 01       	movw	r10, r24
    17c0:	e5 e0       	ldi	r30, 0x05	; 5
    17c2:	ae 0e       	add	r10, r30
    17c4:	b1 1c       	adc	r11, r1
    17c6:	9c 01       	movw	r18, r24
    17c8:	27 59       	subi	r18, 0x97	; 151
    17ca:	3f 4f       	sbci	r19, 0xFF	; 255
    17cc:	38 87       	std	Y+8, r19	; 0x08
    17ce:	2f 83       	std	Y+7, r18	; 0x07
/*----------------------------------------//
              Draw 20x20 Tile
//----------------------------------------*/

void TFT::drawTile(int16_t xPos, int16_t yPos, const unsigned char (*bitmap)[100], int8_t tileSelection, uint16_t color0Bit, uint16_t color1Bit, uint16_t color2Bit, uint16_t color3Bit)
{
    17d0:	68 94       	set
    17d2:	88 24       	eor	r8, r8
    17d4:	81 f8       	bld	r8, 1
    17d6:	91 2c       	mov	r9, r1
    17d8:	65 01       	movw	r12, r10
    17da:	35 e0       	ldi	r19, 0x05	; 5
    17dc:	c3 1a       	sub	r12, r19
    17de:	d1 08       	sbc	r13, r1
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(40 / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (40 / 8) + k]);
    17e0:	f6 01       	movw	r30, r12
    17e2:	24 90       	lpm	r2, Z
    17e4:	68 94       	set
    17e6:	ee 24       	eor	r14, r14
    17e8:	e2 f8       	bld	r14, 2
    17ea:	f1 2c       	mov	r15, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;
    17ec:	32 2c       	mov	r3, r2
    17ee:	36 94       	lsr	r3
    17f0:	36 94       	lsr	r3
    17f2:	36 94       	lsr	r3
    17f4:	36 94       	lsr	r3
    17f6:	36 94       	lsr	r3
    17f8:	36 94       	lsr	r3
    17fa:	02 e0       	ldi	r16, 0x02	; 2
    17fc:	10 e0       	ldi	r17, 0x00	; 0

          for (int m=0; m<2; m++)
          {

            if (temp == 0x00)       //1Pixel = 00
    17fe:	31 10       	cpse	r3, r1
    1800:	05 c0       	rjmp	.+10     	; 0x180c <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xb4>
            {
              exportLongData(color0Bit);
    1802:	b2 01       	movw	r22, r4
    1804:	c3 01       	movw	r24, r6
    1806:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    180a:	1a c0       	rjmp	.+52     	; 0x1840 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xe8>
            }

            else if (temp == 0x01)  //1Pixel = 01
    180c:	f1 e0       	ldi	r31, 0x01	; 1
    180e:	3f 12       	cpse	r3, r31
    1810:	06 c0       	rjmp	.+12     	; 0x181e <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xc6>
            {
              exportLongData(color1Bit);
    1812:	69 81       	ldd	r22, Y+1	; 0x01
    1814:	7a 81       	ldd	r23, Y+2	; 0x02
    1816:	c3 01       	movw	r24, r6
    1818:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    181c:	11 c0       	rjmp	.+34     	; 0x1840 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xe8>
            }

            else if (temp == 0x02)  //1Pixel = 10
    181e:	22 e0       	ldi	r18, 0x02	; 2
    1820:	32 12       	cpse	r3, r18
    1822:	06 c0       	rjmp	.+12     	; 0x1830 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xd8>
            {
              exportLongData(color2Bit);
    1824:	6b 81       	ldd	r22, Y+3	; 0x03
    1826:	7c 81       	ldd	r23, Y+4	; 0x04
    1828:	c3 01       	movw	r24, r6
    182a:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    182e:	08 c0       	rjmp	.+16     	; 0x1840 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xe8>
            }

            else if (temp == 0x03)  //1Pixel = 11
    1830:	33 e0       	ldi	r19, 0x03	; 3
    1832:	33 12       	cpse	r3, r19
    1834:	05 c0       	rjmp	.+10     	; 0x1840 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xe8>
            {
              exportLongData(color3Bit);
    1836:	6d 81       	ldd	r22, Y+5	; 0x05
    1838:	7e 81       	ldd	r23, Y+6	; 0x06
    183a:	c3 01       	movw	r24, r6
    183c:	0e 94 29 09 	call	0x1252	; 0x1252 <_ZN3SPI14exportLongDataEj>
    1840:	01 50       	subi	r16, 0x01	; 1
    1842:	11 09       	sbc	r17, r1

        for (int l=0; l<4; l++)
        {
          temp = data >> 6;

          for (int m=0; m<2; m++)
    1844:	e1 f6       	brne	.-72     	; 0x17fe <_ZN3TFT8drawTileEiiPA100_Khajjjj+0xa6>
              exportLongData(color3Bit);
            }

          }

          data <<= 2;
    1846:	22 0c       	add	r2, r2
    1848:	22 0c       	add	r2, r2
    184a:	81 e0       	ldi	r24, 0x01	; 1
    184c:	e8 1a       	sub	r14, r24
    184e:	f1 08       	sbc	r15, r1
      for (int k=0; k<(40 / 8); k++)
      {

        data = pgm_read_byte(&bitmap[tileSelection][i * (40 / 8) + k]);

        for (int l=0; l<4; l++)
    1850:	69 f6       	brne	.-102    	; 0x17ec <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x94>
    1852:	9f ef       	ldi	r25, 0xFF	; 255
    1854:	c9 1a       	sub	r12, r25
    1856:	d9 0a       	sbc	r13, r25

  for (int i=0; i<(40 / 2); i++)
  {
    for (int j=0; j<2; j++)
    {
      for (int k=0; k<(40 / 8); k++)
    1858:	ca 14       	cp	r12, r10
    185a:	db 04       	cpc	r13, r11
    185c:	09 f0       	breq	.+2      	; 0x1860 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x108>
    185e:	c0 cf       	rjmp	.-128    	; 0x17e0 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x88>
    1860:	e1 e0       	ldi	r30, 0x01	; 1
    1862:	8e 1a       	sub	r8, r30
    1864:	91 08       	sbc	r9, r1

  setAddress(xPos, yPos, (xPos + 39), (yPos + 39));

  for (int i=0; i<(40 / 2); i++)
  {
    for (int j=0; j<2; j++)
    1866:	09 f0       	breq	.+2      	; 0x186a <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x112>
    1868:	b7 cf       	rjmp	.-146    	; 0x17d8 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x80>
    186a:	f5 e0       	ldi	r31, 0x05	; 5
    186c:	af 0e       	add	r10, r31
    186e:	b1 1c       	adc	r11, r1
  uint8_t data;
  uint8_t temp;

  setAddress(xPos, yPos, (xPos + 39), (yPos + 39));

  for (int i=0; i<(40 / 2); i++)
    1870:	2f 81       	ldd	r18, Y+7	; 0x07
    1872:	38 85       	ldd	r19, Y+8	; 0x08
    1874:	2a 15       	cp	r18, r10
    1876:	3b 05       	cpc	r19, r11
    1878:	09 f0       	breq	.+2      	; 0x187c <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x124>
    187a:	aa cf       	rjmp	.-172    	; 0x17d0 <_ZN3TFT8drawTileEiiPA100_Khajjjj+0x78>

      }
    }
  }

    187c:	28 96       	adiw	r28, 0x08	; 8
    187e:	0f b6       	in	r0, 0x3f	; 63
    1880:	f8 94       	cli
    1882:	de bf       	out	0x3e, r29	; 62
    1884:	0f be       	out	0x3f, r0	; 63
    1886:	cd bf       	out	0x3d, r28	; 61
    1888:	df 91       	pop	r29
    188a:	cf 91       	pop	r28
    188c:	1f 91       	pop	r17
    188e:	0f 91       	pop	r16
    1890:	ff 90       	pop	r15
    1892:	ef 90       	pop	r14
    1894:	df 90       	pop	r13
    1896:	cf 90       	pop	r12
    1898:	bf 90       	pop	r11
    189a:	af 90       	pop	r10
    189c:	9f 90       	pop	r9
    189e:	8f 90       	pop	r8
    18a0:	7f 90       	pop	r7
    18a2:	6f 90       	pop	r6
    18a4:	5f 90       	pop	r5
    18a6:	4f 90       	pop	r4
    18a8:	3f 90       	pop	r3
    18aa:	2f 90       	pop	r2
    18ac:	08 95       	ret

000018ae <__tablejump2__>:
    18ae:	ee 0f       	add	r30, r30
    18b0:	ff 1f       	adc	r31, r31
    18b2:	05 90       	lpm	r0, Z+
    18b4:	f4 91       	lpm	r31, Z
    18b6:	e0 2d       	mov	r30, r0
    18b8:	09 94       	ijmp

000018ba <_exit>:
    18ba:	f8 94       	cli

000018bc <__stop_program>:
    18bc:	ff cf       	rjmp	.-2      	; 0x18bc <__stop_program>
